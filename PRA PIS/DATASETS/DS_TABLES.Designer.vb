'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DS_TABLES"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DS_TABLES
    Inherits Global.System.Data.DataSet
    
    Private tabletblV2_UsersAccount As tblV2_UsersAccountDataTable
    
    Private tabletblV1_USERACCOUNT As tblV1_USERACCOUNTDataTable
    
    Private tabletblV2_ACCOUNTCODE As tblV2_ACCOUNTCODEDataTable
    
    Private tableV1VW_USERACCEMPLOYEE As V1VW_USERACCEMPLOYEEDataTable
    
    Private tabletblV1_USERACCOUNTLOGS As tblV1_USERACCOUNTLOGSDataTable
    
    Private tabletblV1_HRISEMPLOYEEDATA As tblV1_HRISEMPLOYEEDATADataTable
    
    Private tabletblV1_HRISDIVISION As tblV1_HRISDIVISIONDataTable
    
    Private tabletblV1_HRISDEPARTMENT As tblV1_HRISDEPARTMENTDataTable
    
    Private tabletblV1_DEFPRADEPARTMENTS As tblV1_DEFPRADEPARTMENTSDataTable
    
    Private tabletblV1_DEFPRADIVISION As tblV1_DEFPRADIVISIONDataTable
    
    Private tableSPM4_SQ_PR_TRANS_CODE As SPM4_SQ_PR_TRANS_CODEDataTable
    
    Private tableEMPLOYEEDATA As EMPLOYEEDATADataTable
    
    Private tableEmployeeInfo As EmployeeInfoDataTable
    
    Private tabletblV2_CHKAddDocs As tblV2_CHKAddDocsDataTable
    
    Private tabletblV2_CHKReq As tblV2_CHKReqDataTable
    
    Private relationFK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT As Global.System.Data.DataRelation
    
    Private relationFK_tblDIVISION_tblDEPARTMENTS As Global.System.Data.DataRelation
    
    Private relationFK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT1 As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tblV2_UsersAccount")) Is Nothing) Then
                MyBase.Tables.Add(New tblV2_UsersAccountDataTable(ds.Tables("tblV2_UsersAccount")))
            End If
            If (Not (ds.Tables("tblV1_USERACCOUNT")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_USERACCOUNTDataTable(ds.Tables("tblV1_USERACCOUNT")))
            End If
            If (Not (ds.Tables("tblV2_ACCOUNTCODE")) Is Nothing) Then
                MyBase.Tables.Add(New tblV2_ACCOUNTCODEDataTable(ds.Tables("tblV2_ACCOUNTCODE")))
            End If
            If (Not (ds.Tables("V1VW_USERACCEMPLOYEE")) Is Nothing) Then
                MyBase.Tables.Add(New V1VW_USERACCEMPLOYEEDataTable(ds.Tables("V1VW_USERACCEMPLOYEE")))
            End If
            If (Not (ds.Tables("tblV1_USERACCOUNTLOGS")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_USERACCOUNTLOGSDataTable(ds.Tables("tblV1_USERACCOUNTLOGS")))
            End If
            If (Not (ds.Tables("tblV1_HRISEMPLOYEEDATA")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_HRISEMPLOYEEDATADataTable(ds.Tables("tblV1_HRISEMPLOYEEDATA")))
            End If
            If (Not (ds.Tables("tblV1_HRISDIVISION")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_HRISDIVISIONDataTable(ds.Tables("tblV1_HRISDIVISION")))
            End If
            If (Not (ds.Tables("tblV1_HRISDEPARTMENT")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_HRISDEPARTMENTDataTable(ds.Tables("tblV1_HRISDEPARTMENT")))
            End If
            If (Not (ds.Tables("tblV1_DEFPRADEPARTMENTS")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_DEFPRADEPARTMENTSDataTable(ds.Tables("tblV1_DEFPRADEPARTMENTS")))
            End If
            If (Not (ds.Tables("tblV1_DEFPRADIVISION")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_DEFPRADIVISIONDataTable(ds.Tables("tblV1_DEFPRADIVISION")))
            End If
            If (Not (ds.Tables("SPM4_SQ_PR_TRANS_CODE")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_SQ_PR_TRANS_CODEDataTable(ds.Tables("SPM4_SQ_PR_TRANS_CODE")))
            End If
            If (Not (ds.Tables("EMPLOYEEDATA")) Is Nothing) Then
                MyBase.Tables.Add(New EMPLOYEEDATADataTable(ds.Tables("EMPLOYEEDATA")))
            End If
            If (Not (ds.Tables("EmployeeInfo")) Is Nothing) Then
                MyBase.Tables.Add(New EmployeeInfoDataTable(ds.Tables("EmployeeInfo")))
            End If
            If (Not (ds.Tables("tblV2_CHKAddDocs")) Is Nothing) Then
                MyBase.Tables.Add(New tblV2_CHKAddDocsDataTable(ds.Tables("tblV2_CHKAddDocs")))
            End If
            If (Not (ds.Tables("tblV2_CHKReq")) Is Nothing) Then
                MyBase.Tables.Add(New tblV2_CHKReqDataTable(ds.Tables("tblV2_CHKReq")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblV2_UsersAccount() As tblV2_UsersAccountDataTable
        Get
            Return Me.tabletblV2_UsersAccount
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblV1_USERACCOUNT() As tblV1_USERACCOUNTDataTable
        Get
            Return Me.tabletblV1_USERACCOUNT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblV2_ACCOUNTCODE() As tblV2_ACCOUNTCODEDataTable
        Get
            Return Me.tabletblV2_ACCOUNTCODE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property V1VW_USERACCEMPLOYEE() As V1VW_USERACCEMPLOYEEDataTable
        Get
            Return Me.tableV1VW_USERACCEMPLOYEE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblV1_USERACCOUNTLOGS() As tblV1_USERACCOUNTLOGSDataTable
        Get
            Return Me.tabletblV1_USERACCOUNTLOGS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblV1_HRISEMPLOYEEDATA() As tblV1_HRISEMPLOYEEDATADataTable
        Get
            Return Me.tabletblV1_HRISEMPLOYEEDATA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblV1_HRISDIVISION() As tblV1_HRISDIVISIONDataTable
        Get
            Return Me.tabletblV1_HRISDIVISION
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblV1_HRISDEPARTMENT() As tblV1_HRISDEPARTMENTDataTable
        Get
            Return Me.tabletblV1_HRISDEPARTMENT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblV1_DEFPRADEPARTMENTS() As tblV1_DEFPRADEPARTMENTSDataTable
        Get
            Return Me.tabletblV1_DEFPRADEPARTMENTS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblV1_DEFPRADIVISION() As tblV1_DEFPRADIVISIONDataTable
        Get
            Return Me.tabletblV1_DEFPRADIVISION
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPM4_SQ_PR_TRANS_CODE() As SPM4_SQ_PR_TRANS_CODEDataTable
        Get
            Return Me.tableSPM4_SQ_PR_TRANS_CODE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property EMPLOYEEDATA() As EMPLOYEEDATADataTable
        Get
            Return Me.tableEMPLOYEEDATA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property EmployeeInfo() As EmployeeInfoDataTable
        Get
            Return Me.tableEmployeeInfo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblV2_CHKAddDocs() As tblV2_CHKAddDocsDataTable
        Get
            Return Me.tabletblV2_CHKAddDocs
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblV2_CHKReq() As tblV2_CHKReqDataTable
        Get
            Return Me.tabletblV2_CHKReq
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DS_TABLES = CType(MyBase.Clone,DS_TABLES)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("tblV2_UsersAccount")) Is Nothing) Then
                MyBase.Tables.Add(New tblV2_UsersAccountDataTable(ds.Tables("tblV2_UsersAccount")))
            End If
            If (Not (ds.Tables("tblV1_USERACCOUNT")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_USERACCOUNTDataTable(ds.Tables("tblV1_USERACCOUNT")))
            End If
            If (Not (ds.Tables("tblV2_ACCOUNTCODE")) Is Nothing) Then
                MyBase.Tables.Add(New tblV2_ACCOUNTCODEDataTable(ds.Tables("tblV2_ACCOUNTCODE")))
            End If
            If (Not (ds.Tables("V1VW_USERACCEMPLOYEE")) Is Nothing) Then
                MyBase.Tables.Add(New V1VW_USERACCEMPLOYEEDataTable(ds.Tables("V1VW_USERACCEMPLOYEE")))
            End If
            If (Not (ds.Tables("tblV1_USERACCOUNTLOGS")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_USERACCOUNTLOGSDataTable(ds.Tables("tblV1_USERACCOUNTLOGS")))
            End If
            If (Not (ds.Tables("tblV1_HRISEMPLOYEEDATA")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_HRISEMPLOYEEDATADataTable(ds.Tables("tblV1_HRISEMPLOYEEDATA")))
            End If
            If (Not (ds.Tables("tblV1_HRISDIVISION")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_HRISDIVISIONDataTable(ds.Tables("tblV1_HRISDIVISION")))
            End If
            If (Not (ds.Tables("tblV1_HRISDEPARTMENT")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_HRISDEPARTMENTDataTable(ds.Tables("tblV1_HRISDEPARTMENT")))
            End If
            If (Not (ds.Tables("tblV1_DEFPRADEPARTMENTS")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_DEFPRADEPARTMENTSDataTable(ds.Tables("tblV1_DEFPRADEPARTMENTS")))
            End If
            If (Not (ds.Tables("tblV1_DEFPRADIVISION")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_DEFPRADIVISIONDataTable(ds.Tables("tblV1_DEFPRADIVISION")))
            End If
            If (Not (ds.Tables("SPM4_SQ_PR_TRANS_CODE")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_SQ_PR_TRANS_CODEDataTable(ds.Tables("SPM4_SQ_PR_TRANS_CODE")))
            End If
            If (Not (ds.Tables("EMPLOYEEDATA")) Is Nothing) Then
                MyBase.Tables.Add(New EMPLOYEEDATADataTable(ds.Tables("EMPLOYEEDATA")))
            End If
            If (Not (ds.Tables("EmployeeInfo")) Is Nothing) Then
                MyBase.Tables.Add(New EmployeeInfoDataTable(ds.Tables("EmployeeInfo")))
            End If
            If (Not (ds.Tables("tblV2_CHKAddDocs")) Is Nothing) Then
                MyBase.Tables.Add(New tblV2_CHKAddDocsDataTable(ds.Tables("tblV2_CHKAddDocs")))
            End If
            If (Not (ds.Tables("tblV2_CHKReq")) Is Nothing) Then
                MyBase.Tables.Add(New tblV2_CHKReqDataTable(ds.Tables("tblV2_CHKReq")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletblV2_UsersAccount = CType(MyBase.Tables("tblV2_UsersAccount"),tblV2_UsersAccountDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblV2_UsersAccount) Is Nothing) Then
                Me.tabletblV2_UsersAccount.InitVars
            End If
        End If
        Me.tabletblV1_USERACCOUNT = CType(MyBase.Tables("tblV1_USERACCOUNT"),tblV1_USERACCOUNTDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblV1_USERACCOUNT) Is Nothing) Then
                Me.tabletblV1_USERACCOUNT.InitVars
            End If
        End If
        Me.tabletblV2_ACCOUNTCODE = CType(MyBase.Tables("tblV2_ACCOUNTCODE"),tblV2_ACCOUNTCODEDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblV2_ACCOUNTCODE) Is Nothing) Then
                Me.tabletblV2_ACCOUNTCODE.InitVars
            End If
        End If
        Me.tableV1VW_USERACCEMPLOYEE = CType(MyBase.Tables("V1VW_USERACCEMPLOYEE"),V1VW_USERACCEMPLOYEEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableV1VW_USERACCEMPLOYEE) Is Nothing) Then
                Me.tableV1VW_USERACCEMPLOYEE.InitVars
            End If
        End If
        Me.tabletblV1_USERACCOUNTLOGS = CType(MyBase.Tables("tblV1_USERACCOUNTLOGS"),tblV1_USERACCOUNTLOGSDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblV1_USERACCOUNTLOGS) Is Nothing) Then
                Me.tabletblV1_USERACCOUNTLOGS.InitVars
            End If
        End If
        Me.tabletblV1_HRISEMPLOYEEDATA = CType(MyBase.Tables("tblV1_HRISEMPLOYEEDATA"),tblV1_HRISEMPLOYEEDATADataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblV1_HRISEMPLOYEEDATA) Is Nothing) Then
                Me.tabletblV1_HRISEMPLOYEEDATA.InitVars
            End If
        End If
        Me.tabletblV1_HRISDIVISION = CType(MyBase.Tables("tblV1_HRISDIVISION"),tblV1_HRISDIVISIONDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblV1_HRISDIVISION) Is Nothing) Then
                Me.tabletblV1_HRISDIVISION.InitVars
            End If
        End If
        Me.tabletblV1_HRISDEPARTMENT = CType(MyBase.Tables("tblV1_HRISDEPARTMENT"),tblV1_HRISDEPARTMENTDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblV1_HRISDEPARTMENT) Is Nothing) Then
                Me.tabletblV1_HRISDEPARTMENT.InitVars
            End If
        End If
        Me.tabletblV1_DEFPRADEPARTMENTS = CType(MyBase.Tables("tblV1_DEFPRADEPARTMENTS"),tblV1_DEFPRADEPARTMENTSDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblV1_DEFPRADEPARTMENTS) Is Nothing) Then
                Me.tabletblV1_DEFPRADEPARTMENTS.InitVars
            End If
        End If
        Me.tabletblV1_DEFPRADIVISION = CType(MyBase.Tables("tblV1_DEFPRADIVISION"),tblV1_DEFPRADIVISIONDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblV1_DEFPRADIVISION) Is Nothing) Then
                Me.tabletblV1_DEFPRADIVISION.InitVars
            End If
        End If
        Me.tableSPM4_SQ_PR_TRANS_CODE = CType(MyBase.Tables("SPM4_SQ_PR_TRANS_CODE"),SPM4_SQ_PR_TRANS_CODEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPM4_SQ_PR_TRANS_CODE) Is Nothing) Then
                Me.tableSPM4_SQ_PR_TRANS_CODE.InitVars
            End If
        End If
        Me.tableEMPLOYEEDATA = CType(MyBase.Tables("EMPLOYEEDATA"),EMPLOYEEDATADataTable)
        If (initTable = true) Then
            If (Not (Me.tableEMPLOYEEDATA) Is Nothing) Then
                Me.tableEMPLOYEEDATA.InitVars
            End If
        End If
        Me.tableEmployeeInfo = CType(MyBase.Tables("EmployeeInfo"),EmployeeInfoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEmployeeInfo) Is Nothing) Then
                Me.tableEmployeeInfo.InitVars
            End If
        End If
        Me.tabletblV2_CHKAddDocs = CType(MyBase.Tables("tblV2_CHKAddDocs"),tblV2_CHKAddDocsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblV2_CHKAddDocs) Is Nothing) Then
                Me.tabletblV2_CHKAddDocs.InitVars
            End If
        End If
        Me.tabletblV2_CHKReq = CType(MyBase.Tables("tblV2_CHKReq"),tblV2_CHKReqDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblV2_CHKReq) Is Nothing) Then
                Me.tabletblV2_CHKReq.InitVars
            End If
        End If
        Me.relationFK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT = Me.Relations("FK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT")
        Me.relationFK_tblDIVISION_tblDEPARTMENTS = Me.Relations("FK_tblDIVISION_tblDEPARTMENTS")
        Me.relationFK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT1 = Me.Relations("FK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT1")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DS_TABLES"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DS_TABLES.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletblV2_UsersAccount = New tblV2_UsersAccountDataTable()
        MyBase.Tables.Add(Me.tabletblV2_UsersAccount)
        Me.tabletblV1_USERACCOUNT = New tblV1_USERACCOUNTDataTable()
        MyBase.Tables.Add(Me.tabletblV1_USERACCOUNT)
        Me.tabletblV2_ACCOUNTCODE = New tblV2_ACCOUNTCODEDataTable()
        MyBase.Tables.Add(Me.tabletblV2_ACCOUNTCODE)
        Me.tableV1VW_USERACCEMPLOYEE = New V1VW_USERACCEMPLOYEEDataTable()
        MyBase.Tables.Add(Me.tableV1VW_USERACCEMPLOYEE)
        Me.tabletblV1_USERACCOUNTLOGS = New tblV1_USERACCOUNTLOGSDataTable()
        MyBase.Tables.Add(Me.tabletblV1_USERACCOUNTLOGS)
        Me.tabletblV1_HRISEMPLOYEEDATA = New tblV1_HRISEMPLOYEEDATADataTable()
        MyBase.Tables.Add(Me.tabletblV1_HRISEMPLOYEEDATA)
        Me.tabletblV1_HRISDIVISION = New tblV1_HRISDIVISIONDataTable()
        MyBase.Tables.Add(Me.tabletblV1_HRISDIVISION)
        Me.tabletblV1_HRISDEPARTMENT = New tblV1_HRISDEPARTMENTDataTable()
        MyBase.Tables.Add(Me.tabletblV1_HRISDEPARTMENT)
        Me.tabletblV1_DEFPRADEPARTMENTS = New tblV1_DEFPRADEPARTMENTSDataTable()
        MyBase.Tables.Add(Me.tabletblV1_DEFPRADEPARTMENTS)
        Me.tabletblV1_DEFPRADIVISION = New tblV1_DEFPRADIVISIONDataTable()
        MyBase.Tables.Add(Me.tabletblV1_DEFPRADIVISION)
        Me.tableSPM4_SQ_PR_TRANS_CODE = New SPM4_SQ_PR_TRANS_CODEDataTable()
        MyBase.Tables.Add(Me.tableSPM4_SQ_PR_TRANS_CODE)
        Me.tableEMPLOYEEDATA = New EMPLOYEEDATADataTable()
        MyBase.Tables.Add(Me.tableEMPLOYEEDATA)
        Me.tableEmployeeInfo = New EmployeeInfoDataTable()
        MyBase.Tables.Add(Me.tableEmployeeInfo)
        Me.tabletblV2_CHKAddDocs = New tblV2_CHKAddDocsDataTable()
        MyBase.Tables.Add(Me.tabletblV2_CHKAddDocs)
        Me.tabletblV2_CHKReq = New tblV2_CHKReqDataTable()
        MyBase.Tables.Add(Me.tabletblV2_CHKReq)
        Me.relationFK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT = New Global.System.Data.DataRelation("FK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT", New Global.System.Data.DataColumn() {Me.tabletblV1_HRISDEPARTMENT.HDPT_CODEColumn}, New Global.System.Data.DataColumn() {Me.tabletblV1_HRISDIVISION.HDPT_CODEColumn}, false)
        Me.Relations.Add(Me.relationFK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT)
        Me.relationFK_tblDIVISION_tblDEPARTMENTS = New Global.System.Data.DataRelation("FK_tblDIVISION_tblDEPARTMENTS", New Global.System.Data.DataColumn() {Me.tabletblV1_DEFPRADEPARTMENTS.DEPT_CODEColumn}, New Global.System.Data.DataColumn() {Me.tabletblV1_DEFPRADIVISION.DEPT_CODEColumn}, false)
        Me.Relations.Add(Me.relationFK_tblDIVISION_tblDEPARTMENTS)
        Me.relationFK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT1 = New Global.System.Data.DataRelation("FK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT1", New Global.System.Data.DataColumn() {Me.tabletblV1_HRISDEPARTMENT.HDPT_CODEColumn}, New Global.System.Data.DataColumn() {Me.tableEMPLOYEEDATA.HDPT_CODEColumn}, false)
        Me.Relations.Add(Me.relationFK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT1)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblV2_UsersAccount() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblV1_USERACCOUNT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblV2_ACCOUNTCODE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeV1VW_USERACCEMPLOYEE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblV1_USERACCOUNTLOGS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblV1_HRISEMPLOYEEDATA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblV1_HRISDIVISION() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblV1_HRISDEPARTMENT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblV1_DEFPRADEPARTMENTS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblV1_DEFPRADIVISION() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeSPM4_SQ_PR_TRANS_CODE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeEMPLOYEEDATA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeEmployeeInfo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblV2_CHKAddDocs() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblV2_CHKReq() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DS_TABLES = New DS_TABLES()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblV2_UsersAccountRowChangeEventHandler(ByVal sender As Object, ByVal e As tblV2_UsersAccountRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblV1_USERACCOUNTRowChangeEventHandler(ByVal sender As Object, ByVal e As tblV1_USERACCOUNTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblV2_ACCOUNTCODERowChangeEventHandler(ByVal sender As Object, ByVal e As tblV2_ACCOUNTCODERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub V1VW_USERACCEMPLOYEERowChangeEventHandler(ByVal sender As Object, ByVal e As V1VW_USERACCEMPLOYEERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblV1_USERACCOUNTLOGSRowChangeEventHandler(ByVal sender As Object, ByVal e As tblV1_USERACCOUNTLOGSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblV1_HRISEMPLOYEEDATARowChangeEventHandler(ByVal sender As Object, ByVal e As tblV1_HRISEMPLOYEEDATARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblV1_HRISDIVISIONRowChangeEventHandler(ByVal sender As Object, ByVal e As tblV1_HRISDIVISIONRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblV1_HRISDEPARTMENTRowChangeEventHandler(ByVal sender As Object, ByVal e As tblV1_HRISDEPARTMENTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblV1_DEFPRADEPARTMENTSRowChangeEventHandler(ByVal sender As Object, ByVal e As tblV1_DEFPRADEPARTMENTSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblV1_DEFPRADIVISIONRowChangeEventHandler(ByVal sender As Object, ByVal e As tblV1_DEFPRADIVISIONRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub SPM4_SQ_PR_TRANS_CODERowChangeEventHandler(ByVal sender As Object, ByVal e As SPM4_SQ_PR_TRANS_CODERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub EMPLOYEEDATARowChangeEventHandler(ByVal sender As Object, ByVal e As EMPLOYEEDATARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub EmployeeInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As EmployeeInfoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblV2_CHKAddDocsRowChangeEventHandler(ByVal sender As Object, ByVal e As tblV2_CHKAddDocsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblV2_CHKReqRowChangeEventHandler(ByVal sender As Object, ByVal e As tblV2_CHKReqRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblV2_UsersAccountDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblV2_UsersAccountRow)
        
        Private columnUA_ID As Global.System.Data.DataColumn
        
        Private columnUA_Username As Global.System.Data.DataColumn
        
        Private columnUA_Password As Global.System.Data.DataColumn
        
        Private columnUA_Type As Global.System.Data.DataColumn
        
        Private columnUA_Status As Global.System.Data.DataColumn
        
        Private columnPers_ID As Global.System.Data.DataColumn
        
        Private columnUA_ISLOGGED As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblV2_UsersAccount"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UA_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUA_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UA_UsernameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUA_Username
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UA_PasswordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUA_Password
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UA_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUA_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UA_StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUA_Status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Pers_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPers_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UA_ISLOGGEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUA_ISLOGGED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblV2_UsersAccountRow
            Get
                Return CType(Me.Rows(index),tblV2_UsersAccountRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_UsersAccountRowChanging As tblV2_UsersAccountRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_UsersAccountRowChanged As tblV2_UsersAccountRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_UsersAccountRowDeleting As tblV2_UsersAccountRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_UsersAccountRowDeleted As tblV2_UsersAccountRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblV2_UsersAccountRow(ByVal row As tblV2_UsersAccountRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblV2_UsersAccountRow(ByVal UA_ID As String, ByVal UA_Username As String, ByVal UA_Password As String, ByVal UA_Type As String, ByVal UA_Status As String, ByVal Pers_ID As String, ByVal UA_ISLOGGED As Boolean) As tblV2_UsersAccountRow
            Dim rowtblV2_UsersAccountRow As tblV2_UsersAccountRow = CType(Me.NewRow,tblV2_UsersAccountRow)
            Dim columnValuesArray() As Object = New Object() {UA_ID, UA_Username, UA_Password, UA_Type, UA_Status, Pers_ID, UA_ISLOGGED}
            rowtblV2_UsersAccountRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblV2_UsersAccountRow)
            Return rowtblV2_UsersAccountRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByUA_ID(ByVal UA_ID As String) As tblV2_UsersAccountRow
            Return CType(Me.Rows.Find(New Object() {UA_ID}),tblV2_UsersAccountRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblV2_UsersAccountDataTable = CType(MyBase.Clone,tblV2_UsersAccountDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblV2_UsersAccountDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnUA_ID = MyBase.Columns("UA_ID")
            Me.columnUA_Username = MyBase.Columns("UA_Username")
            Me.columnUA_Password = MyBase.Columns("UA_Password")
            Me.columnUA_Type = MyBase.Columns("UA_Type")
            Me.columnUA_Status = MyBase.Columns("UA_Status")
            Me.columnPers_ID = MyBase.Columns("Pers_ID")
            Me.columnUA_ISLOGGED = MyBase.Columns("UA_ISLOGGED")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnUA_ID = New Global.System.Data.DataColumn("UA_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUA_ID)
            Me.columnUA_Username = New Global.System.Data.DataColumn("UA_Username", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUA_Username)
            Me.columnUA_Password = New Global.System.Data.DataColumn("UA_Password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUA_Password)
            Me.columnUA_Type = New Global.System.Data.DataColumn("UA_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUA_Type)
            Me.columnUA_Status = New Global.System.Data.DataColumn("UA_Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUA_Status)
            Me.columnPers_ID = New Global.System.Data.DataColumn("Pers_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPers_ID)
            Me.columnUA_ISLOGGED = New Global.System.Data.DataColumn("UA_ISLOGGED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUA_ISLOGGED)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnUA_ID}, true))
            Me.columnUA_ID.AllowDBNull = false
            Me.columnUA_ID.Unique = true
            Me.columnUA_ID.MaxLength = 15
            Me.columnUA_Username.AllowDBNull = false
            Me.columnUA_Username.MaxLength = 45
            Me.columnUA_Password.AllowDBNull = false
            Me.columnUA_Password.MaxLength = 45
            Me.columnUA_Type.AllowDBNull = false
            Me.columnUA_Type.MaxLength = 45
            Me.columnUA_Status.AllowDBNull = false
            Me.columnUA_Status.MaxLength = 45
            Me.columnPers_ID.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblV2_UsersAccountRow() As tblV2_UsersAccountRow
            Return CType(Me.NewRow,tblV2_UsersAccountRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblV2_UsersAccountRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblV2_UsersAccountRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblV2_UsersAccountRowChangedEvent) Is Nothing) Then
                RaiseEvent tblV2_UsersAccountRowChanged(Me, New tblV2_UsersAccountRowChangeEvent(CType(e.Row,tblV2_UsersAccountRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblV2_UsersAccountRowChangingEvent) Is Nothing) Then
                RaiseEvent tblV2_UsersAccountRowChanging(Me, New tblV2_UsersAccountRowChangeEvent(CType(e.Row,tblV2_UsersAccountRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblV2_UsersAccountRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblV2_UsersAccountRowDeleted(Me, New tblV2_UsersAccountRowChangeEvent(CType(e.Row,tblV2_UsersAccountRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblV2_UsersAccountRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblV2_UsersAccountRowDeleting(Me, New tblV2_UsersAccountRowChangeEvent(CType(e.Row,tblV2_UsersAccountRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblV2_UsersAccountRow(ByVal row As tblV2_UsersAccountRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblV2_UsersAccountDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblV1_USERACCOUNTDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblV1_USERACCOUNTRow)
        
        Private columnUAC_USERNAME As Global.System.Data.DataColumn
        
        Private columnUAC_PASSWORD As Global.System.Data.DataColumn
        
        Private columnUAC_ISACTIVE As Global.System.Data.DataColumn
        
        Private columnUAC_ISLOGGED As Global.System.Data.DataColumn
        
        Private columnPers_ID As Global.System.Data.DataColumn
        
        Private columnUAC_TYPE As Global.System.Data.DataColumn
        
        Private columnUAC_HINT As Global.System.Data.DataColumn
        
        Private columnUAC_RTFLAG As Global.System.Data.DataColumn
        
        Private columnUAC_RTNUM As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblV1_USERACCOUNT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_USERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_USERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_PASSWORDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_PASSWORD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_ISACTIVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_ISACTIVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_ISLOGGEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_ISLOGGED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Pers_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPers_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_HINTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_HINT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_RTFLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_RTFLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_RTNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_RTNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblV1_USERACCOUNTRow
            Get
                Return CType(Me.Rows(index),tblV1_USERACCOUNTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTRowChanging As tblV1_USERACCOUNTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTRowChanged As tblV1_USERACCOUNTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTRowDeleting As tblV1_USERACCOUNTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTRowDeleted As tblV1_USERACCOUNTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblV1_USERACCOUNTRow(ByVal row As tblV1_USERACCOUNTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblV1_USERACCOUNTRow(ByVal UAC_USERNAME As String, ByVal UAC_PASSWORD As String, ByVal UAC_ISACTIVE As Boolean, ByVal UAC_ISLOGGED As Boolean, ByVal Pers_ID As String, ByVal UAC_TYPE As Integer, ByVal UAC_HINT As String, ByVal UAC_RTFLAG As Boolean, ByVal UAC_RTNUM As Integer) As tblV1_USERACCOUNTRow
            Dim rowtblV1_USERACCOUNTRow As tblV1_USERACCOUNTRow = CType(Me.NewRow,tblV1_USERACCOUNTRow)
            Dim columnValuesArray() As Object = New Object() {UAC_USERNAME, UAC_PASSWORD, UAC_ISACTIVE, UAC_ISLOGGED, Pers_ID, UAC_TYPE, UAC_HINT, UAC_RTFLAG, UAC_RTNUM}
            rowtblV1_USERACCOUNTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblV1_USERACCOUNTRow)
            Return rowtblV1_USERACCOUNTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByUAC_USERNAME(ByVal UAC_USERNAME As String) As tblV1_USERACCOUNTRow
            Return CType(Me.Rows.Find(New Object() {UAC_USERNAME}),tblV1_USERACCOUNTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblV1_USERACCOUNTDataTable = CType(MyBase.Clone,tblV1_USERACCOUNTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblV1_USERACCOUNTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnUAC_USERNAME = MyBase.Columns("UAC_USERNAME")
            Me.columnUAC_PASSWORD = MyBase.Columns("UAC_PASSWORD")
            Me.columnUAC_ISACTIVE = MyBase.Columns("UAC_ISACTIVE")
            Me.columnUAC_ISLOGGED = MyBase.Columns("UAC_ISLOGGED")
            Me.columnPers_ID = MyBase.Columns("Pers_ID")
            Me.columnUAC_TYPE = MyBase.Columns("UAC_TYPE")
            Me.columnUAC_HINT = MyBase.Columns("UAC_HINT")
            Me.columnUAC_RTFLAG = MyBase.Columns("UAC_RTFLAG")
            Me.columnUAC_RTNUM = MyBase.Columns("UAC_RTNUM")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnUAC_USERNAME = New Global.System.Data.DataColumn("UAC_USERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_USERNAME)
            Me.columnUAC_PASSWORD = New Global.System.Data.DataColumn("UAC_PASSWORD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_PASSWORD)
            Me.columnUAC_ISACTIVE = New Global.System.Data.DataColumn("UAC_ISACTIVE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_ISACTIVE)
            Me.columnUAC_ISLOGGED = New Global.System.Data.DataColumn("UAC_ISLOGGED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_ISLOGGED)
            Me.columnPers_ID = New Global.System.Data.DataColumn("Pers_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPers_ID)
            Me.columnUAC_TYPE = New Global.System.Data.DataColumn("UAC_TYPE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_TYPE)
            Me.columnUAC_HINT = New Global.System.Data.DataColumn("UAC_HINT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_HINT)
            Me.columnUAC_RTFLAG = New Global.System.Data.DataColumn("UAC_RTFLAG", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_RTFLAG)
            Me.columnUAC_RTNUM = New Global.System.Data.DataColumn("UAC_RTNUM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_RTNUM)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnUAC_USERNAME}, true))
            Me.columnUAC_USERNAME.AllowDBNull = false
            Me.columnUAC_USERNAME.Unique = true
            Me.columnUAC_USERNAME.MaxLength = 100
            Me.columnUAC_PASSWORD.AllowDBNull = false
            Me.columnUAC_PASSWORD.MaxLength = 100
            Me.columnUAC_ISACTIVE.AllowDBNull = false
            Me.columnUAC_ISLOGGED.AllowDBNull = false
            Me.columnPers_ID.MaxLength = 10
            Me.columnUAC_TYPE.AllowDBNull = false
            Me.columnUAC_HINT.MaxLength = 100
            Me.columnUAC_RTFLAG.AllowDBNull = false
            Me.columnUAC_RTNUM.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblV1_USERACCOUNTRow() As tblV1_USERACCOUNTRow
            Return CType(Me.NewRow,tblV1_USERACCOUNTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblV1_USERACCOUNTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblV1_USERACCOUNTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblV1_USERACCOUNTRowChangedEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTRowChanged(Me, New tblV1_USERACCOUNTRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblV1_USERACCOUNTRowChangingEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTRowChanging(Me, New tblV1_USERACCOUNTRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblV1_USERACCOUNTRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTRowDeleted(Me, New tblV1_USERACCOUNTRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblV1_USERACCOUNTRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTRowDeleting(Me, New tblV1_USERACCOUNTRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblV1_USERACCOUNTRow(ByVal row As tblV1_USERACCOUNTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblV1_USERACCOUNTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblV2_ACCOUNTCODEDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblV2_ACCOUNTCODERow)
        
        Private columnACC_CODE As Global.System.Data.DataColumn
        
        Private columnACC_DESC As Global.System.Data.DataColumn
        
        Private columnACC_OLD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblV2_ACCOUNTCODE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ACC_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACC_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ACC_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACC_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ACC_OLDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACC_OLD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblV2_ACCOUNTCODERow
            Get
                Return CType(Me.Rows(index),tblV2_ACCOUNTCODERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_ACCOUNTCODERowChanging As tblV2_ACCOUNTCODERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_ACCOUNTCODERowChanged As tblV2_ACCOUNTCODERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_ACCOUNTCODERowDeleting As tblV2_ACCOUNTCODERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_ACCOUNTCODERowDeleted As tblV2_ACCOUNTCODERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblV2_ACCOUNTCODERow(ByVal row As tblV2_ACCOUNTCODERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblV2_ACCOUNTCODERow(ByVal ACC_CODE As String, ByVal ACC_DESC As String, ByVal ACC_OLD As String) As tblV2_ACCOUNTCODERow
            Dim rowtblV2_ACCOUNTCODERow As tblV2_ACCOUNTCODERow = CType(Me.NewRow,tblV2_ACCOUNTCODERow)
            Dim columnValuesArray() As Object = New Object() {ACC_CODE, ACC_DESC, ACC_OLD}
            rowtblV2_ACCOUNTCODERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblV2_ACCOUNTCODERow)
            Return rowtblV2_ACCOUNTCODERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblV2_ACCOUNTCODEDataTable = CType(MyBase.Clone,tblV2_ACCOUNTCODEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblV2_ACCOUNTCODEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnACC_CODE = MyBase.Columns("ACC_CODE")
            Me.columnACC_DESC = MyBase.Columns("ACC_DESC")
            Me.columnACC_OLD = MyBase.Columns("ACC_OLD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnACC_CODE = New Global.System.Data.DataColumn("ACC_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACC_CODE)
            Me.columnACC_DESC = New Global.System.Data.DataColumn("ACC_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACC_DESC)
            Me.columnACC_OLD = New Global.System.Data.DataColumn("ACC_OLD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACC_OLD)
            Me.columnACC_CODE.MaxLength = 50
            Me.columnACC_DESC.MaxLength = 100
            Me.columnACC_OLD.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblV2_ACCOUNTCODERow() As tblV2_ACCOUNTCODERow
            Return CType(Me.NewRow,tblV2_ACCOUNTCODERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblV2_ACCOUNTCODERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblV2_ACCOUNTCODERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblV2_ACCOUNTCODERowChangedEvent) Is Nothing) Then
                RaiseEvent tblV2_ACCOUNTCODERowChanged(Me, New tblV2_ACCOUNTCODERowChangeEvent(CType(e.Row,tblV2_ACCOUNTCODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblV2_ACCOUNTCODERowChangingEvent) Is Nothing) Then
                RaiseEvent tblV2_ACCOUNTCODERowChanging(Me, New tblV2_ACCOUNTCODERowChangeEvent(CType(e.Row,tblV2_ACCOUNTCODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblV2_ACCOUNTCODERowDeletedEvent) Is Nothing) Then
                RaiseEvent tblV2_ACCOUNTCODERowDeleted(Me, New tblV2_ACCOUNTCODERowChangeEvent(CType(e.Row,tblV2_ACCOUNTCODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblV2_ACCOUNTCODERowDeletingEvent) Is Nothing) Then
                RaiseEvent tblV2_ACCOUNTCODERowDeleting(Me, New tblV2_ACCOUNTCODERowChangeEvent(CType(e.Row,tblV2_ACCOUNTCODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblV2_ACCOUNTCODERow(ByVal row As tblV2_ACCOUNTCODERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblV2_ACCOUNTCODEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class V1VW_USERACCEMPLOYEEDataTable
        Inherits Global.System.Data.TypedTableBase(Of V1VW_USERACCEMPLOYEERow)
        
        Private columnUAC_USERNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPLNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPFNAME As Global.System.Data.DataColumn
        
        Private columnHEDV_DATE As Global.System.Data.DataColumn
        
        Private columnHDIVS_CODE As Global.System.Data.DataColumn
        
        Private columnFULLNAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "V1VW_USERACCEMPLOYEE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_USERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_USERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPLNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPLNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPFNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPFNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HEDV_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHEDV_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDIVS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDIVS_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FULLNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFULLNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As V1VW_USERACCEMPLOYEERow
            Get
                Return CType(Me.Rows(index),V1VW_USERACCEMPLOYEERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event V1VW_USERACCEMPLOYEERowChanging As V1VW_USERACCEMPLOYEERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event V1VW_USERACCEMPLOYEERowChanged As V1VW_USERACCEMPLOYEERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event V1VW_USERACCEMPLOYEERowDeleting As V1VW_USERACCEMPLOYEERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event V1VW_USERACCEMPLOYEERowDeleted As V1VW_USERACCEMPLOYEERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddV1VW_USERACCEMPLOYEERow(ByVal row As V1VW_USERACCEMPLOYEERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddV1VW_USERACCEMPLOYEERow(ByVal UAC_USERNAME As String, ByVal HRIS_EMPNO As String, ByVal HRIS_EMPLNAME As String, ByVal HRIS_EMPFNAME As String, ByVal HEDV_DATE As Date, ByVal HDIVS_CODE As String, ByVal FULLNAME As String) As V1VW_USERACCEMPLOYEERow
            Dim rowV1VW_USERACCEMPLOYEERow As V1VW_USERACCEMPLOYEERow = CType(Me.NewRow,V1VW_USERACCEMPLOYEERow)
            Dim columnValuesArray() As Object = New Object() {UAC_USERNAME, HRIS_EMPNO, HRIS_EMPLNAME, HRIS_EMPFNAME, HEDV_DATE, HDIVS_CODE, FULLNAME}
            rowV1VW_USERACCEMPLOYEERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowV1VW_USERACCEMPLOYEERow)
            Return rowV1VW_USERACCEMPLOYEERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As V1VW_USERACCEMPLOYEEDataTable = CType(MyBase.Clone,V1VW_USERACCEMPLOYEEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New V1VW_USERACCEMPLOYEEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnUAC_USERNAME = MyBase.Columns("UAC_USERNAME")
            Me.columnHRIS_EMPNO = MyBase.Columns("HRIS_EMPNO")
            Me.columnHRIS_EMPLNAME = MyBase.Columns("HRIS_EMPLNAME")
            Me.columnHRIS_EMPFNAME = MyBase.Columns("HRIS_EMPFNAME")
            Me.columnHEDV_DATE = MyBase.Columns("HEDV_DATE")
            Me.columnHDIVS_CODE = MyBase.Columns("HDIVS_CODE")
            Me.columnFULLNAME = MyBase.Columns("FULLNAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnUAC_USERNAME = New Global.System.Data.DataColumn("UAC_USERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_USERNAME)
            Me.columnHRIS_EMPNO = New Global.System.Data.DataColumn("HRIS_EMPNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO)
            Me.columnHRIS_EMPLNAME = New Global.System.Data.DataColumn("HRIS_EMPLNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPLNAME)
            Me.columnHRIS_EMPFNAME = New Global.System.Data.DataColumn("HRIS_EMPFNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPFNAME)
            Me.columnHEDV_DATE = New Global.System.Data.DataColumn("HEDV_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHEDV_DATE)
            Me.columnHDIVS_CODE = New Global.System.Data.DataColumn("HDIVS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDIVS_CODE)
            Me.columnFULLNAME = New Global.System.Data.DataColumn("FULLNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFULLNAME)
            Me.columnUAC_USERNAME.AllowDBNull = false
            Me.columnUAC_USERNAME.MaxLength = 100
            Me.columnHRIS_EMPNO.MaxLength = 20
            Me.columnHRIS_EMPLNAME.MaxLength = 255
            Me.columnHRIS_EMPFNAME.MaxLength = 255
            Me.columnHDIVS_CODE.MaxLength = 10
            Me.columnFULLNAME.ReadOnly = true
            Me.columnFULLNAME.MaxLength = 512
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewV1VW_USERACCEMPLOYEERow() As V1VW_USERACCEMPLOYEERow
            Return CType(Me.NewRow,V1VW_USERACCEMPLOYEERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New V1VW_USERACCEMPLOYEERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(V1VW_USERACCEMPLOYEERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.V1VW_USERACCEMPLOYEERowChangedEvent) Is Nothing) Then
                RaiseEvent V1VW_USERACCEMPLOYEERowChanged(Me, New V1VW_USERACCEMPLOYEERowChangeEvent(CType(e.Row,V1VW_USERACCEMPLOYEERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.V1VW_USERACCEMPLOYEERowChangingEvent) Is Nothing) Then
                RaiseEvent V1VW_USERACCEMPLOYEERowChanging(Me, New V1VW_USERACCEMPLOYEERowChangeEvent(CType(e.Row,V1VW_USERACCEMPLOYEERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.V1VW_USERACCEMPLOYEERowDeletedEvent) Is Nothing) Then
                RaiseEvent V1VW_USERACCEMPLOYEERowDeleted(Me, New V1VW_USERACCEMPLOYEERowChangeEvent(CType(e.Row,V1VW_USERACCEMPLOYEERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.V1VW_USERACCEMPLOYEERowDeletingEvent) Is Nothing) Then
                RaiseEvent V1VW_USERACCEMPLOYEERowDeleting(Me, New V1VW_USERACCEMPLOYEERowChangeEvent(CType(e.Row,V1VW_USERACCEMPLOYEERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveV1VW_USERACCEMPLOYEERow(ByVal row As V1VW_USERACCEMPLOYEERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "V1VW_USERACCEMPLOYEEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblV1_USERACCOUNTLOGSDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblV1_USERACCOUNTLOGSRow)
        
        Private columnUALG_DATETIMELOGGED As Global.System.Data.DataColumn
        
        Private columnUAC_USERNAME As Global.System.Data.DataColumn
        
        Private columnUALG_PCNAME As Global.System.Data.DataColumn
        
        Private columnUALG_TYPE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblV1_USERACCOUNTLOGS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UALG_DATETIMELOGGEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUALG_DATETIMELOGGED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_USERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_USERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UALG_PCNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUALG_PCNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UALG_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUALG_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblV1_USERACCOUNTLOGSRow
            Get
                Return CType(Me.Rows(index),tblV1_USERACCOUNTLOGSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTLOGSRowChanging As tblV1_USERACCOUNTLOGSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTLOGSRowChanged As tblV1_USERACCOUNTLOGSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTLOGSRowDeleting As tblV1_USERACCOUNTLOGSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTLOGSRowDeleted As tblV1_USERACCOUNTLOGSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblV1_USERACCOUNTLOGSRow(ByVal row As tblV1_USERACCOUNTLOGSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblV1_USERACCOUNTLOGSRow(ByVal UALG_DATETIMELOGGED As Date, ByVal UAC_USERNAME As String, ByVal UALG_PCNAME As String, ByVal UALG_TYPE As Boolean) As tblV1_USERACCOUNTLOGSRow
            Dim rowtblV1_USERACCOUNTLOGSRow As tblV1_USERACCOUNTLOGSRow = CType(Me.NewRow,tblV1_USERACCOUNTLOGSRow)
            Dim columnValuesArray() As Object = New Object() {UALG_DATETIMELOGGED, UAC_USERNAME, UALG_PCNAME, UALG_TYPE}
            rowtblV1_USERACCOUNTLOGSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblV1_USERACCOUNTLOGSRow)
            Return rowtblV1_USERACCOUNTLOGSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByUALG_DATETIMELOGGED(ByVal UALG_DATETIMELOGGED As Date) As tblV1_USERACCOUNTLOGSRow
            Return CType(Me.Rows.Find(New Object() {UALG_DATETIMELOGGED}),tblV1_USERACCOUNTLOGSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblV1_USERACCOUNTLOGSDataTable = CType(MyBase.Clone,tblV1_USERACCOUNTLOGSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblV1_USERACCOUNTLOGSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnUALG_DATETIMELOGGED = MyBase.Columns("UALG_DATETIMELOGGED")
            Me.columnUAC_USERNAME = MyBase.Columns("UAC_USERNAME")
            Me.columnUALG_PCNAME = MyBase.Columns("UALG_PCNAME")
            Me.columnUALG_TYPE = MyBase.Columns("UALG_TYPE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnUALG_DATETIMELOGGED = New Global.System.Data.DataColumn("UALG_DATETIMELOGGED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUALG_DATETIMELOGGED)
            Me.columnUAC_USERNAME = New Global.System.Data.DataColumn("UAC_USERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_USERNAME)
            Me.columnUALG_PCNAME = New Global.System.Data.DataColumn("UALG_PCNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUALG_PCNAME)
            Me.columnUALG_TYPE = New Global.System.Data.DataColumn("UALG_TYPE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUALG_TYPE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnUALG_DATETIMELOGGED}, true))
            Me.columnUALG_DATETIMELOGGED.AllowDBNull = false
            Me.columnUALG_DATETIMELOGGED.Unique = true
            Me.columnUAC_USERNAME.AllowDBNull = false
            Me.columnUAC_USERNAME.MaxLength = 100
            Me.columnUALG_PCNAME.AllowDBNull = false
            Me.columnUALG_PCNAME.MaxLength = 500
            Me.columnUALG_TYPE.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblV1_USERACCOUNTLOGSRow() As tblV1_USERACCOUNTLOGSRow
            Return CType(Me.NewRow,tblV1_USERACCOUNTLOGSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblV1_USERACCOUNTLOGSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblV1_USERACCOUNTLOGSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblV1_USERACCOUNTLOGSRowChangedEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTLOGSRowChanged(Me, New tblV1_USERACCOUNTLOGSRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTLOGSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblV1_USERACCOUNTLOGSRowChangingEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTLOGSRowChanging(Me, New tblV1_USERACCOUNTLOGSRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTLOGSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblV1_USERACCOUNTLOGSRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTLOGSRowDeleted(Me, New tblV1_USERACCOUNTLOGSRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTLOGSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblV1_USERACCOUNTLOGSRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTLOGSRowDeleting(Me, New tblV1_USERACCOUNTLOGSRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTLOGSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblV1_USERACCOUNTLOGSRow(ByVal row As tblV1_USERACCOUNTLOGSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblV1_USERACCOUNTLOGSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblV1_HRISEMPLOYEEDATADataTable
        Inherits Global.System.Data.TypedTableBase(Of tblV1_HRISEMPLOYEEDATARow)
        
        Private columnHRIS_EMPNO As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPLNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPFNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPMNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNAMEEXT As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNAMETITLE As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPDOB As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPPOB As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPGENDERISMALE As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPCIVILSTAT As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPHEIGHT As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPWEIGHT As Global.System.Data.DataColumn
        
        Private columnPers_EMPBLOODTYPE As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPGSISNUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPPAGIBIGNUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPPHEALTHNUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPSSSNUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPTINNUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPAGENCYNUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPTELNUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPMOBILENUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPEMAIL As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPFTHRLNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPFTHRFNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPFTHRMNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPFTHRNAMEEXT As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPMTHRLNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPMTHRFNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPMTHRMNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPMTHRMAIDENNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPGOVTISSUEDID As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPGOVTIDNO As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPGOVTIDDATEISSUED As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPGOVTIDPLACEISSUED As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPIMAGE As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPSIGNATURE As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPDATEACCOMPLISH As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPRIGHTTHUMB As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPSWORNDATE As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPADOATH As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPSRVCSTAT As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPSRVCSTATDATE As Global.System.Data.DataColumn
        
        Private columnHRIS_STATUS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblV1_HRISEMPLOYEEDATA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPLNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPLNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPFNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPFNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNAMEEXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNAMEEXT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNAMETITLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNAMETITLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPDOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPDOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPPOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPPOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPGENDERISMALEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPGENDERISMALE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPCIVILSTATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPCIVILSTAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPHEIGHTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPHEIGHT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPWEIGHTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPWEIGHT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Pers_EMPBLOODTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPers_EMPBLOODTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPGSISNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPGSISNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPPAGIBIGNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPPAGIBIGNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPPHEALTHNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPPHEALTHNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPSSSNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPSSSNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPTINNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPTINNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPAGENCYNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPAGENCYNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPTELNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPTELNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPMOBILENUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPMOBILENUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPEMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPFTHRLNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPFTHRLNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPFTHRFNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPFTHRFNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPFTHRMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPFTHRMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPFTHRNAMEEXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPFTHRNAMEEXT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPMTHRLNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPMTHRLNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPMTHRFNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPMTHRFNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPMTHRMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPMTHRMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPMTHRMAIDENNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPMTHRMAIDENNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPGOVTISSUEDIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPGOVTISSUEDID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPGOVTIDNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPGOVTIDNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPGOVTIDDATEISSUEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPGOVTIDDATEISSUED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPGOVTIDPLACEISSUEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPGOVTIDPLACEISSUED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPIMAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPIMAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPSIGNATUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPSIGNATURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPDATEACCOMPLISHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPDATEACCOMPLISH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPRIGHTTHUMBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPRIGHTTHUMB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPSWORNDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPSWORNDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPADOATHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPADOATH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPSRVCSTATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPSRVCSTAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPSRVCSTATDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPSRVCSTATDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblV1_HRISEMPLOYEEDATARow
            Get
                Return CType(Me.Rows(index),tblV1_HRISEMPLOYEEDATARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_HRISEMPLOYEEDATARowChanging As tblV1_HRISEMPLOYEEDATARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_HRISEMPLOYEEDATARowChanged As tblV1_HRISEMPLOYEEDATARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_HRISEMPLOYEEDATARowDeleting As tblV1_HRISEMPLOYEEDATARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_HRISEMPLOYEEDATARowDeleted As tblV1_HRISEMPLOYEEDATARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblV1_HRISEMPLOYEEDATARow(ByVal row As tblV1_HRISEMPLOYEEDATARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblV1_HRISEMPLOYEEDATARow( _
                    ByVal HRIS_EMPNO As String,  _
                    ByVal HRIS_EMPLNAME As String,  _
                    ByVal HRIS_EMPFNAME As String,  _
                    ByVal HRIS_EMPMNAME As String,  _
                    ByVal HRIS_EMPNAMEEXT As String,  _
                    ByVal HRIS_EMPNAMETITLE As String,  _
                    ByVal HRIS_EMPDOB As Date,  _
                    ByVal HRIS_EMPPOB As String,  _
                    ByVal HRIS_EMPGENDERISMALE As Boolean,  _
                    ByVal HRIS_EMPCIVILSTAT As String,  _
                    ByVal HRIS_EMPHEIGHT As Double,  _
                    ByVal HRIS_EMPWEIGHT As Double,  _
                    ByVal Pers_EMPBLOODTYPE As String,  _
                    ByVal HRIS_EMPGSISNUM As String,  _
                    ByVal HRIS_EMPPAGIBIGNUM As String,  _
                    ByVal HRIS_EMPPHEALTHNUM As String,  _
                    ByVal HRIS_EMPSSSNUM As String,  _
                    ByVal HRIS_EMPTINNUM As String,  _
                    ByVal HRIS_EMPAGENCYNUM As String,  _
                    ByVal HRIS_EMPTELNUM As String,  _
                    ByVal HRIS_EMPMOBILENUM As String,  _
                    ByVal HRIS_EMPEMAIL As String,  _
                    ByVal HRIS_EMPFTHRLNAME As String,  _
                    ByVal HRIS_EMPFTHRFNAME As String,  _
                    ByVal HRIS_EMPFTHRMNAME As String,  _
                    ByVal HRIS_EMPFTHRNAMEEXT As String,  _
                    ByVal HRIS_EMPMTHRLNAME As String,  _
                    ByVal HRIS_EMPMTHRFNAME As String,  _
                    ByVal HRIS_EMPMTHRMNAME As String,  _
                    ByVal HRIS_EMPMTHRMAIDENNAME As String,  _
                    ByVal HRIS_EMPGOVTISSUEDID As String,  _
                    ByVal HRIS_EMPGOVTIDNO As String,  _
                    ByVal HRIS_EMPGOVTIDDATEISSUED As Date,  _
                    ByVal HRIS_EMPGOVTIDPLACEISSUED As String,  _
                    ByVal HRIS_EMPIMAGE() As Byte,  _
                    ByVal HRIS_EMPSIGNATURE As String,  _
                    ByVal HRIS_EMPDATEACCOMPLISH As Date,  _
                    ByVal HRIS_EMPRIGHTTHUMB() As Byte,  _
                    ByVal HRIS_EMPSWORNDATE As Date,  _
                    ByVal HRIS_EMPADOATH As String,  _
                    ByVal HRIS_EMPSRVCSTAT As String,  _
                    ByVal HRIS_EMPSRVCSTATDATE As Date,  _
                    ByVal HRIS_STATUS As Integer) As tblV1_HRISEMPLOYEEDATARow
            Dim rowtblV1_HRISEMPLOYEEDATARow As tblV1_HRISEMPLOYEEDATARow = CType(Me.NewRow,tblV1_HRISEMPLOYEEDATARow)
            Dim columnValuesArray() As Object = New Object() {HRIS_EMPNO, HRIS_EMPLNAME, HRIS_EMPFNAME, HRIS_EMPMNAME, HRIS_EMPNAMEEXT, HRIS_EMPNAMETITLE, HRIS_EMPDOB, HRIS_EMPPOB, HRIS_EMPGENDERISMALE, HRIS_EMPCIVILSTAT, HRIS_EMPHEIGHT, HRIS_EMPWEIGHT, Pers_EMPBLOODTYPE, HRIS_EMPGSISNUM, HRIS_EMPPAGIBIGNUM, HRIS_EMPPHEALTHNUM, HRIS_EMPSSSNUM, HRIS_EMPTINNUM, HRIS_EMPAGENCYNUM, HRIS_EMPTELNUM, HRIS_EMPMOBILENUM, HRIS_EMPEMAIL, HRIS_EMPFTHRLNAME, HRIS_EMPFTHRFNAME, HRIS_EMPFTHRMNAME, HRIS_EMPFTHRNAMEEXT, HRIS_EMPMTHRLNAME, HRIS_EMPMTHRFNAME, HRIS_EMPMTHRMNAME, HRIS_EMPMTHRMAIDENNAME, HRIS_EMPGOVTISSUEDID, HRIS_EMPGOVTIDNO, HRIS_EMPGOVTIDDATEISSUED, HRIS_EMPGOVTIDPLACEISSUED, HRIS_EMPIMAGE, HRIS_EMPSIGNATURE, HRIS_EMPDATEACCOMPLISH, HRIS_EMPRIGHTTHUMB, HRIS_EMPSWORNDATE, HRIS_EMPADOATH, HRIS_EMPSRVCSTAT, HRIS_EMPSRVCSTATDATE, HRIS_STATUS}
            rowtblV1_HRISEMPLOYEEDATARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblV1_HRISEMPLOYEEDATARow)
            Return rowtblV1_HRISEMPLOYEEDATARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByHRIS_EMPNO(ByVal HRIS_EMPNO As String) As tblV1_HRISEMPLOYEEDATARow
            Return CType(Me.Rows.Find(New Object() {HRIS_EMPNO}),tblV1_HRISEMPLOYEEDATARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblV1_HRISEMPLOYEEDATADataTable = CType(MyBase.Clone,tblV1_HRISEMPLOYEEDATADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblV1_HRISEMPLOYEEDATADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnHRIS_EMPNO = MyBase.Columns("HRIS_EMPNO")
            Me.columnHRIS_EMPLNAME = MyBase.Columns("HRIS_EMPLNAME")
            Me.columnHRIS_EMPFNAME = MyBase.Columns("HRIS_EMPFNAME")
            Me.columnHRIS_EMPMNAME = MyBase.Columns("HRIS_EMPMNAME")
            Me.columnHRIS_EMPNAMEEXT = MyBase.Columns("HRIS_EMPNAMEEXT")
            Me.columnHRIS_EMPNAMETITLE = MyBase.Columns("HRIS_EMPNAMETITLE")
            Me.columnHRIS_EMPDOB = MyBase.Columns("HRIS_EMPDOB")
            Me.columnHRIS_EMPPOB = MyBase.Columns("HRIS_EMPPOB")
            Me.columnHRIS_EMPGENDERISMALE = MyBase.Columns("HRIS_EMPGENDERISMALE")
            Me.columnHRIS_EMPCIVILSTAT = MyBase.Columns("HRIS_EMPCIVILSTAT")
            Me.columnHRIS_EMPHEIGHT = MyBase.Columns("HRIS_EMPHEIGHT")
            Me.columnHRIS_EMPWEIGHT = MyBase.Columns("HRIS_EMPWEIGHT")
            Me.columnPers_EMPBLOODTYPE = MyBase.Columns("Pers_EMPBLOODTYPE")
            Me.columnHRIS_EMPGSISNUM = MyBase.Columns("HRIS_EMPGSISNUM")
            Me.columnHRIS_EMPPAGIBIGNUM = MyBase.Columns("HRIS_EMPPAGIBIGNUM")
            Me.columnHRIS_EMPPHEALTHNUM = MyBase.Columns("HRIS_EMPPHEALTHNUM")
            Me.columnHRIS_EMPSSSNUM = MyBase.Columns("HRIS_EMPSSSNUM")
            Me.columnHRIS_EMPTINNUM = MyBase.Columns("HRIS_EMPTINNUM")
            Me.columnHRIS_EMPAGENCYNUM = MyBase.Columns("HRIS_EMPAGENCYNUM")
            Me.columnHRIS_EMPTELNUM = MyBase.Columns("HRIS_EMPTELNUM")
            Me.columnHRIS_EMPMOBILENUM = MyBase.Columns("HRIS_EMPMOBILENUM")
            Me.columnHRIS_EMPEMAIL = MyBase.Columns("HRIS_EMPEMAIL")
            Me.columnHRIS_EMPFTHRLNAME = MyBase.Columns("HRIS_EMPFTHRLNAME")
            Me.columnHRIS_EMPFTHRFNAME = MyBase.Columns("HRIS_EMPFTHRFNAME")
            Me.columnHRIS_EMPFTHRMNAME = MyBase.Columns("HRIS_EMPFTHRMNAME")
            Me.columnHRIS_EMPFTHRNAMEEXT = MyBase.Columns("HRIS_EMPFTHRNAMEEXT")
            Me.columnHRIS_EMPMTHRLNAME = MyBase.Columns("HRIS_EMPMTHRLNAME")
            Me.columnHRIS_EMPMTHRFNAME = MyBase.Columns("HRIS_EMPMTHRFNAME")
            Me.columnHRIS_EMPMTHRMNAME = MyBase.Columns("HRIS_EMPMTHRMNAME")
            Me.columnHRIS_EMPMTHRMAIDENNAME = MyBase.Columns("HRIS_EMPMTHRMAIDENNAME")
            Me.columnHRIS_EMPGOVTISSUEDID = MyBase.Columns("HRIS_EMPGOVTISSUEDID")
            Me.columnHRIS_EMPGOVTIDNO = MyBase.Columns("HRIS_EMPGOVTIDNO")
            Me.columnHRIS_EMPGOVTIDDATEISSUED = MyBase.Columns("HRIS_EMPGOVTIDDATEISSUED")
            Me.columnHRIS_EMPGOVTIDPLACEISSUED = MyBase.Columns("HRIS_EMPGOVTIDPLACEISSUED")
            Me.columnHRIS_EMPIMAGE = MyBase.Columns("HRIS_EMPIMAGE")
            Me.columnHRIS_EMPSIGNATURE = MyBase.Columns("HRIS_EMPSIGNATURE")
            Me.columnHRIS_EMPDATEACCOMPLISH = MyBase.Columns("HRIS_EMPDATEACCOMPLISH")
            Me.columnHRIS_EMPRIGHTTHUMB = MyBase.Columns("HRIS_EMPRIGHTTHUMB")
            Me.columnHRIS_EMPSWORNDATE = MyBase.Columns("HRIS_EMPSWORNDATE")
            Me.columnHRIS_EMPADOATH = MyBase.Columns("HRIS_EMPADOATH")
            Me.columnHRIS_EMPSRVCSTAT = MyBase.Columns("HRIS_EMPSRVCSTAT")
            Me.columnHRIS_EMPSRVCSTATDATE = MyBase.Columns("HRIS_EMPSRVCSTATDATE")
            Me.columnHRIS_STATUS = MyBase.Columns("HRIS_STATUS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnHRIS_EMPNO = New Global.System.Data.DataColumn("HRIS_EMPNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO)
            Me.columnHRIS_EMPLNAME = New Global.System.Data.DataColumn("HRIS_EMPLNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPLNAME)
            Me.columnHRIS_EMPFNAME = New Global.System.Data.DataColumn("HRIS_EMPFNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPFNAME)
            Me.columnHRIS_EMPMNAME = New Global.System.Data.DataColumn("HRIS_EMPMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPMNAME)
            Me.columnHRIS_EMPNAMEEXT = New Global.System.Data.DataColumn("HRIS_EMPNAMEEXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNAMEEXT)
            Me.columnHRIS_EMPNAMETITLE = New Global.System.Data.DataColumn("HRIS_EMPNAMETITLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNAMETITLE)
            Me.columnHRIS_EMPDOB = New Global.System.Data.DataColumn("HRIS_EMPDOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPDOB)
            Me.columnHRIS_EMPPOB = New Global.System.Data.DataColumn("HRIS_EMPPOB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPPOB)
            Me.columnHRIS_EMPGENDERISMALE = New Global.System.Data.DataColumn("HRIS_EMPGENDERISMALE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPGENDERISMALE)
            Me.columnHRIS_EMPCIVILSTAT = New Global.System.Data.DataColumn("HRIS_EMPCIVILSTAT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPCIVILSTAT)
            Me.columnHRIS_EMPHEIGHT = New Global.System.Data.DataColumn("HRIS_EMPHEIGHT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPHEIGHT)
            Me.columnHRIS_EMPWEIGHT = New Global.System.Data.DataColumn("HRIS_EMPWEIGHT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPWEIGHT)
            Me.columnPers_EMPBLOODTYPE = New Global.System.Data.DataColumn("Pers_EMPBLOODTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPers_EMPBLOODTYPE)
            Me.columnHRIS_EMPGSISNUM = New Global.System.Data.DataColumn("HRIS_EMPGSISNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPGSISNUM)
            Me.columnHRIS_EMPPAGIBIGNUM = New Global.System.Data.DataColumn("HRIS_EMPPAGIBIGNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPPAGIBIGNUM)
            Me.columnHRIS_EMPPHEALTHNUM = New Global.System.Data.DataColumn("HRIS_EMPPHEALTHNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPPHEALTHNUM)
            Me.columnHRIS_EMPSSSNUM = New Global.System.Data.DataColumn("HRIS_EMPSSSNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPSSSNUM)
            Me.columnHRIS_EMPTINNUM = New Global.System.Data.DataColumn("HRIS_EMPTINNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPTINNUM)
            Me.columnHRIS_EMPAGENCYNUM = New Global.System.Data.DataColumn("HRIS_EMPAGENCYNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPAGENCYNUM)
            Me.columnHRIS_EMPTELNUM = New Global.System.Data.DataColumn("HRIS_EMPTELNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPTELNUM)
            Me.columnHRIS_EMPMOBILENUM = New Global.System.Data.DataColumn("HRIS_EMPMOBILENUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPMOBILENUM)
            Me.columnHRIS_EMPEMAIL = New Global.System.Data.DataColumn("HRIS_EMPEMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPEMAIL)
            Me.columnHRIS_EMPFTHRLNAME = New Global.System.Data.DataColumn("HRIS_EMPFTHRLNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPFTHRLNAME)
            Me.columnHRIS_EMPFTHRFNAME = New Global.System.Data.DataColumn("HRIS_EMPFTHRFNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPFTHRFNAME)
            Me.columnHRIS_EMPFTHRMNAME = New Global.System.Data.DataColumn("HRIS_EMPFTHRMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPFTHRMNAME)
            Me.columnHRIS_EMPFTHRNAMEEXT = New Global.System.Data.DataColumn("HRIS_EMPFTHRNAMEEXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPFTHRNAMEEXT)
            Me.columnHRIS_EMPMTHRLNAME = New Global.System.Data.DataColumn("HRIS_EMPMTHRLNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPMTHRLNAME)
            Me.columnHRIS_EMPMTHRFNAME = New Global.System.Data.DataColumn("HRIS_EMPMTHRFNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPMTHRFNAME)
            Me.columnHRIS_EMPMTHRMNAME = New Global.System.Data.DataColumn("HRIS_EMPMTHRMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPMTHRMNAME)
            Me.columnHRIS_EMPMTHRMAIDENNAME = New Global.System.Data.DataColumn("HRIS_EMPMTHRMAIDENNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPMTHRMAIDENNAME)
            Me.columnHRIS_EMPGOVTISSUEDID = New Global.System.Data.DataColumn("HRIS_EMPGOVTISSUEDID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPGOVTISSUEDID)
            Me.columnHRIS_EMPGOVTIDNO = New Global.System.Data.DataColumn("HRIS_EMPGOVTIDNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPGOVTIDNO)
            Me.columnHRIS_EMPGOVTIDDATEISSUED = New Global.System.Data.DataColumn("HRIS_EMPGOVTIDDATEISSUED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPGOVTIDDATEISSUED)
            Me.columnHRIS_EMPGOVTIDPLACEISSUED = New Global.System.Data.DataColumn("HRIS_EMPGOVTIDPLACEISSUED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPGOVTIDPLACEISSUED)
            Me.columnHRIS_EMPIMAGE = New Global.System.Data.DataColumn("HRIS_EMPIMAGE", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPIMAGE)
            Me.columnHRIS_EMPSIGNATURE = New Global.System.Data.DataColumn("HRIS_EMPSIGNATURE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPSIGNATURE)
            Me.columnHRIS_EMPDATEACCOMPLISH = New Global.System.Data.DataColumn("HRIS_EMPDATEACCOMPLISH", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPDATEACCOMPLISH)
            Me.columnHRIS_EMPRIGHTTHUMB = New Global.System.Data.DataColumn("HRIS_EMPRIGHTTHUMB", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPRIGHTTHUMB)
            Me.columnHRIS_EMPSWORNDATE = New Global.System.Data.DataColumn("HRIS_EMPSWORNDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPSWORNDATE)
            Me.columnHRIS_EMPADOATH = New Global.System.Data.DataColumn("HRIS_EMPADOATH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPADOATH)
            Me.columnHRIS_EMPSRVCSTAT = New Global.System.Data.DataColumn("HRIS_EMPSRVCSTAT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPSRVCSTAT)
            Me.columnHRIS_EMPSRVCSTATDATE = New Global.System.Data.DataColumn("HRIS_EMPSRVCSTATDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPSRVCSTATDATE)
            Me.columnHRIS_STATUS = New Global.System.Data.DataColumn("HRIS_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_STATUS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnHRIS_EMPNO}, true))
            Me.columnHRIS_EMPNO.AllowDBNull = false
            Me.columnHRIS_EMPNO.Unique = true
            Me.columnHRIS_EMPNO.MaxLength = 20
            Me.columnHRIS_EMPLNAME.MaxLength = 255
            Me.columnHRIS_EMPFNAME.MaxLength = 255
            Me.columnHRIS_EMPMNAME.MaxLength = 255
            Me.columnHRIS_EMPNAMEEXT.MaxLength = 255
            Me.columnHRIS_EMPNAMETITLE.MaxLength = 255
            Me.columnHRIS_EMPPOB.MaxLength = 255
            Me.columnHRIS_EMPCIVILSTAT.MaxLength = 255
            Me.columnPers_EMPBLOODTYPE.MaxLength = 255
            Me.columnHRIS_EMPGSISNUM.MaxLength = 255
            Me.columnHRIS_EMPPAGIBIGNUM.MaxLength = 255
            Me.columnHRIS_EMPPHEALTHNUM.MaxLength = 255
            Me.columnHRIS_EMPSSSNUM.MaxLength = 255
            Me.columnHRIS_EMPTINNUM.MaxLength = 255
            Me.columnHRIS_EMPAGENCYNUM.MaxLength = 255
            Me.columnHRIS_EMPTELNUM.MaxLength = 255
            Me.columnHRIS_EMPMOBILENUM.MaxLength = 255
            Me.columnHRIS_EMPEMAIL.MaxLength = 255
            Me.columnHRIS_EMPFTHRLNAME.MaxLength = 255
            Me.columnHRIS_EMPFTHRFNAME.MaxLength = 255
            Me.columnHRIS_EMPFTHRMNAME.MaxLength = 255
            Me.columnHRIS_EMPFTHRNAMEEXT.MaxLength = 255
            Me.columnHRIS_EMPMTHRLNAME.MaxLength = 255
            Me.columnHRIS_EMPMTHRFNAME.MaxLength = 255
            Me.columnHRIS_EMPMTHRMNAME.MaxLength = 255
            Me.columnHRIS_EMPMTHRMAIDENNAME.MaxLength = 255
            Me.columnHRIS_EMPGOVTISSUEDID.MaxLength = 255
            Me.columnHRIS_EMPGOVTIDNO.MaxLength = 255
            Me.columnHRIS_EMPGOVTIDPLACEISSUED.MaxLength = 255
            Me.columnHRIS_EMPSIGNATURE.MaxLength = 255
            Me.columnHRIS_EMPADOATH.MaxLength = 255
            Me.columnHRIS_EMPSRVCSTAT.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblV1_HRISEMPLOYEEDATARow() As tblV1_HRISEMPLOYEEDATARow
            Return CType(Me.NewRow,tblV1_HRISEMPLOYEEDATARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblV1_HRISEMPLOYEEDATARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblV1_HRISEMPLOYEEDATARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblV1_HRISEMPLOYEEDATARowChangedEvent) Is Nothing) Then
                RaiseEvent tblV1_HRISEMPLOYEEDATARowChanged(Me, New tblV1_HRISEMPLOYEEDATARowChangeEvent(CType(e.Row,tblV1_HRISEMPLOYEEDATARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblV1_HRISEMPLOYEEDATARowChangingEvent) Is Nothing) Then
                RaiseEvent tblV1_HRISEMPLOYEEDATARowChanging(Me, New tblV1_HRISEMPLOYEEDATARowChangeEvent(CType(e.Row,tblV1_HRISEMPLOYEEDATARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblV1_HRISEMPLOYEEDATARowDeletedEvent) Is Nothing) Then
                RaiseEvent tblV1_HRISEMPLOYEEDATARowDeleted(Me, New tblV1_HRISEMPLOYEEDATARowChangeEvent(CType(e.Row,tblV1_HRISEMPLOYEEDATARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblV1_HRISEMPLOYEEDATARowDeletingEvent) Is Nothing) Then
                RaiseEvent tblV1_HRISEMPLOYEEDATARowDeleting(Me, New tblV1_HRISEMPLOYEEDATARowChangeEvent(CType(e.Row,tblV1_HRISEMPLOYEEDATARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblV1_HRISEMPLOYEEDATARow(ByVal row As tblV1_HRISEMPLOYEEDATARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblV1_HRISEMPLOYEEDATADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblV1_HRISDIVISIONDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblV1_HRISDIVISIONRow)
        
        Private columnHDIV_DIVISION As Global.System.Data.DataColumn
        
        Private columnHDIVS_CODE As Global.System.Data.DataColumn
        
        Private columnHDPT_CODE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblV1_HRISDIVISION"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDIV_DIVISIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDIV_DIVISION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDIVS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDIVS_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDPT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDPT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblV1_HRISDIVISIONRow
            Get
                Return CType(Me.Rows(index),tblV1_HRISDIVISIONRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_HRISDIVISIONRowChanging As tblV1_HRISDIVISIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_HRISDIVISIONRowChanged As tblV1_HRISDIVISIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_HRISDIVISIONRowDeleting As tblV1_HRISDIVISIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_HRISDIVISIONRowDeleted As tblV1_HRISDIVISIONRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblV1_HRISDIVISIONRow(ByVal row As tblV1_HRISDIVISIONRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblV1_HRISDIVISIONRow(ByVal HDIV_DIVISION As String, ByVal HDIVS_CODE As String, ByVal parenttblV1_HRISDEPARTMENTRowByFK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT As tblV1_HRISDEPARTMENTRow) As tblV1_HRISDIVISIONRow
            Dim rowtblV1_HRISDIVISIONRow As tblV1_HRISDIVISIONRow = CType(Me.NewRow,tblV1_HRISDIVISIONRow)
            Dim columnValuesArray() As Object = New Object() {HDIV_DIVISION, HDIVS_CODE, Nothing}
            If (Not (parenttblV1_HRISDEPARTMENTRowByFK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT) Is Nothing) Then
                columnValuesArray(2) = parenttblV1_HRISDEPARTMENTRowByFK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT(0)
            End If
            rowtblV1_HRISDIVISIONRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblV1_HRISDIVISIONRow)
            Return rowtblV1_HRISDIVISIONRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByHDIVS_CODE(ByVal HDIVS_CODE As String) As tblV1_HRISDIVISIONRow
            Return CType(Me.Rows.Find(New Object() {HDIVS_CODE}),tblV1_HRISDIVISIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblV1_HRISDIVISIONDataTable = CType(MyBase.Clone,tblV1_HRISDIVISIONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblV1_HRISDIVISIONDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnHDIV_DIVISION = MyBase.Columns("HDIV_DIVISION")
            Me.columnHDIVS_CODE = MyBase.Columns("HDIVS_CODE")
            Me.columnHDPT_CODE = MyBase.Columns("HDPT_CODE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnHDIV_DIVISION = New Global.System.Data.DataColumn("HDIV_DIVISION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDIV_DIVISION)
            Me.columnHDIVS_CODE = New Global.System.Data.DataColumn("HDIVS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDIVS_CODE)
            Me.columnHDPT_CODE = New Global.System.Data.DataColumn("HDPT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDPT_CODE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnHDIVS_CODE}, true))
            Me.columnHDIV_DIVISION.AllowDBNull = false
            Me.columnHDIV_DIVISION.MaxLength = 100
            Me.columnHDIVS_CODE.AllowDBNull = false
            Me.columnHDIVS_CODE.Unique = true
            Me.columnHDIVS_CODE.MaxLength = 10
            Me.columnHDPT_CODE.AllowDBNull = false
            Me.columnHDPT_CODE.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblV1_HRISDIVISIONRow() As tblV1_HRISDIVISIONRow
            Return CType(Me.NewRow,tblV1_HRISDIVISIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblV1_HRISDIVISIONRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblV1_HRISDIVISIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblV1_HRISDIVISIONRowChangedEvent) Is Nothing) Then
                RaiseEvent tblV1_HRISDIVISIONRowChanged(Me, New tblV1_HRISDIVISIONRowChangeEvent(CType(e.Row,tblV1_HRISDIVISIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblV1_HRISDIVISIONRowChangingEvent) Is Nothing) Then
                RaiseEvent tblV1_HRISDIVISIONRowChanging(Me, New tblV1_HRISDIVISIONRowChangeEvent(CType(e.Row,tblV1_HRISDIVISIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblV1_HRISDIVISIONRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblV1_HRISDIVISIONRowDeleted(Me, New tblV1_HRISDIVISIONRowChangeEvent(CType(e.Row,tblV1_HRISDIVISIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblV1_HRISDIVISIONRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblV1_HRISDIVISIONRowDeleting(Me, New tblV1_HRISDIVISIONRowChangeEvent(CType(e.Row,tblV1_HRISDIVISIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblV1_HRISDIVISIONRow(ByVal row As tblV1_HRISDIVISIONRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblV1_HRISDIVISIONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblV1_HRISDEPARTMENTDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblV1_HRISDEPARTMENTRow)
        
        Private columnHDPT_CODE As Global.System.Data.DataColumn
        
        Private columnHDPT_DEPARTMENT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblV1_HRISDEPARTMENT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDPT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDPT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDPT_DEPARTMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDPT_DEPARTMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblV1_HRISDEPARTMENTRow
            Get
                Return CType(Me.Rows(index),tblV1_HRISDEPARTMENTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_HRISDEPARTMENTRowChanging As tblV1_HRISDEPARTMENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_HRISDEPARTMENTRowChanged As tblV1_HRISDEPARTMENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_HRISDEPARTMENTRowDeleting As tblV1_HRISDEPARTMENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_HRISDEPARTMENTRowDeleted As tblV1_HRISDEPARTMENTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblV1_HRISDEPARTMENTRow(ByVal row As tblV1_HRISDEPARTMENTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblV1_HRISDEPARTMENTRow(ByVal HDPT_CODE As String, ByVal HDPT_DEPARTMENT As String) As tblV1_HRISDEPARTMENTRow
            Dim rowtblV1_HRISDEPARTMENTRow As tblV1_HRISDEPARTMENTRow = CType(Me.NewRow,tblV1_HRISDEPARTMENTRow)
            Dim columnValuesArray() As Object = New Object() {HDPT_CODE, HDPT_DEPARTMENT}
            rowtblV1_HRISDEPARTMENTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblV1_HRISDEPARTMENTRow)
            Return rowtblV1_HRISDEPARTMENTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByHDPT_CODE(ByVal HDPT_CODE As String) As tblV1_HRISDEPARTMENTRow
            Return CType(Me.Rows.Find(New Object() {HDPT_CODE}),tblV1_HRISDEPARTMENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblV1_HRISDEPARTMENTDataTable = CType(MyBase.Clone,tblV1_HRISDEPARTMENTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblV1_HRISDEPARTMENTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnHDPT_CODE = MyBase.Columns("HDPT_CODE")
            Me.columnHDPT_DEPARTMENT = MyBase.Columns("HDPT_DEPARTMENT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnHDPT_CODE = New Global.System.Data.DataColumn("HDPT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDPT_CODE)
            Me.columnHDPT_DEPARTMENT = New Global.System.Data.DataColumn("HDPT_DEPARTMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDPT_DEPARTMENT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnHDPT_CODE}, true))
            Me.columnHDPT_CODE.AllowDBNull = false
            Me.columnHDPT_CODE.Unique = true
            Me.columnHDPT_CODE.MaxLength = 5
            Me.columnHDPT_DEPARTMENT.AllowDBNull = false
            Me.columnHDPT_DEPARTMENT.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblV1_HRISDEPARTMENTRow() As tblV1_HRISDEPARTMENTRow
            Return CType(Me.NewRow,tblV1_HRISDEPARTMENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblV1_HRISDEPARTMENTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblV1_HRISDEPARTMENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblV1_HRISDEPARTMENTRowChangedEvent) Is Nothing) Then
                RaiseEvent tblV1_HRISDEPARTMENTRowChanged(Me, New tblV1_HRISDEPARTMENTRowChangeEvent(CType(e.Row,tblV1_HRISDEPARTMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblV1_HRISDEPARTMENTRowChangingEvent) Is Nothing) Then
                RaiseEvent tblV1_HRISDEPARTMENTRowChanging(Me, New tblV1_HRISDEPARTMENTRowChangeEvent(CType(e.Row,tblV1_HRISDEPARTMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblV1_HRISDEPARTMENTRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblV1_HRISDEPARTMENTRowDeleted(Me, New tblV1_HRISDEPARTMENTRowChangeEvent(CType(e.Row,tblV1_HRISDEPARTMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblV1_HRISDEPARTMENTRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblV1_HRISDEPARTMENTRowDeleting(Me, New tblV1_HRISDEPARTMENTRowChangeEvent(CType(e.Row,tblV1_HRISDEPARTMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblV1_HRISDEPARTMENTRow(ByVal row As tblV1_HRISDEPARTMENTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblV1_HRISDEPARTMENTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblV1_DEFPRADEPARTMENTSDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblV1_DEFPRADEPARTMENTSRow)
        
        Private columnDEPT_CODE As Global.System.Data.DataColumn
        
        Private columnDEPT_NAME As Global.System.Data.DataColumn
        
        Private columnDEPT_DESC As Global.System.Data.DataColumn
        
        Private columnDEPT_LOC As Global.System.Data.DataColumn
        
        Private columnDEPT_STATUS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblV1_DEFPRADEPARTMENTS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DEPT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DEPT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DEPT_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPT_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DEPT_LOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPT_LOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DEPT_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPT_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblV1_DEFPRADEPARTMENTSRow
            Get
                Return CType(Me.Rows(index),tblV1_DEFPRADEPARTMENTSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_DEFPRADEPARTMENTSRowChanging As tblV1_DEFPRADEPARTMENTSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_DEFPRADEPARTMENTSRowChanged As tblV1_DEFPRADEPARTMENTSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_DEFPRADEPARTMENTSRowDeleting As tblV1_DEFPRADEPARTMENTSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_DEFPRADEPARTMENTSRowDeleted As tblV1_DEFPRADEPARTMENTSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblV1_DEFPRADEPARTMENTSRow(ByVal row As tblV1_DEFPRADEPARTMENTSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblV1_DEFPRADEPARTMENTSRow(ByVal DEPT_CODE As String, ByVal DEPT_NAME As String, ByVal DEPT_DESC As String, ByVal DEPT_LOC As String, ByVal DEPT_STATUS As Boolean) As tblV1_DEFPRADEPARTMENTSRow
            Dim rowtblV1_DEFPRADEPARTMENTSRow As tblV1_DEFPRADEPARTMENTSRow = CType(Me.NewRow,tblV1_DEFPRADEPARTMENTSRow)
            Dim columnValuesArray() As Object = New Object() {DEPT_CODE, DEPT_NAME, DEPT_DESC, DEPT_LOC, DEPT_STATUS}
            rowtblV1_DEFPRADEPARTMENTSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblV1_DEFPRADEPARTMENTSRow)
            Return rowtblV1_DEFPRADEPARTMENTSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByDEPT_CODE(ByVal DEPT_CODE As String) As tblV1_DEFPRADEPARTMENTSRow
            Return CType(Me.Rows.Find(New Object() {DEPT_CODE}),tblV1_DEFPRADEPARTMENTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblV1_DEFPRADEPARTMENTSDataTable = CType(MyBase.Clone,tblV1_DEFPRADEPARTMENTSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblV1_DEFPRADEPARTMENTSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDEPT_CODE = MyBase.Columns("DEPT_CODE")
            Me.columnDEPT_NAME = MyBase.Columns("DEPT_NAME")
            Me.columnDEPT_DESC = MyBase.Columns("DEPT_DESC")
            Me.columnDEPT_LOC = MyBase.Columns("DEPT_LOC")
            Me.columnDEPT_STATUS = MyBase.Columns("DEPT_STATUS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDEPT_CODE = New Global.System.Data.DataColumn("DEPT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPT_CODE)
            Me.columnDEPT_NAME = New Global.System.Data.DataColumn("DEPT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPT_NAME)
            Me.columnDEPT_DESC = New Global.System.Data.DataColumn("DEPT_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPT_DESC)
            Me.columnDEPT_LOC = New Global.System.Data.DataColumn("DEPT_LOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPT_LOC)
            Me.columnDEPT_STATUS = New Global.System.Data.DataColumn("DEPT_STATUS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPT_STATUS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDEPT_CODE}, true))
            Me.columnDEPT_CODE.AllowDBNull = false
            Me.columnDEPT_CODE.Unique = true
            Me.columnDEPT_CODE.MaxLength = 10
            Me.columnDEPT_NAME.AllowDBNull = false
            Me.columnDEPT_NAME.MaxLength = 150
            Me.columnDEPT_DESC.MaxLength = 2147483647
            Me.columnDEPT_LOC.MaxLength = 150
            Me.columnDEPT_STATUS.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblV1_DEFPRADEPARTMENTSRow() As tblV1_DEFPRADEPARTMENTSRow
            Return CType(Me.NewRow,tblV1_DEFPRADEPARTMENTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblV1_DEFPRADEPARTMENTSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblV1_DEFPRADEPARTMENTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblV1_DEFPRADEPARTMENTSRowChangedEvent) Is Nothing) Then
                RaiseEvent tblV1_DEFPRADEPARTMENTSRowChanged(Me, New tblV1_DEFPRADEPARTMENTSRowChangeEvent(CType(e.Row,tblV1_DEFPRADEPARTMENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblV1_DEFPRADEPARTMENTSRowChangingEvent) Is Nothing) Then
                RaiseEvent tblV1_DEFPRADEPARTMENTSRowChanging(Me, New tblV1_DEFPRADEPARTMENTSRowChangeEvent(CType(e.Row,tblV1_DEFPRADEPARTMENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblV1_DEFPRADEPARTMENTSRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblV1_DEFPRADEPARTMENTSRowDeleted(Me, New tblV1_DEFPRADEPARTMENTSRowChangeEvent(CType(e.Row,tblV1_DEFPRADEPARTMENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblV1_DEFPRADEPARTMENTSRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblV1_DEFPRADEPARTMENTSRowDeleting(Me, New tblV1_DEFPRADEPARTMENTSRowChangeEvent(CType(e.Row,tblV1_DEFPRADEPARTMENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblV1_DEFPRADEPARTMENTSRow(ByVal row As tblV1_DEFPRADEPARTMENTSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblV1_DEFPRADEPARTMENTSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblV1_DEFPRADIVISIONDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblV1_DEFPRADIVISIONRow)
        
        Private columnDEPT_CODE As Global.System.Data.DataColumn
        
        Private columnDIVS_CODE As Global.System.Data.DataColumn
        
        Private columnDIVS_NAME As Global.System.Data.DataColumn
        
        Private columnDIVS_DESC As Global.System.Data.DataColumn
        
        Private columnDIVS_LOC As Global.System.Data.DataColumn
        
        Private columnDIVS_STATUS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblV1_DEFPRADIVISION"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DEPT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DIVS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIVS_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DIVS_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIVS_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DIVS_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIVS_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DIVS_LOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIVS_LOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DIVS_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIVS_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblV1_DEFPRADIVISIONRow
            Get
                Return CType(Me.Rows(index),tblV1_DEFPRADIVISIONRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_DEFPRADIVISIONRowChanging As tblV1_DEFPRADIVISIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_DEFPRADIVISIONRowChanged As tblV1_DEFPRADIVISIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_DEFPRADIVISIONRowDeleting As tblV1_DEFPRADIVISIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_DEFPRADIVISIONRowDeleted As tblV1_DEFPRADIVISIONRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblV1_DEFPRADIVISIONRow(ByVal row As tblV1_DEFPRADIVISIONRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblV1_DEFPRADIVISIONRow(ByVal parenttblV1_DEFPRADEPARTMENTSRowByFK_tblDIVISION_tblDEPARTMENTS As tblV1_DEFPRADEPARTMENTSRow, ByVal DIVS_CODE As String, ByVal DIVS_NAME As String, ByVal DIVS_DESC As String, ByVal DIVS_LOC As String, ByVal DIVS_STATUS As Boolean) As tblV1_DEFPRADIVISIONRow
            Dim rowtblV1_DEFPRADIVISIONRow As tblV1_DEFPRADIVISIONRow = CType(Me.NewRow,tblV1_DEFPRADIVISIONRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DIVS_CODE, DIVS_NAME, DIVS_DESC, DIVS_LOC, DIVS_STATUS}
            If (Not (parenttblV1_DEFPRADEPARTMENTSRowByFK_tblDIVISION_tblDEPARTMENTS) Is Nothing) Then
                columnValuesArray(0) = parenttblV1_DEFPRADEPARTMENTSRowByFK_tblDIVISION_tblDEPARTMENTS(0)
            End If
            rowtblV1_DEFPRADIVISIONRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblV1_DEFPRADIVISIONRow)
            Return rowtblV1_DEFPRADIVISIONRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByDIVS_CODE(ByVal DIVS_CODE As String) As tblV1_DEFPRADIVISIONRow
            Return CType(Me.Rows.Find(New Object() {DIVS_CODE}),tblV1_DEFPRADIVISIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblV1_DEFPRADIVISIONDataTable = CType(MyBase.Clone,tblV1_DEFPRADIVISIONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblV1_DEFPRADIVISIONDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDEPT_CODE = MyBase.Columns("DEPT_CODE")
            Me.columnDIVS_CODE = MyBase.Columns("DIVS_CODE")
            Me.columnDIVS_NAME = MyBase.Columns("DIVS_NAME")
            Me.columnDIVS_DESC = MyBase.Columns("DIVS_DESC")
            Me.columnDIVS_LOC = MyBase.Columns("DIVS_LOC")
            Me.columnDIVS_STATUS = MyBase.Columns("DIVS_STATUS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDEPT_CODE = New Global.System.Data.DataColumn("DEPT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPT_CODE)
            Me.columnDIVS_CODE = New Global.System.Data.DataColumn("DIVS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIVS_CODE)
            Me.columnDIVS_NAME = New Global.System.Data.DataColumn("DIVS_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIVS_NAME)
            Me.columnDIVS_DESC = New Global.System.Data.DataColumn("DIVS_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIVS_DESC)
            Me.columnDIVS_LOC = New Global.System.Data.DataColumn("DIVS_LOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIVS_LOC)
            Me.columnDIVS_STATUS = New Global.System.Data.DataColumn("DIVS_STATUS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIVS_STATUS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDIVS_CODE}, true))
            Me.columnDEPT_CODE.AllowDBNull = false
            Me.columnDEPT_CODE.MaxLength = 10
            Me.columnDIVS_CODE.AllowDBNull = false
            Me.columnDIVS_CODE.Unique = true
            Me.columnDIVS_CODE.MaxLength = 10
            Me.columnDIVS_NAME.AllowDBNull = false
            Me.columnDIVS_NAME.MaxLength = 150
            Me.columnDIVS_DESC.MaxLength = 2147483647
            Me.columnDIVS_LOC.MaxLength = 150
            Me.columnDIVS_STATUS.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblV1_DEFPRADIVISIONRow() As tblV1_DEFPRADIVISIONRow
            Return CType(Me.NewRow,tblV1_DEFPRADIVISIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblV1_DEFPRADIVISIONRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblV1_DEFPRADIVISIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblV1_DEFPRADIVISIONRowChangedEvent) Is Nothing) Then
                RaiseEvent tblV1_DEFPRADIVISIONRowChanged(Me, New tblV1_DEFPRADIVISIONRowChangeEvent(CType(e.Row,tblV1_DEFPRADIVISIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblV1_DEFPRADIVISIONRowChangingEvent) Is Nothing) Then
                RaiseEvent tblV1_DEFPRADIVISIONRowChanging(Me, New tblV1_DEFPRADIVISIONRowChangeEvent(CType(e.Row,tblV1_DEFPRADIVISIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblV1_DEFPRADIVISIONRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblV1_DEFPRADIVISIONRowDeleted(Me, New tblV1_DEFPRADIVISIONRowChangeEvent(CType(e.Row,tblV1_DEFPRADIVISIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblV1_DEFPRADIVISIONRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblV1_DEFPRADIVISIONRowDeleting(Me, New tblV1_DEFPRADIVISIONRowChangeEvent(CType(e.Row,tblV1_DEFPRADIVISIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblV1_DEFPRADIVISIONRow(ByVal row As tblV1_DEFPRADIVISIONRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblV1_DEFPRADIVISIONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPM4_SQ_PR_TRANS_CODEDataTable
        Inherits Global.System.Data.TypedTableBase(Of SPM4_SQ_PR_TRANS_CODERow)
        
        Private columnSERV_TRANS_NUM As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPM4_SQ_PR_TRANS_CODE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SERV_TRANS_NUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERV_TRANS_NUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPM4_SQ_PR_TRANS_CODERow
            Get
                Return CType(Me.Rows(index),SPM4_SQ_PR_TRANS_CODERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_SQ_PR_TRANS_CODERowChanging As SPM4_SQ_PR_TRANS_CODERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_SQ_PR_TRANS_CODERowChanged As SPM4_SQ_PR_TRANS_CODERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_SQ_PR_TRANS_CODERowDeleting As SPM4_SQ_PR_TRANS_CODERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_SQ_PR_TRANS_CODERowDeleted As SPM4_SQ_PR_TRANS_CODERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddSPM4_SQ_PR_TRANS_CODERow(ByVal row As SPM4_SQ_PR_TRANS_CODERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddSPM4_SQ_PR_TRANS_CODERow(ByVal SERV_TRANS_NUM As String) As SPM4_SQ_PR_TRANS_CODERow
            Dim rowSPM4_SQ_PR_TRANS_CODERow As SPM4_SQ_PR_TRANS_CODERow = CType(Me.NewRow,SPM4_SQ_PR_TRANS_CODERow)
            Dim columnValuesArray() As Object = New Object() {SERV_TRANS_NUM}
            rowSPM4_SQ_PR_TRANS_CODERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSPM4_SQ_PR_TRANS_CODERow)
            Return rowSPM4_SQ_PR_TRANS_CODERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SPM4_SQ_PR_TRANS_CODEDataTable = CType(MyBase.Clone,SPM4_SQ_PR_TRANS_CODEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SPM4_SQ_PR_TRANS_CODEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSERV_TRANS_NUM = MyBase.Columns("SERV_TRANS_NUM")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSERV_TRANS_NUM = New Global.System.Data.DataColumn("SERV_TRANS_NUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERV_TRANS_NUM)
            Me.columnSERV_TRANS_NUM.ReadOnly = true
            Me.columnSERV_TRANS_NUM.MaxLength = 4000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewSPM4_SQ_PR_TRANS_CODERow() As SPM4_SQ_PR_TRANS_CODERow
            Return CType(Me.NewRow,SPM4_SQ_PR_TRANS_CODERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SPM4_SQ_PR_TRANS_CODERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SPM4_SQ_PR_TRANS_CODERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPM4_SQ_PR_TRANS_CODERowChangedEvent) Is Nothing) Then
                RaiseEvent SPM4_SQ_PR_TRANS_CODERowChanged(Me, New SPM4_SQ_PR_TRANS_CODERowChangeEvent(CType(e.Row,SPM4_SQ_PR_TRANS_CODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPM4_SQ_PR_TRANS_CODERowChangingEvent) Is Nothing) Then
                RaiseEvent SPM4_SQ_PR_TRANS_CODERowChanging(Me, New SPM4_SQ_PR_TRANS_CODERowChangeEvent(CType(e.Row,SPM4_SQ_PR_TRANS_CODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPM4_SQ_PR_TRANS_CODERowDeletedEvent) Is Nothing) Then
                RaiseEvent SPM4_SQ_PR_TRANS_CODERowDeleted(Me, New SPM4_SQ_PR_TRANS_CODERowChangeEvent(CType(e.Row,SPM4_SQ_PR_TRANS_CODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPM4_SQ_PR_TRANS_CODERowDeletingEvent) Is Nothing) Then
                RaiseEvent SPM4_SQ_PR_TRANS_CODERowDeleting(Me, New SPM4_SQ_PR_TRANS_CODERowChangeEvent(CType(e.Row,SPM4_SQ_PR_TRANS_CODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveSPM4_SQ_PR_TRANS_CODERow(ByVal row As SPM4_SQ_PR_TRANS_CODERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPM4_SQ_PR_TRANS_CODEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EMPLOYEEDATADataTable
        Inherits Global.System.Data.TypedTableBase(Of EMPLOYEEDATARow)
        
        Private columnHDIV_DIVISION As Global.System.Data.DataColumn
        
        Private columnHEDV_DATE As Global.System.Data.DataColumn
        
        Private columnHDIVS_CODE As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO1 As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPLNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPFNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPMNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNAMEEXT As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNAMETITLE As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPDOB As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPPOB As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPGENDERISMALE As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPCIVILSTAT As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPHEIGHT As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPWEIGHT As Global.System.Data.DataColumn
        
        Private columnPers_EMPBLOODTYPE As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPGSISNUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPPAGIBIGNUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPPHEALTHNUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPSSSNUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPTINNUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPAGENCYNUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPTELNUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPMOBILENUM As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPEMAIL As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPFTHRLNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPFTHRFNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPFTHRMNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPFTHRNAMEEXT As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPMTHRLNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPMTHRFNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPMTHRMNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPMTHRMAIDENNAME As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPGOVTISSUEDID As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPGOVTIDNO As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPGOVTIDDATEISSUED As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPGOVTIDPLACEISSUED As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPIMAGE As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPSIGNATURE As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPDATEACCOMPLISH As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPRIGHTTHUMB As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPSWORNDATE As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPADOATH As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPSRVCSTAT As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPSRVCSTATDATE As Global.System.Data.DataColumn
        
        Private columnHRIS_STATUS As Global.System.Data.DataColumn
        
        Private columnHDIVS_CODE1 As Global.System.Data.DataColumn
        
        Private columnHDPT_CODE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "EMPLOYEEDATA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDIV_DIVISIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDIV_DIVISION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HEDV_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHEDV_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDIVS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDIVS_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPLNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPLNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPFNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPFNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNAMEEXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNAMEEXT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNAMETITLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNAMETITLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPDOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPDOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPPOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPPOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPGENDERISMALEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPGENDERISMALE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPCIVILSTATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPCIVILSTAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPHEIGHTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPHEIGHT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPWEIGHTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPWEIGHT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Pers_EMPBLOODTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPers_EMPBLOODTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPGSISNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPGSISNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPPAGIBIGNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPPAGIBIGNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPPHEALTHNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPPHEALTHNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPSSSNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPSSSNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPTINNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPTINNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPAGENCYNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPAGENCYNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPTELNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPTELNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPMOBILENUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPMOBILENUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPEMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPFTHRLNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPFTHRLNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPFTHRFNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPFTHRFNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPFTHRMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPFTHRMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPFTHRNAMEEXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPFTHRNAMEEXT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPMTHRLNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPMTHRLNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPMTHRFNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPMTHRFNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPMTHRMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPMTHRMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPMTHRMAIDENNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPMTHRMAIDENNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPGOVTISSUEDIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPGOVTISSUEDID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPGOVTIDNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPGOVTIDNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPGOVTIDDATEISSUEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPGOVTIDDATEISSUED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPGOVTIDPLACEISSUEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPGOVTIDPLACEISSUED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPIMAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPIMAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPSIGNATUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPSIGNATURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPDATEACCOMPLISHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPDATEACCOMPLISH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPRIGHTTHUMBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPRIGHTTHUMB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPSWORNDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPSWORNDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPADOATHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPADOATH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPSRVCSTATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPSRVCSTAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPSRVCSTATDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPSRVCSTATDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDIVS_CODE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDIVS_CODE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDPT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDPT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EMPLOYEEDATARow
            Get
                Return CType(Me.Rows(index),EMPLOYEEDATARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event EMPLOYEEDATARowChanging As EMPLOYEEDATARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event EMPLOYEEDATARowChanged As EMPLOYEEDATARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event EMPLOYEEDATARowDeleting As EMPLOYEEDATARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event EMPLOYEEDATARowDeleted As EMPLOYEEDATARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddEMPLOYEEDATARow(ByVal row As EMPLOYEEDATARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddEMPLOYEEDATARow( _
                    ByVal HDIV_DIVISION As String,  _
                    ByVal HEDV_DATE As Date,  _
                    ByVal HDIVS_CODE As String,  _
                    ByVal HRIS_EMPNO As String,  _
                    ByVal HRIS_EMPNO1 As String,  _
                    ByVal HRIS_EMPLNAME As String,  _
                    ByVal HRIS_EMPFNAME As String,  _
                    ByVal HRIS_EMPMNAME As String,  _
                    ByVal HRIS_EMPNAMEEXT As String,  _
                    ByVal HRIS_EMPNAMETITLE As String,  _
                    ByVal HRIS_EMPDOB As Date,  _
                    ByVal HRIS_EMPPOB As String,  _
                    ByVal HRIS_EMPGENDERISMALE As Boolean,  _
                    ByVal HRIS_EMPCIVILSTAT As String,  _
                    ByVal HRIS_EMPHEIGHT As Double,  _
                    ByVal HRIS_EMPWEIGHT As Double,  _
                    ByVal Pers_EMPBLOODTYPE As String,  _
                    ByVal HRIS_EMPGSISNUM As String,  _
                    ByVal HRIS_EMPPAGIBIGNUM As String,  _
                    ByVal HRIS_EMPPHEALTHNUM As String,  _
                    ByVal HRIS_EMPSSSNUM As String,  _
                    ByVal HRIS_EMPTINNUM As String,  _
                    ByVal HRIS_EMPAGENCYNUM As String,  _
                    ByVal HRIS_EMPTELNUM As String,  _
                    ByVal HRIS_EMPMOBILENUM As String,  _
                    ByVal HRIS_EMPEMAIL As String,  _
                    ByVal HRIS_EMPFTHRLNAME As String,  _
                    ByVal HRIS_EMPFTHRFNAME As String,  _
                    ByVal HRIS_EMPFTHRMNAME As String,  _
                    ByVal HRIS_EMPFTHRNAMEEXT As String,  _
                    ByVal HRIS_EMPMTHRLNAME As String,  _
                    ByVal HRIS_EMPMTHRFNAME As String,  _
                    ByVal HRIS_EMPMTHRMNAME As String,  _
                    ByVal HRIS_EMPMTHRMAIDENNAME As String,  _
                    ByVal HRIS_EMPGOVTISSUEDID As String,  _
                    ByVal HRIS_EMPGOVTIDNO As String,  _
                    ByVal HRIS_EMPGOVTIDDATEISSUED As Date,  _
                    ByVal HRIS_EMPGOVTIDPLACEISSUED As String,  _
                    ByVal HRIS_EMPIMAGE() As Byte,  _
                    ByVal HRIS_EMPSIGNATURE As String,  _
                    ByVal HRIS_EMPDATEACCOMPLISH As Date,  _
                    ByVal HRIS_EMPRIGHTTHUMB() As Byte,  _
                    ByVal HRIS_EMPSWORNDATE As Date,  _
                    ByVal HRIS_EMPADOATH As String,  _
                    ByVal HRIS_EMPSRVCSTAT As String,  _
                    ByVal HRIS_EMPSRVCSTATDATE As Date,  _
                    ByVal HRIS_STATUS As Integer,  _
                    ByVal HDIVS_CODE1 As String,  _
                    ByVal parenttblV1_HRISDEPARTMENTRowByFK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT1 As tblV1_HRISDEPARTMENTRow) As EMPLOYEEDATARow
            Dim rowEMPLOYEEDATARow As EMPLOYEEDATARow = CType(Me.NewRow,EMPLOYEEDATARow)
            Dim columnValuesArray() As Object = New Object() {HDIV_DIVISION, HEDV_DATE, HDIVS_CODE, HRIS_EMPNO, HRIS_EMPNO1, HRIS_EMPLNAME, HRIS_EMPFNAME, HRIS_EMPMNAME, HRIS_EMPNAMEEXT, HRIS_EMPNAMETITLE, HRIS_EMPDOB, HRIS_EMPPOB, HRIS_EMPGENDERISMALE, HRIS_EMPCIVILSTAT, HRIS_EMPHEIGHT, HRIS_EMPWEIGHT, Pers_EMPBLOODTYPE, HRIS_EMPGSISNUM, HRIS_EMPPAGIBIGNUM, HRIS_EMPPHEALTHNUM, HRIS_EMPSSSNUM, HRIS_EMPTINNUM, HRIS_EMPAGENCYNUM, HRIS_EMPTELNUM, HRIS_EMPMOBILENUM, HRIS_EMPEMAIL, HRIS_EMPFTHRLNAME, HRIS_EMPFTHRFNAME, HRIS_EMPFTHRMNAME, HRIS_EMPFTHRNAMEEXT, HRIS_EMPMTHRLNAME, HRIS_EMPMTHRFNAME, HRIS_EMPMTHRMNAME, HRIS_EMPMTHRMAIDENNAME, HRIS_EMPGOVTISSUEDID, HRIS_EMPGOVTIDNO, HRIS_EMPGOVTIDDATEISSUED, HRIS_EMPGOVTIDPLACEISSUED, HRIS_EMPIMAGE, HRIS_EMPSIGNATURE, HRIS_EMPDATEACCOMPLISH, HRIS_EMPRIGHTTHUMB, HRIS_EMPSWORNDATE, HRIS_EMPADOATH, HRIS_EMPSRVCSTAT, HRIS_EMPSRVCSTATDATE, HRIS_STATUS, HDIVS_CODE1, Nothing}
            If (Not (parenttblV1_HRISDEPARTMENTRowByFK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT1) Is Nothing) Then
                columnValuesArray(48) = parenttblV1_HRISDEPARTMENTRowByFK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT1(0)
            End If
            rowEMPLOYEEDATARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEMPLOYEEDATARow)
            Return rowEMPLOYEEDATARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByHEDV_DATEHRIS_EMPNO1HDIVS_CODE1(ByVal HEDV_DATE As Date, ByVal HRIS_EMPNO1 As String, ByVal HDIVS_CODE1 As String) As EMPLOYEEDATARow
            Return CType(Me.Rows.Find(New Object() {HEDV_DATE, HRIS_EMPNO1, HDIVS_CODE1}),EMPLOYEEDATARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EMPLOYEEDATADataTable = CType(MyBase.Clone,EMPLOYEEDATADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EMPLOYEEDATADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnHDIV_DIVISION = MyBase.Columns("HDIV_DIVISION")
            Me.columnHEDV_DATE = MyBase.Columns("HEDV_DATE")
            Me.columnHDIVS_CODE = MyBase.Columns("HDIVS_CODE")
            Me.columnHRIS_EMPNO = MyBase.Columns("HRIS_EMPNO")
            Me.columnHRIS_EMPNO1 = MyBase.Columns("HRIS_EMPNO1")
            Me.columnHRIS_EMPLNAME = MyBase.Columns("HRIS_EMPLNAME")
            Me.columnHRIS_EMPFNAME = MyBase.Columns("HRIS_EMPFNAME")
            Me.columnHRIS_EMPMNAME = MyBase.Columns("HRIS_EMPMNAME")
            Me.columnHRIS_EMPNAMEEXT = MyBase.Columns("HRIS_EMPNAMEEXT")
            Me.columnHRIS_EMPNAMETITLE = MyBase.Columns("HRIS_EMPNAMETITLE")
            Me.columnHRIS_EMPDOB = MyBase.Columns("HRIS_EMPDOB")
            Me.columnHRIS_EMPPOB = MyBase.Columns("HRIS_EMPPOB")
            Me.columnHRIS_EMPGENDERISMALE = MyBase.Columns("HRIS_EMPGENDERISMALE")
            Me.columnHRIS_EMPCIVILSTAT = MyBase.Columns("HRIS_EMPCIVILSTAT")
            Me.columnHRIS_EMPHEIGHT = MyBase.Columns("HRIS_EMPHEIGHT")
            Me.columnHRIS_EMPWEIGHT = MyBase.Columns("HRIS_EMPWEIGHT")
            Me.columnPers_EMPBLOODTYPE = MyBase.Columns("Pers_EMPBLOODTYPE")
            Me.columnHRIS_EMPGSISNUM = MyBase.Columns("HRIS_EMPGSISNUM")
            Me.columnHRIS_EMPPAGIBIGNUM = MyBase.Columns("HRIS_EMPPAGIBIGNUM")
            Me.columnHRIS_EMPPHEALTHNUM = MyBase.Columns("HRIS_EMPPHEALTHNUM")
            Me.columnHRIS_EMPSSSNUM = MyBase.Columns("HRIS_EMPSSSNUM")
            Me.columnHRIS_EMPTINNUM = MyBase.Columns("HRIS_EMPTINNUM")
            Me.columnHRIS_EMPAGENCYNUM = MyBase.Columns("HRIS_EMPAGENCYNUM")
            Me.columnHRIS_EMPTELNUM = MyBase.Columns("HRIS_EMPTELNUM")
            Me.columnHRIS_EMPMOBILENUM = MyBase.Columns("HRIS_EMPMOBILENUM")
            Me.columnHRIS_EMPEMAIL = MyBase.Columns("HRIS_EMPEMAIL")
            Me.columnHRIS_EMPFTHRLNAME = MyBase.Columns("HRIS_EMPFTHRLNAME")
            Me.columnHRIS_EMPFTHRFNAME = MyBase.Columns("HRIS_EMPFTHRFNAME")
            Me.columnHRIS_EMPFTHRMNAME = MyBase.Columns("HRIS_EMPFTHRMNAME")
            Me.columnHRIS_EMPFTHRNAMEEXT = MyBase.Columns("HRIS_EMPFTHRNAMEEXT")
            Me.columnHRIS_EMPMTHRLNAME = MyBase.Columns("HRIS_EMPMTHRLNAME")
            Me.columnHRIS_EMPMTHRFNAME = MyBase.Columns("HRIS_EMPMTHRFNAME")
            Me.columnHRIS_EMPMTHRMNAME = MyBase.Columns("HRIS_EMPMTHRMNAME")
            Me.columnHRIS_EMPMTHRMAIDENNAME = MyBase.Columns("HRIS_EMPMTHRMAIDENNAME")
            Me.columnHRIS_EMPGOVTISSUEDID = MyBase.Columns("HRIS_EMPGOVTISSUEDID")
            Me.columnHRIS_EMPGOVTIDNO = MyBase.Columns("HRIS_EMPGOVTIDNO")
            Me.columnHRIS_EMPGOVTIDDATEISSUED = MyBase.Columns("HRIS_EMPGOVTIDDATEISSUED")
            Me.columnHRIS_EMPGOVTIDPLACEISSUED = MyBase.Columns("HRIS_EMPGOVTIDPLACEISSUED")
            Me.columnHRIS_EMPIMAGE = MyBase.Columns("HRIS_EMPIMAGE")
            Me.columnHRIS_EMPSIGNATURE = MyBase.Columns("HRIS_EMPSIGNATURE")
            Me.columnHRIS_EMPDATEACCOMPLISH = MyBase.Columns("HRIS_EMPDATEACCOMPLISH")
            Me.columnHRIS_EMPRIGHTTHUMB = MyBase.Columns("HRIS_EMPRIGHTTHUMB")
            Me.columnHRIS_EMPSWORNDATE = MyBase.Columns("HRIS_EMPSWORNDATE")
            Me.columnHRIS_EMPADOATH = MyBase.Columns("HRIS_EMPADOATH")
            Me.columnHRIS_EMPSRVCSTAT = MyBase.Columns("HRIS_EMPSRVCSTAT")
            Me.columnHRIS_EMPSRVCSTATDATE = MyBase.Columns("HRIS_EMPSRVCSTATDATE")
            Me.columnHRIS_STATUS = MyBase.Columns("HRIS_STATUS")
            Me.columnHDIVS_CODE1 = MyBase.Columns("HDIVS_CODE1")
            Me.columnHDPT_CODE = MyBase.Columns("HDPT_CODE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnHDIV_DIVISION = New Global.System.Data.DataColumn("HDIV_DIVISION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDIV_DIVISION)
            Me.columnHEDV_DATE = New Global.System.Data.DataColumn("HEDV_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHEDV_DATE)
            Me.columnHDIVS_CODE = New Global.System.Data.DataColumn("HDIVS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDIVS_CODE)
            Me.columnHRIS_EMPNO = New Global.System.Data.DataColumn("HRIS_EMPNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO)
            Me.columnHRIS_EMPNO1 = New Global.System.Data.DataColumn("HRIS_EMPNO1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO1)
            Me.columnHRIS_EMPLNAME = New Global.System.Data.DataColumn("HRIS_EMPLNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPLNAME)
            Me.columnHRIS_EMPFNAME = New Global.System.Data.DataColumn("HRIS_EMPFNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPFNAME)
            Me.columnHRIS_EMPMNAME = New Global.System.Data.DataColumn("HRIS_EMPMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPMNAME)
            Me.columnHRIS_EMPNAMEEXT = New Global.System.Data.DataColumn("HRIS_EMPNAMEEXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNAMEEXT)
            Me.columnHRIS_EMPNAMETITLE = New Global.System.Data.DataColumn("HRIS_EMPNAMETITLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNAMETITLE)
            Me.columnHRIS_EMPDOB = New Global.System.Data.DataColumn("HRIS_EMPDOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPDOB)
            Me.columnHRIS_EMPPOB = New Global.System.Data.DataColumn("HRIS_EMPPOB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPPOB)
            Me.columnHRIS_EMPGENDERISMALE = New Global.System.Data.DataColumn("HRIS_EMPGENDERISMALE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPGENDERISMALE)
            Me.columnHRIS_EMPCIVILSTAT = New Global.System.Data.DataColumn("HRIS_EMPCIVILSTAT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPCIVILSTAT)
            Me.columnHRIS_EMPHEIGHT = New Global.System.Data.DataColumn("HRIS_EMPHEIGHT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPHEIGHT)
            Me.columnHRIS_EMPWEIGHT = New Global.System.Data.DataColumn("HRIS_EMPWEIGHT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPWEIGHT)
            Me.columnPers_EMPBLOODTYPE = New Global.System.Data.DataColumn("Pers_EMPBLOODTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPers_EMPBLOODTYPE)
            Me.columnHRIS_EMPGSISNUM = New Global.System.Data.DataColumn("HRIS_EMPGSISNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPGSISNUM)
            Me.columnHRIS_EMPPAGIBIGNUM = New Global.System.Data.DataColumn("HRIS_EMPPAGIBIGNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPPAGIBIGNUM)
            Me.columnHRIS_EMPPHEALTHNUM = New Global.System.Data.DataColumn("HRIS_EMPPHEALTHNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPPHEALTHNUM)
            Me.columnHRIS_EMPSSSNUM = New Global.System.Data.DataColumn("HRIS_EMPSSSNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPSSSNUM)
            Me.columnHRIS_EMPTINNUM = New Global.System.Data.DataColumn("HRIS_EMPTINNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPTINNUM)
            Me.columnHRIS_EMPAGENCYNUM = New Global.System.Data.DataColumn("HRIS_EMPAGENCYNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPAGENCYNUM)
            Me.columnHRIS_EMPTELNUM = New Global.System.Data.DataColumn("HRIS_EMPTELNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPTELNUM)
            Me.columnHRIS_EMPMOBILENUM = New Global.System.Data.DataColumn("HRIS_EMPMOBILENUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPMOBILENUM)
            Me.columnHRIS_EMPEMAIL = New Global.System.Data.DataColumn("HRIS_EMPEMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPEMAIL)
            Me.columnHRIS_EMPFTHRLNAME = New Global.System.Data.DataColumn("HRIS_EMPFTHRLNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPFTHRLNAME)
            Me.columnHRIS_EMPFTHRFNAME = New Global.System.Data.DataColumn("HRIS_EMPFTHRFNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPFTHRFNAME)
            Me.columnHRIS_EMPFTHRMNAME = New Global.System.Data.DataColumn("HRIS_EMPFTHRMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPFTHRMNAME)
            Me.columnHRIS_EMPFTHRNAMEEXT = New Global.System.Data.DataColumn("HRIS_EMPFTHRNAMEEXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPFTHRNAMEEXT)
            Me.columnHRIS_EMPMTHRLNAME = New Global.System.Data.DataColumn("HRIS_EMPMTHRLNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPMTHRLNAME)
            Me.columnHRIS_EMPMTHRFNAME = New Global.System.Data.DataColumn("HRIS_EMPMTHRFNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPMTHRFNAME)
            Me.columnHRIS_EMPMTHRMNAME = New Global.System.Data.DataColumn("HRIS_EMPMTHRMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPMTHRMNAME)
            Me.columnHRIS_EMPMTHRMAIDENNAME = New Global.System.Data.DataColumn("HRIS_EMPMTHRMAIDENNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPMTHRMAIDENNAME)
            Me.columnHRIS_EMPGOVTISSUEDID = New Global.System.Data.DataColumn("HRIS_EMPGOVTISSUEDID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPGOVTISSUEDID)
            Me.columnHRIS_EMPGOVTIDNO = New Global.System.Data.DataColumn("HRIS_EMPGOVTIDNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPGOVTIDNO)
            Me.columnHRIS_EMPGOVTIDDATEISSUED = New Global.System.Data.DataColumn("HRIS_EMPGOVTIDDATEISSUED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPGOVTIDDATEISSUED)
            Me.columnHRIS_EMPGOVTIDPLACEISSUED = New Global.System.Data.DataColumn("HRIS_EMPGOVTIDPLACEISSUED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPGOVTIDPLACEISSUED)
            Me.columnHRIS_EMPIMAGE = New Global.System.Data.DataColumn("HRIS_EMPIMAGE", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPIMAGE)
            Me.columnHRIS_EMPSIGNATURE = New Global.System.Data.DataColumn("HRIS_EMPSIGNATURE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPSIGNATURE)
            Me.columnHRIS_EMPDATEACCOMPLISH = New Global.System.Data.DataColumn("HRIS_EMPDATEACCOMPLISH", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPDATEACCOMPLISH)
            Me.columnHRIS_EMPRIGHTTHUMB = New Global.System.Data.DataColumn("HRIS_EMPRIGHTTHUMB", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPRIGHTTHUMB)
            Me.columnHRIS_EMPSWORNDATE = New Global.System.Data.DataColumn("HRIS_EMPSWORNDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPSWORNDATE)
            Me.columnHRIS_EMPADOATH = New Global.System.Data.DataColumn("HRIS_EMPADOATH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPADOATH)
            Me.columnHRIS_EMPSRVCSTAT = New Global.System.Data.DataColumn("HRIS_EMPSRVCSTAT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPSRVCSTAT)
            Me.columnHRIS_EMPSRVCSTATDATE = New Global.System.Data.DataColumn("HRIS_EMPSRVCSTATDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPSRVCSTATDATE)
            Me.columnHRIS_STATUS = New Global.System.Data.DataColumn("HRIS_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_STATUS)
            Me.columnHDIVS_CODE1 = New Global.System.Data.DataColumn("HDIVS_CODE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDIVS_CODE1)
            Me.columnHDPT_CODE = New Global.System.Data.DataColumn("HDPT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDPT_CODE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnHEDV_DATE, Me.columnHRIS_EMPNO1, Me.columnHDIVS_CODE1}, true))
            Me.columnHDIV_DIVISION.AllowDBNull = false
            Me.columnHDIV_DIVISION.MaxLength = 100
            Me.columnHEDV_DATE.AllowDBNull = false
            Me.columnHDIVS_CODE.AllowDBNull = false
            Me.columnHDIVS_CODE.MaxLength = 10
            Me.columnHRIS_EMPNO.AllowDBNull = false
            Me.columnHRIS_EMPNO.MaxLength = 20
            Me.columnHRIS_EMPNO1.AllowDBNull = false
            Me.columnHRIS_EMPNO1.MaxLength = 20
            Me.columnHRIS_EMPLNAME.MaxLength = 255
            Me.columnHRIS_EMPFNAME.MaxLength = 255
            Me.columnHRIS_EMPMNAME.MaxLength = 255
            Me.columnHRIS_EMPNAMEEXT.MaxLength = 255
            Me.columnHRIS_EMPNAMETITLE.MaxLength = 255
            Me.columnHRIS_EMPPOB.MaxLength = 255
            Me.columnHRIS_EMPCIVILSTAT.MaxLength = 255
            Me.columnPers_EMPBLOODTYPE.MaxLength = 255
            Me.columnHRIS_EMPGSISNUM.MaxLength = 255
            Me.columnHRIS_EMPPAGIBIGNUM.MaxLength = 255
            Me.columnHRIS_EMPPHEALTHNUM.MaxLength = 255
            Me.columnHRIS_EMPSSSNUM.MaxLength = 255
            Me.columnHRIS_EMPTINNUM.MaxLength = 255
            Me.columnHRIS_EMPAGENCYNUM.MaxLength = 255
            Me.columnHRIS_EMPTELNUM.MaxLength = 255
            Me.columnHRIS_EMPMOBILENUM.MaxLength = 255
            Me.columnHRIS_EMPEMAIL.MaxLength = 255
            Me.columnHRIS_EMPFTHRLNAME.MaxLength = 255
            Me.columnHRIS_EMPFTHRFNAME.MaxLength = 255
            Me.columnHRIS_EMPFTHRMNAME.MaxLength = 255
            Me.columnHRIS_EMPFTHRNAMEEXT.MaxLength = 255
            Me.columnHRIS_EMPMTHRLNAME.MaxLength = 255
            Me.columnHRIS_EMPMTHRFNAME.MaxLength = 255
            Me.columnHRIS_EMPMTHRMNAME.MaxLength = 255
            Me.columnHRIS_EMPMTHRMAIDENNAME.MaxLength = 255
            Me.columnHRIS_EMPGOVTISSUEDID.MaxLength = 255
            Me.columnHRIS_EMPGOVTIDNO.MaxLength = 255
            Me.columnHRIS_EMPGOVTIDPLACEISSUED.MaxLength = 255
            Me.columnHRIS_EMPSIGNATURE.MaxLength = 255
            Me.columnHRIS_EMPADOATH.MaxLength = 255
            Me.columnHRIS_EMPSRVCSTAT.MaxLength = 255
            Me.columnHDIVS_CODE1.AllowDBNull = false
            Me.columnHDIVS_CODE1.MaxLength = 10
            Me.columnHDPT_CODE.AllowDBNull = false
            Me.columnHDPT_CODE.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewEMPLOYEEDATARow() As EMPLOYEEDATARow
            Return CType(Me.NewRow,EMPLOYEEDATARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EMPLOYEEDATARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EMPLOYEEDATARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EMPLOYEEDATARowChangedEvent) Is Nothing) Then
                RaiseEvent EMPLOYEEDATARowChanged(Me, New EMPLOYEEDATARowChangeEvent(CType(e.Row,EMPLOYEEDATARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EMPLOYEEDATARowChangingEvent) Is Nothing) Then
                RaiseEvent EMPLOYEEDATARowChanging(Me, New EMPLOYEEDATARowChangeEvent(CType(e.Row,EMPLOYEEDATARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EMPLOYEEDATARowDeletedEvent) Is Nothing) Then
                RaiseEvent EMPLOYEEDATARowDeleted(Me, New EMPLOYEEDATARowChangeEvent(CType(e.Row,EMPLOYEEDATARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EMPLOYEEDATARowDeletingEvent) Is Nothing) Then
                RaiseEvent EMPLOYEEDATARowDeleting(Me, New EMPLOYEEDATARowChangeEvent(CType(e.Row,EMPLOYEEDATARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveEMPLOYEEDATARow(ByVal row As EMPLOYEEDATARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EMPLOYEEDATADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EmployeeInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of EmployeeInfoRow)
        
        Private columnFULLNAME As Global.System.Data.DataColumn
        
        Private columnHDIV_DIVISION As Global.System.Data.DataColumn
        
        Private columnHDPT_DEPARTMENT As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "EmployeeInfo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FULLNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFULLNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDIV_DIVISIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDIV_DIVISION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDPT_DEPARTMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDPT_DEPARTMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EmployeeInfoRow
            Get
                Return CType(Me.Rows(index),EmployeeInfoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event EmployeeInfoRowChanging As EmployeeInfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event EmployeeInfoRowChanged As EmployeeInfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event EmployeeInfoRowDeleting As EmployeeInfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event EmployeeInfoRowDeleted As EmployeeInfoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddEmployeeInfoRow(ByVal row As EmployeeInfoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddEmployeeInfoRow(ByVal FULLNAME As String, ByVal HDIV_DIVISION As String, ByVal HDPT_DEPARTMENT As String, ByVal HRIS_EMPNO As String) As EmployeeInfoRow
            Dim rowEmployeeInfoRow As EmployeeInfoRow = CType(Me.NewRow,EmployeeInfoRow)
            Dim columnValuesArray() As Object = New Object() {FULLNAME, HDIV_DIVISION, HDPT_DEPARTMENT, HRIS_EMPNO}
            rowEmployeeInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEmployeeInfoRow)
            Return rowEmployeeInfoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EmployeeInfoDataTable = CType(MyBase.Clone,EmployeeInfoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EmployeeInfoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFULLNAME = MyBase.Columns("FULLNAME")
            Me.columnHDIV_DIVISION = MyBase.Columns("HDIV_DIVISION")
            Me.columnHDPT_DEPARTMENT = MyBase.Columns("HDPT_DEPARTMENT")
            Me.columnHRIS_EMPNO = MyBase.Columns("HRIS_EMPNO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFULLNAME = New Global.System.Data.DataColumn("FULLNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFULLNAME)
            Me.columnHDIV_DIVISION = New Global.System.Data.DataColumn("HDIV_DIVISION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDIV_DIVISION)
            Me.columnHDPT_DEPARTMENT = New Global.System.Data.DataColumn("HDPT_DEPARTMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDPT_DEPARTMENT)
            Me.columnHRIS_EMPNO = New Global.System.Data.DataColumn("HRIS_EMPNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO)
            Me.columnFULLNAME.ReadOnly = true
            Me.columnFULLNAME.MaxLength = 767
            Me.columnHDIV_DIVISION.AllowDBNull = false
            Me.columnHDIV_DIVISION.MaxLength = 100
            Me.columnHDPT_DEPARTMENT.AllowDBNull = false
            Me.columnHDPT_DEPARTMENT.MaxLength = 100
            Me.columnHRIS_EMPNO.AllowDBNull = false
            Me.columnHRIS_EMPNO.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewEmployeeInfoRow() As EmployeeInfoRow
            Return CType(Me.NewRow,EmployeeInfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EmployeeInfoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EmployeeInfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EmployeeInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent EmployeeInfoRowChanged(Me, New EmployeeInfoRowChangeEvent(CType(e.Row,EmployeeInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EmployeeInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent EmployeeInfoRowChanging(Me, New EmployeeInfoRowChangeEvent(CType(e.Row,EmployeeInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EmployeeInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent EmployeeInfoRowDeleted(Me, New EmployeeInfoRowChangeEvent(CType(e.Row,EmployeeInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EmployeeInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent EmployeeInfoRowDeleting(Me, New EmployeeInfoRowChangeEvent(CType(e.Row,EmployeeInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveEmployeeInfoRow(ByVal row As EmployeeInfoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EmployeeInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblV2_CHKAddDocsDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblV2_CHKAddDocsRow)
        
        Private columnCHK_ChecklistID As Global.System.Data.DataColumn
        
        Private columnAD_LName As Global.System.Data.DataColumn
        
        Private columnAD_FName As Global.System.Data.DataColumn
        
        Private columnAD_BDay As Global.System.Data.DataColumn
        
        Private columnAD_Label As Global.System.Data.DataColumn
        
        Private columnAD_Check As Global.System.Data.DataColumn
        
        Private columnAD_Remarks As Global.System.Data.DataColumn
        
        Private columnAD_ExtraCheck As Global.System.Data.DataColumn
        
        Private columnAD_ID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblV2_CHKAddDocs"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CHK_ChecklistIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHK_ChecklistID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AD_LNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAD_LName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AD_FNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAD_FName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AD_BDayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAD_BDay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AD_LabelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAD_Label
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AD_CheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAD_Check
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AD_RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAD_Remarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AD_ExtraCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAD_ExtraCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AD_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAD_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblV2_CHKAddDocsRow
            Get
                Return CType(Me.Rows(index),tblV2_CHKAddDocsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_CHKAddDocsRowChanging As tblV2_CHKAddDocsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_CHKAddDocsRowChanged As tblV2_CHKAddDocsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_CHKAddDocsRowDeleting As tblV2_CHKAddDocsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_CHKAddDocsRowDeleted As tblV2_CHKAddDocsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblV2_CHKAddDocsRow(ByVal row As tblV2_CHKAddDocsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblV2_CHKAddDocsRow(ByVal CHK_ChecklistID As String, ByVal AD_LName As String, ByVal AD_FName As String, ByVal AD_BDay As Date, ByVal AD_Label As String, ByVal AD_Check As String, ByVal AD_Remarks As String, ByVal AD_ExtraCheck As String) As tblV2_CHKAddDocsRow
            Dim rowtblV2_CHKAddDocsRow As tblV2_CHKAddDocsRow = CType(Me.NewRow,tblV2_CHKAddDocsRow)
            Dim columnValuesArray() As Object = New Object() {CHK_ChecklistID, AD_LName, AD_FName, AD_BDay, AD_Label, AD_Check, AD_Remarks, AD_ExtraCheck, Nothing}
            rowtblV2_CHKAddDocsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblV2_CHKAddDocsRow)
            Return rowtblV2_CHKAddDocsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByCHK_ChecklistIDAD_ID(ByVal CHK_ChecklistID As String, ByVal AD_ID As Integer) As tblV2_CHKAddDocsRow
            Return CType(Me.Rows.Find(New Object() {CHK_ChecklistID, AD_ID}),tblV2_CHKAddDocsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblV2_CHKAddDocsDataTable = CType(MyBase.Clone,tblV2_CHKAddDocsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblV2_CHKAddDocsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCHK_ChecklistID = MyBase.Columns("CHK_ChecklistID")
            Me.columnAD_LName = MyBase.Columns("AD_LName")
            Me.columnAD_FName = MyBase.Columns("AD_FName")
            Me.columnAD_BDay = MyBase.Columns("AD_BDay")
            Me.columnAD_Label = MyBase.Columns("AD_Label")
            Me.columnAD_Check = MyBase.Columns("AD_Check")
            Me.columnAD_Remarks = MyBase.Columns("AD_Remarks")
            Me.columnAD_ExtraCheck = MyBase.Columns("AD_ExtraCheck")
            Me.columnAD_ID = MyBase.Columns("AD_ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCHK_ChecklistID = New Global.System.Data.DataColumn("CHK_ChecklistID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHK_ChecklistID)
            Me.columnAD_LName = New Global.System.Data.DataColumn("AD_LName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAD_LName)
            Me.columnAD_FName = New Global.System.Data.DataColumn("AD_FName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAD_FName)
            Me.columnAD_BDay = New Global.System.Data.DataColumn("AD_BDay", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAD_BDay)
            Me.columnAD_Label = New Global.System.Data.DataColumn("AD_Label", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAD_Label)
            Me.columnAD_Check = New Global.System.Data.DataColumn("AD_Check", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAD_Check)
            Me.columnAD_Remarks = New Global.System.Data.DataColumn("AD_Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAD_Remarks)
            Me.columnAD_ExtraCheck = New Global.System.Data.DataColumn("AD_ExtraCheck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAD_ExtraCheck)
            Me.columnAD_ID = New Global.System.Data.DataColumn("AD_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAD_ID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCHK_ChecklistID, Me.columnAD_ID}, true))
            Me.columnCHK_ChecklistID.AllowDBNull = false
            Me.columnCHK_ChecklistID.MaxLength = 50
            Me.columnAD_LName.MaxLength = 50
            Me.columnAD_FName.MaxLength = 50
            Me.columnAD_Label.MaxLength = 50
            Me.columnAD_Check.MaxLength = 50
            Me.columnAD_Remarks.MaxLength = 500
            Me.columnAD_ExtraCheck.MaxLength = 50
            Me.columnAD_ID.AutoIncrement = true
            Me.columnAD_ID.AutoIncrementSeed = -1
            Me.columnAD_ID.AutoIncrementStep = -1
            Me.columnAD_ID.AllowDBNull = false
            Me.columnAD_ID.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblV2_CHKAddDocsRow() As tblV2_CHKAddDocsRow
            Return CType(Me.NewRow,tblV2_CHKAddDocsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblV2_CHKAddDocsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblV2_CHKAddDocsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblV2_CHKAddDocsRowChangedEvent) Is Nothing) Then
                RaiseEvent tblV2_CHKAddDocsRowChanged(Me, New tblV2_CHKAddDocsRowChangeEvent(CType(e.Row,tblV2_CHKAddDocsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblV2_CHKAddDocsRowChangingEvent) Is Nothing) Then
                RaiseEvent tblV2_CHKAddDocsRowChanging(Me, New tblV2_CHKAddDocsRowChangeEvent(CType(e.Row,tblV2_CHKAddDocsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblV2_CHKAddDocsRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblV2_CHKAddDocsRowDeleted(Me, New tblV2_CHKAddDocsRowChangeEvent(CType(e.Row,tblV2_CHKAddDocsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblV2_CHKAddDocsRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblV2_CHKAddDocsRowDeleting(Me, New tblV2_CHKAddDocsRowChangeEvent(CType(e.Row,tblV2_CHKAddDocsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblV2_CHKAddDocsRow(ByVal row As tblV2_CHKAddDocsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblV2_CHKAddDocsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblV2_CHKReqDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblV2_CHKReqRow)
        
        Private columnREQ_ID As Global.System.Data.DataColumn
        
        Private columnCHK_ChecklistID As Global.System.Data.DataColumn
        
        Private columnREQ_SubReq As Global.System.Data.DataColumn
        
        Private columnREQ_Checked As Global.System.Data.DataColumn
        
        Private columnREQ_Remarks As Global.System.Data.DataColumn
        
        Private columnREQ_Membership As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblV2_CHKReq"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property REQ_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREQ_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CHK_ChecklistIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHK_ChecklistID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property REQ_SubReqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREQ_SubReq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property REQ_CheckedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREQ_Checked
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property REQ_RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREQ_Remarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property REQ_MembershipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREQ_Membership
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblV2_CHKReqRow
            Get
                Return CType(Me.Rows(index),tblV2_CHKReqRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_CHKReqRowChanging As tblV2_CHKReqRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_CHKReqRowChanged As tblV2_CHKReqRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_CHKReqRowDeleting As tblV2_CHKReqRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV2_CHKReqRowDeleted As tblV2_CHKReqRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblV2_CHKReqRow(ByVal row As tblV2_CHKReqRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblV2_CHKReqRow(ByVal CHK_ChecklistID As String, ByVal REQ_SubReq As String, ByVal REQ_Checked As String, ByVal REQ_Remarks As String, ByVal REQ_Membership As String) As tblV2_CHKReqRow
            Dim rowtblV2_CHKReqRow As tblV2_CHKReqRow = CType(Me.NewRow,tblV2_CHKReqRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CHK_ChecklistID, REQ_SubReq, REQ_Checked, REQ_Remarks, REQ_Membership}
            rowtblV2_CHKReqRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblV2_CHKReqRow)
            Return rowtblV2_CHKReqRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByREQ_IDCHK_ChecklistID(ByVal REQ_ID As Integer, ByVal CHK_ChecklistID As String) As tblV2_CHKReqRow
            Return CType(Me.Rows.Find(New Object() {REQ_ID, CHK_ChecklistID}),tblV2_CHKReqRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblV2_CHKReqDataTable = CType(MyBase.Clone,tblV2_CHKReqDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblV2_CHKReqDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnREQ_ID = MyBase.Columns("REQ_ID")
            Me.columnCHK_ChecklistID = MyBase.Columns("CHK_ChecklistID")
            Me.columnREQ_SubReq = MyBase.Columns("REQ_SubReq")
            Me.columnREQ_Checked = MyBase.Columns("REQ_Checked")
            Me.columnREQ_Remarks = MyBase.Columns("REQ_Remarks")
            Me.columnREQ_Membership = MyBase.Columns("REQ_Membership")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnREQ_ID = New Global.System.Data.DataColumn("REQ_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREQ_ID)
            Me.columnCHK_ChecklistID = New Global.System.Data.DataColumn("CHK_ChecklistID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHK_ChecklistID)
            Me.columnREQ_SubReq = New Global.System.Data.DataColumn("REQ_SubReq", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREQ_SubReq)
            Me.columnREQ_Checked = New Global.System.Data.DataColumn("REQ_Checked", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREQ_Checked)
            Me.columnREQ_Remarks = New Global.System.Data.DataColumn("REQ_Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREQ_Remarks)
            Me.columnREQ_Membership = New Global.System.Data.DataColumn("REQ_Membership", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREQ_Membership)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnREQ_ID, Me.columnCHK_ChecklistID}, true))
            Me.columnREQ_ID.AutoIncrement = true
            Me.columnREQ_ID.AutoIncrementSeed = -1
            Me.columnREQ_ID.AutoIncrementStep = -1
            Me.columnREQ_ID.AllowDBNull = false
            Me.columnREQ_ID.ReadOnly = true
            Me.columnCHK_ChecklistID.AllowDBNull = false
            Me.columnCHK_ChecklistID.MaxLength = 50
            Me.columnREQ_SubReq.MaxLength = 50
            Me.columnREQ_Checked.MaxLength = 50
            Me.columnREQ_Remarks.MaxLength = 50
            Me.columnREQ_Membership.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblV2_CHKReqRow() As tblV2_CHKReqRow
            Return CType(Me.NewRow,tblV2_CHKReqRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblV2_CHKReqRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblV2_CHKReqRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblV2_CHKReqRowChangedEvent) Is Nothing) Then
                RaiseEvent tblV2_CHKReqRowChanged(Me, New tblV2_CHKReqRowChangeEvent(CType(e.Row,tblV2_CHKReqRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblV2_CHKReqRowChangingEvent) Is Nothing) Then
                RaiseEvent tblV2_CHKReqRowChanging(Me, New tblV2_CHKReqRowChangeEvent(CType(e.Row,tblV2_CHKReqRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblV2_CHKReqRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblV2_CHKReqRowDeleted(Me, New tblV2_CHKReqRowChangeEvent(CType(e.Row,tblV2_CHKReqRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblV2_CHKReqRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblV2_CHKReqRowDeleting(Me, New tblV2_CHKReqRowChangeEvent(CType(e.Row,tblV2_CHKReqRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblV2_CHKReqRow(ByVal row As tblV2_CHKReqRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblV2_CHKReqDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblV2_UsersAccountRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblV2_UsersAccount As tblV2_UsersAccountDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblV2_UsersAccount = CType(Me.Table,tblV2_UsersAccountDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UA_ID() As String
            Get
                Return CType(Me(Me.tabletblV2_UsersAccount.UA_IDColumn),String)
            End Get
            Set
                Me(Me.tabletblV2_UsersAccount.UA_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UA_Username() As String
            Get
                Return CType(Me(Me.tabletblV2_UsersAccount.UA_UsernameColumn),String)
            End Get
            Set
                Me(Me.tabletblV2_UsersAccount.UA_UsernameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UA_Password() As String
            Get
                Return CType(Me(Me.tabletblV2_UsersAccount.UA_PasswordColumn),String)
            End Get
            Set
                Me(Me.tabletblV2_UsersAccount.UA_PasswordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UA_Type() As String
            Get
                Return CType(Me(Me.tabletblV2_UsersAccount.UA_TypeColumn),String)
            End Get
            Set
                Me(Me.tabletblV2_UsersAccount.UA_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UA_Status() As String
            Get
                Return CType(Me(Me.tabletblV2_UsersAccount.UA_StatusColumn),String)
            End Get
            Set
                Me(Me.tabletblV2_UsersAccount.UA_StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Pers_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_UsersAccount.Pers_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pers_ID' in table 'tblV2_UsersAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_UsersAccount.Pers_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UA_ISLOGGED() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_UsersAccount.UA_ISLOGGEDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UA_ISLOGGED' in table 'tblV2_UsersAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_UsersAccount.UA_ISLOGGEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPers_IDNull() As Boolean
            Return Me.IsNull(Me.tabletblV2_UsersAccount.Pers_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPers_IDNull()
            Me(Me.tabletblV2_UsersAccount.Pers_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUA_ISLOGGEDNull() As Boolean
            Return Me.IsNull(Me.tabletblV2_UsersAccount.UA_ISLOGGEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUA_ISLOGGEDNull()
            Me(Me.tabletblV2_UsersAccount.UA_ISLOGGEDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblV1_USERACCOUNTRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblV1_USERACCOUNT As tblV1_USERACCOUNTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblV1_USERACCOUNT = CType(Me.Table,tblV1_USERACCOUNTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_USERNAME() As String
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_USERNAMEColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_USERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_PASSWORD() As String
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_PASSWORDColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_PASSWORDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_ISACTIVE() As Boolean
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_ISACTIVEColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_ISACTIVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_ISLOGGED() As Boolean
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_ISLOGGEDColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_ISLOGGEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Pers_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_USERACCOUNT.Pers_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pers_ID' in table 'tblV1_USERACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.Pers_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_TYPE() As Integer
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_TYPEColumn),Integer)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_HINT() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_HINTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UAC_HINT' in table 'tblV1_USERACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_HINTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_RTFLAG() As Boolean
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_RTFLAGColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_RTFLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_RTNUM() As Integer
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_RTNUMColumn),Integer)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_RTNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPers_IDNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_USERACCOUNT.Pers_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPers_IDNull()
            Me(Me.tabletblV1_USERACCOUNT.Pers_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUAC_HINTNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_USERACCOUNT.UAC_HINTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUAC_HINTNull()
            Me(Me.tabletblV1_USERACCOUNT.UAC_HINTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblV2_ACCOUNTCODERow
        Inherits Global.System.Data.DataRow
        
        Private tabletblV2_ACCOUNTCODE As tblV2_ACCOUNTCODEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblV2_ACCOUNTCODE = CType(Me.Table,tblV2_ACCOUNTCODEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ACC_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_ACCOUNTCODE.ACC_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACC_CODE' in table 'tblV2_ACCOUNTCODE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_ACCOUNTCODE.ACC_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ACC_DESC() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_ACCOUNTCODE.ACC_DESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACC_DESC' in table 'tblV2_ACCOUNTCODE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_ACCOUNTCODE.ACC_DESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ACC_OLD() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_ACCOUNTCODE.ACC_OLDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACC_OLD' in table 'tblV2_ACCOUNTCODE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_ACCOUNTCODE.ACC_OLDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsACC_CODENull() As Boolean
            Return Me.IsNull(Me.tabletblV2_ACCOUNTCODE.ACC_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetACC_CODENull()
            Me(Me.tabletblV2_ACCOUNTCODE.ACC_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsACC_DESCNull() As Boolean
            Return Me.IsNull(Me.tabletblV2_ACCOUNTCODE.ACC_DESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetACC_DESCNull()
            Me(Me.tabletblV2_ACCOUNTCODE.ACC_DESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsACC_OLDNull() As Boolean
            Return Me.IsNull(Me.tabletblV2_ACCOUNTCODE.ACC_OLDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetACC_OLDNull()
            Me(Me.tabletblV2_ACCOUNTCODE.ACC_OLDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class V1VW_USERACCEMPLOYEERow
        Inherits Global.System.Data.DataRow
        
        Private tableV1VW_USERACCEMPLOYEE As V1VW_USERACCEMPLOYEEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableV1VW_USERACCEMPLOYEE = CType(Me.Table,V1VW_USERACCEMPLOYEEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_USERNAME() As String
            Get
                Return CType(Me(Me.tableV1VW_USERACCEMPLOYEE.UAC_USERNAMEColumn),String)
            End Get
            Set
                Me(Me.tableV1VW_USERACCEMPLOYEE.UAC_USERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableV1VW_USERACCEMPLOYEE.HRIS_EMPNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPNO' in table 'V1VW_USERACCEMPLOYEE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV1VW_USERACCEMPLOYEE.HRIS_EMPNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPLNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableV1VW_USERACCEMPLOYEE.HRIS_EMPLNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPLNAME' in table 'V1VW_USERACCEMPLOYEE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV1VW_USERACCEMPLOYEE.HRIS_EMPLNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPFNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableV1VW_USERACCEMPLOYEE.HRIS_EMPFNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPFNAME' in table 'V1VW_USERACCEMPLOYEE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV1VW_USERACCEMPLOYEE.HRIS_EMPFNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HEDV_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableV1VW_USERACCEMPLOYEE.HEDV_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HEDV_DATE' in table 'V1VW_USERACCEMPLOYEE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV1VW_USERACCEMPLOYEE.HEDV_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDIVS_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableV1VW_USERACCEMPLOYEE.HDIVS_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HDIVS_CODE' in table 'V1VW_USERACCEMPLOYEE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV1VW_USERACCEMPLOYEE.HDIVS_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FULLNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableV1VW_USERACCEMPLOYEE.FULLNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FULLNAME' in table 'V1VW_USERACCEMPLOYEE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV1VW_USERACCEMPLOYEE.FULLNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPNONull() As Boolean
            Return Me.IsNull(Me.tableV1VW_USERACCEMPLOYEE.HRIS_EMPNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPNONull()
            Me(Me.tableV1VW_USERACCEMPLOYEE.HRIS_EMPNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPLNAMENull() As Boolean
            Return Me.IsNull(Me.tableV1VW_USERACCEMPLOYEE.HRIS_EMPLNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPLNAMENull()
            Me(Me.tableV1VW_USERACCEMPLOYEE.HRIS_EMPLNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPFNAMENull() As Boolean
            Return Me.IsNull(Me.tableV1VW_USERACCEMPLOYEE.HRIS_EMPFNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPFNAMENull()
            Me(Me.tableV1VW_USERACCEMPLOYEE.HRIS_EMPFNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHEDV_DATENull() As Boolean
            Return Me.IsNull(Me.tableV1VW_USERACCEMPLOYEE.HEDV_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHEDV_DATENull()
            Me(Me.tableV1VW_USERACCEMPLOYEE.HEDV_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHDIVS_CODENull() As Boolean
            Return Me.IsNull(Me.tableV1VW_USERACCEMPLOYEE.HDIVS_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHDIVS_CODENull()
            Me(Me.tableV1VW_USERACCEMPLOYEE.HDIVS_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFULLNAMENull() As Boolean
            Return Me.IsNull(Me.tableV1VW_USERACCEMPLOYEE.FULLNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFULLNAMENull()
            Me(Me.tableV1VW_USERACCEMPLOYEE.FULLNAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblV1_USERACCOUNTLOGSRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblV1_USERACCOUNTLOGS As tblV1_USERACCOUNTLOGSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblV1_USERACCOUNTLOGS = CType(Me.Table,tblV1_USERACCOUNTLOGSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UALG_DATETIMELOGGED() As Date
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNTLOGS.UALG_DATETIMELOGGEDColumn),Date)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNTLOGS.UALG_DATETIMELOGGEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_USERNAME() As String
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNTLOGS.UAC_USERNAMEColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNTLOGS.UAC_USERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UALG_PCNAME() As String
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNTLOGS.UALG_PCNAMEColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNTLOGS.UALG_PCNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UALG_TYPE() As Boolean
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNTLOGS.UALG_TYPEColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNTLOGS.UALG_TYPEColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblV1_HRISEMPLOYEEDATARow
        Inherits Global.System.Data.DataRow
        
        Private tabletblV1_HRISEMPLOYEEDATA As tblV1_HRISEMPLOYEEDATADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblV1_HRISEMPLOYEEDATA = CType(Me.Table,tblV1_HRISEMPLOYEEDATADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO() As String
            Get
                Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPNOColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPLNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPLNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPLNAME' in table 'tblV1_HRISEMPLOYEEDATA' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPLNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPFNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPFNAME' in table 'tblV1_HRISEMPLOYEEDATA' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPMNAME' in table 'tblV1_HRISEMPLOYEEDATA' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNAMEEXT() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPNAMEEXTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPNAMEEXT' in table 'tblV1_HRISEMPLOYEEDATA' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPNAMEEXTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNAMETITLE() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPNAMETITLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPNAMETITLE' in table 'tblV1_HRISEMPLOYEEDATA' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPNAMETITLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPDOB() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPDOBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPDOB' in table 'tblV1_HRISEMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPDOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPPOB() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPPOBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPPOB' in table 'tblV1_HRISEMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPPOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPGENDERISMALE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGENDERISMALEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPGENDERISMALE' in table 'tblV1_HRISEMPLOYEEDATA' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGENDERISMALEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPCIVILSTAT() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPCIVILSTATColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPCIVILSTAT' in table 'tblV1_HRISEMPLOYEEDATA' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPCIVILSTATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPHEIGHT() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPHEIGHTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPHEIGHT' in table 'tblV1_HRISEMPLOYEEDATA' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPHEIGHTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPWEIGHT() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPWEIGHTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPWEIGHT' in table 'tblV1_HRISEMPLOYEEDATA' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPWEIGHTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Pers_EMPBLOODTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.Pers_EMPBLOODTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pers_EMPBLOODTYPE' in table 'tblV1_HRISEMPLOYEEDATA' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.Pers_EMPBLOODTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPGSISNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGSISNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPGSISNUM' in table 'tblV1_HRISEMPLOYEEDATA' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGSISNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPPAGIBIGNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPPAGIBIGNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPPAGIBIGNUM' in table 'tblV1_HRISEMPLOYEEDATA' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPPAGIBIGNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPPHEALTHNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPPHEALTHNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPPHEALTHNUM' in table 'tblV1_HRISEMPLOYEEDATA' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPPHEALTHNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPSSSNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSSSNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPSSSNUM' in table 'tblV1_HRISEMPLOYEEDATA' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSSSNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPTINNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPTINNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPTINNUM' in table 'tblV1_HRISEMPLOYEEDATA' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPTINNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPAGENCYNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPAGENCYNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPAGENCYNUM' in table 'tblV1_HRISEMPLOYEEDATA' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPAGENCYNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPTELNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPTELNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPTELNUM' in table 'tblV1_HRISEMPLOYEEDATA' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPTELNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPMOBILENUM() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMOBILENUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPMOBILENUM' in table 'tblV1_HRISEMPLOYEEDATA' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMOBILENUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPEMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPEMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPEMAIL' in table 'tblV1_HRISEMPLOYEEDATA' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPEMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPFTHRLNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRLNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPFTHRLNAME' in table 'tblV1_HRISEMPLOYEEDATA' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRLNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPFTHRFNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRFNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPFTHRFNAME' in table 'tblV1_HRISEMPLOYEEDATA' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRFNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPFTHRMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPFTHRMNAME' in table 'tblV1_HRISEMPLOYEEDATA' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPFTHRNAMEEXT() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRNAMEEXTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPFTHRNAMEEXT' in table 'tblV1_HRISEMPLOYEEDATA' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRNAMEEXTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPMTHRLNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRLNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPMTHRLNAME' in table 'tblV1_HRISEMPLOYEEDATA' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRLNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPMTHRFNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRFNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPMTHRFNAME' in table 'tblV1_HRISEMPLOYEEDATA' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRFNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPMTHRMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPMTHRMNAME' in table 'tblV1_HRISEMPLOYEEDATA' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPMTHRMAIDENNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRMAIDENNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPMTHRMAIDENNAME' in table 'tblV1_HRISEMPLOYEEDATA' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRMAIDENNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPGOVTISSUEDID() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTISSUEDIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPGOVTISSUEDID' in table 'tblV1_HRISEMPLOYEEDATA' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTISSUEDIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPGOVTIDNO() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTIDNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPGOVTIDNO' in table 'tblV1_HRISEMPLOYEEDATA' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTIDNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPGOVTIDDATEISSUED() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTIDDATEISSUEDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPGOVTIDDATEISSUED' in table 'tblV1_HRISEMPLOYEEDATA'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTIDDATEISSUEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPGOVTIDPLACEISSUED() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTIDPLACEISSUEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPGOVTIDPLACEISSUED' in table 'tblV1_HRISEMPLOYEEDATA"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTIDPLACEISSUEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPIMAGE() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPIMAGEColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPIMAGE' in table 'tblV1_HRISEMPLOYEEDATA' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPIMAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPSIGNATURE() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSIGNATUREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPSIGNATURE' in table 'tblV1_HRISEMPLOYEEDATA' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSIGNATUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPDATEACCOMPLISH() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPDATEACCOMPLISHColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPDATEACCOMPLISH' in table 'tblV1_HRISEMPLOYEEDATA' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPDATEACCOMPLISHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPRIGHTTHUMB() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPRIGHTTHUMBColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPRIGHTTHUMB' in table 'tblV1_HRISEMPLOYEEDATA' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPRIGHTTHUMBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPSWORNDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSWORNDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPSWORNDATE' in table 'tblV1_HRISEMPLOYEEDATA' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSWORNDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPADOATH() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPADOATHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPADOATH' in table 'tblV1_HRISEMPLOYEEDATA' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPADOATHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPSRVCSTAT() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSRVCSTATColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPSRVCSTAT' in table 'tblV1_HRISEMPLOYEEDATA' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSRVCSTATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPSRVCSTATDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSRVCSTATDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPSRVCSTATDATE' in table 'tblV1_HRISEMPLOYEEDATA' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSRVCSTATDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_STATUS' in table 'tblV1_HRISEMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPLNAMENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPLNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPLNAMENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPLNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPFNAMENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPFNAMENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPMNAMENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPMNAMENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPNAMEEXTNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPNAMEEXTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPNAMEEXTNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPNAMEEXTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPNAMETITLENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPNAMETITLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPNAMETITLENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPNAMETITLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPDOBNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPDOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPDOBNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPDOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPPOBNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPPOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPPOBNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPPOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPGENDERISMALENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGENDERISMALEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPGENDERISMALENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGENDERISMALEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPCIVILSTATNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPCIVILSTATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPCIVILSTATNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPCIVILSTATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPHEIGHTNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPHEIGHTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPHEIGHTNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPHEIGHTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPWEIGHTNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPWEIGHTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPWEIGHTNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPWEIGHTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPers_EMPBLOODTYPENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.Pers_EMPBLOODTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPers_EMPBLOODTYPENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.Pers_EMPBLOODTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPGSISNUMNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGSISNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPGSISNUMNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGSISNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPPAGIBIGNUMNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPPAGIBIGNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPPAGIBIGNUMNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPPAGIBIGNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPPHEALTHNUMNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPPHEALTHNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPPHEALTHNUMNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPPHEALTHNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPSSSNUMNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSSSNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPSSSNUMNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSSSNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPTINNUMNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPTINNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPTINNUMNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPTINNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPAGENCYNUMNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPAGENCYNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPAGENCYNUMNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPAGENCYNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPTELNUMNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPTELNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPTELNUMNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPTELNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPMOBILENUMNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMOBILENUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPMOBILENUMNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMOBILENUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPEMAILNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPEMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPEMAILNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPEMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPFTHRLNAMENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRLNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPFTHRLNAMENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRLNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPFTHRFNAMENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRFNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPFTHRFNAMENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRFNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPFTHRMNAMENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPFTHRMNAMENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPFTHRNAMEEXTNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRNAMEEXTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPFTHRNAMEEXTNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPFTHRNAMEEXTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPMTHRLNAMENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRLNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPMTHRLNAMENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRLNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPMTHRFNAMENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRFNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPMTHRFNAMENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRFNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPMTHRMNAMENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPMTHRMNAMENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPMTHRMAIDENNAMENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRMAIDENNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPMTHRMAIDENNAMENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPMTHRMAIDENNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPGOVTISSUEDIDNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTISSUEDIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPGOVTISSUEDIDNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTISSUEDIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPGOVTIDNONull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTIDNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPGOVTIDNONull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTIDNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPGOVTIDDATEISSUEDNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTIDDATEISSUEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPGOVTIDDATEISSUEDNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTIDDATEISSUEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPGOVTIDPLACEISSUEDNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTIDPLACEISSUEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPGOVTIDPLACEISSUEDNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPGOVTIDPLACEISSUEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPIMAGENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPIMAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPIMAGENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPIMAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPSIGNATURENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSIGNATUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPSIGNATURENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSIGNATUREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPDATEACCOMPLISHNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPDATEACCOMPLISHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPDATEACCOMPLISHNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPDATEACCOMPLISHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPRIGHTTHUMBNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPRIGHTTHUMBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPRIGHTTHUMBNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPRIGHTTHUMBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPSWORNDATENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSWORNDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPSWORNDATENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSWORNDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPADOATHNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPADOATHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPADOATHNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPADOATHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPSRVCSTATNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSRVCSTATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPSRVCSTATNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSRVCSTATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPSRVCSTATDATENull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSRVCSTATDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPSRVCSTATDATENull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_EMPSRVCSTATDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_STATUSNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_STATUSNull()
            Me(Me.tabletblV1_HRISEMPLOYEEDATA.HRIS_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblV1_HRISDIVISIONRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblV1_HRISDIVISION As tblV1_HRISDIVISIONDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblV1_HRISDIVISION = CType(Me.Table,tblV1_HRISDIVISIONDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDIV_DIVISION() As String
            Get
                Return CType(Me(Me.tabletblV1_HRISDIVISION.HDIV_DIVISIONColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_HRISDIVISION.HDIV_DIVISIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDIVS_CODE() As String
            Get
                Return CType(Me(Me.tabletblV1_HRISDIVISION.HDIVS_CODEColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_HRISDIVISION.HDIVS_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDPT_CODE() As String
            Get
                Return CType(Me(Me.tabletblV1_HRISDIVISION.HDPT_CODEColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_HRISDIVISION.HDPT_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tblV1_HRISDEPARTMENTRow() As tblV1_HRISDEPARTMENTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT")),tblV1_HRISDEPARTMENTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT"))
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblV1_HRISDEPARTMENTRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblV1_HRISDEPARTMENT As tblV1_HRISDEPARTMENTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblV1_HRISDEPARTMENT = CType(Me.Table,tblV1_HRISDEPARTMENTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDPT_CODE() As String
            Get
                Return CType(Me(Me.tabletblV1_HRISDEPARTMENT.HDPT_CODEColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_HRISDEPARTMENT.HDPT_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDPT_DEPARTMENT() As String
            Get
                Return CType(Me(Me.tabletblV1_HRISDEPARTMENT.HDPT_DEPARTMENTColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_HRISDEPARTMENT.HDPT_DEPARTMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GettblV1_HRISDIVISIONRows() As tblV1_HRISDIVISIONRow()
            If (Me.Table.ChildRelations("FK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT") Is Nothing) Then
                Return New tblV1_HRISDIVISIONRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT")),tblV1_HRISDIVISIONRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetEMPLOYEEDATARows() As EMPLOYEEDATARow()
            If (Me.Table.ChildRelations("FK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT1") Is Nothing) Then
                Return New EMPLOYEEDATARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT1")),EMPLOYEEDATARow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblV1_DEFPRADEPARTMENTSRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblV1_DEFPRADEPARTMENTS As tblV1_DEFPRADEPARTMENTSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblV1_DEFPRADEPARTMENTS = CType(Me.Table,tblV1_DEFPRADEPARTMENTSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DEPT_CODE() As String
            Get
                Return CType(Me(Me.tabletblV1_DEFPRADEPARTMENTS.DEPT_CODEColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_DEFPRADEPARTMENTS.DEPT_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DEPT_NAME() As String
            Get
                Return CType(Me(Me.tabletblV1_DEFPRADEPARTMENTS.DEPT_NAMEColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_DEFPRADEPARTMENTS.DEPT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DEPT_DESC() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_DEFPRADEPARTMENTS.DEPT_DESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEPT_DESC' in table 'tblV1_DEFPRADEPARTMENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_DEFPRADEPARTMENTS.DEPT_DESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DEPT_LOC() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_DEFPRADEPARTMENTS.DEPT_LOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEPT_LOC' in table 'tblV1_DEFPRADEPARTMENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_DEFPRADEPARTMENTS.DEPT_LOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DEPT_STATUS() As Boolean
            Get
                Return CType(Me(Me.tabletblV1_DEFPRADEPARTMENTS.DEPT_STATUSColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblV1_DEFPRADEPARTMENTS.DEPT_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDEPT_DESCNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_DEFPRADEPARTMENTS.DEPT_DESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDEPT_DESCNull()
            Me(Me.tabletblV1_DEFPRADEPARTMENTS.DEPT_DESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDEPT_LOCNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_DEFPRADEPARTMENTS.DEPT_LOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDEPT_LOCNull()
            Me(Me.tabletblV1_DEFPRADEPARTMENTS.DEPT_LOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GettblV1_DEFPRADIVISIONRows() As tblV1_DEFPRADIVISIONRow()
            If (Me.Table.ChildRelations("FK_tblDIVISION_tblDEPARTMENTS") Is Nothing) Then
                Return New tblV1_DEFPRADIVISIONRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tblDIVISION_tblDEPARTMENTS")),tblV1_DEFPRADIVISIONRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblV1_DEFPRADIVISIONRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblV1_DEFPRADIVISION As tblV1_DEFPRADIVISIONDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblV1_DEFPRADIVISION = CType(Me.Table,tblV1_DEFPRADIVISIONDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DEPT_CODE() As String
            Get
                Return CType(Me(Me.tabletblV1_DEFPRADIVISION.DEPT_CODEColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_DEFPRADIVISION.DEPT_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DIVS_CODE() As String
            Get
                Return CType(Me(Me.tabletblV1_DEFPRADIVISION.DIVS_CODEColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_DEFPRADIVISION.DIVS_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DIVS_NAME() As String
            Get
                Return CType(Me(Me.tabletblV1_DEFPRADIVISION.DIVS_NAMEColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_DEFPRADIVISION.DIVS_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DIVS_DESC() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_DEFPRADIVISION.DIVS_DESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIVS_DESC' in table 'tblV1_DEFPRADIVISION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_DEFPRADIVISION.DIVS_DESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DIVS_LOC() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_DEFPRADIVISION.DIVS_LOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIVS_LOC' in table 'tblV1_DEFPRADIVISION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_DEFPRADIVISION.DIVS_LOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DIVS_STATUS() As Boolean
            Get
                Return CType(Me(Me.tabletblV1_DEFPRADIVISION.DIVS_STATUSColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblV1_DEFPRADIVISION.DIVS_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tblV1_DEFPRADEPARTMENTSRow() As tblV1_DEFPRADEPARTMENTSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tblDIVISION_tblDEPARTMENTS")),tblV1_DEFPRADEPARTMENTSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tblDIVISION_tblDEPARTMENTS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDIVS_DESCNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_DEFPRADIVISION.DIVS_DESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDIVS_DESCNull()
            Me(Me.tabletblV1_DEFPRADIVISION.DIVS_DESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDIVS_LOCNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_DEFPRADIVISION.DIVS_LOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDIVS_LOCNull()
            Me(Me.tabletblV1_DEFPRADIVISION.DIVS_LOCColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SPM4_SQ_PR_TRANS_CODERow
        Inherits Global.System.Data.DataRow
        
        Private tableSPM4_SQ_PR_TRANS_CODE As SPM4_SQ_PR_TRANS_CODEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPM4_SQ_PR_TRANS_CODE = CType(Me.Table,SPM4_SQ_PR_TRANS_CODEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SERV_TRANS_NUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_SQ_PR_TRANS_CODE.SERV_TRANS_NUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERV_TRANS_NUM' in table 'SPM4_SQ_PR_TRANS_CODE' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_SQ_PR_TRANS_CODE.SERV_TRANS_NUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSERV_TRANS_NUMNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_SQ_PR_TRANS_CODE.SERV_TRANS_NUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSERV_TRANS_NUMNull()
            Me(Me.tableSPM4_SQ_PR_TRANS_CODE.SERV_TRANS_NUMColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EMPLOYEEDATARow
        Inherits Global.System.Data.DataRow
        
        Private tableEMPLOYEEDATA As EMPLOYEEDATADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEMPLOYEEDATA = CType(Me.Table,EMPLOYEEDATADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDIV_DIVISION() As String
            Get
                Return CType(Me(Me.tableEMPLOYEEDATA.HDIV_DIVISIONColumn),String)
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HDIV_DIVISIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HEDV_DATE() As Date
            Get
                Return CType(Me(Me.tableEMPLOYEEDATA.HEDV_DATEColumn),Date)
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HEDV_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDIVS_CODE() As String
            Get
                Return CType(Me(Me.tableEMPLOYEEDATA.HDIVS_CODEColumn),String)
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HDIVS_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO() As String
            Get
                Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPNOColumn),String)
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO1() As String
            Get
                Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPNO1Column),String)
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPNO1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPLNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPLNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPLNAME' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPLNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPFNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPFNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPFNAME' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPFNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPMNAME' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNAMEEXT() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPNAMEEXTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPNAMEEXT' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPNAMEEXTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNAMETITLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPNAMETITLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPNAMETITLE' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPNAMETITLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPDOB() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPDOBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPDOB' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPDOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPPOB() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPPOBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPPOB' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPPOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPGENDERISMALE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPGENDERISMALEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPGENDERISMALE' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPGENDERISMALEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPCIVILSTAT() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPCIVILSTATColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPCIVILSTAT' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPCIVILSTATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPHEIGHT() As Double
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPHEIGHTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPHEIGHT' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPHEIGHTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPWEIGHT() As Double
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPWEIGHTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPWEIGHT' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPWEIGHTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Pers_EMPBLOODTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.Pers_EMPBLOODTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pers_EMPBLOODTYPE' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.Pers_EMPBLOODTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPGSISNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPGSISNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPGSISNUM' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPGSISNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPPAGIBIGNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPPAGIBIGNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPPAGIBIGNUM' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPPAGIBIGNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPPHEALTHNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPPHEALTHNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPPHEALTHNUM' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPPHEALTHNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPSSSNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPSSSNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPSSSNUM' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPSSSNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPTINNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPTINNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPTINNUM' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPTINNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPAGENCYNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPAGENCYNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPAGENCYNUM' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPAGENCYNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPTELNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPTELNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPTELNUM' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPTELNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPMOBILENUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPMOBILENUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPMOBILENUM' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPMOBILENUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPEMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPEMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPEMAIL' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPEMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPFTHRLNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRLNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPFTHRLNAME' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRLNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPFTHRFNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRFNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPFTHRFNAME' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRFNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPFTHRMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPFTHRMNAME' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPFTHRNAMEEXT() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRNAMEEXTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPFTHRNAMEEXT' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRNAMEEXTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPMTHRLNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRLNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPMTHRLNAME' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRLNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPMTHRFNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRFNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPMTHRFNAME' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRFNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPMTHRMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPMTHRMNAME' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPMTHRMAIDENNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRMAIDENNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPMTHRMAIDENNAME' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRMAIDENNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPGOVTISSUEDID() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTISSUEDIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPGOVTISSUEDID' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTISSUEDIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPGOVTIDNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTIDNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPGOVTIDNO' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTIDNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPGOVTIDDATEISSUED() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTIDDATEISSUEDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPGOVTIDDATEISSUED' in table 'EMPLOYEEDATA' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTIDDATEISSUEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPGOVTIDPLACEISSUED() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTIDPLACEISSUEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPGOVTIDPLACEISSUED' in table 'EMPLOYEEDATA' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTIDPLACEISSUEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPIMAGE() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPIMAGEColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPIMAGE' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPIMAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPSIGNATURE() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPSIGNATUREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPSIGNATURE' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPSIGNATUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPDATEACCOMPLISH() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPDATEACCOMPLISHColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPDATEACCOMPLISH' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPDATEACCOMPLISHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPRIGHTTHUMB() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPRIGHTTHUMBColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPRIGHTTHUMB' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPRIGHTTHUMBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPSWORNDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPSWORNDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPSWORNDATE' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPSWORNDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPADOATH() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPADOATHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPADOATH' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPADOATHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPSRVCSTAT() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPSRVCSTATColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPSRVCSTAT' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPSRVCSTATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPSRVCSTATDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_EMPSRVCSTATDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPSRVCSTATDATE' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_EMPSRVCSTATDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYEEDATA.HRIS_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_STATUS' in table 'EMPLOYEEDATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HRIS_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDIVS_CODE1() As String
            Get
                Return CType(Me(Me.tableEMPLOYEEDATA.HDIVS_CODE1Column),String)
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HDIVS_CODE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDPT_CODE() As String
            Get
                Return CType(Me(Me.tableEMPLOYEEDATA.HDPT_CODEColumn),String)
            End Get
            Set
                Me(Me.tableEMPLOYEEDATA.HDPT_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tblV1_HRISDEPARTMENTRow() As tblV1_HRISDEPARTMENTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT1")),tblV1_HRISDEPARTMENTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tblV1_HRISDIVISION_tblV1_HRISDEPARTMENT1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPLNAMENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPLNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPLNAMENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPLNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPFNAMENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPFNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPFNAMENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPFNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPMNAMENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPMNAMENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPNAMEEXTNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPNAMEEXTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPNAMEEXTNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPNAMEEXTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPNAMETITLENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPNAMETITLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPNAMETITLENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPNAMETITLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPDOBNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPDOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPDOBNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPDOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPPOBNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPPOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPPOBNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPPOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPGENDERISMALENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPGENDERISMALEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPGENDERISMALENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPGENDERISMALEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPCIVILSTATNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPCIVILSTATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPCIVILSTATNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPCIVILSTATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPHEIGHTNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPHEIGHTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPHEIGHTNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPHEIGHTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPWEIGHTNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPWEIGHTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPWEIGHTNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPWEIGHTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPers_EMPBLOODTYPENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.Pers_EMPBLOODTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPers_EMPBLOODTYPENull()
            Me(Me.tableEMPLOYEEDATA.Pers_EMPBLOODTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPGSISNUMNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPGSISNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPGSISNUMNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPGSISNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPPAGIBIGNUMNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPPAGIBIGNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPPAGIBIGNUMNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPPAGIBIGNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPPHEALTHNUMNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPPHEALTHNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPPHEALTHNUMNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPPHEALTHNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPSSSNUMNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPSSSNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPSSSNUMNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPSSSNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPTINNUMNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPTINNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPTINNUMNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPTINNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPAGENCYNUMNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPAGENCYNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPAGENCYNUMNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPAGENCYNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPTELNUMNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPTELNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPTELNUMNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPTELNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPMOBILENUMNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPMOBILENUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPMOBILENUMNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPMOBILENUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPEMAILNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPEMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPEMAILNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPEMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPFTHRLNAMENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRLNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPFTHRLNAMENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRLNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPFTHRFNAMENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRFNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPFTHRFNAMENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRFNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPFTHRMNAMENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPFTHRMNAMENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPFTHRNAMEEXTNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRNAMEEXTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPFTHRNAMEEXTNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPFTHRNAMEEXTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPMTHRLNAMENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRLNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPMTHRLNAMENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRLNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPMTHRFNAMENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRFNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPMTHRFNAMENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRFNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPMTHRMNAMENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPMTHRMNAMENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPMTHRMAIDENNAMENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRMAIDENNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPMTHRMAIDENNAMENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPMTHRMAIDENNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPGOVTISSUEDIDNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTISSUEDIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPGOVTISSUEDIDNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTISSUEDIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPGOVTIDNONull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTIDNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPGOVTIDNONull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTIDNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPGOVTIDDATEISSUEDNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTIDDATEISSUEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPGOVTIDDATEISSUEDNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTIDDATEISSUEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPGOVTIDPLACEISSUEDNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTIDPLACEISSUEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPGOVTIDPLACEISSUEDNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPGOVTIDPLACEISSUEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPIMAGENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPIMAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPIMAGENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPIMAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPSIGNATURENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPSIGNATUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPSIGNATURENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPSIGNATUREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPDATEACCOMPLISHNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPDATEACCOMPLISHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPDATEACCOMPLISHNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPDATEACCOMPLISHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPRIGHTTHUMBNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPRIGHTTHUMBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPRIGHTTHUMBNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPRIGHTTHUMBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPSWORNDATENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPSWORNDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPSWORNDATENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPSWORNDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPADOATHNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPADOATHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPADOATHNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPADOATHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPSRVCSTATNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPSRVCSTATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPSRVCSTATNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPSRVCSTATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPSRVCSTATDATENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_EMPSRVCSTATDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPSRVCSTATDATENull()
            Me(Me.tableEMPLOYEEDATA.HRIS_EMPSRVCSTATDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYEEDATA.HRIS_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_STATUSNull()
            Me(Me.tableEMPLOYEEDATA.HRIS_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EmployeeInfoRow
        Inherits Global.System.Data.DataRow
        
        Private tableEmployeeInfo As EmployeeInfoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEmployeeInfo = CType(Me.Table,EmployeeInfoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FULLNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableEmployeeInfo.FULLNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FULLNAME' in table 'EmployeeInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmployeeInfo.FULLNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDIV_DIVISION() As String
            Get
                Return CType(Me(Me.tableEmployeeInfo.HDIV_DIVISIONColumn),String)
            End Get
            Set
                Me(Me.tableEmployeeInfo.HDIV_DIVISIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDPT_DEPARTMENT() As String
            Get
                Return CType(Me(Me.tableEmployeeInfo.HDPT_DEPARTMENTColumn),String)
            End Get
            Set
                Me(Me.tableEmployeeInfo.HDPT_DEPARTMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO() As String
            Get
                Return CType(Me(Me.tableEmployeeInfo.HRIS_EMPNOColumn),String)
            End Get
            Set
                Me(Me.tableEmployeeInfo.HRIS_EMPNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFULLNAMENull() As Boolean
            Return Me.IsNull(Me.tableEmployeeInfo.FULLNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFULLNAMENull()
            Me(Me.tableEmployeeInfo.FULLNAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblV2_CHKAddDocsRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblV2_CHKAddDocs As tblV2_CHKAddDocsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblV2_CHKAddDocs = CType(Me.Table,tblV2_CHKAddDocsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CHK_ChecklistID() As String
            Get
                Return CType(Me(Me.tabletblV2_CHKAddDocs.CHK_ChecklistIDColumn),String)
            End Get
            Set
                Me(Me.tabletblV2_CHKAddDocs.CHK_ChecklistIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AD_LName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_CHKAddDocs.AD_LNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AD_LName' in table 'tblV2_CHKAddDocs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_CHKAddDocs.AD_LNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AD_FName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_CHKAddDocs.AD_FNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AD_FName' in table 'tblV2_CHKAddDocs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_CHKAddDocs.AD_FNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AD_BDay() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_CHKAddDocs.AD_BDayColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AD_BDay' in table 'tblV2_CHKAddDocs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_CHKAddDocs.AD_BDayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AD_Label() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_CHKAddDocs.AD_LabelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AD_Label' in table 'tblV2_CHKAddDocs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_CHKAddDocs.AD_LabelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AD_Check() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_CHKAddDocs.AD_CheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AD_Check' in table 'tblV2_CHKAddDocs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_CHKAddDocs.AD_CheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AD_Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_CHKAddDocs.AD_RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AD_Remarks' in table 'tblV2_CHKAddDocs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_CHKAddDocs.AD_RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AD_ExtraCheck() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_CHKAddDocs.AD_ExtraCheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AD_ExtraCheck' in table 'tblV2_CHKAddDocs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_CHKAddDocs.AD_ExtraCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AD_ID() As Integer
            Get
                Return CType(Me(Me.tabletblV2_CHKAddDocs.AD_IDColumn),Integer)
            End Get
            Set
                Me(Me.tabletblV2_CHKAddDocs.AD_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAD_LNameNull() As Boolean
            Return Me.IsNull(Me.tabletblV2_CHKAddDocs.AD_LNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAD_LNameNull()
            Me(Me.tabletblV2_CHKAddDocs.AD_LNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAD_FNameNull() As Boolean
            Return Me.IsNull(Me.tabletblV2_CHKAddDocs.AD_FNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAD_FNameNull()
            Me(Me.tabletblV2_CHKAddDocs.AD_FNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAD_BDayNull() As Boolean
            Return Me.IsNull(Me.tabletblV2_CHKAddDocs.AD_BDayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAD_BDayNull()
            Me(Me.tabletblV2_CHKAddDocs.AD_BDayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAD_LabelNull() As Boolean
            Return Me.IsNull(Me.tabletblV2_CHKAddDocs.AD_LabelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAD_LabelNull()
            Me(Me.tabletblV2_CHKAddDocs.AD_LabelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAD_CheckNull() As Boolean
            Return Me.IsNull(Me.tabletblV2_CHKAddDocs.AD_CheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAD_CheckNull()
            Me(Me.tabletblV2_CHKAddDocs.AD_CheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAD_RemarksNull() As Boolean
            Return Me.IsNull(Me.tabletblV2_CHKAddDocs.AD_RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAD_RemarksNull()
            Me(Me.tabletblV2_CHKAddDocs.AD_RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAD_ExtraCheckNull() As Boolean
            Return Me.IsNull(Me.tabletblV2_CHKAddDocs.AD_ExtraCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAD_ExtraCheckNull()
            Me(Me.tabletblV2_CHKAddDocs.AD_ExtraCheckColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblV2_CHKReqRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblV2_CHKReq As tblV2_CHKReqDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblV2_CHKReq = CType(Me.Table,tblV2_CHKReqDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property REQ_ID() As Integer
            Get
                Return CType(Me(Me.tabletblV2_CHKReq.REQ_IDColumn),Integer)
            End Get
            Set
                Me(Me.tabletblV2_CHKReq.REQ_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CHK_ChecklistID() As String
            Get
                Return CType(Me(Me.tabletblV2_CHKReq.CHK_ChecklistIDColumn),String)
            End Get
            Set
                Me(Me.tabletblV2_CHKReq.CHK_ChecklistIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property REQ_SubReq() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_CHKReq.REQ_SubReqColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REQ_SubReq' in table 'tblV2_CHKReq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_CHKReq.REQ_SubReqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property REQ_Checked() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_CHKReq.REQ_CheckedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REQ_Checked' in table 'tblV2_CHKReq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_CHKReq.REQ_CheckedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property REQ_Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_CHKReq.REQ_RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REQ_Remarks' in table 'tblV2_CHKReq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_CHKReq.REQ_RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property REQ_Membership() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV2_CHKReq.REQ_MembershipColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REQ_Membership' in table 'tblV2_CHKReq' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV2_CHKReq.REQ_MembershipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsREQ_SubReqNull() As Boolean
            Return Me.IsNull(Me.tabletblV2_CHKReq.REQ_SubReqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetREQ_SubReqNull()
            Me(Me.tabletblV2_CHKReq.REQ_SubReqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsREQ_CheckedNull() As Boolean
            Return Me.IsNull(Me.tabletblV2_CHKReq.REQ_CheckedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetREQ_CheckedNull()
            Me(Me.tabletblV2_CHKReq.REQ_CheckedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsREQ_RemarksNull() As Boolean
            Return Me.IsNull(Me.tabletblV2_CHKReq.REQ_RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetREQ_RemarksNull()
            Me(Me.tabletblV2_CHKReq.REQ_RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsREQ_MembershipNull() As Boolean
            Return Me.IsNull(Me.tabletblV2_CHKReq.REQ_MembershipColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetREQ_MembershipNull()
            Me(Me.tabletblV2_CHKReq.REQ_MembershipColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblV2_UsersAccountRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblV2_UsersAccountRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblV2_UsersAccountRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblV2_UsersAccountRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblV1_USERACCOUNTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblV1_USERACCOUNTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblV1_USERACCOUNTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblV1_USERACCOUNTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblV2_ACCOUNTCODERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblV2_ACCOUNTCODERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblV2_ACCOUNTCODERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblV2_ACCOUNTCODERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class V1VW_USERACCEMPLOYEERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As V1VW_USERACCEMPLOYEERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As V1VW_USERACCEMPLOYEERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As V1VW_USERACCEMPLOYEERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblV1_USERACCOUNTLOGSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblV1_USERACCOUNTLOGSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblV1_USERACCOUNTLOGSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblV1_USERACCOUNTLOGSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblV1_HRISEMPLOYEEDATARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblV1_HRISEMPLOYEEDATARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblV1_HRISEMPLOYEEDATARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblV1_HRISEMPLOYEEDATARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblV1_HRISDIVISIONRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblV1_HRISDIVISIONRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblV1_HRISDIVISIONRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblV1_HRISDIVISIONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblV1_HRISDEPARTMENTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblV1_HRISDEPARTMENTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblV1_HRISDEPARTMENTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblV1_HRISDEPARTMENTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblV1_DEFPRADEPARTMENTSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblV1_DEFPRADEPARTMENTSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblV1_DEFPRADEPARTMENTSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblV1_DEFPRADEPARTMENTSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblV1_DEFPRADIVISIONRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblV1_DEFPRADIVISIONRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblV1_DEFPRADIVISIONRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblV1_DEFPRADIVISIONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class SPM4_SQ_PR_TRANS_CODERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SPM4_SQ_PR_TRANS_CODERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As SPM4_SQ_PR_TRANS_CODERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As SPM4_SQ_PR_TRANS_CODERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class EMPLOYEEDATARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EMPLOYEEDATARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As EMPLOYEEDATARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As EMPLOYEEDATARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class EmployeeInfoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EmployeeInfoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As EmployeeInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As EmployeeInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblV2_CHKAddDocsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblV2_CHKAddDocsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblV2_CHKAddDocsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblV2_CHKAddDocsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblV2_CHKReqRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblV2_CHKReqRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblV2_CHKReqRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblV2_CHKReqRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DS_TABLESTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblV2_UsersAccountTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblV2_UsersAccount"
            tableMapping.ColumnMappings.Add("UA_ID", "UA_ID")
            tableMapping.ColumnMappings.Add("UA_Username", "UA_Username")
            tableMapping.ColumnMappings.Add("UA_Password", "UA_Password")
            tableMapping.ColumnMappings.Add("UA_Type", "UA_Type")
            tableMapping.ColumnMappings.Add("UA_Status", "UA_Status")
            tableMapping.ColumnMappings.Add("Pers_ID", "Pers_ID")
            tableMapping.ColumnMappings.Add("UA_ISLOGGED", "UA_ISLOGGED")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblV2_UsersAccount] WHERE (([UA_ID] = @Original_UA_ID) AND ([UA_User"& _ 
                "name] = @Original_UA_Username) AND ([UA_Password] = @Original_UA_Password) AND ("& _ 
                "[UA_Type] = @Original_UA_Type) AND ([UA_Status] = @Original_UA_Status) AND ((@Is"& _ 
                "Null_Pers_ID = 1 AND [Pers_ID] IS NULL) OR ([Pers_ID] = @Original_Pers_ID)) AND "& _ 
                "((@IsNull_UA_ISLOGGED = 1 AND [UA_ISLOGGED] IS NULL) OR ([UA_ISLOGGED] = @Origin"& _ 
                "al_UA_ISLOGGED)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UA_ID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UA_Username", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Username", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UA_Password", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Password", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UA_Type", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UA_Status", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Status", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Pers_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Pers_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UA_ISLOGGED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_ISLOGGED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UA_ISLOGGED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_ISLOGGED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblV2_UsersAccount] ([UA_ID], [UA_Username], [UA_Password], [UA_Type"& _ 
                "], [UA_Status], [Pers_ID], [UA_ISLOGGED]) VALUES (@UA_ID, @UA_Username, @UA_Pass"& _ 
                "word, @UA_Type, @UA_Status, @Pers_ID, @UA_ISLOGGED);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT UA_ID, UA_Username,"& _ 
                " UA_Password, UA_Type, UA_Status, Pers_ID, UA_ISLOGGED FROM tblV2_UsersAccount W"& _ 
                "HERE (UA_ID = @UA_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UA_ID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UA_Username", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Username", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UA_Password", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Password", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UA_Type", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UA_Status", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pers_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UA_ISLOGGED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_ISLOGGED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblV2_UsersAccount] SET [UA_ID] = @UA_ID, [UA_Username] = @UA_Username, ["& _ 
                "UA_Password] = @UA_Password, [UA_Type] = @UA_Type, [UA_Status] = @UA_Status, [Pe"& _ 
                "rs_ID] = @Pers_ID, [UA_ISLOGGED] = @UA_ISLOGGED WHERE (([UA_ID] = @Original_UA_I"& _ 
                "D) AND ([UA_Username] = @Original_UA_Username) AND ([UA_Password] = @Original_UA"& _ 
                "_Password) AND ([UA_Type] = @Original_UA_Type) AND ([UA_Status] = @Original_UA_S"& _ 
                "tatus) AND ((@IsNull_Pers_ID = 1 AND [Pers_ID] IS NULL) OR ([Pers_ID] = @Origina"& _ 
                "l_Pers_ID)) AND ((@IsNull_UA_ISLOGGED = 1 AND [UA_ISLOGGED] IS NULL) OR ([UA_ISL"& _ 
                "OGGED] = @Original_UA_ISLOGGED)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT UA_ID, UA_Username, UA_Password, UA_T"& _ 
                "ype, UA_Status, Pers_ID, UA_ISLOGGED FROM tblV2_UsersAccount WHERE (UA_ID = @UA_"& _ 
                "ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UA_ID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UA_Username", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Username", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UA_Password", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Password", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UA_Type", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UA_Status", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pers_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UA_ISLOGGED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_ISLOGGED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UA_ID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UA_Username", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Username", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UA_Password", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Password", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UA_Type", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UA_Status", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_Status", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Pers_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Pers_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UA_ISLOGGED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_ISLOGGED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UA_ISLOGGED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA_ISLOGGED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRAMasterDBConnString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        UA_ID, UA_Username, UA_Password, UA_Type, UA_Status, Pers_ID, UA_IS"& _ 
                "LOGGED"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV2_UsersAccount"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_TABLES.tblV2_UsersAccountDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_TABLES.tblV2_UsersAccountDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_TABLES) As Integer
            Return Me.Adapter.Update(dataSet, "tblV2_UsersAccount")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_UA_ID As String, ByVal Original_UA_Username As String, ByVal Original_UA_Password As String, ByVal Original_UA_Type As String, ByVal Original_UA_Status As String, ByVal Original_Pers_ID As String, ByVal Original_UA_ISLOGGED As Global.System.Nullable(Of Boolean)) As Integer
            If (Original_UA_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UA_ID")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_UA_ID,String)
            End If
            If (Original_UA_Username Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UA_Username")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_UA_Username,String)
            End If
            If (Original_UA_Password Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UA_Password")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_UA_Password,String)
            End If
            If (Original_UA_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UA_Type")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_UA_Type,String)
            End If
            If (Original_UA_Status Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UA_Status")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_UA_Status,String)
            End If
            If (Original_Pers_ID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Pers_ID,String)
            End If
            If (Original_UA_ISLOGGED.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_UA_ISLOGGED.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal UA_ID As String, ByVal UA_Username As String, ByVal UA_Password As String, ByVal UA_Type As String, ByVal UA_Status As String, ByVal Pers_ID As String, ByVal UA_ISLOGGED As Global.System.Nullable(Of Boolean)) As Integer
            If (UA_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UA_ID")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(UA_ID,String)
            End If
            If (UA_Username Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UA_Username")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(UA_Username,String)
            End If
            If (UA_Password Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UA_Password")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(UA_Password,String)
            End If
            If (UA_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UA_Type")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(UA_Type,String)
            End If
            If (UA_Status Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UA_Status")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(UA_Status,String)
            End If
            If (Pers_ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Pers_ID,String)
            End If
            If (UA_ISLOGGED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(UA_ISLOGGED.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal UA_ID As String, ByVal UA_Username As String, ByVal UA_Password As String, ByVal UA_Type As String, ByVal UA_Status As String, ByVal Pers_ID As String, ByVal UA_ISLOGGED As Global.System.Nullable(Of Boolean), ByVal Original_UA_ID As String, ByVal Original_UA_Username As String, ByVal Original_UA_Password As String, ByVal Original_UA_Type As String, ByVal Original_UA_Status As String, ByVal Original_Pers_ID As String, ByVal Original_UA_ISLOGGED As Global.System.Nullable(Of Boolean)) As Integer
            If (UA_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UA_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(UA_ID,String)
            End If
            If (UA_Username Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UA_Username")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(UA_Username,String)
            End If
            If (UA_Password Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UA_Password")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(UA_Password,String)
            End If
            If (UA_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UA_Type")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(UA_Type,String)
            End If
            If (UA_Status Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UA_Status")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(UA_Status,String)
            End If
            If (Pers_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Pers_ID,String)
            End If
            If (UA_ISLOGGED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(UA_ISLOGGED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_UA_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UA_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_UA_ID,String)
            End If
            If (Original_UA_Username Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UA_Username")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_UA_Username,String)
            End If
            If (Original_UA_Password Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UA_Password")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_UA_Password,String)
            End If
            If (Original_UA_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UA_Type")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_UA_Type,String)
            End If
            If (Original_UA_Status Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UA_Status")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_UA_Status,String)
            End If
            If (Original_Pers_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_Pers_ID,String)
            End If
            If (Original_UA_ISLOGGED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_UA_ISLOGGED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal UA_Username As String, ByVal UA_Password As String, ByVal UA_Type As String, ByVal UA_Status As String, ByVal Pers_ID As String, ByVal UA_ISLOGGED As Global.System.Nullable(Of Boolean), ByVal Original_UA_ID As String, ByVal Original_UA_Username As String, ByVal Original_UA_Password As String, ByVal Original_UA_Type As String, ByVal Original_UA_Status As String, ByVal Original_Pers_ID As String, ByVal Original_UA_ISLOGGED As Global.System.Nullable(Of Boolean)) As Integer
            Return Me.Update(Original_UA_ID, UA_Username, UA_Password, UA_Type, UA_Status, Pers_ID, UA_ISLOGGED, Original_UA_ID, Original_UA_Username, Original_UA_Password, Original_UA_Type, Original_UA_Status, Original_Pers_ID, Original_UA_ISLOGGED)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblV1_USERACCOUNTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblV1_USERACCOUNT"
            tableMapping.ColumnMappings.Add("UAC_USERNAME", "UAC_USERNAME")
            tableMapping.ColumnMappings.Add("UAC_PASSWORD", "UAC_PASSWORD")
            tableMapping.ColumnMappings.Add("UAC_ISACTIVE", "UAC_ISACTIVE")
            tableMapping.ColumnMappings.Add("UAC_ISLOGGED", "UAC_ISLOGGED")
            tableMapping.ColumnMappings.Add("Pers_ID", "Pers_ID")
            tableMapping.ColumnMappings.Add("UAC_TYPE", "UAC_TYPE")
            tableMapping.ColumnMappings.Add("UAC_HINT", "UAC_HINT")
            tableMapping.ColumnMappings.Add("UAC_RTFLAG", "UAC_RTFLAG")
            tableMapping.ColumnMappings.Add("UAC_RTNUM", "UAC_RTNUM")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblV1_USERACCOUNT] WHERE (([UAC_USERNAME] = @Original_UAC_USERNAME) "& _ 
                "AND ([UAC_PASSWORD] = @Original_UAC_PASSWORD) AND ([UAC_ISACTIVE] = @Original_UA"& _ 
                "C_ISACTIVE) AND ([UAC_ISLOGGED] = @Original_UAC_ISLOGGED) AND ((@IsNull_Pers_ID "& _ 
                "= 1 AND [Pers_ID] IS NULL) OR ([Pers_ID] = @Original_Pers_ID)) AND ([UAC_TYPE] ="& _ 
                " @Original_UAC_TYPE) AND ((@IsNull_UAC_HINT = 1 AND [UAC_HINT] IS NULL) OR ([UAC"& _ 
                "_HINT] = @Original_UAC_HINT)) AND ([UAC_RTFLAG] = @Original_UAC_RTFLAG) AND ([UA"& _ 
                "C_RTNUM] = @Original_UAC_RTNUM))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_PASSWORD", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISACTIVE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_ISLOGGED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISLOGGED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Pers_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Pers_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_TYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UAC_HINT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_HINT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_HINT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_HINT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_RTFLAG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTFLAG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_RTNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblV1_USERACCOUNT] ([UAC_USERNAME], [UAC_PASSWORD], [UAC_ISACTIVE], "& _ 
                "[UAC_ISLOGGED], [Pers_ID], [UAC_TYPE], [UAC_HINT], [UAC_RTFLAG], [UAC_RTNUM]) VA"& _ 
                "LUES (@UAC_USERNAME, @UAC_PASSWORD, @UAC_ISACTIVE, @UAC_ISLOGGED, @Pers_ID, @UAC"& _ 
                "_TYPE, @UAC_HINT, @UAC_RTFLAG, @UAC_RTNUM);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT UAC_USERNAME, UAC_PASSWORD, "& _ 
                "UAC_ISACTIVE, UAC_ISLOGGED, Pers_ID, UAC_TYPE, UAC_HINT, UAC_RTFLAG, UAC_RTNUM F"& _ 
                "ROM tblV1_USERACCOUNT WHERE (UAC_USERNAME = @UAC_USERNAME)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_PASSWORD", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISACTIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_ISLOGGED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISLOGGED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pers_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_TYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_HINT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_HINT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_RTFLAG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTFLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_RTNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblV1_USERACCOUNT] SET [UAC_USERNAME] = @UAC_USERNAME, [UAC_PASSWORD] = @"& _ 
                "UAC_PASSWORD, [UAC_ISACTIVE] = @UAC_ISACTIVE, [UAC_ISLOGGED] = @UAC_ISLOGGED, [P"& _ 
                "ers_ID] = @Pers_ID, [UAC_TYPE] = @UAC_TYPE, [UAC_HINT] = @UAC_HINT, [UAC_RTFLAG]"& _ 
                " = @UAC_RTFLAG, [UAC_RTNUM] = @UAC_RTNUM WHERE (([UAC_USERNAME] = @Original_UAC_"& _ 
                "USERNAME) AND ([UAC_PASSWORD] = @Original_UAC_PASSWORD) AND ([UAC_ISACTIVE] = @O"& _ 
                "riginal_UAC_ISACTIVE) AND ([UAC_ISLOGGED] = @Original_UAC_ISLOGGED) AND ((@IsNul"& _ 
                "l_Pers_ID = 1 AND [Pers_ID] IS NULL) OR ([Pers_ID] = @Original_Pers_ID)) AND ([U"& _ 
                "AC_TYPE] = @Original_UAC_TYPE) AND ((@IsNull_UAC_HINT = 1 AND [UAC_HINT] IS NULL"& _ 
                ") OR ([UAC_HINT] = @Original_UAC_HINT)) AND ([UAC_RTFLAG] = @Original_UAC_RTFLAG"& _ 
                ") AND ([UAC_RTNUM] = @Original_UAC_RTNUM));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT UAC_USERNAME, UAC_PASSWORD, "& _ 
                "UAC_ISACTIVE, UAC_ISLOGGED, Pers_ID, UAC_TYPE, UAC_HINT, UAC_RTFLAG, UAC_RTNUM F"& _ 
                "ROM tblV1_USERACCOUNT WHERE (UAC_USERNAME = @UAC_USERNAME)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_PASSWORD", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISACTIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_ISLOGGED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISLOGGED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pers_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_TYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_HINT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_HINT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_RTFLAG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTFLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_RTNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_PASSWORD", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISACTIVE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_ISLOGGED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISLOGGED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Pers_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Pers_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_TYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UAC_HINT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_HINT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_HINT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_HINT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_RTFLAG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTFLAG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_RTNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRAMasterDBConnString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(6) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        UAC_USERNAME, UAC_PASSWORD, UAC_ISACTIVE, UAC_ISLOGGED, Pers_ID, UA"& _ 
                "C_TYPE, UAC_HINT, UAC_RTFLAG, UAC_RTNUM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_USERACCOUNT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.SP_SQ_SYSCURDATE"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        D.HDIVS_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_USERACCOUNT AS U INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       tblV1_HRISEMPDIVISION AS D ON U.HRIS_EMPNO = D.HRIS_EMPNO"& _ 
                " AND U.UAC_USERNAME = @UAC_USERNAME"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT  UAC_PASSWORD FROM tblV1_USERACCOUNT WHERE UAC_PASSWORD=@UAC_PASSWORD"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_PASSWORD", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT  COUNT(*) FROM tblV1_USERACCOUNT WHERE UAC_PASSWORD=@UAC_PASSWORD AND UAC_"& _ 
                "ISACTIVE=1"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_PASSWORD", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        HRIS_EMPNO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_USERACCOUNT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (UAC_US"& _ 
                "ERNAME =@UAC_USERNAME)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "UPDATE [tblV1_USERACCOUNT] SET  [UAC_ISLOGGED] = @UAC_ISLOGGED WHERE [UAC_USERNAM"& _ 
                "E] = @UAC_USERNAME"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_ISLOGGED", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISLOGGED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_TABLES.tblV1_USERACCOUNTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_TABLES.tblV1_USERACCOUNTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_TABLES.tblV1_USERACCOUNTDataTable = New DS_TABLES.tblV1_USERACCOUNTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_TABLES.tblV1_USERACCOUNTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_TABLES) As Integer
            Return Me.Adapter.Update(dataSet, "tblV1_USERACCOUNT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_UAC_USERNAME As String, ByVal Original_UAC_PASSWORD As String, ByVal Original_UAC_ISACTIVE As Boolean, ByVal Original_UAC_ISLOGGED As Boolean, ByVal Original_Pers_ID As String, ByVal Original_UAC_TYPE As Integer, ByVal Original_UAC_HINT As String, ByVal Original_UAC_RTFLAG As Boolean, ByVal Original_UAC_RTNUM As Integer) As Integer
            If (Original_UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UAC_USERNAME")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_UAC_USERNAME,String)
            End If
            If (Original_UAC_PASSWORD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UAC_PASSWORD")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_UAC_PASSWORD,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_UAC_ISACTIVE,Boolean)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_UAC_ISLOGGED,Boolean)
            If (Original_Pers_ID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Pers_ID,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_UAC_TYPE,Integer)
            If (Original_UAC_HINT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_UAC_HINT,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_UAC_RTFLAG,Boolean)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_UAC_RTNUM,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal UAC_USERNAME As String, ByVal UAC_PASSWORD As String, ByVal UAC_ISACTIVE As Boolean, ByVal UAC_ISLOGGED As Boolean, ByVal Pers_ID As String, ByVal UAC_TYPE As Integer, ByVal UAC_HINT As String, ByVal UAC_RTFLAG As Boolean, ByVal UAC_RTNUM As Integer) As Integer
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(UAC_USERNAME,String)
            End If
            If (UAC_PASSWORD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_PASSWORD")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(UAC_PASSWORD,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(UAC_ISACTIVE,Boolean)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(UAC_ISLOGGED,Boolean)
            If (Pers_ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Pers_ID,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(UAC_TYPE,Integer)
            If (UAC_HINT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(UAC_HINT,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(UAC_RTFLAG,Boolean)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(UAC_RTNUM,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal UAC_USERNAME As String,  _
                    ByVal UAC_PASSWORD As String,  _
                    ByVal UAC_ISACTIVE As Boolean,  _
                    ByVal UAC_ISLOGGED As Boolean,  _
                    ByVal Pers_ID As String,  _
                    ByVal UAC_TYPE As Integer,  _
                    ByVal UAC_HINT As String,  _
                    ByVal UAC_RTFLAG As Boolean,  _
                    ByVal UAC_RTNUM As Integer,  _
                    ByVal Original_UAC_USERNAME As String,  _
                    ByVal Original_UAC_PASSWORD As String,  _
                    ByVal Original_UAC_ISACTIVE As Boolean,  _
                    ByVal Original_UAC_ISLOGGED As Boolean,  _
                    ByVal Original_Pers_ID As String,  _
                    ByVal Original_UAC_TYPE As Integer,  _
                    ByVal Original_UAC_HINT As String,  _
                    ByVal Original_UAC_RTFLAG As Boolean,  _
                    ByVal Original_UAC_RTNUM As Integer) As Integer
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(UAC_USERNAME,String)
            End If
            If (UAC_PASSWORD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_PASSWORD")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(UAC_PASSWORD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(UAC_ISACTIVE,Boolean)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(UAC_ISLOGGED,Boolean)
            If (Pers_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Pers_ID,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(UAC_TYPE,Integer)
            If (UAC_HINT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(UAC_HINT,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(UAC_RTFLAG,Boolean)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(UAC_RTNUM,Integer)
            If (Original_UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UAC_USERNAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_UAC_USERNAME,String)
            End If
            If (Original_UAC_PASSWORD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UAC_PASSWORD")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_UAC_PASSWORD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_UAC_ISACTIVE,Boolean)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_UAC_ISLOGGED,Boolean)
            If (Original_Pers_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_Pers_ID,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_UAC_TYPE,Integer)
            If (Original_UAC_HINT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_UAC_HINT,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_UAC_RTFLAG,Boolean)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_UAC_RTNUM,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal UAC_PASSWORD As String,  _
                    ByVal UAC_ISACTIVE As Boolean,  _
                    ByVal UAC_ISLOGGED As Boolean,  _
                    ByVal Pers_ID As String,  _
                    ByVal UAC_TYPE As Integer,  _
                    ByVal UAC_HINT As String,  _
                    ByVal UAC_RTFLAG As Boolean,  _
                    ByVal UAC_RTNUM As Integer,  _
                    ByVal Original_UAC_USERNAME As String,  _
                    ByVal Original_UAC_PASSWORD As String,  _
                    ByVal Original_UAC_ISACTIVE As Boolean,  _
                    ByVal Original_UAC_ISLOGGED As Boolean,  _
                    ByVal Original_Pers_ID As String,  _
                    ByVal Original_UAC_TYPE As Integer,  _
                    ByVal Original_UAC_HINT As String,  _
                    ByVal Original_UAC_RTFLAG As Boolean,  _
                    ByVal Original_UAC_RTNUM As Integer) As Integer
            Return Me.Update(Original_UAC_USERNAME, UAC_PASSWORD, UAC_ISACTIVE, UAC_ISLOGGED, Pers_ID, UAC_TYPE, UAC_HINT, UAC_RTFLAG, UAC_RTNUM, Original_UAC_USERNAME, Original_UAC_PASSWORD, Original_UAC_ISACTIVE, Original_UAC_ISLOGGED, Original_Pers_ID, Original_UAC_TYPE, Original_UAC_HINT, Original_UAC_RTFLAG, Original_UAC_RTNUM)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SP_SQ_SYSCURDATE() As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_DIVS_CODE(ByVal UAC_USERNAME As String) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                command.Parameters(0).Value = CType(UAC_USERNAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_GETUACPASSWORD(ByVal UAC_PASSWORD As String) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (UAC_PASSWORD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_PASSWORD")
            Else
                command.Parameters(0).Value = CType(UAC_PASSWORD,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_IFUSERISACTIVE(ByVal UAC_PASSWORD As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            If (UAC_PASSWORD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_PASSWORD")
            Else
                command.Parameters(0).Value = CType(UAC_PASSWORD,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_UHRIS_EMPNO(ByVal UAC_USERNAME As String) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(5)
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                command.Parameters(0).Value = CType(UAC_USERNAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UQ_USERLOGSTATUS(ByVal UAC_ISLOGGED As Boolean, ByVal UAC_USERNAME As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(6)
            command.Parameters(0).Value = CType(UAC_ISLOGGED,Boolean)
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                command.Parameters(1).Value = CType(UAC_USERNAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblV2_ACCOUNTCODETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblV2_ACCOUNTCODE"
            tableMapping.ColumnMappings.Add("ACC_CODE", "ACC_CODE")
            tableMapping.ColumnMappings.Add("ACC_DESC", "ACC_DESC")
            tableMapping.ColumnMappings.Add("ACC_OLD", "ACC_OLD")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblV2_ACCOUNTCODE] ([ACC_CODE], [ACC_DESC], [ACC_OLD]) VALUES (@ACC_"& _ 
                "CODE, @ACC_DESC, @ACC_OLD)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACC_CODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACC_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACC_DESC", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACC_DESC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACC_OLD", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACC_OLD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRAMasterDBConnString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ACC_CODE, ACC_DESC, ACC_OLD"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV2_ACCOUNTCODE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ACC_CODE, ACC_DESC, ACC_OLD FROM tblV2_ACCOUNTCODE WHERE (CAST(ACC_CODE + "& _ 
                "ACC_DESC AS VARCHAR(MAX)) LIKE '%' + @SEARCH + '%')"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEARCH", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillByACC(ByVal dataTable As DS_TABLES.tblV2_ACCOUNTCODEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataByACC() As DS_TABLES.tblV2_ACCOUNTCODEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_TABLES.tblV2_ACCOUNTCODEDataTable = New DS_TABLES.tblV2_ACCOUNTCODEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySEARCH(ByVal dataTable As DS_TABLES.tblV2_ACCOUNTCODEDataTable, ByVal SEARCH As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (SEARCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SEARCH")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SEARCH,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBySEARCH(ByVal SEARCH As String) As DS_TABLES.tblV2_ACCOUNTCODEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (SEARCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SEARCH")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SEARCH,String)
            End If
            Dim dataTable As DS_TABLES.tblV2_ACCOUNTCODEDataTable = New DS_TABLES.tblV2_ACCOUNTCODEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_TABLES.tblV2_ACCOUNTCODEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_TABLES) As Integer
            Return Me.Adapter.Update(dataSet, "tblV2_ACCOUNTCODE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ACC_CODE As String, ByVal ACC_DESC As String, ByVal ACC_OLD As String) As Integer
            If (ACC_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ACC_CODE,String)
            End If
            If (ACC_DESC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ACC_DESC,String)
            End If
            If (ACC_OLD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ACC_OLD,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class V1VW_USERACCEMPLOYEETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "V1VW_USERACCEMPLOYEE"
            tableMapping.ColumnMappings.Add("UAC_USERNAME", "UAC_USERNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO", "HRIS_EMPNO")
            tableMapping.ColumnMappings.Add("HRIS_EMPLNAME", "HRIS_EMPLNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPFNAME", "HRIS_EMPFNAME")
            tableMapping.ColumnMappings.Add("HEDV_DATE", "HEDV_DATE")
            tableMapping.ColumnMappings.Add("HDIVS_CODE", "HDIVS_CODE")
            tableMapping.ColumnMappings.Add("FULLNAME", "FULLNAME")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRAMasterDBConnString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        UAC_USERNAME, HRIS_EMPNO, HRIS_EMPLNAME, HRIS_EMPFNAME, HEDV_DATE, "& _ 
                "HDIVS_CODE, HRIS_EMPLNAME +', '+ HRIS_EMPFNAME as FULLNAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            V1VW"& _ 
                "_USERACCEMPLOYEE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT HRIS_EMPLNAME + ', ' + HRIS_EMPFNAME AS FULLNAME, HDIVS_CODE, HEDV_DATE, H"& _ 
                "RIS_EMPFNAME, HRIS_EMPLNAME, HRIS_EMPNO, UAC_USERNAME FROM V1VW_USERACCEMPLOYEE "& _ 
                "WHERE (HDIVS_CODE = 'PD')"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_TABLES.V1VW_USERACCEMPLOYEEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_TABLES.V1VW_USERACCEMPLOYEEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_TABLES.V1VW_USERACCEMPLOYEEDataTable = New DS_TABLES.V1VW_USERACCEMPLOYEEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPROCESSOR(ByVal dataTable As DS_TABLES.V1VW_USERACCEMPLOYEEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByPROCESSOR() As DS_TABLES.V1VW_USERACCEMPLOYEEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As DS_TABLES.V1VW_USERACCEMPLOYEEDataTable = New DS_TABLES.V1VW_USERACCEMPLOYEEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblV1_USERACCOUNTLOGSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblV1_USERACCOUNTLOGS"
            tableMapping.ColumnMappings.Add("UALG_DATETIMELOGGED", "UALG_DATETIMELOGGED")
            tableMapping.ColumnMappings.Add("UAC_USERNAME", "UAC_USERNAME")
            tableMapping.ColumnMappings.Add("UALG_PCNAME", "UALG_PCNAME")
            tableMapping.ColumnMappings.Add("UALG_TYPE", "UALG_TYPE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblV1_USERACCOUNTLOGS] WHERE (([UALG_DATETIMELOGGED] = @Original_UAL"& _ 
                "G_DATETIMELOGGED) AND ([UAC_USERNAME] = @Original_UAC_USERNAME) AND ([UALG_PCNAM"& _ 
                "E] = @Original_UALG_PCNAME) AND ([UALG_TYPE] = @Original_UALG_TYPE))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UALG_DATETIMELOGGED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_DATETIMELOGGED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UALG_PCNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_PCNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UALG_TYPE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblV1_USERACCOUNTLOGS] ([UALG_DATETIMELOGGED], [UAC_USERNAME], [UALG"& _ 
                "_PCNAME], [UALG_TYPE]) VALUES (@UALG_DATETIMELOGGED, @UAC_USERNAME, @UALG_PCNAME"& _ 
                ", @UALG_TYPE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT UALG_DATETIMELOGGED, UAC_USERNAME, UALG_PCNAME, UALG_TYPE"& _ 
                " FROM tblV1_USERACCOUNTLOGS WHERE (UALG_DATETIMELOGGED = @UALG_DATETIMELOGGED)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_DATETIMELOGGED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_DATETIMELOGGED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_PCNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_PCNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_TYPE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblV1_USERACCOUNTLOGS] SET [UALG_DATETIMELOGGED] = @UALG_DATETIMELOGGED, "& _ 
                "[UAC_USERNAME] = @UAC_USERNAME, [UALG_PCNAME] = @UALG_PCNAME, [UALG_TYPE] = @UAL"& _ 
                "G_TYPE WHERE (([UALG_DATETIMELOGGED] = @Original_UALG_DATETIMELOGGED) AND ([UAC_"& _ 
                "USERNAME] = @Original_UAC_USERNAME) AND ([UALG_PCNAME] = @Original_UALG_PCNAME) "& _ 
                "AND ([UALG_TYPE] = @Original_UALG_TYPE));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT UALG_DATETIMELOGGED, UAC_USERN"& _ 
                "AME, UALG_PCNAME, UALG_TYPE FROM tblV1_USERACCOUNTLOGS WHERE (UALG_DATETIMELOGGE"& _ 
                "D = @UALG_DATETIMELOGGED)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_DATETIMELOGGED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_DATETIMELOGGED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_PCNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_PCNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_TYPE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UALG_DATETIMELOGGED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_DATETIMELOGGED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UALG_PCNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_PCNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UALG_TYPE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRAMasterDBConnString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        UALG_DATETIMELOGGED, UAC_USERNAME, UALG_PCNAME, UALG_TYPE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM    "& _ 
                "        tblV1_USERACCOUNTLOGS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "INSERT INTO [tblV1_USERACCOUNTLOGS] ([UALG_DATETIMELOGGED], [UAC_USERNAME], [UALG"& _ 
                "_PCNAME], [UALG_TYPE]) VALUES (GETDATE(), @UAC_USERNAME, @UALG_PCNAME, @UALG_TYP"& _ 
                "E);"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_PCNAME", Global.System.Data.SqlDbType.VarChar, 500, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_PCNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_TYPE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_TABLES.tblV1_USERACCOUNTLOGSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_TABLES.tblV1_USERACCOUNTLOGSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_TABLES.tblV1_USERACCOUNTLOGSDataTable = New DS_TABLES.tblV1_USERACCOUNTLOGSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_TABLES.tblV1_USERACCOUNTLOGSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_TABLES) As Integer
            Return Me.Adapter.Update(dataSet, "tblV1_USERACCOUNTLOGS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_UALG_DATETIMELOGGED As Date, ByVal Original_UAC_USERNAME As String, ByVal Original_UALG_PCNAME As String, ByVal Original_UALG_TYPE As Boolean) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_UALG_DATETIMELOGGED,Date)
            If (Original_UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UAC_USERNAME")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_UAC_USERNAME,String)
            End If
            If (Original_UALG_PCNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UALG_PCNAME")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_UALG_PCNAME,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_UALG_TYPE,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal UALG_DATETIMELOGGED As Date, ByVal UAC_USERNAME As String, ByVal UALG_PCNAME As String, ByVal UALG_TYPE As Boolean) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(UALG_DATETIMELOGGED,Date)
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(UAC_USERNAME,String)
            End If
            If (UALG_PCNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UALG_PCNAME")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(UALG_PCNAME,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(UALG_TYPE,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal UALG_DATETIMELOGGED As Date, ByVal UAC_USERNAME As String, ByVal UALG_PCNAME As String, ByVal UALG_TYPE As Boolean, ByVal Original_UALG_DATETIMELOGGED As Date, ByVal Original_UAC_USERNAME As String, ByVal Original_UALG_PCNAME As String, ByVal Original_UALG_TYPE As Boolean) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(UALG_DATETIMELOGGED,Date)
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(UAC_USERNAME,String)
            End If
            If (UALG_PCNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UALG_PCNAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(UALG_PCNAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(UALG_TYPE,Boolean)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_UALG_DATETIMELOGGED,Date)
            If (Original_UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UAC_USERNAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_UAC_USERNAME,String)
            End If
            If (Original_UALG_PCNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UALG_PCNAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_UALG_PCNAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_UALG_TYPE,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal UAC_USERNAME As String, ByVal UALG_PCNAME As String, ByVal UALG_TYPE As Boolean, ByVal Original_UALG_DATETIMELOGGED As Date, ByVal Original_UAC_USERNAME As String, ByVal Original_UALG_PCNAME As String, ByVal Original_UALG_TYPE As Boolean) As Integer
            Return Me.Update(Original_UALG_DATETIMELOGGED, UAC_USERNAME, UALG_PCNAME, UALG_TYPE, Original_UALG_DATETIMELOGGED, Original_UAC_USERNAME, Original_UALG_PCNAME, Original_UALG_TYPE)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function IQ_USERACCOUNTLOGS(ByVal UAC_USERNAME As String, ByVal UALG_PCNAME As String, ByVal UALG_TYPE As Boolean) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                command.Parameters(0).Value = CType(UAC_USERNAME,String)
            End If
            If (UALG_PCNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UALG_PCNAME")
            Else
                command.Parameters(1).Value = CType(UALG_PCNAME,String)
            End If
            command.Parameters(2).Value = CType(UALG_TYPE,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblV1_HRISEMPLOYEEDATATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblV1_HRISEMPLOYEEDATA"
            tableMapping.ColumnMappings.Add("HRIS_EMPNO", "HRIS_EMPNO")
            tableMapping.ColumnMappings.Add("HRIS_EMPLNAME", "HRIS_EMPLNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPFNAME", "HRIS_EMPFNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPMNAME", "HRIS_EMPMNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPNAMEEXT", "HRIS_EMPNAMEEXT")
            tableMapping.ColumnMappings.Add("HRIS_EMPNAMETITLE", "HRIS_EMPNAMETITLE")
            tableMapping.ColumnMappings.Add("HRIS_EMPDOB", "HRIS_EMPDOB")
            tableMapping.ColumnMappings.Add("HRIS_EMPPOB", "HRIS_EMPPOB")
            tableMapping.ColumnMappings.Add("HRIS_EMPGENDERISMALE", "HRIS_EMPGENDERISMALE")
            tableMapping.ColumnMappings.Add("HRIS_EMPCIVILSTAT", "HRIS_EMPCIVILSTAT")
            tableMapping.ColumnMappings.Add("HRIS_EMPHEIGHT", "HRIS_EMPHEIGHT")
            tableMapping.ColumnMappings.Add("HRIS_EMPWEIGHT", "HRIS_EMPWEIGHT")
            tableMapping.ColumnMappings.Add("Pers_EMPBLOODTYPE", "Pers_EMPBLOODTYPE")
            tableMapping.ColumnMappings.Add("HRIS_EMPGSISNUM", "HRIS_EMPGSISNUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPPAGIBIGNUM", "HRIS_EMPPAGIBIGNUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPPHEALTHNUM", "HRIS_EMPPHEALTHNUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPSSSNUM", "HRIS_EMPSSSNUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPTINNUM", "HRIS_EMPTINNUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPAGENCYNUM", "HRIS_EMPAGENCYNUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPTELNUM", "HRIS_EMPTELNUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPMOBILENUM", "HRIS_EMPMOBILENUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPEMAIL", "HRIS_EMPEMAIL")
            tableMapping.ColumnMappings.Add("HRIS_EMPFTHRLNAME", "HRIS_EMPFTHRLNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPFTHRFNAME", "HRIS_EMPFTHRFNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPFTHRMNAME", "HRIS_EMPFTHRMNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPFTHRNAMEEXT", "HRIS_EMPFTHRNAMEEXT")
            tableMapping.ColumnMappings.Add("HRIS_EMPMTHRLNAME", "HRIS_EMPMTHRLNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPMTHRFNAME", "HRIS_EMPMTHRFNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPMTHRMNAME", "HRIS_EMPMTHRMNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPMTHRMAIDENNAME", "HRIS_EMPMTHRMAIDENNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPGOVTISSUEDID", "HRIS_EMPGOVTISSUEDID")
            tableMapping.ColumnMappings.Add("HRIS_EMPGOVTIDNO", "HRIS_EMPGOVTIDNO")
            tableMapping.ColumnMappings.Add("HRIS_EMPGOVTIDDATEISSUED", "HRIS_EMPGOVTIDDATEISSUED")
            tableMapping.ColumnMappings.Add("HRIS_EMPGOVTIDPLACEISSUED", "HRIS_EMPGOVTIDPLACEISSUED")
            tableMapping.ColumnMappings.Add("HRIS_EMPIMAGE", "HRIS_EMPIMAGE")
            tableMapping.ColumnMappings.Add("HRIS_EMPSIGNATURE", "HRIS_EMPSIGNATURE")
            tableMapping.ColumnMappings.Add("HRIS_EMPDATEACCOMPLISH", "HRIS_EMPDATEACCOMPLISH")
            tableMapping.ColumnMappings.Add("HRIS_EMPRIGHTTHUMB", "HRIS_EMPRIGHTTHUMB")
            tableMapping.ColumnMappings.Add("HRIS_EMPSWORNDATE", "HRIS_EMPSWORNDATE")
            tableMapping.ColumnMappings.Add("HRIS_EMPADOATH", "HRIS_EMPADOATH")
            tableMapping.ColumnMappings.Add("HRIS_EMPSRVCSTAT", "HRIS_EMPSRVCSTAT")
            tableMapping.ColumnMappings.Add("HRIS_EMPSRVCSTATDATE", "HRIS_EMPSRVCSTATDATE")
            tableMapping.ColumnMappings.Add("HRIS_STATUS", "HRIS_STATUS")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblV1_HRISEMPLOYEEDATA] WHERE (([HRIS_EMPNO] = @Original_HRIS_EMPNO)"& _ 
                " AND ((@IsNull_HRIS_EMPLNAME = 1 AND [HRIS_EMPLNAME] IS NULL) OR ([HRIS_EMPLNAME"& _ 
                "] = @Original_HRIS_EMPLNAME)) AND ((@IsNull_HRIS_EMPFNAME = 1 AND [HRIS_EMPFNAME"& _ 
                "] IS NULL) OR ([HRIS_EMPFNAME] = @Original_HRIS_EMPFNAME)) AND ((@IsNull_HRIS_EM"& _ 
                "PMNAME = 1 AND [HRIS_EMPMNAME] IS NULL) OR ([HRIS_EMPMNAME] = @Original_HRIS_EMP"& _ 
                "MNAME)) AND ((@IsNull_HRIS_EMPNAMEEXT = 1 AND [HRIS_EMPNAMEEXT] IS NULL) OR ([HR"& _ 
                "IS_EMPNAMEEXT] = @Original_HRIS_EMPNAMEEXT)) AND ((@IsNull_HRIS_EMPNAMETITLE = 1"& _ 
                " AND [HRIS_EMPNAMETITLE] IS NULL) OR ([HRIS_EMPNAMETITLE] = @Original_HRIS_EMPNA"& _ 
                "METITLE)) AND ((@IsNull_HRIS_EMPDOB = 1 AND [HRIS_EMPDOB] IS NULL) OR ([HRIS_EMP"& _ 
                "DOB] = @Original_HRIS_EMPDOB)) AND ((@IsNull_HRIS_EMPPOB = 1 AND [HRIS_EMPPOB] I"& _ 
                "S NULL) OR ([HRIS_EMPPOB] = @Original_HRIS_EMPPOB)) AND ((@IsNull_HRIS_EMPGENDER"& _ 
                "ISMALE = 1 AND [HRIS_EMPGENDERISMALE] IS NULL) OR ([HRIS_EMPGENDERISMALE] = @Ori"& _ 
                "ginal_HRIS_EMPGENDERISMALE)) AND ((@IsNull_HRIS_EMPCIVILSTAT = 1 AND [HRIS_EMPCI"& _ 
                "VILSTAT] IS NULL) OR ([HRIS_EMPCIVILSTAT] = @Original_HRIS_EMPCIVILSTAT)) AND (("& _ 
                "@IsNull_HRIS_EMPHEIGHT = 1 AND [HRIS_EMPHEIGHT] IS NULL) OR ([HRIS_EMPHEIGHT] = "& _ 
                "@Original_HRIS_EMPHEIGHT)) AND ((@IsNull_HRIS_EMPWEIGHT = 1 AND [HRIS_EMPWEIGHT]"& _ 
                " IS NULL) OR ([HRIS_EMPWEIGHT] = @Original_HRIS_EMPWEIGHT)) AND ((@IsNull_Pers_E"& _ 
                "MPBLOODTYPE = 1 AND [Pers_EMPBLOODTYPE] IS NULL) OR ([Pers_EMPBLOODTYPE] = @Orig"& _ 
                "inal_Pers_EMPBLOODTYPE)) AND ((@IsNull_HRIS_EMPGSISNUM = 1 AND [HRIS_EMPGSISNUM]"& _ 
                " IS NULL) OR ([HRIS_EMPGSISNUM] = @Original_HRIS_EMPGSISNUM)) AND ((@IsNull_HRIS"& _ 
                "_EMPPAGIBIGNUM = 1 AND [HRIS_EMPPAGIBIGNUM] IS NULL) OR ([HRIS_EMPPAGIBIGNUM] = "& _ 
                "@Original_HRIS_EMPPAGIBIGNUM)) AND ((@IsNull_HRIS_EMPPHEALTHNUM = 1 AND [HRIS_EM"& _ 
                "PPHEALTHNUM] IS NULL) OR ([HRIS_EMPPHEALTHNUM] = @Original_HRIS_EMPPHEALTHNUM)) "& _ 
                "AND ((@IsNull_HRIS_EMPSSSNUM = 1 AND [HRIS_EMPSSSNUM] IS NULL) OR ([HRIS_EMPSSSN"& _ 
                "UM] = @Original_HRIS_EMPSSSNUM)) AND ((@IsNull_HRIS_EMPTINNUM = 1 AND [HRIS_EMPT"& _ 
                "INNUM] IS NULL) OR ([HRIS_EMPTINNUM] = @Original_HRIS_EMPTINNUM)) AND ((@IsNull_"& _ 
                "HRIS_EMPAGENCYNUM = 1 AND [HRIS_EMPAGENCYNUM] IS NULL) OR ([HRIS_EMPAGENCYNUM] ="& _ 
                " @Original_HRIS_EMPAGENCYNUM)) AND ((@IsNull_HRIS_EMPTELNUM = 1 AND [HRIS_EMPTEL"& _ 
                "NUM] IS NULL) OR ([HRIS_EMPTELNUM] = @Original_HRIS_EMPTELNUM)) AND ((@IsNull_HR"& _ 
                "IS_EMPMOBILENUM = 1 AND [HRIS_EMPMOBILENUM] IS NULL) OR ([HRIS_EMPMOBILENUM] = @"& _ 
                "Original_HRIS_EMPMOBILENUM)) AND ((@IsNull_HRIS_EMPEMAIL = 1 AND [HRIS_EMPEMAIL]"& _ 
                " IS NULL) OR ([HRIS_EMPEMAIL] = @Original_HRIS_EMPEMAIL)) AND ((@IsNull_HRIS_EMP"& _ 
                "FTHRLNAME = 1 AND [HRIS_EMPFTHRLNAME] IS NULL) OR ([HRIS_EMPFTHRLNAME] = @Origin"& _ 
                "al_HRIS_EMPFTHRLNAME)) AND ((@IsNull_HRIS_EMPFTHRFNAME = 1 AND [HRIS_EMPFTHRFNAM"& _ 
                "E] IS NULL) OR ([HRIS_EMPFTHRFNAME] = @Original_HRIS_EMPFTHRFNAME)) AND ((@IsNul"& _ 
                "l_HRIS_EMPFTHRMNAME = 1 AND [HRIS_EMPFTHRMNAME] IS NULL) OR ([HRIS_EMPFTHRMNAME]"& _ 
                " = @Original_HRIS_EMPFTHRMNAME)) AND ((@IsNull_HRIS_EMPFTHRNAMEEXT = 1 AND [HRIS"& _ 
                "_EMPFTHRNAMEEXT] IS NULL) OR ([HRIS_EMPFTHRNAMEEXT] = @Original_HRIS_EMPFTHRNAME"& _ 
                "EXT)) AND ((@IsNull_HRIS_EMPMTHRLNAME = 1 AND [HRIS_EMPMTHRLNAME] IS NULL) OR (["& _ 
                "HRIS_EMPMTHRLNAME] = @Original_HRIS_EMPMTHRLNAME)) AND ((@IsNull_HRIS_EMPMTHRFNA"& _ 
                "ME = 1 AND [HRIS_EMPMTHRFNAME] IS NULL) OR ([HRIS_EMPMTHRFNAME] = @Original_HRIS"& _ 
                "_EMPMTHRFNAME)) AND ((@IsNull_HRIS_EMPMTHRMNAME = 1 AND [HRIS_EMPMTHRMNAME] IS N"& _ 
                "ULL) OR ([HRIS_EMPMTHRMNAME] = @Original_HRIS_EMPMTHRMNAME)) AND ((@IsNull_HRIS_"& _ 
                "EMPMTHRMAIDENNAME = 1 AND [HRIS_EMPMTHRMAIDENNAME] IS NULL) OR ([HRIS_EMPMTHRMAI"& _ 
                "DENNAME] = @Original_HRIS_EMPMTHRMAIDENNAME)) AND ((@IsNull_HRIS_EMPGOVTISSUEDID"& _ 
                " = 1 AND [HRIS_EMPGOVTISSUEDID] IS NULL) OR ([HRIS_EMPGOVTISSUEDID] = @Original_"& _ 
                "HRIS_EMPGOVTISSUEDID)) AND ((@IsNull_HRIS_EMPGOVTIDNO = 1 AND [HRIS_EMPGOVTIDNO]"& _ 
                " IS NULL) OR ([HRIS_EMPGOVTIDNO] = @Original_HRIS_EMPGOVTIDNO)) AND ((@IsNull_HR"& _ 
                "IS_EMPGOVTIDDATEISSUED = 1 AND [HRIS_EMPGOVTIDDATEISSUED] IS NULL) OR ([HRIS_EMP"& _ 
                "GOVTIDDATEISSUED] = @Original_HRIS_EMPGOVTIDDATEISSUED)) AND ((@IsNull_HRIS_EMPG"& _ 
                "OVTIDPLACEISSUED = 1 AND [HRIS_EMPGOVTIDPLACEISSUED] IS NULL) OR ([HRIS_EMPGOVTI"& _ 
                "DPLACEISSUED] = @Original_HRIS_EMPGOVTIDPLACEISSUED)) AND ((@IsNull_HRIS_EMPSIGN"& _ 
                "ATURE = 1 AND [HRIS_EMPSIGNATURE] IS NULL) OR ([HRIS_EMPSIGNATURE] = @Original_H"& _ 
                "RIS_EMPSIGNATURE)) AND ((@IsNull_HRIS_EMPDATEACCOMPLISH = 1 AND [HRIS_EMPDATEACC"& _ 
                "OMPLISH] IS NULL) OR ([HRIS_EMPDATEACCOMPLISH] = @Original_HRIS_EMPDATEACCOMPLIS"& _ 
                "H)) AND ((@IsNull_HRIS_EMPSWORNDATE = 1 AND [HRIS_EMPSWORNDATE] IS NULL) OR ([HR"& _ 
                "IS_EMPSWORNDATE] = @Original_HRIS_EMPSWORNDATE)) AND ((@IsNull_HRIS_EMPADOATH = "& _ 
                "1 AND [HRIS_EMPADOATH] IS NULL) OR ([HRIS_EMPADOATH] = @Original_HRIS_EMPADOATH)"& _ 
                ") AND ((@IsNull_HRIS_EMPSRVCSTAT = 1 AND [HRIS_EMPSRVCSTAT] IS NULL) OR ([HRIS_E"& _ 
                "MPSRVCSTAT] = @Original_HRIS_EMPSRVCSTAT)) AND ((@IsNull_HRIS_EMPSRVCSTATDATE = "& _ 
                "1 AND [HRIS_EMPSRVCSTATDATE] IS NULL) OR ([HRIS_EMPSRVCSTATDATE] = @Original_HRI"& _ 
                "S_EMPSRVCSTATDATE)) AND ((@IsNull_HRIS_STATUS = 1 AND [HRIS_STATUS] IS NULL) OR "& _ 
                "([HRIS_STATUS] = @Original_HRIS_STATUS)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPLNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPLNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPLNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPLNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPFNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPFNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPMNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPMNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNAMEEXT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNAMEEXT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNAMEEXT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNAMEEXT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNAMETITLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNAMETITLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNAMETITLE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNAMETITLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPDOB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPDOB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPDOB", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPDOB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPPOB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPOB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPPOB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPOB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPGENDERISMALE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGENDERISMALE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPGENDERISMALE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGENDERISMALE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPCIVILSTAT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPCIVILSTAT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPCIVILSTAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPCIVILSTAT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPHEIGHT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPHEIGHT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPHEIGHT", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPHEIGHT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPWEIGHT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPWEIGHT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPWEIGHT", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPWEIGHT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Pers_EMPBLOODTYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_EMPBLOODTYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Pers_EMPBLOODTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_EMPBLOODTYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPGSISNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGSISNUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPGSISNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGSISNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPPAGIBIGNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPAGIBIGNUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPPAGIBIGNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPAGIBIGNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPPHEALTHNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPHEALTHNUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPPHEALTHNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPHEALTHNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPSSSNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSSSNUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPSSSNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSSSNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPTINNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPTINNUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPTINNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPTINNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPAGENCYNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPAGENCYNUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPAGENCYNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPAGENCYNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPTELNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPTELNUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPTELNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPTELNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPMOBILENUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMOBILENUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPMOBILENUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMOBILENUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPEMAIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPEMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPEMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPEMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPFTHRLNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRLNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPFTHRLNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRLNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPFTHRFNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRFNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPFTHRFNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRFNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPFTHRMNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRMNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPFTHRMNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRMNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPFTHRNAMEEXT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRNAMEEXT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPFTHRNAMEEXT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRNAMEEXT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPMTHRLNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRLNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPMTHRLNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRLNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPMTHRFNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRFNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPMTHRFNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRFNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPMTHRMNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRMNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPMTHRMNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRMNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPMTHRMAIDENNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRMAIDENNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPMTHRMAIDENNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRMAIDENNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPGOVTISSUEDID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTISSUEDID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPGOVTISSUEDID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTISSUEDID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPGOVTIDNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPGOVTIDNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPGOVTIDDATEISSUED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDDATEISSUED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPGOVTIDDATEISSUED", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDDATEISSUED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPGOVTIDPLACEISSUED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDPLACEISSUED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPGOVTIDPLACEISSUED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDPLACEISSUED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPSIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPSIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPDATEACCOMPLISH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPDATEACCOMPLISH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPDATEACCOMPLISH", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPDATEACCOMPLISH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPSWORNDATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSWORNDATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPSWORNDATE", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSWORNDATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPADOATH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPADOATH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPADOATH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPADOATH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPSRVCSTAT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSRVCSTAT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPSRVCSTAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSRVCSTAT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPSRVCSTATDATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSRVCSTATDATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPSRVCSTATDATE", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSRVCSTATDATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblV1_HRISEMPLOYEEDATA] ([HRIS_EMPNO], [HRIS_EMPLNAME], [HRIS_EMPFNA"& _ 
                "ME], [HRIS_EMPMNAME], [HRIS_EMPNAMEEXT], [HRIS_EMPNAMETITLE], [HRIS_EMPDOB], [HR"& _ 
                "IS_EMPPOB], [HRIS_EMPGENDERISMALE], [HRIS_EMPCIVILSTAT], [HRIS_EMPHEIGHT], [HRIS"& _ 
                "_EMPWEIGHT], [Pers_EMPBLOODTYPE], [HRIS_EMPGSISNUM], [HRIS_EMPPAGIBIGNUM], [HRIS"& _ 
                "_EMPPHEALTHNUM], [HRIS_EMPSSSNUM], [HRIS_EMPTINNUM], [HRIS_EMPAGENCYNUM], [HRIS_"& _ 
                "EMPTELNUM], [HRIS_EMPMOBILENUM], [HRIS_EMPEMAIL], [HRIS_EMPFTHRLNAME], [HRIS_EMP"& _ 
                "FTHRFNAME], [HRIS_EMPFTHRMNAME], [HRIS_EMPFTHRNAMEEXT], [HRIS_EMPMTHRLNAME], [HR"& _ 
                "IS_EMPMTHRFNAME], [HRIS_EMPMTHRMNAME], [HRIS_EMPMTHRMAIDENNAME], [HRIS_EMPGOVTIS"& _ 
                "SUEDID], [HRIS_EMPGOVTIDNO], [HRIS_EMPGOVTIDDATEISSUED], [HRIS_EMPGOVTIDPLACEISS"& _ 
                "UED], [HRIS_EMPIMAGE], [HRIS_EMPSIGNATURE], [HRIS_EMPDATEACCOMPLISH], [HRIS_EMPR"& _ 
                "IGHTTHUMB], [HRIS_EMPSWORNDATE], [HRIS_EMPADOATH], [HRIS_EMPSRVCSTAT], [HRIS_EMP"& _ 
                "SRVCSTATDATE], [HRIS_STATUS]) VALUES (@HRIS_EMPNO, @HRIS_EMPLNAME, @HRIS_EMPFNAM"& _ 
                "E, @HRIS_EMPMNAME, @HRIS_EMPNAMEEXT, @HRIS_EMPNAMETITLE, @HRIS_EMPDOB, @HRIS_EMP"& _ 
                "POB, @HRIS_EMPGENDERISMALE, @HRIS_EMPCIVILSTAT, @HRIS_EMPHEIGHT, @HRIS_EMPWEIGHT"& _ 
                ", @Pers_EMPBLOODTYPE, @HRIS_EMPGSISNUM, @HRIS_EMPPAGIBIGNUM, @HRIS_EMPPHEALTHNUM"& _ 
                ", @HRIS_EMPSSSNUM, @HRIS_EMPTINNUM, @HRIS_EMPAGENCYNUM, @HRIS_EMPTELNUM, @HRIS_E"& _ 
                "MPMOBILENUM, @HRIS_EMPEMAIL, @HRIS_EMPFTHRLNAME, @HRIS_EMPFTHRFNAME, @HRIS_EMPFT"& _ 
                "HRMNAME, @HRIS_EMPFTHRNAMEEXT, @HRIS_EMPMTHRLNAME, @HRIS_EMPMTHRFNAME, @HRIS_EMP"& _ 
                "MTHRMNAME, @HRIS_EMPMTHRMAIDENNAME, @HRIS_EMPGOVTISSUEDID, @HRIS_EMPGOVTIDNO, @H"& _ 
                "RIS_EMPGOVTIDDATEISSUED, @HRIS_EMPGOVTIDPLACEISSUED, @HRIS_EMPIMAGE, @HRIS_EMPSI"& _ 
                "GNATURE, @HRIS_EMPDATEACCOMPLISH, @HRIS_EMPRIGHTTHUMB, @HRIS_EMPSWORNDATE, @HRIS"& _ 
                "_EMPADOATH, @HRIS_EMPSRVCSTAT, @HRIS_EMPSRVCSTATDATE, @HRIS_STATUS);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT HRI"& _ 
                "S_EMPNO, HRIS_EMPLNAME, HRIS_EMPFNAME, HRIS_EMPMNAME, HRIS_EMPNAMEEXT, HRIS_EMPN"& _ 
                "AMETITLE, HRIS_EMPDOB, HRIS_EMPPOB, HRIS_EMPGENDERISMALE, HRIS_EMPCIVILSTAT, HRI"& _ 
                "S_EMPHEIGHT, HRIS_EMPWEIGHT, Pers_EMPBLOODTYPE, HRIS_EMPGSISNUM, HRIS_EMPPAGIBIG"& _ 
                "NUM, HRIS_EMPPHEALTHNUM, HRIS_EMPSSSNUM, HRIS_EMPTINNUM, HRIS_EMPAGENCYNUM, HRIS"& _ 
                "_EMPTELNUM, HRIS_EMPMOBILENUM, HRIS_EMPEMAIL, HRIS_EMPFTHRLNAME, HRIS_EMPFTHRFNA"& _ 
                "ME, HRIS_EMPFTHRMNAME, HRIS_EMPFTHRNAMEEXT, HRIS_EMPMTHRLNAME, HRIS_EMPMTHRFNAME"& _ 
                ", HRIS_EMPMTHRMNAME, HRIS_EMPMTHRMAIDENNAME, HRIS_EMPGOVTISSUEDID, HRIS_EMPGOVTI"& _ 
                "DNO, HRIS_EMPGOVTIDDATEISSUED, HRIS_EMPGOVTIDPLACEISSUED, HRIS_EMPIMAGE, HRIS_EM"& _ 
                "PSIGNATURE, HRIS_EMPDATEACCOMPLISH, HRIS_EMPRIGHTTHUMB, HRIS_EMPSWORNDATE, HRIS_"& _ 
                "EMPADOATH, HRIS_EMPSRVCSTAT, HRIS_EMPSRVCSTATDATE, HRIS_STATUS FROM tblV1_HRISEM"& _ 
                "PLOYEEDATA WHERE (HRIS_EMPNO = @HRIS_EMPNO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPLNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPLNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPFNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPMNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNAMEEXT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNAMEEXT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNAMETITLE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNAMETITLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPDOB", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPDOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPPOB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPGENDERISMALE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGENDERISMALE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPCIVILSTAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPCIVILSTAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPHEIGHT", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPHEIGHT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPWEIGHT", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPWEIGHT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pers_EMPBLOODTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_EMPBLOODTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPGSISNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGSISNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPPAGIBIGNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPAGIBIGNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPPHEALTHNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPHEALTHNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPSSSNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSSSNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPTINNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPTINNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPAGENCYNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPAGENCYNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPTELNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPTELNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPMOBILENUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMOBILENUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPEMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPEMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPFTHRLNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRLNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPFTHRFNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRFNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPFTHRMNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRMNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPFTHRNAMEEXT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRNAMEEXT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPMTHRLNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRLNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPMTHRFNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRFNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPMTHRMNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRMNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPMTHRMAIDENNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRMAIDENNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPGOVTISSUEDID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTISSUEDID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPGOVTIDNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPGOVTIDDATEISSUED", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDDATEISSUED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPGOVTIDPLACEISSUED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDPLACEISSUED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPIMAGE", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPIMAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPSIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPDATEACCOMPLISH", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPDATEACCOMPLISH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPRIGHTTHUMB", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPRIGHTTHUMB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPSWORNDATE", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSWORNDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPADOATH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPADOATH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPSRVCSTAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSRVCSTAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPSRVCSTATDATE", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSRVCSTATDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblV1_HRISEMPLOYEEDATA] SET [HRIS_EMPNO] = @HRIS_EMPNO, [HRIS_EMPLNAME] ="& _ 
                " @HRIS_EMPLNAME, [HRIS_EMPFNAME] = @HRIS_EMPFNAME, [HRIS_EMPMNAME] = @HRIS_EMPMN"& _ 
                "AME, [HRIS_EMPNAMEEXT] = @HRIS_EMPNAMEEXT, [HRIS_EMPNAMETITLE] = @HRIS_EMPNAMETI"& _ 
                "TLE, [HRIS_EMPDOB] = @HRIS_EMPDOB, [HRIS_EMPPOB] = @HRIS_EMPPOB, [HRIS_EMPGENDER"& _ 
                "ISMALE] = @HRIS_EMPGENDERISMALE, [HRIS_EMPCIVILSTAT] = @HRIS_EMPCIVILSTAT, [HRIS"& _ 
                "_EMPHEIGHT] = @HRIS_EMPHEIGHT, [HRIS_EMPWEIGHT] = @HRIS_EMPWEIGHT, [Pers_EMPBLOO"& _ 
                "DTYPE] = @Pers_EMPBLOODTYPE, [HRIS_EMPGSISNUM] = @HRIS_EMPGSISNUM, [HRIS_EMPPAGI"& _ 
                "BIGNUM] = @HRIS_EMPPAGIBIGNUM, [HRIS_EMPPHEALTHNUM] = @HRIS_EMPPHEALTHNUM, [HRIS"& _ 
                "_EMPSSSNUM] = @HRIS_EMPSSSNUM, [HRIS_EMPTINNUM] = @HRIS_EMPTINNUM, [HRIS_EMPAGEN"& _ 
                "CYNUM] = @HRIS_EMPAGENCYNUM, [HRIS_EMPTELNUM] = @HRIS_EMPTELNUM, [HRIS_EMPMOBILE"& _ 
                "NUM] = @HRIS_EMPMOBILENUM, [HRIS_EMPEMAIL] = @HRIS_EMPEMAIL, [HRIS_EMPFTHRLNAME]"& _ 
                " = @HRIS_EMPFTHRLNAME, [HRIS_EMPFTHRFNAME] = @HRIS_EMPFTHRFNAME, [HRIS_EMPFTHRMN"& _ 
                "AME] = @HRIS_EMPFTHRMNAME, [HRIS_EMPFTHRNAMEEXT] = @HRIS_EMPFTHRNAMEEXT, [HRIS_E"& _ 
                "MPMTHRLNAME] = @HRIS_EMPMTHRLNAME, [HRIS_EMPMTHRFNAME] = @HRIS_EMPMTHRFNAME, [HR"& _ 
                "IS_EMPMTHRMNAME] = @HRIS_EMPMTHRMNAME, [HRIS_EMPMTHRMAIDENNAME] = @HRIS_EMPMTHRM"& _ 
                "AIDENNAME, [HRIS_EMPGOVTISSUEDID] = @HRIS_EMPGOVTISSUEDID, [HRIS_EMPGOVTIDNO] = "& _ 
                "@HRIS_EMPGOVTIDNO, [HRIS_EMPGOVTIDDATEISSUED] = @HRIS_EMPGOVTIDDATEISSUED, [HRIS"& _ 
                "_EMPGOVTIDPLACEISSUED] = @HRIS_EMPGOVTIDPLACEISSUED, [HRIS_EMPIMAGE] = @HRIS_EMP"& _ 
                "IMAGE, [HRIS_EMPSIGNATURE] = @HRIS_EMPSIGNATURE, [HRIS_EMPDATEACCOMPLISH] = @HRI"& _ 
                "S_EMPDATEACCOMPLISH, [HRIS_EMPRIGHTTHUMB] = @HRIS_EMPRIGHTTHUMB, [HRIS_EMPSWORND"& _ 
                "ATE] = @HRIS_EMPSWORNDATE, [HRIS_EMPADOATH] = @HRIS_EMPADOATH, [HRIS_EMPSRVCSTAT"& _ 
                "] = @HRIS_EMPSRVCSTAT, [HRIS_EMPSRVCSTATDATE] = @HRIS_EMPSRVCSTATDATE, [HRIS_STA"& _ 
                "TUS] = @HRIS_STATUS WHERE (([HRIS_EMPNO] = @Original_HRIS_EMPNO) AND ((@IsNull_H"& _ 
                "RIS_EMPLNAME = 1 AND [HRIS_EMPLNAME] IS NULL) OR ([HRIS_EMPLNAME] = @Original_HR"& _ 
                "IS_EMPLNAME)) AND ((@IsNull_HRIS_EMPFNAME = 1 AND [HRIS_EMPFNAME] IS NULL) OR (["& _ 
                "HRIS_EMPFNAME] = @Original_HRIS_EMPFNAME)) AND ((@IsNull_HRIS_EMPMNAME = 1 AND ["& _ 
                "HRIS_EMPMNAME] IS NULL) OR ([HRIS_EMPMNAME] = @Original_HRIS_EMPMNAME)) AND ((@I"& _ 
                "sNull_HRIS_EMPNAMEEXT = 1 AND [HRIS_EMPNAMEEXT] IS NULL) OR ([HRIS_EMPNAMEEXT] ="& _ 
                " @Original_HRIS_EMPNAMEEXT)) AND ((@IsNull_HRIS_EMPNAMETITLE = 1 AND [HRIS_EMPNA"& _ 
                "METITLE] IS NULL) OR ([HRIS_EMPNAMETITLE] = @Original_HRIS_EMPNAMETITLE)) AND (("& _ 
                "@IsNull_HRIS_EMPDOB = 1 AND [HRIS_EMPDOB] IS NULL) OR ([HRIS_EMPDOB] = @Original"& _ 
                "_HRIS_EMPDOB)) AND ((@IsNull_HRIS_EMPPOB = 1 AND [HRIS_EMPPOB] IS NULL) OR ([HRI"& _ 
                "S_EMPPOB] = @Original_HRIS_EMPPOB)) AND ((@IsNull_HRIS_EMPGENDERISMALE = 1 AND ["& _ 
                "HRIS_EMPGENDERISMALE] IS NULL) OR ([HRIS_EMPGENDERISMALE] = @Original_HRIS_EMPGE"& _ 
                "NDERISMALE)) AND ((@IsNull_HRIS_EMPCIVILSTAT = 1 AND [HRIS_EMPCIVILSTAT] IS NULL"& _ 
                ") OR ([HRIS_EMPCIVILSTAT] = @Original_HRIS_EMPCIVILSTAT)) AND ((@IsNull_HRIS_EMP"& _ 
                "HEIGHT = 1 AND [HRIS_EMPHEIGHT] IS NULL) OR ([HRIS_EMPHEIGHT] = @Original_HRIS_E"& _ 
                "MPHEIGHT)) AND ((@IsNull_HRIS_EMPWEIGHT = 1 AND [HRIS_EMPWEIGHT] IS NULL) OR ([H"& _ 
                "RIS_EMPWEIGHT] = @Original_HRIS_EMPWEIGHT)) AND ((@IsNull_Pers_EMPBLOODTYPE = 1 "& _ 
                "AND [Pers_EMPBLOODTYPE] IS NULL) OR ([Pers_EMPBLOODTYPE] = @Original_Pers_EMPBLO"& _ 
                "ODTYPE)) AND ((@IsNull_HRIS_EMPGSISNUM = 1 AND [HRIS_EMPGSISNUM] IS NULL) OR ([H"& _ 
                "RIS_EMPGSISNUM] = @Original_HRIS_EMPGSISNUM)) AND ((@IsNull_HRIS_EMPPAGIBIGNUM ="& _ 
                " 1 AND [HRIS_EMPPAGIBIGNUM] IS NULL) OR ([HRIS_EMPPAGIBIGNUM] = @Original_HRIS_E"& _ 
                "MPPAGIBIGNUM)) AND ((@IsNull_HRIS_EMPPHEALTHNUM = 1 AND [HRIS_EMPPHEALTHNUM] IS "& _ 
                "NULL) OR ([HRIS_EMPPHEALTHNUM] = @Original_HRIS_EMPPHEALTHNUM)) AND ((@IsNull_HR"& _ 
                "IS_EMPSSSNUM = 1 AND [HRIS_EMPSSSNUM] IS NULL) OR ([HRIS_EMPSSSNUM] = @Original_"& _ 
                "HRIS_EMPSSSNUM)) AND ((@IsNull_HRIS_EMPTINNUM = 1 AND [HRIS_EMPTINNUM] IS NULL) "& _ 
                "OR ([HRIS_EMPTINNUM] = @Original_HRIS_EMPTINNUM)) AND ((@IsNull_HRIS_EMPAGENCYNU"& _ 
                "M = 1 AND [HRIS_EMPAGENCYNUM] IS NULL) OR ([HRIS_EMPAGENCYNUM] = @Original_HRIS_"& _ 
                "EMPAGENCYNUM)) AND ((@IsNull_HRIS_EMPTELNUM = 1 AND [HRIS_EMPTELNUM] IS NULL) OR"& _ 
                " ([HRIS_EMPTELNUM] = @Original_HRIS_EMPTELNUM)) AND ((@IsNull_HRIS_EMPMOBILENUM "& _ 
                "= 1 AND [HRIS_EMPMOBILENUM] IS NULL) OR ([HRIS_EMPMOBILENUM] = @Original_HRIS_EM"& _ 
                "PMOBILENUM)) AND ((@IsNull_HRIS_EMPEMAIL = 1 AND [HRIS_EMPEMAIL] IS NULL) OR ([H"& _ 
                "RIS_EMPEMAIL] = @Original_HRIS_EMPEMAIL)) AND ((@IsNull_HRIS_EMPFTHRLNAME = 1 AN"& _ 
                "D [HRIS_EMPFTHRLNAME] IS NULL) OR ([HRIS_EMPFTHRLNAME] = @Original_HRIS_EMPFTHRL"& _ 
                "NAME)) AND ((@IsNull_HRIS_EMPFTHRFNAME = 1 AND [HRIS_EMPFTHRFNAME] IS NULL) OR ("& _ 
                "[HRIS_EMPFTHRFNAME] = @Original_HRIS_EMPFTHRFNAME)) AND ((@IsNull_HRIS_EMPFTHRMN"& _ 
                "AME = 1 AND [HRIS_EMPFTHRMNAME] IS NULL) OR ([HRIS_EMPFTHRMNAME] = @Original_HRI"& _ 
                "S_EMPFTHRMNAME)) AND ((@IsNull_HRIS_EMPFTHRNAMEEXT = 1 AND [HRIS_EMPFTHRNAMEEXT]"& _ 
                " IS NULL) OR ([HRIS_EMPFTHRNAMEEXT] = @Original_HRIS_EMPFTHRNAMEEXT)) AND ((@IsN"& _ 
                "ull_HRIS_EMPMTHRLNAME = 1 AND [HRIS_EMPMTHRLNAME] IS NULL) OR ([HRIS_EMPMTHRLNAM"& _ 
                "E] = @Original_HRIS_EMPMTHRLNAME)) AND ((@IsNull_HRIS_EMPMTHRFNAME = 1 AND [HRIS"& _ 
                "_EMPMTHRFNAME] IS NULL) OR ([HRIS_EMPMTHRFNAME] = @Original_HRIS_EMPMTHRFNAME)) "& _ 
                "AND ((@IsNull_HRIS_EMPMTHRMNAME = 1 AND [HRIS_EMPMTHRMNAME] IS NULL) OR ([HRIS_E"& _ 
                "MPMTHRMNAME] = @Original_HRIS_EMPMTHRMNAME)) AND ((@IsNull_HRIS_EMPMTHRMAIDENNAM"& _ 
                "E = 1 AND [HRIS_EMPMTHRMAIDENNAME] IS NULL) OR ([HRIS_EMPMTHRMAIDENNAME] = @Orig"& _ 
                "inal_HRIS_EMPMTHRMAIDENNAME)) AND ((@IsNull_HRIS_EMPGOVTISSUEDID = 1 AND [HRIS_E"& _ 
                "MPGOVTISSUEDID] IS NULL) OR ([HRIS_EMPGOVTISSUEDID] = @Original_HRIS_EMPGOVTISSU"& _ 
                "EDID)) AND ((@IsNull_HRIS_EMPGOVTIDNO = 1 AND [HRIS_EMPGOVTIDNO] IS NULL) OR ([H"& _ 
                "RIS_EMPGOVTIDNO] = @Original_HRIS_EMPGOVTIDNO)) AND ((@IsNull_HRIS_EMPGOVTIDDATE"& _ 
                "ISSUED = 1 AND [HRIS_EMPGOVTIDDATEISSUED] IS NULL) OR ([HRIS_EMPGOVTIDDATEISSUED"& _ 
                "] = @Original_HRIS_EMPGOVTIDDATEISSUED)) AND ((@IsNull_HRIS_EMPGOVTIDPLACEISSUED"& _ 
                " = 1 AND [HRIS_EMPGOVTIDPLACEISSUED] IS NULL) OR ([HRIS_EMPGOVTIDPLACEISSUED] = "& _ 
                "@Original_HRIS_EMPGOVTIDPLACEISSUED)) AND ((@IsNull_HRIS_EMPSIGNATURE = 1 AND [H"& _ 
                "RIS_EMPSIGNATURE] IS NULL) OR ([HRIS_EMPSIGNATURE] = @Original_HRIS_EMPSIGNATURE"& _ 
                ")) AND ((@IsNull_HRIS_EMPDATEACCOMPLISH = 1 AND [HRIS_EMPDATEACCOMPLISH] IS NULL"& _ 
                ") OR ([HRIS_EMPDATEACCOMPLISH] = @Original_HRIS_EMPDATEACCOMPLISH)) AND ((@IsNul"& _ 
                "l_HRIS_EMPSWORNDATE = 1 AND [HRIS_EMPSWORNDATE] IS NULL) OR ([HRIS_EMPSWORNDATE]"& _ 
                " = @Original_HRIS_EMPSWORNDATE)) AND ((@IsNull_HRIS_EMPADOATH = 1 AND [HRIS_EMPA"& _ 
                "DOATH] IS NULL) OR ([HRIS_EMPADOATH] = @Original_HRIS_EMPADOATH)) AND ((@IsNull_"& _ 
                "HRIS_EMPSRVCSTAT = 1 AND [HRIS_EMPSRVCSTAT] IS NULL) OR ([HRIS_EMPSRVCSTAT] = @O"& _ 
                "riginal_HRIS_EMPSRVCSTAT)) AND ((@IsNull_HRIS_EMPSRVCSTATDATE = 1 AND [HRIS_EMPS"& _ 
                "RVCSTATDATE] IS NULL) OR ([HRIS_EMPSRVCSTATDATE] = @Original_HRIS_EMPSRVCSTATDAT"& _ 
                "E)) AND ((@IsNull_HRIS_STATUS = 1 AND [HRIS_STATUS] IS NULL) OR ([HRIS_STATUS] ="& _ 
                " @Original_HRIS_STATUS)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT HRIS_EMPNO, HRIS_EMPLNAME, HRIS_EMPFNAME, HRI"& _ 
                "S_EMPMNAME, HRIS_EMPNAMEEXT, HRIS_EMPNAMETITLE, HRIS_EMPDOB, HRIS_EMPPOB, HRIS_E"& _ 
                "MPGENDERISMALE, HRIS_EMPCIVILSTAT, HRIS_EMPHEIGHT, HRIS_EMPWEIGHT, Pers_EMPBLOOD"& _ 
                "TYPE, HRIS_EMPGSISNUM, HRIS_EMPPAGIBIGNUM, HRIS_EMPPHEALTHNUM, HRIS_EMPSSSNUM, H"& _ 
                "RIS_EMPTINNUM, HRIS_EMPAGENCYNUM, HRIS_EMPTELNUM, HRIS_EMPMOBILENUM, HRIS_EMPEMA"& _ 
                "IL, HRIS_EMPFTHRLNAME, HRIS_EMPFTHRFNAME, HRIS_EMPFTHRMNAME, HRIS_EMPFTHRNAMEEXT"& _ 
                ", HRIS_EMPMTHRLNAME, HRIS_EMPMTHRFNAME, HRIS_EMPMTHRMNAME, HRIS_EMPMTHRMAIDENNAM"& _ 
                "E, HRIS_EMPGOVTISSUEDID, HRIS_EMPGOVTIDNO, HRIS_EMPGOVTIDDATEISSUED, HRIS_EMPGOV"& _ 
                "TIDPLACEISSUED, HRIS_EMPIMAGE, HRIS_EMPSIGNATURE, HRIS_EMPDATEACCOMPLISH, HRIS_E"& _ 
                "MPRIGHTTHUMB, HRIS_EMPSWORNDATE, HRIS_EMPADOATH, HRIS_EMPSRVCSTAT, HRIS_EMPSRVCS"& _ 
                "TATDATE, HRIS_STATUS FROM tblV1_HRISEMPLOYEEDATA WHERE (HRIS_EMPNO = @HRIS_EMPNO"& _ 
                ")"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPLNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPLNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPFNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPMNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNAMEEXT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNAMEEXT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNAMETITLE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNAMETITLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPDOB", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPDOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPPOB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPGENDERISMALE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGENDERISMALE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPCIVILSTAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPCIVILSTAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPHEIGHT", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPHEIGHT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPWEIGHT", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPWEIGHT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pers_EMPBLOODTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_EMPBLOODTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPGSISNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGSISNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPPAGIBIGNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPAGIBIGNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPPHEALTHNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPHEALTHNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPSSSNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSSSNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPTINNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPTINNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPAGENCYNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPAGENCYNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPTELNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPTELNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPMOBILENUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMOBILENUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPEMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPEMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPFTHRLNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRLNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPFTHRFNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRFNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPFTHRMNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRMNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPFTHRNAMEEXT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRNAMEEXT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPMTHRLNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRLNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPMTHRFNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRFNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPMTHRMNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRMNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPMTHRMAIDENNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRMAIDENNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPGOVTISSUEDID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTISSUEDID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPGOVTIDNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPGOVTIDDATEISSUED", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDDATEISSUED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPGOVTIDPLACEISSUED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDPLACEISSUED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPIMAGE", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPIMAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPSIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPDATEACCOMPLISH", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPDATEACCOMPLISH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPRIGHTTHUMB", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPRIGHTTHUMB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPSWORNDATE", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSWORNDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPADOATH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPADOATH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPSRVCSTAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSRVCSTAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPSRVCSTATDATE", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSRVCSTATDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPLNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPLNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPLNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPLNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPFNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPFNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPMNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPMNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNAMEEXT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNAMEEXT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNAMEEXT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNAMEEXT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNAMETITLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNAMETITLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNAMETITLE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNAMETITLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPDOB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPDOB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPDOB", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPDOB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPPOB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPOB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPPOB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPOB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPGENDERISMALE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGENDERISMALE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPGENDERISMALE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGENDERISMALE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPCIVILSTAT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPCIVILSTAT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPCIVILSTAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPCIVILSTAT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPHEIGHT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPHEIGHT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPHEIGHT", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPHEIGHT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPWEIGHT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPWEIGHT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPWEIGHT", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPWEIGHT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Pers_EMPBLOODTYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_EMPBLOODTYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Pers_EMPBLOODTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_EMPBLOODTYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPGSISNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGSISNUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPGSISNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGSISNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPPAGIBIGNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPAGIBIGNUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPPAGIBIGNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPAGIBIGNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPPHEALTHNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPHEALTHNUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPPHEALTHNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPPHEALTHNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPSSSNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSSSNUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPSSSNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSSSNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPTINNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPTINNUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPTINNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPTINNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPAGENCYNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPAGENCYNUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPAGENCYNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPAGENCYNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPTELNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPTELNUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPTELNUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPTELNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPMOBILENUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMOBILENUM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPMOBILENUM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMOBILENUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPEMAIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPEMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPEMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPEMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPFTHRLNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRLNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPFTHRLNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRLNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPFTHRFNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRFNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPFTHRFNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRFNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPFTHRMNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRMNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPFTHRMNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRMNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPFTHRNAMEEXT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRNAMEEXT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPFTHRNAMEEXT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPFTHRNAMEEXT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPMTHRLNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRLNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPMTHRLNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRLNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPMTHRFNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRFNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPMTHRFNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRFNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPMTHRMNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRMNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPMTHRMNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRMNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPMTHRMAIDENNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRMAIDENNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPMTHRMAIDENNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPMTHRMAIDENNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPGOVTISSUEDID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTISSUEDID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPGOVTISSUEDID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTISSUEDID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPGOVTIDNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPGOVTIDNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPGOVTIDDATEISSUED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDDATEISSUED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPGOVTIDDATEISSUED", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDDATEISSUED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPGOVTIDPLACEISSUED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDPLACEISSUED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPGOVTIDPLACEISSUED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPGOVTIDPLACEISSUED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPSIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPSIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPDATEACCOMPLISH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPDATEACCOMPLISH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPDATEACCOMPLISH", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPDATEACCOMPLISH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPSWORNDATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSWORNDATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPSWORNDATE", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSWORNDATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPADOATH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPADOATH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPADOATH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPADOATH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPSRVCSTAT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSRVCSTAT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPSRVCSTAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSRVCSTAT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPSRVCSTATDATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSRVCSTATDATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPSRVCSTATDATE", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPSRVCSTATDATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRAMasterDBConnString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        HRIS_EMPNO, HRIS_EMPLNAME, HRIS_EMPFNAME, HRIS_EMPMNAME, HRIS_EMPNA"& _ 
                "MEEXT, HRIS_EMPNAMETITLE, HRIS_EMPDOB, HRIS_EMPPOB, HRIS_EMPGENDERISMALE, HRIS_E"& _ 
                "MPCIVILSTAT, HRIS_EMPHEIGHT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         HRIS_EMPWEIGHT, Pers_EMP"& _ 
                "BLOODTYPE, HRIS_EMPGSISNUM, HRIS_EMPPAGIBIGNUM, HRIS_EMPPHEALTHNUM, HRIS_EMPSSSN"& _ 
                "UM, HRIS_EMPTINNUM, HRIS_EMPAGENCYNUM, HRIS_EMPTELNUM, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  HRIS_EMPMOBILENUM, HRIS_EMPEMAIL, HRIS_EMPFTHRLNAME, HRIS_EMPFTHRFNAME, HRIS_E"& _ 
                "MPFTHRMNAME, HRIS_EMPFTHRNAMEEXT, HRIS_EMPMTHRLNAME, HRIS_EMPMTHRFNAME, HRIS_EMP"& _ 
                "MTHRMNAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         HRIS_EMPMTHRMAIDENNAME, HRIS_EMPGOVTISSUED"& _ 
                "ID, HRIS_EMPGOVTIDNO, HRIS_EMPGOVTIDDATEISSUED, HRIS_EMPGOVTIDPLACEISSUED, HRIS_"& _ 
                "EMPIMAGE, HRIS_EMPSIGNATURE, HRIS_EMPDATEACCOMPLISH, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "HRIS_EMPRIGHTTHUMB, HRIS_EMPSWORNDATE, HRIS_EMPADOATH, HRIS_EMPSRVCSTAT, HRIS_EM"& _ 
                "PSRVCSTATDATE, HRIS_STATUS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_HRISEMPLOYEEDATA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        { fn CONCAT(HRIS_EMPFNAME + ' ' + HRIS_EMPMNAME, ' ' + HRIS_EMPLNAM"& _ 
                "E) } AS FULLNAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_HRISEMPLOYEEDATA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE HRIS_EMPNO  = @H"& _ 
                "RIS_EMPNO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_TABLES.tblV1_HRISEMPLOYEEDATADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_TABLES.tblV1_HRISEMPLOYEEDATADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_TABLES.tblV1_HRISEMPLOYEEDATADataTable = New DS_TABLES.tblV1_HRISEMPLOYEEDATADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_TABLES.tblV1_HRISEMPLOYEEDATADataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_TABLES) As Integer
            Return Me.Adapter.Update(dataSet, "tblV1_HRISEMPLOYEEDATA")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_HRIS_EMPNO As String,  _
                    ByVal Original_HRIS_EMPLNAME As String,  _
                    ByVal Original_HRIS_EMPFNAME As String,  _
                    ByVal Original_HRIS_EMPMNAME As String,  _
                    ByVal Original_HRIS_EMPNAMEEXT As String,  _
                    ByVal Original_HRIS_EMPNAMETITLE As String,  _
                    ByVal Original_HRIS_EMPDOB As Global.System.Nullable(Of Date),  _
                    ByVal Original_HRIS_EMPPOB As String,  _
                    ByVal Original_HRIS_EMPGENDERISMALE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_HRIS_EMPCIVILSTAT As String,  _
                    ByVal Original_HRIS_EMPHEIGHT As Global.System.Nullable(Of Double),  _
                    ByVal Original_HRIS_EMPWEIGHT As Global.System.Nullable(Of Double),  _
                    ByVal Original_Pers_EMPBLOODTYPE As String,  _
                    ByVal Original_HRIS_EMPGSISNUM As String,  _
                    ByVal Original_HRIS_EMPPAGIBIGNUM As String,  _
                    ByVal Original_HRIS_EMPPHEALTHNUM As String,  _
                    ByVal Original_HRIS_EMPSSSNUM As String,  _
                    ByVal Original_HRIS_EMPTINNUM As String,  _
                    ByVal Original_HRIS_EMPAGENCYNUM As String,  _
                    ByVal Original_HRIS_EMPTELNUM As String,  _
                    ByVal Original_HRIS_EMPMOBILENUM As String,  _
                    ByVal Original_HRIS_EMPEMAIL As String,  _
                    ByVal Original_HRIS_EMPFTHRLNAME As String,  _
                    ByVal Original_HRIS_EMPFTHRFNAME As String,  _
                    ByVal Original_HRIS_EMPFTHRMNAME As String,  _
                    ByVal Original_HRIS_EMPFTHRNAMEEXT As String,  _
                    ByVal Original_HRIS_EMPMTHRLNAME As String,  _
                    ByVal Original_HRIS_EMPMTHRFNAME As String,  _
                    ByVal Original_HRIS_EMPMTHRMNAME As String,  _
                    ByVal Original_HRIS_EMPMTHRMAIDENNAME As String,  _
                    ByVal Original_HRIS_EMPGOVTISSUEDID As String,  _
                    ByVal Original_HRIS_EMPGOVTIDNO As String,  _
                    ByVal Original_HRIS_EMPGOVTIDDATEISSUED As Global.System.Nullable(Of Date),  _
                    ByVal Original_HRIS_EMPGOVTIDPLACEISSUED As String,  _
                    ByVal Original_HRIS_EMPSIGNATURE As String,  _
                    ByVal Original_HRIS_EMPDATEACCOMPLISH As Global.System.Nullable(Of Date),  _
                    ByVal Original_HRIS_EMPSWORNDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_HRIS_EMPADOATH As String,  _
                    ByVal Original_HRIS_EMPSRVCSTAT As String,  _
                    ByVal Original_HRIS_EMPSRVCSTATDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_HRIS_STATUS As Global.System.Nullable(Of Integer)) As Integer
            If (Original_HRIS_EMPNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_HRIS_EMPNO")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_HRIS_EMPNO,String)
            End If
            If (Original_HRIS_EMPLNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_HRIS_EMPLNAME,String)
            End If
            If (Original_HRIS_EMPFNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_HRIS_EMPFNAME,String)
            End If
            If (Original_HRIS_EMPMNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_HRIS_EMPMNAME,String)
            End If
            If (Original_HRIS_EMPNAMEEXT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_HRIS_EMPNAMEEXT,String)
            End If
            If (Original_HRIS_EMPNAMETITLE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_HRIS_EMPNAMETITLE,String)
            End If
            If (Original_HRIS_EMPDOB.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_HRIS_EMPDOB.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPPOB Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_HRIS_EMPPOB,String)
            End If
            If (Original_HRIS_EMPGENDERISMALE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_HRIS_EMPGENDERISMALE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPCIVILSTAT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_HRIS_EMPCIVILSTAT,String)
            End If
            If (Original_HRIS_EMPHEIGHT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_HRIS_EMPHEIGHT.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPWEIGHT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_HRIS_EMPWEIGHT.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_Pers_EMPBLOODTYPE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_Pers_EMPBLOODTYPE,String)
            End If
            If (Original_HRIS_EMPGSISNUM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_HRIS_EMPGSISNUM,String)
            End If
            If (Original_HRIS_EMPPAGIBIGNUM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_HRIS_EMPPAGIBIGNUM,String)
            End If
            If (Original_HRIS_EMPPHEALTHNUM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_HRIS_EMPPHEALTHNUM,String)
            End If
            If (Original_HRIS_EMPSSSNUM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_HRIS_EMPSSSNUM,String)
            End If
            If (Original_HRIS_EMPTINNUM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_HRIS_EMPTINNUM,String)
            End If
            If (Original_HRIS_EMPAGENCYNUM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_HRIS_EMPAGENCYNUM,String)
            End If
            If (Original_HRIS_EMPTELNUM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_HRIS_EMPTELNUM,String)
            End If
            If (Original_HRIS_EMPMOBILENUM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_HRIS_EMPMOBILENUM,String)
            End If
            If (Original_HRIS_EMPEMAIL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_HRIS_EMPEMAIL,String)
            End If
            If (Original_HRIS_EMPFTHRLNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_HRIS_EMPFTHRLNAME,String)
            End If
            If (Original_HRIS_EMPFTHRFNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_HRIS_EMPFTHRFNAME,String)
            End If
            If (Original_HRIS_EMPFTHRMNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_HRIS_EMPFTHRMNAME,String)
            End If
            If (Original_HRIS_EMPFTHRNAMEEXT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_HRIS_EMPFTHRNAMEEXT,String)
            End If
            If (Original_HRIS_EMPMTHRLNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_HRIS_EMPMTHRLNAME,String)
            End If
            If (Original_HRIS_EMPMTHRFNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_HRIS_EMPMTHRFNAME,String)
            End If
            If (Original_HRIS_EMPMTHRMNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_HRIS_EMPMTHRMNAME,String)
            End If
            If (Original_HRIS_EMPMTHRMAIDENNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_HRIS_EMPMTHRMAIDENNAME,String)
            End If
            If (Original_HRIS_EMPGOVTISSUEDID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_HRIS_EMPGOVTISSUEDID,String)
            End If
            If (Original_HRIS_EMPGOVTIDNO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_HRIS_EMPGOVTIDNO,String)
            End If
            If (Original_HRIS_EMPGOVTIDDATEISSUED.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_HRIS_EMPGOVTIDDATEISSUED.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPGOVTIDPLACEISSUED Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_HRIS_EMPGOVTIDPLACEISSUED,String)
            End If
            If (Original_HRIS_EMPSIGNATURE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_HRIS_EMPSIGNATURE,String)
            End If
            If (Original_HRIS_EMPDATEACCOMPLISH.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_HRIS_EMPDATEACCOMPLISH.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPSWORNDATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_HRIS_EMPSWORNDATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPADOATH Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_HRIS_EMPADOATH,String)
            End If
            If (Original_HRIS_EMPSRVCSTAT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_HRIS_EMPSRVCSTAT,String)
            End If
            If (Original_HRIS_EMPSRVCSTATDATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_HRIS_EMPSRVCSTATDATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_STATUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_HRIS_STATUS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal HRIS_EMPNO As String,  _
                    ByVal HRIS_EMPLNAME As String,  _
                    ByVal HRIS_EMPFNAME As String,  _
                    ByVal HRIS_EMPMNAME As String,  _
                    ByVal HRIS_EMPNAMEEXT As String,  _
                    ByVal HRIS_EMPNAMETITLE As String,  _
                    ByVal HRIS_EMPDOB As Global.System.Nullable(Of Date),  _
                    ByVal HRIS_EMPPOB As String,  _
                    ByVal HRIS_EMPGENDERISMALE As Global.System.Nullable(Of Boolean),  _
                    ByVal HRIS_EMPCIVILSTAT As String,  _
                    ByVal HRIS_EMPHEIGHT As Global.System.Nullable(Of Double),  _
                    ByVal HRIS_EMPWEIGHT As Global.System.Nullable(Of Double),  _
                    ByVal Pers_EMPBLOODTYPE As String,  _
                    ByVal HRIS_EMPGSISNUM As String,  _
                    ByVal HRIS_EMPPAGIBIGNUM As String,  _
                    ByVal HRIS_EMPPHEALTHNUM As String,  _
                    ByVal HRIS_EMPSSSNUM As String,  _
                    ByVal HRIS_EMPTINNUM As String,  _
                    ByVal HRIS_EMPAGENCYNUM As String,  _
                    ByVal HRIS_EMPTELNUM As String,  _
                    ByVal HRIS_EMPMOBILENUM As String,  _
                    ByVal HRIS_EMPEMAIL As String,  _
                    ByVal HRIS_EMPFTHRLNAME As String,  _
                    ByVal HRIS_EMPFTHRFNAME As String,  _
                    ByVal HRIS_EMPFTHRMNAME As String,  _
                    ByVal HRIS_EMPFTHRNAMEEXT As String,  _
                    ByVal HRIS_EMPMTHRLNAME As String,  _
                    ByVal HRIS_EMPMTHRFNAME As String,  _
                    ByVal HRIS_EMPMTHRMNAME As String,  _
                    ByVal HRIS_EMPMTHRMAIDENNAME As String,  _
                    ByVal HRIS_EMPGOVTISSUEDID As String,  _
                    ByVal HRIS_EMPGOVTIDNO As String,  _
                    ByVal HRIS_EMPGOVTIDDATEISSUED As Global.System.Nullable(Of Date),  _
                    ByVal HRIS_EMPGOVTIDPLACEISSUED As String,  _
                    ByVal HRIS_EMPIMAGE() As Byte,  _
                    ByVal HRIS_EMPSIGNATURE As String,  _
                    ByVal HRIS_EMPDATEACCOMPLISH As Global.System.Nullable(Of Date),  _
                    ByVal HRIS_EMPRIGHTTHUMB() As Byte,  _
                    ByVal HRIS_EMPSWORNDATE As Global.System.Nullable(Of Date),  _
                    ByVal HRIS_EMPADOATH As String,  _
                    ByVal HRIS_EMPSRVCSTAT As String,  _
                    ByVal HRIS_EMPSRVCSTATDATE As Global.System.Nullable(Of Date),  _
                    ByVal HRIS_STATUS As Global.System.Nullable(Of Integer)) As Integer
            If (HRIS_EMPNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HRIS_EMPNO")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(HRIS_EMPNO,String)
            End If
            If (HRIS_EMPLNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(HRIS_EMPLNAME,String)
            End If
            If (HRIS_EMPFNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(HRIS_EMPFNAME,String)
            End If
            If (HRIS_EMPMNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(HRIS_EMPMNAME,String)
            End If
            If (HRIS_EMPNAMEEXT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(HRIS_EMPNAMEEXT,String)
            End If
            If (HRIS_EMPNAMETITLE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(HRIS_EMPNAMETITLE,String)
            End If
            If (HRIS_EMPDOB.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(HRIS_EMPDOB.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPPOB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(HRIS_EMPPOB,String)
            End If
            If (HRIS_EMPGENDERISMALE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(HRIS_EMPGENDERISMALE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPCIVILSTAT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(HRIS_EMPCIVILSTAT,String)
            End If
            If (HRIS_EMPHEIGHT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(HRIS_EMPHEIGHT.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPWEIGHT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(HRIS_EMPWEIGHT.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Pers_EMPBLOODTYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Pers_EMPBLOODTYPE,String)
            End If
            If (HRIS_EMPGSISNUM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(HRIS_EMPGSISNUM,String)
            End If
            If (HRIS_EMPPAGIBIGNUM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(HRIS_EMPPAGIBIGNUM,String)
            End If
            If (HRIS_EMPPHEALTHNUM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(HRIS_EMPPHEALTHNUM,String)
            End If
            If (HRIS_EMPSSSNUM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(HRIS_EMPSSSNUM,String)
            End If
            If (HRIS_EMPTINNUM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(HRIS_EMPTINNUM,String)
            End If
            If (HRIS_EMPAGENCYNUM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(HRIS_EMPAGENCYNUM,String)
            End If
            If (HRIS_EMPTELNUM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(HRIS_EMPTELNUM,String)
            End If
            If (HRIS_EMPMOBILENUM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(HRIS_EMPMOBILENUM,String)
            End If
            If (HRIS_EMPEMAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(HRIS_EMPEMAIL,String)
            End If
            If (HRIS_EMPFTHRLNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(HRIS_EMPFTHRLNAME,String)
            End If
            If (HRIS_EMPFTHRFNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(HRIS_EMPFTHRFNAME,String)
            End If
            If (HRIS_EMPFTHRMNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(HRIS_EMPFTHRMNAME,String)
            End If
            If (HRIS_EMPFTHRNAMEEXT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(HRIS_EMPFTHRNAMEEXT,String)
            End If
            If (HRIS_EMPMTHRLNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(HRIS_EMPMTHRLNAME,String)
            End If
            If (HRIS_EMPMTHRFNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(HRIS_EMPMTHRFNAME,String)
            End If
            If (HRIS_EMPMTHRMNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(HRIS_EMPMTHRMNAME,String)
            End If
            If (HRIS_EMPMTHRMAIDENNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(HRIS_EMPMTHRMAIDENNAME,String)
            End If
            If (HRIS_EMPGOVTISSUEDID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(HRIS_EMPGOVTISSUEDID,String)
            End If
            If (HRIS_EMPGOVTIDNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(HRIS_EMPGOVTIDNO,String)
            End If
            If (HRIS_EMPGOVTIDDATEISSUED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(HRIS_EMPGOVTIDDATEISSUED.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPGOVTIDPLACEISSUED Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(HRIS_EMPGOVTIDPLACEISSUED,String)
            End If
            If (HRIS_EMPIMAGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(HRIS_EMPIMAGE,Byte())
            End If
            If (HRIS_EMPSIGNATURE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(HRIS_EMPSIGNATURE,String)
            End If
            If (HRIS_EMPDATEACCOMPLISH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(HRIS_EMPDATEACCOMPLISH.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPRIGHTTHUMB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(HRIS_EMPRIGHTTHUMB,Byte())
            End If
            If (HRIS_EMPSWORNDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(HRIS_EMPSWORNDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPADOATH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(HRIS_EMPADOATH,String)
            End If
            If (HRIS_EMPSRVCSTAT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(HRIS_EMPSRVCSTAT,String)
            End If
            If (HRIS_EMPSRVCSTATDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(HRIS_EMPSRVCSTATDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (HRIS_STATUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(HRIS_STATUS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal HRIS_EMPNO As String,  _
                    ByVal HRIS_EMPLNAME As String,  _
                    ByVal HRIS_EMPFNAME As String,  _
                    ByVal HRIS_EMPMNAME As String,  _
                    ByVal HRIS_EMPNAMEEXT As String,  _
                    ByVal HRIS_EMPNAMETITLE As String,  _
                    ByVal HRIS_EMPDOB As Global.System.Nullable(Of Date),  _
                    ByVal HRIS_EMPPOB As String,  _
                    ByVal HRIS_EMPGENDERISMALE As Global.System.Nullable(Of Boolean),  _
                    ByVal HRIS_EMPCIVILSTAT As String,  _
                    ByVal HRIS_EMPHEIGHT As Global.System.Nullable(Of Double),  _
                    ByVal HRIS_EMPWEIGHT As Global.System.Nullable(Of Double),  _
                    ByVal Pers_EMPBLOODTYPE As String,  _
                    ByVal HRIS_EMPGSISNUM As String,  _
                    ByVal HRIS_EMPPAGIBIGNUM As String,  _
                    ByVal HRIS_EMPPHEALTHNUM As String,  _
                    ByVal HRIS_EMPSSSNUM As String,  _
                    ByVal HRIS_EMPTINNUM As String,  _
                    ByVal HRIS_EMPAGENCYNUM As String,  _
                    ByVal HRIS_EMPTELNUM As String,  _
                    ByVal HRIS_EMPMOBILENUM As String,  _
                    ByVal HRIS_EMPEMAIL As String,  _
                    ByVal HRIS_EMPFTHRLNAME As String,  _
                    ByVal HRIS_EMPFTHRFNAME As String,  _
                    ByVal HRIS_EMPFTHRMNAME As String,  _
                    ByVal HRIS_EMPFTHRNAMEEXT As String,  _
                    ByVal HRIS_EMPMTHRLNAME As String,  _
                    ByVal HRIS_EMPMTHRFNAME As String,  _
                    ByVal HRIS_EMPMTHRMNAME As String,  _
                    ByVal HRIS_EMPMTHRMAIDENNAME As String,  _
                    ByVal HRIS_EMPGOVTISSUEDID As String,  _
                    ByVal HRIS_EMPGOVTIDNO As String,  _
                    ByVal HRIS_EMPGOVTIDDATEISSUED As Global.System.Nullable(Of Date),  _
                    ByVal HRIS_EMPGOVTIDPLACEISSUED As String,  _
                    ByVal HRIS_EMPIMAGE() As Byte,  _
                    ByVal HRIS_EMPSIGNATURE As String,  _
                    ByVal HRIS_EMPDATEACCOMPLISH As Global.System.Nullable(Of Date),  _
                    ByVal HRIS_EMPRIGHTTHUMB() As Byte,  _
                    ByVal HRIS_EMPSWORNDATE As Global.System.Nullable(Of Date),  _
                    ByVal HRIS_EMPADOATH As String,  _
                    ByVal HRIS_EMPSRVCSTAT As String,  _
                    ByVal HRIS_EMPSRVCSTATDATE As Global.System.Nullable(Of Date),  _
                    ByVal HRIS_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HRIS_EMPNO As String,  _
                    ByVal Original_HRIS_EMPLNAME As String,  _
                    ByVal Original_HRIS_EMPFNAME As String,  _
                    ByVal Original_HRIS_EMPMNAME As String,  _
                    ByVal Original_HRIS_EMPNAMEEXT As String,  _
                    ByVal Original_HRIS_EMPNAMETITLE As String,  _
                    ByVal Original_HRIS_EMPDOB As Global.System.Nullable(Of Date),  _
                    ByVal Original_HRIS_EMPPOB As String,  _
                    ByVal Original_HRIS_EMPGENDERISMALE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_HRIS_EMPCIVILSTAT As String,  _
                    ByVal Original_HRIS_EMPHEIGHT As Global.System.Nullable(Of Double),  _
                    ByVal Original_HRIS_EMPWEIGHT As Global.System.Nullable(Of Double),  _
                    ByVal Original_Pers_EMPBLOODTYPE As String,  _
                    ByVal Original_HRIS_EMPGSISNUM As String,  _
                    ByVal Original_HRIS_EMPPAGIBIGNUM As String,  _
                    ByVal Original_HRIS_EMPPHEALTHNUM As String,  _
                    ByVal Original_HRIS_EMPSSSNUM As String,  _
                    ByVal Original_HRIS_EMPTINNUM As String,  _
                    ByVal Original_HRIS_EMPAGENCYNUM As String,  _
                    ByVal Original_HRIS_EMPTELNUM As String,  _
                    ByVal Original_HRIS_EMPMOBILENUM As String,  _
                    ByVal Original_HRIS_EMPEMAIL As String,  _
                    ByVal Original_HRIS_EMPFTHRLNAME As String,  _
                    ByVal Original_HRIS_EMPFTHRFNAME As String,  _
                    ByVal Original_HRIS_EMPFTHRMNAME As String,  _
                    ByVal Original_HRIS_EMPFTHRNAMEEXT As String,  _
                    ByVal Original_HRIS_EMPMTHRLNAME As String,  _
                    ByVal Original_HRIS_EMPMTHRFNAME As String,  _
                    ByVal Original_HRIS_EMPMTHRMNAME As String,  _
                    ByVal Original_HRIS_EMPMTHRMAIDENNAME As String,  _
                    ByVal Original_HRIS_EMPGOVTISSUEDID As String,  _
                    ByVal Original_HRIS_EMPGOVTIDNO As String,  _
                    ByVal Original_HRIS_EMPGOVTIDDATEISSUED As Global.System.Nullable(Of Date),  _
                    ByVal Original_HRIS_EMPGOVTIDPLACEISSUED As String,  _
                    ByVal Original_HRIS_EMPSIGNATURE As String,  _
                    ByVal Original_HRIS_EMPDATEACCOMPLISH As Global.System.Nullable(Of Date),  _
                    ByVal Original_HRIS_EMPSWORNDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_HRIS_EMPADOATH As String,  _
                    ByVal Original_HRIS_EMPSRVCSTAT As String,  _
                    ByVal Original_HRIS_EMPSRVCSTATDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_HRIS_STATUS As Global.System.Nullable(Of Integer)) As Integer
            If (HRIS_EMPNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HRIS_EMPNO")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(HRIS_EMPNO,String)
            End If
            If (HRIS_EMPLNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(HRIS_EMPLNAME,String)
            End If
            If (HRIS_EMPFNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(HRIS_EMPFNAME,String)
            End If
            If (HRIS_EMPMNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(HRIS_EMPMNAME,String)
            End If
            If (HRIS_EMPNAMEEXT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(HRIS_EMPNAMEEXT,String)
            End If
            If (HRIS_EMPNAMETITLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(HRIS_EMPNAMETITLE,String)
            End If
            If (HRIS_EMPDOB.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(HRIS_EMPDOB.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPPOB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(HRIS_EMPPOB,String)
            End If
            If (HRIS_EMPGENDERISMALE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(HRIS_EMPGENDERISMALE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPCIVILSTAT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(HRIS_EMPCIVILSTAT,String)
            End If
            If (HRIS_EMPHEIGHT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(HRIS_EMPHEIGHT.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPWEIGHT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(HRIS_EMPWEIGHT.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Pers_EMPBLOODTYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Pers_EMPBLOODTYPE,String)
            End If
            If (HRIS_EMPGSISNUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(HRIS_EMPGSISNUM,String)
            End If
            If (HRIS_EMPPAGIBIGNUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(HRIS_EMPPAGIBIGNUM,String)
            End If
            If (HRIS_EMPPHEALTHNUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(HRIS_EMPPHEALTHNUM,String)
            End If
            If (HRIS_EMPSSSNUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(HRIS_EMPSSSNUM,String)
            End If
            If (HRIS_EMPTINNUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(HRIS_EMPTINNUM,String)
            End If
            If (HRIS_EMPAGENCYNUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(HRIS_EMPAGENCYNUM,String)
            End If
            If (HRIS_EMPTELNUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(HRIS_EMPTELNUM,String)
            End If
            If (HRIS_EMPMOBILENUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(HRIS_EMPMOBILENUM,String)
            End If
            If (HRIS_EMPEMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(HRIS_EMPEMAIL,String)
            End If
            If (HRIS_EMPFTHRLNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(HRIS_EMPFTHRLNAME,String)
            End If
            If (HRIS_EMPFTHRFNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(HRIS_EMPFTHRFNAME,String)
            End If
            If (HRIS_EMPFTHRMNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(HRIS_EMPFTHRMNAME,String)
            End If
            If (HRIS_EMPFTHRNAMEEXT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(HRIS_EMPFTHRNAMEEXT,String)
            End If
            If (HRIS_EMPMTHRLNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(HRIS_EMPMTHRLNAME,String)
            End If
            If (HRIS_EMPMTHRFNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(HRIS_EMPMTHRFNAME,String)
            End If
            If (HRIS_EMPMTHRMNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(HRIS_EMPMTHRMNAME,String)
            End If
            If (HRIS_EMPMTHRMAIDENNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(HRIS_EMPMTHRMAIDENNAME,String)
            End If
            If (HRIS_EMPGOVTISSUEDID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(HRIS_EMPGOVTISSUEDID,String)
            End If
            If (HRIS_EMPGOVTIDNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(HRIS_EMPGOVTIDNO,String)
            End If
            If (HRIS_EMPGOVTIDDATEISSUED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(HRIS_EMPGOVTIDDATEISSUED.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPGOVTIDPLACEISSUED Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(HRIS_EMPGOVTIDPLACEISSUED,String)
            End If
            If (HRIS_EMPIMAGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(HRIS_EMPIMAGE,Byte())
            End If
            If (HRIS_EMPSIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(HRIS_EMPSIGNATURE,String)
            End If
            If (HRIS_EMPDATEACCOMPLISH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(HRIS_EMPDATEACCOMPLISH.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPRIGHTTHUMB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(HRIS_EMPRIGHTTHUMB,Byte())
            End If
            If (HRIS_EMPSWORNDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(HRIS_EMPSWORNDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPADOATH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(HRIS_EMPADOATH,String)
            End If
            If (HRIS_EMPSRVCSTAT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(HRIS_EMPSRVCSTAT,String)
            End If
            If (HRIS_EMPSRVCSTATDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(HRIS_EMPSRVCSTATDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (HRIS_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(HRIS_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_HRIS_EMPNO")
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_HRIS_EMPNO,String)
            End If
            If (Original_HRIS_EMPLNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_HRIS_EMPLNAME,String)
            End If
            If (Original_HRIS_EMPFNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_HRIS_EMPFNAME,String)
            End If
            If (Original_HRIS_EMPMNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_HRIS_EMPMNAME,String)
            End If
            If (Original_HRIS_EMPNAMEEXT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_HRIS_EMPNAMEEXT,String)
            End If
            If (Original_HRIS_EMPNAMETITLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_HRIS_EMPNAMETITLE,String)
            End If
            If (Original_HRIS_EMPDOB.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_HRIS_EMPDOB.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPPOB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_HRIS_EMPPOB,String)
            End If
            If (Original_HRIS_EMPGENDERISMALE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_HRIS_EMPGENDERISMALE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPCIVILSTAT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_HRIS_EMPCIVILSTAT,String)
            End If
            If (Original_HRIS_EMPHEIGHT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_HRIS_EMPHEIGHT.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPWEIGHT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_HRIS_EMPWEIGHT.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_Pers_EMPBLOODTYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_Pers_EMPBLOODTYPE,String)
            End If
            If (Original_HRIS_EMPGSISNUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_HRIS_EMPGSISNUM,String)
            End If
            If (Original_HRIS_EMPPAGIBIGNUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_HRIS_EMPPAGIBIGNUM,String)
            End If
            If (Original_HRIS_EMPPHEALTHNUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_HRIS_EMPPHEALTHNUM,String)
            End If
            If (Original_HRIS_EMPSSSNUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_HRIS_EMPSSSNUM,String)
            End If
            If (Original_HRIS_EMPTINNUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_HRIS_EMPTINNUM,String)
            End If
            If (Original_HRIS_EMPAGENCYNUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_HRIS_EMPAGENCYNUM,String)
            End If
            If (Original_HRIS_EMPTELNUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_HRIS_EMPTELNUM,String)
            End If
            If (Original_HRIS_EMPMOBILENUM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_HRIS_EMPMOBILENUM,String)
            End If
            If (Original_HRIS_EMPEMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_HRIS_EMPEMAIL,String)
            End If
            If (Original_HRIS_EMPFTHRLNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_HRIS_EMPFTHRLNAME,String)
            End If
            If (Original_HRIS_EMPFTHRFNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_HRIS_EMPFTHRFNAME,String)
            End If
            If (Original_HRIS_EMPFTHRMNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_HRIS_EMPFTHRMNAME,String)
            End If
            If (Original_HRIS_EMPFTHRNAMEEXT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_HRIS_EMPFTHRNAMEEXT,String)
            End If
            If (Original_HRIS_EMPMTHRLNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_HRIS_EMPMTHRLNAME,String)
            End If
            If (Original_HRIS_EMPMTHRFNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_HRIS_EMPMTHRFNAME,String)
            End If
            If (Original_HRIS_EMPMTHRMNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_HRIS_EMPMTHRMNAME,String)
            End If
            If (Original_HRIS_EMPMTHRMAIDENNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_HRIS_EMPMTHRMAIDENNAME,String)
            End If
            If (Original_HRIS_EMPGOVTISSUEDID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_HRIS_EMPGOVTISSUEDID,String)
            End If
            If (Original_HRIS_EMPGOVTIDNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_HRIS_EMPGOVTIDNO,String)
            End If
            If (Original_HRIS_EMPGOVTIDDATEISSUED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_HRIS_EMPGOVTIDDATEISSUED.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPGOVTIDPLACEISSUED Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_HRIS_EMPGOVTIDPLACEISSUED,String)
            End If
            If (Original_HRIS_EMPSIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_HRIS_EMPSIGNATURE,String)
            End If
            If (Original_HRIS_EMPDATEACCOMPLISH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_HRIS_EMPDATEACCOMPLISH.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPSWORNDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_HRIS_EMPSWORNDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPADOATH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_HRIS_EMPADOATH,String)
            End If
            If (Original_HRIS_EMPSRVCSTAT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_HRIS_EMPSRVCSTAT,String)
            End If
            If (Original_HRIS_EMPSRVCSTATDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Original_HRIS_EMPSRVCSTATDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Original_HRIS_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal HRIS_EMPLNAME As String,  _
                    ByVal HRIS_EMPFNAME As String,  _
                    ByVal HRIS_EMPMNAME As String,  _
                    ByVal HRIS_EMPNAMEEXT As String,  _
                    ByVal HRIS_EMPNAMETITLE As String,  _
                    ByVal HRIS_EMPDOB As Global.System.Nullable(Of Date),  _
                    ByVal HRIS_EMPPOB As String,  _
                    ByVal HRIS_EMPGENDERISMALE As Global.System.Nullable(Of Boolean),  _
                    ByVal HRIS_EMPCIVILSTAT As String,  _
                    ByVal HRIS_EMPHEIGHT As Global.System.Nullable(Of Double),  _
                    ByVal HRIS_EMPWEIGHT As Global.System.Nullable(Of Double),  _
                    ByVal Pers_EMPBLOODTYPE As String,  _
                    ByVal HRIS_EMPGSISNUM As String,  _
                    ByVal HRIS_EMPPAGIBIGNUM As String,  _
                    ByVal HRIS_EMPPHEALTHNUM As String,  _
                    ByVal HRIS_EMPSSSNUM As String,  _
                    ByVal HRIS_EMPTINNUM As String,  _
                    ByVal HRIS_EMPAGENCYNUM As String,  _
                    ByVal HRIS_EMPTELNUM As String,  _
                    ByVal HRIS_EMPMOBILENUM As String,  _
                    ByVal HRIS_EMPEMAIL As String,  _
                    ByVal HRIS_EMPFTHRLNAME As String,  _
                    ByVal HRIS_EMPFTHRFNAME As String,  _
                    ByVal HRIS_EMPFTHRMNAME As String,  _
                    ByVal HRIS_EMPFTHRNAMEEXT As String,  _
                    ByVal HRIS_EMPMTHRLNAME As String,  _
                    ByVal HRIS_EMPMTHRFNAME As String,  _
                    ByVal HRIS_EMPMTHRMNAME As String,  _
                    ByVal HRIS_EMPMTHRMAIDENNAME As String,  _
                    ByVal HRIS_EMPGOVTISSUEDID As String,  _
                    ByVal HRIS_EMPGOVTIDNO As String,  _
                    ByVal HRIS_EMPGOVTIDDATEISSUED As Global.System.Nullable(Of Date),  _
                    ByVal HRIS_EMPGOVTIDPLACEISSUED As String,  _
                    ByVal HRIS_EMPIMAGE() As Byte,  _
                    ByVal HRIS_EMPSIGNATURE As String,  _
                    ByVal HRIS_EMPDATEACCOMPLISH As Global.System.Nullable(Of Date),  _
                    ByVal HRIS_EMPRIGHTTHUMB() As Byte,  _
                    ByVal HRIS_EMPSWORNDATE As Global.System.Nullable(Of Date),  _
                    ByVal HRIS_EMPADOATH As String,  _
                    ByVal HRIS_EMPSRVCSTAT As String,  _
                    ByVal HRIS_EMPSRVCSTATDATE As Global.System.Nullable(Of Date),  _
                    ByVal HRIS_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HRIS_EMPNO As String,  _
                    ByVal Original_HRIS_EMPLNAME As String,  _
                    ByVal Original_HRIS_EMPFNAME As String,  _
                    ByVal Original_HRIS_EMPMNAME As String,  _
                    ByVal Original_HRIS_EMPNAMEEXT As String,  _
                    ByVal Original_HRIS_EMPNAMETITLE As String,  _
                    ByVal Original_HRIS_EMPDOB As Global.System.Nullable(Of Date),  _
                    ByVal Original_HRIS_EMPPOB As String,  _
                    ByVal Original_HRIS_EMPGENDERISMALE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_HRIS_EMPCIVILSTAT As String,  _
                    ByVal Original_HRIS_EMPHEIGHT As Global.System.Nullable(Of Double),  _
                    ByVal Original_HRIS_EMPWEIGHT As Global.System.Nullable(Of Double),  _
                    ByVal Original_Pers_EMPBLOODTYPE As String,  _
                    ByVal Original_HRIS_EMPGSISNUM As String,  _
                    ByVal Original_HRIS_EMPPAGIBIGNUM As String,  _
                    ByVal Original_HRIS_EMPPHEALTHNUM As String,  _
                    ByVal Original_HRIS_EMPSSSNUM As String,  _
                    ByVal Original_HRIS_EMPTINNUM As String,  _
                    ByVal Original_HRIS_EMPAGENCYNUM As String,  _
                    ByVal Original_HRIS_EMPTELNUM As String,  _
                    ByVal Original_HRIS_EMPMOBILENUM As String,  _
                    ByVal Original_HRIS_EMPEMAIL As String,  _
                    ByVal Original_HRIS_EMPFTHRLNAME As String,  _
                    ByVal Original_HRIS_EMPFTHRFNAME As String,  _
                    ByVal Original_HRIS_EMPFTHRMNAME As String,  _
                    ByVal Original_HRIS_EMPFTHRNAMEEXT As String,  _
                    ByVal Original_HRIS_EMPMTHRLNAME As String,  _
                    ByVal Original_HRIS_EMPMTHRFNAME As String,  _
                    ByVal Original_HRIS_EMPMTHRMNAME As String,  _
                    ByVal Original_HRIS_EMPMTHRMAIDENNAME As String,  _
                    ByVal Original_HRIS_EMPGOVTISSUEDID As String,  _
                    ByVal Original_HRIS_EMPGOVTIDNO As String,  _
                    ByVal Original_HRIS_EMPGOVTIDDATEISSUED As Global.System.Nullable(Of Date),  _
                    ByVal Original_HRIS_EMPGOVTIDPLACEISSUED As String,  _
                    ByVal Original_HRIS_EMPSIGNATURE As String,  _
                    ByVal Original_HRIS_EMPDATEACCOMPLISH As Global.System.Nullable(Of Date),  _
                    ByVal Original_HRIS_EMPSWORNDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_HRIS_EMPADOATH As String,  _
                    ByVal Original_HRIS_EMPSRVCSTAT As String,  _
                    ByVal Original_HRIS_EMPSRVCSTATDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_HRIS_STATUS As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(Original_HRIS_EMPNO, HRIS_EMPLNAME, HRIS_EMPFNAME, HRIS_EMPMNAME, HRIS_EMPNAMEEXT, HRIS_EMPNAMETITLE, HRIS_EMPDOB, HRIS_EMPPOB, HRIS_EMPGENDERISMALE, HRIS_EMPCIVILSTAT, HRIS_EMPHEIGHT, HRIS_EMPWEIGHT, Pers_EMPBLOODTYPE, HRIS_EMPGSISNUM, HRIS_EMPPAGIBIGNUM, HRIS_EMPPHEALTHNUM, HRIS_EMPSSSNUM, HRIS_EMPTINNUM, HRIS_EMPAGENCYNUM, HRIS_EMPTELNUM, HRIS_EMPMOBILENUM, HRIS_EMPEMAIL, HRIS_EMPFTHRLNAME, HRIS_EMPFTHRFNAME, HRIS_EMPFTHRMNAME, HRIS_EMPFTHRNAMEEXT, HRIS_EMPMTHRLNAME, HRIS_EMPMTHRFNAME, HRIS_EMPMTHRMNAME, HRIS_EMPMTHRMAIDENNAME, HRIS_EMPGOVTISSUEDID, HRIS_EMPGOVTIDNO, HRIS_EMPGOVTIDDATEISSUED, HRIS_EMPGOVTIDPLACEISSUED, HRIS_EMPIMAGE, HRIS_EMPSIGNATURE, HRIS_EMPDATEACCOMPLISH, HRIS_EMPRIGHTTHUMB, HRIS_EMPSWORNDATE, HRIS_EMPADOATH, HRIS_EMPSRVCSTAT, HRIS_EMPSRVCSTATDATE, HRIS_STATUS, Original_HRIS_EMPNO, Original_HRIS_EMPLNAME, Original_HRIS_EMPFNAME, Original_HRIS_EMPMNAME, Original_HRIS_EMPNAMEEXT, Original_HRIS_EMPNAMETITLE, Original_HRIS_EMPDOB, Original_HRIS_EMPPOB, Original_HRIS_EMPGENDERISMALE, Original_HRIS_EMPCIVILSTAT, Original_HRIS_EMPHEIGHT, Original_HRIS_EMPWEIGHT, Original_Pers_EMPBLOODTYPE, Original_HRIS_EMPGSISNUM, Original_HRIS_EMPPAGIBIGNUM, Original_HRIS_EMPPHEALTHNUM, Original_HRIS_EMPSSSNUM, Original_HRIS_EMPTINNUM, Original_HRIS_EMPAGENCYNUM, Original_HRIS_EMPTELNUM, Original_HRIS_EMPMOBILENUM, Original_HRIS_EMPEMAIL, Original_HRIS_EMPFTHRLNAME, Original_HRIS_EMPFTHRFNAME, Original_HRIS_EMPFTHRMNAME, Original_HRIS_EMPFTHRNAMEEXT, Original_HRIS_EMPMTHRLNAME, Original_HRIS_EMPMTHRFNAME, Original_HRIS_EMPMTHRMNAME, Original_HRIS_EMPMTHRMAIDENNAME, Original_HRIS_EMPGOVTISSUEDID, Original_HRIS_EMPGOVTIDNO, Original_HRIS_EMPGOVTIDDATEISSUED, Original_HRIS_EMPGOVTIDPLACEISSUED, Original_HRIS_EMPSIGNATURE, Original_HRIS_EMPDATEACCOMPLISH, Original_HRIS_EMPSWORNDATE, Original_HRIS_EMPADOATH, Original_HRIS_EMPSRVCSTAT, Original_HRIS_EMPSRVCSTATDATE, Original_HRIS_STATUS)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_GETFULLNAME(ByVal HRIS_EMPNO As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (HRIS_EMPNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HRIS_EMPNO")
            Else
                command.Parameters(0).Value = CType(HRIS_EMPNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblV1_HRISDIVISIONTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblV1_HRISDIVISION"
            tableMapping.ColumnMappings.Add("HDIV_DIVISION", "HDIV_DIVISION")
            tableMapping.ColumnMappings.Add("HDIVS_CODE", "HDIVS_CODE")
            tableMapping.ColumnMappings.Add("HDPT_CODE", "HDPT_CODE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblV1_HRISDIVISION] WHERE (([HDIV_DIVISION] = @Original_HDIV_DIVISIO"& _ 
                "N) AND ([HDIVS_CODE] = @Original_HDIVS_CODE) AND ([HDPT_CODE] = @Original_HDPT_C"& _ 
                "ODE))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDIV_DIVISION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIV_DIVISION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDPT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblV1_HRISDIVISION] ([HDIV_DIVISION], [HDIVS_CODE], [HDPT_CODE]) VAL"& _ 
                "UES (@HDIV_DIVISION, @HDIVS_CODE, @HDPT_CODE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT HDIV_DIVISION, HDIVS_CODE"& _ 
                ", HDPT_CODE FROM tblV1_HRISDIVISION WHERE (HDIVS_CODE = @HDIVS_CODE)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDIV_DIVISION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIV_DIVISION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDPT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblV1_HRISDIVISION] SET [HDIV_DIVISION] = @HDIV_DIVISION, [HDIVS_CODE] = "& _ 
                "@HDIVS_CODE, [HDPT_CODE] = @HDPT_CODE WHERE (([HDIV_DIVISION] = @Original_HDIV_D"& _ 
                "IVISION) AND ([HDIVS_CODE] = @Original_HDIVS_CODE) AND ([HDPT_CODE] = @Original_"& _ 
                "HDPT_CODE));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT HDIV_DIVISION, HDIVS_CODE, HDPT_CODE FROM tblV1_HRISDIVISIO"& _ 
                "N WHERE (HDIVS_CODE = @HDIVS_CODE)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDIV_DIVISION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIV_DIVISION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDPT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDIV_DIVISION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIV_DIVISION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDPT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRAMasterDBConnString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        HDIV_DIVISION, HDIVS_CODE, HDPT_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_HRISDIV"& _ 
                "ISION"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        HDIV_DIVISION, HDIVS_CODE, HDPT_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_HRISDIV"& _ 
                "ISION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (HDPT_CODE = @hdpt_code)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hdpt_code", Global.System.Data.SqlDbType.NVarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "HDPT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        HDIV_DIVISION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_HRISDIVISION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (HD"& _ 
                "IVS_CODE = @HDIVS_CODE)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        HDPT_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_HRISDIVISION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (HDIVS_"& _ 
                "CODE = @HDIVS_CODE )"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_TABLES.tblV1_HRISDIVISIONDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_TABLES.tblV1_HRISDIVISIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_TABLES.tblV1_HRISDIVISIONDataTable = New DS_TABLES.tblV1_HRISDIVISIONDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByDEPTCODE(ByVal dataTable As DS_TABLES.tblV1_HRISDIVISIONDataTable, ByVal hdpt_code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (hdpt_code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("hdpt_code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(hdpt_code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByDEPTCODE(ByVal hdpt_code As String) As DS_TABLES.tblV1_HRISDIVISIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (hdpt_code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("hdpt_code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(hdpt_code,String)
            End If
            Dim dataTable As DS_TABLES.tblV1_HRISDIVISIONDataTable = New DS_TABLES.tblV1_HRISDIVISIONDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_TABLES.tblV1_HRISDIVISIONDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_TABLES) As Integer
            Return Me.Adapter.Update(dataSet, "tblV1_HRISDIVISION")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_GETDIVISIONDESCRIPTION(ByVal HDIVS_CODE As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (HDIVS_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HDIVS_CODE")
            Else
                command.Parameters(0).Value = CType(HDIVS_CODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_GETHDPTCODE(ByVal HDIVS_CODE As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (HDIVS_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HDIVS_CODE")
            Else
                command.Parameters(0).Value = CType(HDIVS_CODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblV1_HRISDEPARTMENTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblV1_HRISDEPARTMENT"
            tableMapping.ColumnMappings.Add("HDPT_CODE", "HDPT_CODE")
            tableMapping.ColumnMappings.Add("HDPT_DEPARTMENT", "HDPT_DEPARTMENT")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblV1_HRISDEPARTMENT] WHERE (([HDPT_CODE] = @Original_HDPT_CODE) AND"& _ 
                " ([HDPT_DEPARTMENT] = @Original_HDPT_DEPARTMENT))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDPT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDPT_DEPARTMENT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDPT_DEPARTMENT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblV1_HRISDEPARTMENT] ([HDPT_CODE], [HDPT_DEPARTMENT]) VALUES (@HDPT"& _ 
                "_CODE, @HDPT_DEPARTMENT);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT HDPT_CODE, HDPT_DEPARTMENT FROM tblV1_HRISDEPA"& _ 
                "RTMENT WHERE (HDPT_CODE = @HDPT_CODE)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDPT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDPT_DEPARTMENT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDPT_DEPARTMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblV1_HRISDEPARTMENT] SET [HDPT_CODE] = @HDPT_CODE, [HDPT_DEPARTMENT] = @"& _ 
                "HDPT_DEPARTMENT WHERE (([HDPT_CODE] = @Original_HDPT_CODE) AND ([HDPT_DEPARTMENT"& _ 
                "] = @Original_HDPT_DEPARTMENT));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT HDPT_CODE, HDPT_DEPARTMENT FROM tblV1_H"& _ 
                "RISDEPARTMENT WHERE (HDPT_CODE = @HDPT_CODE)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDPT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDPT_DEPARTMENT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDPT_DEPARTMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDPT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDPT_DEPARTMENT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDPT_DEPARTMENT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRAMasterDBConnString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        HDPT_CODE, HDPT_DEPARTMENT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_HRISDEPARTMENT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        HDPT_DEPARTMENT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_HRISDEPARTMENT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE       "& _ 
                " (HDPT_CODE = @HDPT_CODE)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDPT_CODE", Global.System.Data.SqlDbType.NVarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "HDPT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_TABLES.tblV1_HRISDEPARTMENTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_TABLES.tblV1_HRISDEPARTMENTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_TABLES.tblV1_HRISDEPARTMENTDataTable = New DS_TABLES.tblV1_HRISDEPARTMENTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_TABLES.tblV1_HRISDEPARTMENTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_TABLES) As Integer
            Return Me.Adapter.Update(dataSet, "tblV1_HRISDEPARTMENT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_HDPT_CODE As String, ByVal Original_HDPT_DEPARTMENT As String) As Integer
            If (Original_HDPT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_HDPT_CODE")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_HDPT_CODE,String)
            End If
            If (Original_HDPT_DEPARTMENT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_HDPT_DEPARTMENT")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_HDPT_DEPARTMENT,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal HDPT_CODE As String, ByVal HDPT_DEPARTMENT As String) As Integer
            If (HDPT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HDPT_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(HDPT_CODE,String)
            End If
            If (HDPT_DEPARTMENT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HDPT_DEPARTMENT")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(HDPT_DEPARTMENT,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal HDPT_CODE As String, ByVal HDPT_DEPARTMENT As String, ByVal Original_HDPT_CODE As String, ByVal Original_HDPT_DEPARTMENT As String) As Integer
            If (HDPT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HDPT_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(HDPT_CODE,String)
            End If
            If (HDPT_DEPARTMENT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HDPT_DEPARTMENT")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(HDPT_DEPARTMENT,String)
            End If
            If (Original_HDPT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_HDPT_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_HDPT_CODE,String)
            End If
            If (Original_HDPT_DEPARTMENT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_HDPT_DEPARTMENT")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_HDPT_DEPARTMENT,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal HDPT_DEPARTMENT As String, ByVal Original_HDPT_CODE As String, ByVal Original_HDPT_DEPARTMENT As String) As Integer
            Return Me.Update(Original_HDPT_CODE, HDPT_DEPARTMENT, Original_HDPT_CODE, Original_HDPT_DEPARTMENT)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_GETDEPARTMENTDESCRIPTION(ByVal HDPT_CODE As String) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (HDPT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HDPT_CODE")
            Else
                command.Parameters(0).Value = CType(HDPT_CODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblV1_DEFPRADEPARTMENTSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblV1_DEFPRADEPARTMENTS"
            tableMapping.ColumnMappings.Add("DEPT_CODE", "DEPT_CODE")
            tableMapping.ColumnMappings.Add("DEPT_NAME", "DEPT_NAME")
            tableMapping.ColumnMappings.Add("DEPT_DESC", "DEPT_DESC")
            tableMapping.ColumnMappings.Add("DEPT_LOC", "DEPT_LOC")
            tableMapping.ColumnMappings.Add("DEPT_STATUS", "DEPT_STATUS")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblV1_DEFPRADEPARTMENTS] WHERE (([DEPT_CODE] = @Original_DEPT_CODE) "& _ 
                "AND ([DEPT_NAME] = @Original_DEPT_NAME) AND ((@IsNull_DEPT_LOC = 1 AND [DEPT_LOC"& _ 
                "] IS NULL) OR ([DEPT_LOC] = @Original_DEPT_LOC)) AND ([DEPT_STATUS] = @Original_"& _ 
                "DEPT_STATUS))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEPT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DEPT_LOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_LOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEPT_LOC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_LOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEPT_STATUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblV1_DEFPRADEPARTMENTS] ([DEPT_CODE], [DEPT_NAME], [DEPT_DESC], [DE"& _ 
                "PT_LOC], [DEPT_STATUS]) VALUES (@DEPT_CODE, @DEPT_NAME, @DEPT_DESC, @DEPT_LOC, @"& _ 
                "DEPT_STATUS);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DEPT_CODE, DEPT_NAME, DEPT_DESC, DEPT_LOC, DEPT_STATUS FRO"& _ 
                "M tblV1_DEFPRADEPARTMENTS WHERE (DEPT_CODE = @DEPT_CODE)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEPT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEPT_DESC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_DESC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEPT_LOC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_LOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEPT_STATUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblV1_DEFPRADEPARTMENTS] SET [DEPT_CODE] = @DEPT_CODE, [DEPT_NAME] = @DEP"& _ 
                "T_NAME, [DEPT_DESC] = @DEPT_DESC, [DEPT_LOC] = @DEPT_LOC, [DEPT_STATUS] = @DEPT_"& _ 
                "STATUS WHERE (([DEPT_CODE] = @Original_DEPT_CODE) AND ([DEPT_NAME] = @Original_D"& _ 
                "EPT_NAME) AND ((@IsNull_DEPT_LOC = 1 AND [DEPT_LOC] IS NULL) OR ([DEPT_LOC] = @O"& _ 
                "riginal_DEPT_LOC)) AND ([DEPT_STATUS] = @Original_DEPT_STATUS));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DEPT_CO"& _ 
                "DE, DEPT_NAME, DEPT_DESC, DEPT_LOC, DEPT_STATUS FROM tblV1_DEFPRADEPARTMENTS WHE"& _ 
                "RE (DEPT_CODE = @DEPT_CODE)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEPT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEPT_DESC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_DESC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEPT_LOC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_LOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEPT_STATUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEPT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DEPT_LOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_LOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEPT_LOC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_LOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEPT_STATUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRAMasterDBConnString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblV1_DEFPRADEPARTMENTS.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_DEFPRADEPARTMENTS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_TABLES.tblV1_DEFPRADEPARTMENTSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_TABLES.tblV1_DEFPRADEPARTMENTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_TABLES.tblV1_DEFPRADEPARTMENTSDataTable = New DS_TABLES.tblV1_DEFPRADEPARTMENTSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_TABLES.tblV1_DEFPRADEPARTMENTSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_TABLES) As Integer
            Return Me.Adapter.Update(dataSet, "tblV1_DEFPRADEPARTMENTS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_DEPT_CODE As String, ByVal Original_DEPT_NAME As String, ByVal Original_DEPT_LOC As String, ByVal Original_DEPT_STATUS As Boolean) As Integer
            If (Original_DEPT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DEPT_CODE")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_DEPT_CODE,String)
            End If
            If (Original_DEPT_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DEPT_NAME")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_DEPT_NAME,String)
            End If
            If (Original_DEPT_LOC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_DEPT_LOC,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_DEPT_STATUS,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DEPT_CODE As String, ByVal DEPT_NAME As String, ByVal DEPT_DESC As String, ByVal DEPT_LOC As String, ByVal DEPT_STATUS As Boolean) As Integer
            If (DEPT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DEPT_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DEPT_CODE,String)
            End If
            If (DEPT_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DEPT_NAME")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DEPT_NAME,String)
            End If
            If (DEPT_DESC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DEPT_DESC,String)
            End If
            If (DEPT_LOC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DEPT_LOC,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(DEPT_STATUS,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DEPT_CODE As String, ByVal DEPT_NAME As String, ByVal DEPT_DESC As String, ByVal DEPT_LOC As String, ByVal DEPT_STATUS As Boolean, ByVal Original_DEPT_CODE As String, ByVal Original_DEPT_NAME As String, ByVal Original_DEPT_LOC As String, ByVal Original_DEPT_STATUS As Boolean) As Integer
            If (DEPT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DEPT_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DEPT_CODE,String)
            End If
            If (DEPT_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DEPT_NAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DEPT_NAME,String)
            End If
            If (DEPT_DESC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DEPT_DESC,String)
            End If
            If (DEPT_LOC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DEPT_LOC,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DEPT_STATUS,Boolean)
            If (Original_DEPT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DEPT_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_DEPT_CODE,String)
            End If
            If (Original_DEPT_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DEPT_NAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_DEPT_NAME,String)
            End If
            If (Original_DEPT_LOC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_DEPT_LOC,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_DEPT_STATUS,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DEPT_NAME As String, ByVal DEPT_DESC As String, ByVal DEPT_LOC As String, ByVal DEPT_STATUS As Boolean, ByVal Original_DEPT_CODE As String, ByVal Original_DEPT_NAME As String, ByVal Original_DEPT_LOC As String, ByVal Original_DEPT_STATUS As Boolean) As Integer
            Return Me.Update(Original_DEPT_CODE, DEPT_NAME, DEPT_DESC, DEPT_LOC, DEPT_STATUS, Original_DEPT_CODE, Original_DEPT_NAME, Original_DEPT_LOC, Original_DEPT_STATUS)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblV1_DEFPRADIVISIONTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblV1_DEFPRADIVISION"
            tableMapping.ColumnMappings.Add("DEPT_CODE", "DEPT_CODE")
            tableMapping.ColumnMappings.Add("DIVS_CODE", "DIVS_CODE")
            tableMapping.ColumnMappings.Add("DIVS_NAME", "DIVS_NAME")
            tableMapping.ColumnMappings.Add("DIVS_DESC", "DIVS_DESC")
            tableMapping.ColumnMappings.Add("DIVS_LOC", "DIVS_LOC")
            tableMapping.ColumnMappings.Add("DIVS_STATUS", "DIVS_STATUS")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblV1_DEFPRADIVISION] WHERE (([DEPT_CODE] = @Original_DEPT_CODE) AND"& _ 
                " ([DIVS_CODE] = @Original_DIVS_CODE) AND ([DIVS_NAME] = @Original_DIVS_NAME) AND"& _ 
                " ((@IsNull_DIVS_LOC = 1 AND [DIVS_LOC] IS NULL) OR ([DIVS_LOC] = @Original_DIVS_"& _ 
                "LOC)) AND ([DIVS_STATUS] = @Original_DIVS_STATUS))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIVS_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIVS_LOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_LOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIVS_LOC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_LOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIVS_STATUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblV1_DEFPRADIVISION] ([DEPT_CODE], [DIVS_CODE], [DIVS_NAME], [DIVS_"& _ 
                "DESC], [DIVS_LOC], [DIVS_STATUS]) VALUES (@DEPT_CODE, @DIVS_CODE, @DIVS_NAME, @D"& _ 
                "IVS_DESC, @DIVS_LOC, @DIVS_STATUS);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DEPT_CODE, DIVS_CODE, DIVS_NAME, DIV"& _ 
                "S_DESC, DIVS_LOC, DIVS_STATUS FROM tblV1_DEFPRADIVISION WHERE (DIVS_CODE = @DIVS"& _ 
                "_CODE)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVS_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVS_DESC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_DESC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVS_LOC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_LOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVS_STATUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblV1_DEFPRADIVISION] SET [DEPT_CODE] = @DEPT_CODE, [DIVS_CODE] = @DIVS_C"& _ 
                "ODE, [DIVS_NAME] = @DIVS_NAME, [DIVS_DESC] = @DIVS_DESC, [DIVS_LOC] = @DIVS_LOC,"& _ 
                " [DIVS_STATUS] = @DIVS_STATUS WHERE (([DEPT_CODE] = @Original_DEPT_CODE) AND ([D"& _ 
                "IVS_CODE] = @Original_DIVS_CODE) AND ([DIVS_NAME] = @Original_DIVS_NAME) AND ((@"& _ 
                "IsNull_DIVS_LOC = 1 AND [DIVS_LOC] IS NULL) OR ([DIVS_LOC] = @Original_DIVS_LOC)"& _ 
                ") AND ([DIVS_STATUS] = @Original_DIVS_STATUS));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DEPT_CODE, DIVS_CODE, DI"& _ 
                "VS_NAME, DIVS_DESC, DIVS_LOC, DIVS_STATUS FROM tblV1_DEFPRADIVISION WHERE (DIVS_"& _ 
                "CODE = @DIVS_CODE)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVS_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVS_DESC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_DESC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVS_LOC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_LOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVS_STATUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEPT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIVS_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIVS_LOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_LOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIVS_LOC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_LOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIVS_STATUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIVS_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRAMasterDBConnString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblV1_DEFPRADIVISION.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_DEFPRADIVISION"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        DEPT_CODE, DIVS_CODE, DIVS_NAME, DIVS_DESC, DIVS_LOC, DIVS_STATUS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "FROM            tblV1_DEFPRADIVISION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (DEPT_CODE = @DEPT_CODE)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEPT_CODE", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "DEPT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_TABLES.tblV1_DEFPRADIVISIONDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_TABLES.tblV1_DEFPRADIVISIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_TABLES.tblV1_DEFPRADIVISIONDataTable = New DS_TABLES.tblV1_DEFPRADIVISIONDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByDEPT_CODE(ByVal dataTable As DS_TABLES.tblV1_DEFPRADIVISIONDataTable, ByVal DEPT_CODE As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (DEPT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DEPT_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DEPT_CODE,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByDEPT_CODE(ByVal DEPT_CODE As String) As DS_TABLES.tblV1_DEFPRADIVISIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (DEPT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DEPT_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DEPT_CODE,String)
            End If
            Dim dataTable As DS_TABLES.tblV1_DEFPRADIVISIONDataTable = New DS_TABLES.tblV1_DEFPRADIVISIONDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_TABLES.tblV1_DEFPRADIVISIONDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_TABLES) As Integer
            Return Me.Adapter.Update(dataSet, "tblV1_DEFPRADIVISION")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_DEPT_CODE As String, ByVal Original_DIVS_CODE As String, ByVal Original_DIVS_NAME As String, ByVal Original_DIVS_LOC As String, ByVal Original_DIVS_STATUS As Boolean) As Integer
            If (Original_DEPT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DEPT_CODE")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_DEPT_CODE,String)
            End If
            If (Original_DIVS_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DIVS_CODE")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_DIVS_CODE,String)
            End If
            If (Original_DIVS_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DIVS_NAME")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_DIVS_NAME,String)
            End If
            If (Original_DIVS_LOC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_DIVS_LOC,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_DIVS_STATUS,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DEPT_CODE As String, ByVal DIVS_CODE As String, ByVal DIVS_NAME As String, ByVal DIVS_DESC As String, ByVal DIVS_LOC As String, ByVal DIVS_STATUS As Boolean) As Integer
            If (DEPT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DEPT_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DEPT_CODE,String)
            End If
            If (DIVS_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DIVS_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DIVS_CODE,String)
            End If
            If (DIVS_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DIVS_NAME")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DIVS_NAME,String)
            End If
            If (DIVS_DESC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DIVS_DESC,String)
            End If
            If (DIVS_LOC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DIVS_LOC,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(DIVS_STATUS,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DEPT_CODE As String, ByVal DIVS_CODE As String, ByVal DIVS_NAME As String, ByVal DIVS_DESC As String, ByVal DIVS_LOC As String, ByVal DIVS_STATUS As Boolean, ByVal Original_DEPT_CODE As String, ByVal Original_DIVS_CODE As String, ByVal Original_DIVS_NAME As String, ByVal Original_DIVS_LOC As String, ByVal Original_DIVS_STATUS As Boolean) As Integer
            If (DEPT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DEPT_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DEPT_CODE,String)
            End If
            If (DIVS_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DIVS_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DIVS_CODE,String)
            End If
            If (DIVS_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DIVS_NAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DIVS_NAME,String)
            End If
            If (DIVS_DESC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DIVS_DESC,String)
            End If
            If (DIVS_LOC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DIVS_LOC,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DIVS_STATUS,Boolean)
            If (Original_DEPT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DEPT_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_DEPT_CODE,String)
            End If
            If (Original_DIVS_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DIVS_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_DIVS_CODE,String)
            End If
            If (Original_DIVS_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DIVS_NAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_DIVS_NAME,String)
            End If
            If (Original_DIVS_LOC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_DIVS_LOC,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_DIVS_STATUS,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DEPT_CODE As String, ByVal DIVS_NAME As String, ByVal DIVS_DESC As String, ByVal DIVS_LOC As String, ByVal DIVS_STATUS As Boolean, ByVal Original_DEPT_CODE As String, ByVal Original_DIVS_CODE As String, ByVal Original_DIVS_NAME As String, ByVal Original_DIVS_LOC As String, ByVal Original_DIVS_STATUS As Boolean) As Integer
            Return Me.Update(DEPT_CODE, Original_DIVS_CODE, DIVS_NAME, DIVS_DESC, DIVS_LOC, DIVS_STATUS, Original_DEPT_CODE, Original_DIVS_CODE, Original_DIVS_NAME, Original_DIVS_LOC, Original_DIVS_STATUS)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPM4_SQ_PR_TRANS_CODETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPM4_SQ_PR_TRANS_CODE"
            tableMapping.ColumnMappings.Add("SERV_TRANS_NUM", "SERV_TRANS_NUM")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRAMasterDBConnString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SPM4_SQ_PR_TRANS_CODE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIV_CODE", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.SPM4_SQ_PR_TRANS_CODE"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIV_CODE", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_TABLES.SPM4_SQ_PR_TRANS_CODEDataTable, ByVal DIV_CODE As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (DIV_CODE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DIV_CODE,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal DIV_CODE As String) As DS_TABLES.SPM4_SQ_PR_TRANS_CODEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (DIV_CODE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DIV_CODE,String)
            End If
            Dim dataTable As DS_TABLES.SPM4_SQ_PR_TRANS_CODEDataTable = New DS_TABLES.SPM4_SQ_PR_TRANS_CODEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SPM4_SQ_PR_GENERATE_TRANS_CODE(ByVal DIV_CODE As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (DIV_CODE Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(DIV_CODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class EMPLOYEEDATATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "EMPLOYEEDATA"
            tableMapping.ColumnMappings.Add("HDIV_DIVISION", "HDIV_DIVISION")
            tableMapping.ColumnMappings.Add("HEDV_DATE", "HEDV_DATE")
            tableMapping.ColumnMappings.Add("HDIVS_CODE", "HDIVS_CODE")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO", "HRIS_EMPNO")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO1", "HRIS_EMPNO1")
            tableMapping.ColumnMappings.Add("HRIS_EMPLNAME", "HRIS_EMPLNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPFNAME", "HRIS_EMPFNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPMNAME", "HRIS_EMPMNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPNAMEEXT", "HRIS_EMPNAMEEXT")
            tableMapping.ColumnMappings.Add("HRIS_EMPNAMETITLE", "HRIS_EMPNAMETITLE")
            tableMapping.ColumnMappings.Add("HRIS_EMPDOB", "HRIS_EMPDOB")
            tableMapping.ColumnMappings.Add("HRIS_EMPPOB", "HRIS_EMPPOB")
            tableMapping.ColumnMappings.Add("HRIS_EMPGENDERISMALE", "HRIS_EMPGENDERISMALE")
            tableMapping.ColumnMappings.Add("HRIS_EMPCIVILSTAT", "HRIS_EMPCIVILSTAT")
            tableMapping.ColumnMappings.Add("HRIS_EMPHEIGHT", "HRIS_EMPHEIGHT")
            tableMapping.ColumnMappings.Add("HRIS_EMPWEIGHT", "HRIS_EMPWEIGHT")
            tableMapping.ColumnMappings.Add("Pers_EMPBLOODTYPE", "Pers_EMPBLOODTYPE")
            tableMapping.ColumnMappings.Add("HRIS_EMPGSISNUM", "HRIS_EMPGSISNUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPPAGIBIGNUM", "HRIS_EMPPAGIBIGNUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPPHEALTHNUM", "HRIS_EMPPHEALTHNUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPSSSNUM", "HRIS_EMPSSSNUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPTINNUM", "HRIS_EMPTINNUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPAGENCYNUM", "HRIS_EMPAGENCYNUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPTELNUM", "HRIS_EMPTELNUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPMOBILENUM", "HRIS_EMPMOBILENUM")
            tableMapping.ColumnMappings.Add("HRIS_EMPEMAIL", "HRIS_EMPEMAIL")
            tableMapping.ColumnMappings.Add("HRIS_EMPFTHRLNAME", "HRIS_EMPFTHRLNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPFTHRFNAME", "HRIS_EMPFTHRFNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPFTHRMNAME", "HRIS_EMPFTHRMNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPFTHRNAMEEXT", "HRIS_EMPFTHRNAMEEXT")
            tableMapping.ColumnMappings.Add("HRIS_EMPMTHRLNAME", "HRIS_EMPMTHRLNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPMTHRFNAME", "HRIS_EMPMTHRFNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPMTHRMNAME", "HRIS_EMPMTHRMNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPMTHRMAIDENNAME", "HRIS_EMPMTHRMAIDENNAME")
            tableMapping.ColumnMappings.Add("HRIS_EMPGOVTISSUEDID", "HRIS_EMPGOVTISSUEDID")
            tableMapping.ColumnMappings.Add("HRIS_EMPGOVTIDNO", "HRIS_EMPGOVTIDNO")
            tableMapping.ColumnMappings.Add("HRIS_EMPGOVTIDDATEISSUED", "HRIS_EMPGOVTIDDATEISSUED")
            tableMapping.ColumnMappings.Add("HRIS_EMPGOVTIDPLACEISSUED", "HRIS_EMPGOVTIDPLACEISSUED")
            tableMapping.ColumnMappings.Add("HRIS_EMPIMAGE", "HRIS_EMPIMAGE")
            tableMapping.ColumnMappings.Add("HRIS_EMPSIGNATURE", "HRIS_EMPSIGNATURE")
            tableMapping.ColumnMappings.Add("HRIS_EMPDATEACCOMPLISH", "HRIS_EMPDATEACCOMPLISH")
            tableMapping.ColumnMappings.Add("HRIS_EMPRIGHTTHUMB", "HRIS_EMPRIGHTTHUMB")
            tableMapping.ColumnMappings.Add("HRIS_EMPSWORNDATE", "HRIS_EMPSWORNDATE")
            tableMapping.ColumnMappings.Add("HRIS_EMPADOATH", "HRIS_EMPADOATH")
            tableMapping.ColumnMappings.Add("HRIS_EMPSRVCSTAT", "HRIS_EMPSRVCSTAT")
            tableMapping.ColumnMappings.Add("HRIS_EMPSRVCSTATDATE", "HRIS_EMPSRVCSTATDATE")
            tableMapping.ColumnMappings.Add("HRIS_STATUS", "HRIS_STATUS")
            tableMapping.ColumnMappings.Add("HDIVS_CODE1", "HDIVS_CODE1")
            tableMapping.ColumnMappings.Add("HDPT_CODE", "HDPT_CODE")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRAMasterDBConnString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT      *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_HRISEMPDIVISION INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         tblV1_HRISEMPLOYEEDATA ON tblV1_HRISEMPDIVISION.HRIS_EMPNO = tblV1_HRIS"& _ 
                "EMPLOYEEDATA.HRIS_EMPNO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblV1_HRISDIVISION "& _ 
                "ON tblV1_HRISEMPDIVISION.HDIVS_CODE = tblV1_HRISDIVISION.HDIVS_CODE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        { fn CONCAT(tblV1_HRISEMPLOYEEDATA.HRIS_EMPFNAME + ' ' + tblV1_HRIS"& _ 
                "EMPLOYEEDATA.HRIS_EMPMNAME, ' ' + tblV1_HRISEMPLOYEEDATA.HRIS_EMPLNAME) } AS FUL"& _ 
                "LNAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_HRISEMPDIVISION INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  tblV1_HRISEMPLOYEEDATA ON tblV1_HRISEMPDIVISION.HRIS_EMPNO = tblV1_HRISEMPLOYE"& _ 
                "EDATA.HRIS_EMPNO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblV1_HRISDIVISION ON tblV"& _ 
                "1_HRISEMPDIVISION.HDIVS_CODE = tblV1_HRISDIVISION.HDIVS_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (tblV"& _ 
                "1_HRISEMPDIVISION.HRIS_EMPNO = @hris_empno)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hris_empno", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_TABLES.EMPLOYEEDATADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_TABLES.EMPLOYEEDATADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_TABLES.EMPLOYEEDATADataTable = New DS_TABLES.EMPLOYEEDATADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_GETFULLNAMEDIVISION(ByVal hris_empno As String) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (hris_empno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("hris_empno")
            Else
                command.Parameters(0).Value = CType(hris_empno,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class EmployeeInfoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "EmployeeInfo"
            tableMapping.ColumnMappings.Add("FULLNAME", "FULLNAME")
            tableMapping.ColumnMappings.Add("HDIV_DIVISION", "HDIV_DIVISION")
            tableMapping.ColumnMappings.Add("HDPT_DEPARTMENT", "HDPT_DEPARTMENT")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO", "HRIS_EMPNO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRAMasterDBConnString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        { fn CONCAT(tblV1_HRISEMPLOYEEDATA.HRIS_EMPFNAME + ' ' + tblV1_HRIS"& _ 
                "EMPLOYEEDATA.HRIS_EMPMNAME, ' ' + tblV1_HRISEMPLOYEEDATA.HRIS_EMPLNAME) } AS FUL"& _ 
                "LNAME, tblV1_HRISDIVISION.HDIV_DIVISION, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblV1_HRISDE"& _ 
                "PARTMENT.HDPT_DEPARTMENT, tblV1_HRISEMPDIVISION.HRIS_EMPNO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV"& _ 
                "1_HRISEMPDIVISION INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblV1_HRISEMPLOYEEDATA ON"& _ 
                " tblV1_HRISEMPDIVISION.HRIS_EMPNO = tblV1_HRISEMPLOYEEDATA.HRIS_EMPNO INNER JOIN"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblV1_HRISDIVISION ON tblV1_HRISEMPDIVISION.HDIVS_COD"& _ 
                "E = tblV1_HRISDIVISION.HDIVS_CODE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblV1_HRI"& _ 
                "SDEPARTMENT ON tblV1_HRISDIVISION.HDPT_CODE = tblV1_HRISDEPARTMENT.HDPT_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        { fn CONCAT(tblV1_HRISEMPLOYEEDATA.HRIS_EMPFNAME + ' ' + tblV1_HRIS"& _ 
                "EMPLOYEEDATA.HRIS_EMPMNAME, ' ' + tblV1_HRISEMPLOYEEDATA.HRIS_EMPLNAME) } AS FUL"& _ 
                "LNAME, tblV1_HRISDIVISION.HDIV_DIVISION, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblV1_HRISDE"& _ 
                "PARTMENT.HDPT_DEPARTMENT, tblV1_HRISEMPDIVISION.HRIS_EMPNO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV"& _ 
                "1_HRISEMPDIVISION INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblV1_HRISEMPLOYEEDATA ON"& _ 
                " tblV1_HRISEMPDIVISION.HRIS_EMPNO = tblV1_HRISEMPLOYEEDATA.HRIS_EMPNO INNER JOIN"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblV1_HRISDIVISION ON tblV1_HRISEMPDIVISION.HDIVS_COD"& _ 
                "E = tblV1_HRISDIVISION.HDIVS_CODE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblV1_HRI"& _ 
                "SDEPARTMENT ON tblV1_HRISDIVISION.HDPT_CODE = tblV1_HRISDEPARTMENT.HDPT_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WH"& _ 
                "ERE        (tblV1_HRISEMPLOYEEDATA.HRIS_STATUS = 1) AND ((tblV1_HRISEMPLOYEEDATA"& _ 
                ".HRIS_EMPLNAME LIKE '%' + @search + '%') OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (tblV1_HRI"& _ 
                "SEMPLOYEEDATA.HRIS_EMPFNAME LIKE '%' + @search + '%') OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   (tblV1_HRISEMPLOYEEDATA.HRIS_EMPMNAME LIKE '%' + @search + '%'))"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@search", Global.System.Data.SqlDbType.NVarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPLNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_TABLES.EmployeeInfoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_TABLES.EmployeeInfoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_TABLES.EmployeeInfoDataTable = New DS_TABLES.EmployeeInfoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySearch(ByVal dataTable As DS_TABLES.EmployeeInfoDataTable, ByVal search As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (search Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(search,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBySearch(ByVal search As String) As DS_TABLES.EmployeeInfoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (search Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(search,String)
            End If
            Dim dataTable As DS_TABLES.EmployeeInfoDataTable = New DS_TABLES.EmployeeInfoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _tblV2_UsersAccountTableAdapter As tblV2_UsersAccountTableAdapter
        
        Private _tblV1_USERACCOUNTTableAdapter As tblV1_USERACCOUNTTableAdapter
        
        Private _tblV2_ACCOUNTCODETableAdapter As tblV2_ACCOUNTCODETableAdapter
        
        Private _tblV1_USERACCOUNTLOGSTableAdapter As tblV1_USERACCOUNTLOGSTableAdapter
        
        Private _tblV1_HRISEMPLOYEEDATATableAdapter As tblV1_HRISEMPLOYEEDATATableAdapter
        
        Private _tblV1_HRISDIVISIONTableAdapter As tblV1_HRISDIVISIONTableAdapter
        
        Private _tblV1_HRISDEPARTMENTTableAdapter As tblV1_HRISDEPARTMENTTableAdapter
        
        Private _tblV1_DEFPRADEPARTMENTSTableAdapter As tblV1_DEFPRADEPARTMENTSTableAdapter
        
        Private _tblV1_DEFPRADIVISIONTableAdapter As tblV1_DEFPRADIVISIONTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblV2_UsersAccountTableAdapter() As tblV2_UsersAccountTableAdapter
            Get
                Return Me._tblV2_UsersAccountTableAdapter
            End Get
            Set
                Me._tblV2_UsersAccountTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblV1_USERACCOUNTTableAdapter() As tblV1_USERACCOUNTTableAdapter
            Get
                Return Me._tblV1_USERACCOUNTTableAdapter
            End Get
            Set
                Me._tblV1_USERACCOUNTTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblV2_ACCOUNTCODETableAdapter() As tblV2_ACCOUNTCODETableAdapter
            Get
                Return Me._tblV2_ACCOUNTCODETableAdapter
            End Get
            Set
                Me._tblV2_ACCOUNTCODETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblV1_USERACCOUNTLOGSTableAdapter() As tblV1_USERACCOUNTLOGSTableAdapter
            Get
                Return Me._tblV1_USERACCOUNTLOGSTableAdapter
            End Get
            Set
                Me._tblV1_USERACCOUNTLOGSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblV1_HRISEMPLOYEEDATATableAdapter() As tblV1_HRISEMPLOYEEDATATableAdapter
            Get
                Return Me._tblV1_HRISEMPLOYEEDATATableAdapter
            End Get
            Set
                Me._tblV1_HRISEMPLOYEEDATATableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblV1_HRISDIVISIONTableAdapter() As tblV1_HRISDIVISIONTableAdapter
            Get
                Return Me._tblV1_HRISDIVISIONTableAdapter
            End Get
            Set
                Me._tblV1_HRISDIVISIONTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblV1_HRISDEPARTMENTTableAdapter() As tblV1_HRISDEPARTMENTTableAdapter
            Get
                Return Me._tblV1_HRISDEPARTMENTTableAdapter
            End Get
            Set
                Me._tblV1_HRISDEPARTMENTTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblV1_DEFPRADEPARTMENTSTableAdapter() As tblV1_DEFPRADEPARTMENTSTableAdapter
            Get
                Return Me._tblV1_DEFPRADEPARTMENTSTableAdapter
            End Get
            Set
                Me._tblV1_DEFPRADEPARTMENTSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblV1_DEFPRADIVISIONTableAdapter() As tblV1_DEFPRADIVISIONTableAdapter
            Get
                Return Me._tblV1_DEFPRADIVISIONTableAdapter
            End Get
            Set
                Me._tblV1_DEFPRADIVISIONTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._tblV2_UsersAccountTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblV2_UsersAccountTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblV2_UsersAccountTableAdapter.Connection
                End If
                If ((Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblV1_USERACCOUNTTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblV1_USERACCOUNTTableAdapter.Connection
                End If
                If ((Not (Me._tblV2_ACCOUNTCODETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblV2_ACCOUNTCODETableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblV2_ACCOUNTCODETableAdapter.Connection
                End If
                If ((Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblV1_USERACCOUNTLOGSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblV1_USERACCOUNTLOGSTableAdapter.Connection
                End If
                If ((Not (Me._tblV1_HRISEMPLOYEEDATATableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblV1_HRISEMPLOYEEDATATableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblV1_HRISEMPLOYEEDATATableAdapter.Connection
                End If
                If ((Not (Me._tblV1_HRISDIVISIONTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblV1_HRISDIVISIONTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblV1_HRISDIVISIONTableAdapter.Connection
                End If
                If ((Not (Me._tblV1_HRISDEPARTMENTTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblV1_HRISDEPARTMENTTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblV1_HRISDEPARTMENTTableAdapter.Connection
                End If
                If ((Not (Me._tblV1_DEFPRADEPARTMENTSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblV1_DEFPRADEPARTMENTSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblV1_DEFPRADEPARTMENTSTableAdapter.Connection
                End If
                If ((Not (Me._tblV1_DEFPRADIVISIONTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblV1_DEFPRADIVISIONTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblV1_DEFPRADIVISIONTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._tblV2_UsersAccountTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblV2_ACCOUNTCODETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblV1_HRISEMPLOYEEDATATableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblV1_HRISDIVISIONTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblV1_HRISDEPARTMENTTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblV1_DEFPRADEPARTMENTSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblV1_DEFPRADIVISIONTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DS_TABLES, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblV1_HRISDEPARTMENTTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblV1_HRISDEPARTMENT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblV1_HRISDEPARTMENTTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblV1_DEFPRADEPARTMENTSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblV1_DEFPRADEPARTMENTS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblV1_DEFPRADEPARTMENTSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblV2_UsersAccountTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblV2_UsersAccount.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblV2_UsersAccountTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblV1_USERACCOUNT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblV1_USERACCOUNTTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblV2_ACCOUNTCODETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblV2_ACCOUNTCODE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblV2_ACCOUNTCODETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblV1_USERACCOUNTLOGS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblV1_USERACCOUNTLOGSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblV1_HRISEMPLOYEEDATATableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblV1_HRISEMPLOYEEDATA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblV1_HRISEMPLOYEEDATATableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblV1_HRISDIVISIONTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblV1_HRISDIVISION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblV1_HRISDIVISIONTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblV1_DEFPRADIVISIONTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblV1_DEFPRADIVISION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblV1_DEFPRADIVISIONTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DS_TABLES, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblV1_HRISDEPARTMENTTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblV1_HRISDEPARTMENT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblV1_HRISDEPARTMENTTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblV1_DEFPRADEPARTMENTSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblV1_DEFPRADEPARTMENTS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblV1_DEFPRADEPARTMENTSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblV2_UsersAccountTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblV2_UsersAccount.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblV2_UsersAccountTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblV1_USERACCOUNT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblV1_USERACCOUNTTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblV2_ACCOUNTCODETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblV2_ACCOUNTCODE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblV2_ACCOUNTCODETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblV1_USERACCOUNTLOGS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblV1_USERACCOUNTLOGSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblV1_HRISEMPLOYEEDATATableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblV1_HRISEMPLOYEEDATA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblV1_HRISEMPLOYEEDATATableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblV1_HRISDIVISIONTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblV1_HRISDIVISION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblV1_HRISDIVISIONTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblV1_DEFPRADIVISIONTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblV1_DEFPRADIVISION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblV1_DEFPRADIVISIONTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DS_TABLES, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblV1_DEFPRADIVISIONTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblV1_DEFPRADIVISION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblV1_DEFPRADIVISIONTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblV1_HRISDIVISIONTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblV1_HRISDIVISION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblV1_HRISDIVISIONTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblV1_HRISEMPLOYEEDATATableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblV1_HRISEMPLOYEEDATA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblV1_HRISEMPLOYEEDATATableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblV1_USERACCOUNTLOGS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblV1_USERACCOUNTLOGSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblV2_ACCOUNTCODETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblV2_ACCOUNTCODE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblV2_ACCOUNTCODETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblV1_USERACCOUNT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblV1_USERACCOUNTTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblV2_UsersAccountTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblV2_UsersAccount.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblV2_UsersAccountTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblV1_DEFPRADEPARTMENTSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblV1_DEFPRADEPARTMENTS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblV1_DEFPRADEPARTMENTSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblV1_HRISDEPARTMENTTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblV1_HRISDEPARTMENT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblV1_HRISDEPARTMENTTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DS_TABLES) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._tblV2_UsersAccountTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblV2_UsersAccountTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblV1_USERACCOUNTTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblV2_ACCOUNTCODETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblV2_ACCOUNTCODETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblV1_USERACCOUNTLOGSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblV1_HRISEMPLOYEEDATATableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblV1_HRISEMPLOYEEDATATableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblV1_HRISDIVISIONTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblV1_HRISDIVISIONTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblV1_HRISDEPARTMENTTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblV1_HRISDEPARTMENTTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblV1_DEFPRADEPARTMENTSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblV1_DEFPRADEPARTMENTSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblV1_DEFPRADIVISIONTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblV1_DEFPRADIVISIONTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._tblV2_UsersAccountTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblV2_UsersAccountTableAdapter, Me._tblV2_UsersAccountTableAdapter.Connection)
                    Me._tblV2_UsersAccountTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV2_UsersAccountTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblV2_UsersAccountTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblV2_UsersAccountTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblV2_UsersAccountTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblV1_USERACCOUNTTableAdapter, Me._tblV1_USERACCOUNTTableAdapter.Connection)
                    Me._tblV1_USERACCOUNTTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_USERACCOUNTTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblV1_USERACCOUNTTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblV1_USERACCOUNTTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblV1_USERACCOUNTTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblV2_ACCOUNTCODETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblV2_ACCOUNTCODETableAdapter, Me._tblV2_ACCOUNTCODETableAdapter.Connection)
                    Me._tblV2_ACCOUNTCODETableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV2_ACCOUNTCODETableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblV2_ACCOUNTCODETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblV2_ACCOUNTCODETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblV2_ACCOUNTCODETableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblV1_USERACCOUNTLOGSTableAdapter, Me._tblV1_USERACCOUNTLOGSTableAdapter.Connection)
                    Me._tblV1_USERACCOUNTLOGSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_USERACCOUNTLOGSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblV1_USERACCOUNTLOGSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblV1_USERACCOUNTLOGSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblV1_USERACCOUNTLOGSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblV1_HRISEMPLOYEEDATATableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblV1_HRISEMPLOYEEDATATableAdapter, Me._tblV1_HRISEMPLOYEEDATATableAdapter.Connection)
                    Me._tblV1_HRISEMPLOYEEDATATableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_HRISEMPLOYEEDATATableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblV1_HRISEMPLOYEEDATATableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblV1_HRISEMPLOYEEDATATableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblV1_HRISEMPLOYEEDATATableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblV1_HRISDIVISIONTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblV1_HRISDIVISIONTableAdapter, Me._tblV1_HRISDIVISIONTableAdapter.Connection)
                    Me._tblV1_HRISDIVISIONTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_HRISDIVISIONTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblV1_HRISDIVISIONTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblV1_HRISDIVISIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblV1_HRISDIVISIONTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblV1_HRISDEPARTMENTTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblV1_HRISDEPARTMENTTableAdapter, Me._tblV1_HRISDEPARTMENTTableAdapter.Connection)
                    Me._tblV1_HRISDEPARTMENTTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_HRISDEPARTMENTTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblV1_HRISDEPARTMENTTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblV1_HRISDEPARTMENTTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblV1_HRISDEPARTMENTTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblV1_DEFPRADEPARTMENTSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblV1_DEFPRADEPARTMENTSTableAdapter, Me._tblV1_DEFPRADEPARTMENTSTableAdapter.Connection)
                    Me._tblV1_DEFPRADEPARTMENTSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_DEFPRADEPARTMENTSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblV1_DEFPRADEPARTMENTSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblV1_DEFPRADEPARTMENTSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblV1_DEFPRADEPARTMENTSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblV1_DEFPRADIVISIONTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblV1_DEFPRADIVISIONTableAdapter, Me._tblV1_DEFPRADIVISIONTableAdapter.Connection)
                    Me._tblV1_DEFPRADIVISIONTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_DEFPRADIVISIONTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblV1_DEFPRADIVISIONTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblV1_DEFPRADIVISIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblV1_DEFPRADIVISIONTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._tblV2_UsersAccountTableAdapter) Is Nothing) Then
                    Me._tblV2_UsersAccountTableAdapter.Connection = CType(revertConnections(Me._tblV2_UsersAccountTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV2_UsersAccountTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing) Then
                    Me._tblV1_USERACCOUNTTableAdapter.Connection = CType(revertConnections(Me._tblV1_USERACCOUNTTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_USERACCOUNTTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblV2_ACCOUNTCODETableAdapter) Is Nothing) Then
                    Me._tblV2_ACCOUNTCODETableAdapter.Connection = CType(revertConnections(Me._tblV2_ACCOUNTCODETableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV2_ACCOUNTCODETableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing) Then
                    Me._tblV1_USERACCOUNTLOGSTableAdapter.Connection = CType(revertConnections(Me._tblV1_USERACCOUNTLOGSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_USERACCOUNTLOGSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblV1_HRISEMPLOYEEDATATableAdapter) Is Nothing) Then
                    Me._tblV1_HRISEMPLOYEEDATATableAdapter.Connection = CType(revertConnections(Me._tblV1_HRISEMPLOYEEDATATableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_HRISEMPLOYEEDATATableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblV1_HRISDIVISIONTableAdapter) Is Nothing) Then
                    Me._tblV1_HRISDIVISIONTableAdapter.Connection = CType(revertConnections(Me._tblV1_HRISDIVISIONTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_HRISDIVISIONTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblV1_HRISDEPARTMENTTableAdapter) Is Nothing) Then
                    Me._tblV1_HRISDEPARTMENTTableAdapter.Connection = CType(revertConnections(Me._tblV1_HRISDEPARTMENTTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_HRISDEPARTMENTTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblV1_DEFPRADEPARTMENTSTableAdapter) Is Nothing) Then
                    Me._tblV1_DEFPRADEPARTMENTSTableAdapter.Connection = CType(revertConnections(Me._tblV1_DEFPRADEPARTMENTSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_DEFPRADEPARTMENTSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblV1_DEFPRADIVISIONTableAdapter) Is Nothing) Then
                    Me._tblV1_DEFPRADIVISIONTableAdapter.Connection = CType(revertConnections(Me._tblV1_DEFPRADIVISIONTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_DEFPRADIVISIONTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace

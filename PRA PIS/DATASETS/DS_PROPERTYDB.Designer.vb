'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DS_PROPERTYDB"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DS_PROPERTYDB
    Inherits Global.System.Data.DataSet
    
    Private tableTBLG3_COMPANY_INFO As TBLG3_COMPANY_INFODataTable
    
    Private tabletblM4_PURCHASEREQUEST_ITEM As tblM4_PURCHASEREQUEST_ITEMDataTable
    
    Private tableTBLG3_DELIVER_RECEIPT_DETAILS As TBLG3_DELIVER_RECEIPT_DETAILSDataTable
    
    Private tableTBLG3_DELIVERY_RECEIPT As TBLG3_DELIVERY_RECEIPTDataTable
    
    Private tableTBLG3_INVOICE As TBLG3_INVOICEDataTable
    
    Private tableTBLG3_INVOICE_DETAILS As TBLG3_INVOICE_DETAILSDataTable
    
    Private tableTBLG3_PRIMARY_SIGNATORY As TBLG3_PRIMARY_SIGNATORYDataTable
    
    Private tableTBLG3_REG_BUS As TBLG3_REG_BUSDataTable
    
    Private tableTBLG3_REG_DV As TBLG3_REG_DVDataTable
    
    Private tableTBLG3_REG_PARTICULAR As TBLG3_REG_PARTICULARDataTable
    
    Private tableTBLG3_SIGNATORY As TBLG3_SIGNATORYDataTable
    
    Private tableTBLG3_SIGNATORY_TYPE As TBLG3_SIGNATORY_TYPEDataTable
    
    Private tableTBLG3_UNITS As TBLG3_UNITSDataTable
    
    Private tabletblM4_PURCHASEREQUEST As tblM4_PURCHASEREQUESTDataTable
    
    Private tableVWG3_DR_LIST As VWG3_DR_LISTDataTable
    
    Private tableVWG3_REG_DV As VWG3_REG_DVDataTable
    
    Private tableVWG3_EMPLOYEE_LIST As VWG3_EMPLOYEE_LISTDataTable
    
    Private tableVWG3_INVOICE_LIST As VWG3_INVOICE_LISTDataTable
    
    Private tableVWG3_PRIMARY_SIGNATORY As VWG3_PRIMARY_SIGNATORYDataTable
    
    Private tableVWG3_REG_BUS As VWG3_REG_BUSDataTable
    
    Private tableSPM4_PRCODE As SPM4_PRCODEDataTable
    
    Private tableSPM4_CURRENTDATETIME As SPM4_CURRENTDATETIMEDataTable
    
    Private tableTBLG3_SIGNATORY1 As TBLG3_SIGNATORY1DataTable
    
    Private tableSPM4_GETPR_INFO As SPM4_GETPR_INFODataTable
    
    Private tabletblM4_CATEGORY1 As tblM4_CATEGORY1DataTable
    
    Private tabletblM4_ITEMBRAND1 As tblM4_ITEMBRAND1DataTable
    
    Private tabletblM4_SUB_CATEGORY1 As tblM4_SUB_CATEGORY1DataTable
    
    Private tableSPM4_INVENTORY_REPORT As SPM4_INVENTORY_REPORTDataTable
    
    Private tableSPM4_PROPERTY_NO As SPM4_PROPERTY_NODataTable
    
    Private tabletblM4_PURCHASEREQUEST_CATEGORY As tblM4_PURCHASEREQUEST_CATEGORYDataTable
    
    Private tableSPM4_PURCHASELIST As SPM4_PURCHASELISTDataTable
    
    Private tableSPM4_PURCHASEREQUEST_STATUS As SPM4_PURCHASEREQUEST_STATUSDataTable
    
    Private tabletblM4_PURCHASEREQUEST_CANCELED As tblM4_PURCHASEREQUEST_CANCELEDDataTable
    
    Private tabletblM4_PURCHASEREQUEST_REVISION As tblM4_PURCHASEREQUEST_REVISIONDataTable
    
    Private tabletblM4_PURCHASEREQUEST_POSTED As tblM4_PURCHASEREQUEST_POSTEDDataTable
    
    Private tabletblM4_PURCHASEREQUEST_ACCEPTED As tblM4_PURCHASEREQUEST_ACCEPTEDDataTable
    
    Private tabletblM4_PURCHASEREQUEST_PROVIDER As tblM4_PURCHASEREQUEST_PROVIDERDataTable
    
    Private tabletblM4_INVENTORY_ITEMS_LOCATION As tblM4_INVENTORY_ITEMS_LOCATIONDataTable
    
    Private tabletblM4_INVENTORY_ITEMS_DEFLOCATION As tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable
    
    Private tableSPM4_INVENTORYDGVLIST As SPM4_INVENTORYDGVLISTDataTable
    
    Private tabletblM4_INVENTORY_CATEGORY As tblM4_INVENTORY_CATEGORYDataTable
    
    Private tabletblM4_INVENTORY_ITEMBRAND As tblM4_INVENTORY_ITEMBRANDDataTable
    
    Private tabletblM4_INVENTORY_ITEMS As tblM4_INVENTORY_ITEMSDataTable
    
    Private tabletblM4_INVENTORY_SUB_CATEGORY As tblM4_INVENTORY_SUB_CATEGORYDataTable
    
    Private tabletblM4_INVENTORY_CATEGORY1 As tblM4_INVENTORY_CATEGORY1DataTable
    
    Private tabletblM4_INVENTORY_ITEMBRAND1 As tblM4_INVENTORY_ITEMBRAND1DataTable
    
    Private tabletblM4_CATEGORY_AND_SUB As tblM4_CATEGORY_AND_SUBDataTable
    
    Private tabletblM4_INVENTORY_ASSIGN_PERSON As tblM4_INVENTORY_ASSIGN_PERSONDataTable
    
    Private tabletblM4_INVENTORY_ITEMS1 As tblM4_INVENTORY_ITEMS1DataTable
    
    Private tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE As tblM4_INVENTORY_ACQUISITION_ITEM_USAGEDataTable
    
    Private tabletblM4_INVENTORY_ACQUISITION_VALUE As tblM4_INVENTORY_ACQUISITION_VALUEDataTable
    
    Private tabletblM4_INVENTORY_ITEMS_PROPERTY As tblM4_INVENTORY_ITEMS_PROPERTYDataTable
    
    Private tablePR_PARTICULARS_PREVIEW As PR_PARTICULARS_PREVIEWDataTable
    
    Private tableItemsDataGridView As ItemsDataGridViewDataTable
    
    Private relationFK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_DELIVERY_RECEIPT As Global.System.Data.DataRelation
    
    Private relationFK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_UNITS As Global.System.Data.DataRelation
    
    Private relationFK_TBLG3_DELIVERY_RECEIPT_TBLG3_COMPANY_INFO As Global.System.Data.DataRelation
    
    Private relationFK_TBLG3_INVOICE_TBLG3_COMPANY_INFO As Global.System.Data.DataRelation
    
    Private relationFK_TBLG3_INVOICE_DETAILS_TBLG3_INVOICE As Global.System.Data.DataRelation
    
    Private relationFK_TBLG3_REG_PARTICULAR_TBLG3_REG_BUS As Global.System.Data.DataRelation
    
    Private relationFK_TBLG3_REG_PARTICULAR_TBLG3_REG_DV As Global.System.Data.DataRelation
    
    Private relationFK_tblM4_PURCHASEREQUEST_ITEM_tblM4_PURCHASEREQUEST As Global.System.Data.DataRelation
    
    Private relationFK_tblM4_PURCHASEREQUEST_CANCELED_tblM4_PURCHASEREQUEST As Global.System.Data.DataRelation
    
    Private relationFK_tblM4_PURCHASEREQUEST_REVISION_tblM4_PURCHASEREQUEST As Global.System.Data.DataRelation
    
    Private relationFK_tblM4_PURCHASEREQUEST_POSTED_tblM4_PURCHASEREQUEST As Global.System.Data.DataRelation
    
    Private relationFK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST As Global.System.Data.DataRelation
    
    Private relationFK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST_CATEGORY As Global.System.Data.DataRelation
    
    Private relationFK_tblM4_ITEMS_tblM4_ITEMBRAND As Global.System.Data.DataRelation
    
    Private relationFK_tblM4_INVENTORY_ITEMS_tblM4_INVENTORY_ITEMS As Global.System.Data.DataRelation
    
    Private relationFK_tblM4_SUB_CATEGORY_tblM4_CATEGORY As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("TBLG3_COMPANY_INFO")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_COMPANY_INFODataTable(ds.Tables("TBLG3_COMPANY_INFO")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST_ITEM")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUEST_ITEMDataTable(ds.Tables("tblM4_PURCHASEREQUEST_ITEM")))
            End If
            If (Not (ds.Tables("TBLG3_DELIVER_RECEIPT_DETAILS")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_DELIVER_RECEIPT_DETAILSDataTable(ds.Tables("TBLG3_DELIVER_RECEIPT_DETAILS")))
            End If
            If (Not (ds.Tables("TBLG3_DELIVERY_RECEIPT")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_DELIVERY_RECEIPTDataTable(ds.Tables("TBLG3_DELIVERY_RECEIPT")))
            End If
            If (Not (ds.Tables("TBLG3_INVOICE")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_INVOICEDataTable(ds.Tables("TBLG3_INVOICE")))
            End If
            If (Not (ds.Tables("TBLG3_INVOICE_DETAILS")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_INVOICE_DETAILSDataTable(ds.Tables("TBLG3_INVOICE_DETAILS")))
            End If
            If (Not (ds.Tables("TBLG3_PRIMARY_SIGNATORY")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_PRIMARY_SIGNATORYDataTable(ds.Tables("TBLG3_PRIMARY_SIGNATORY")))
            End If
            If (Not (ds.Tables("TBLG3_REG_BUS")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_REG_BUSDataTable(ds.Tables("TBLG3_REG_BUS")))
            End If
            If (Not (ds.Tables("TBLG3_REG_DV")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_REG_DVDataTable(ds.Tables("TBLG3_REG_DV")))
            End If
            If (Not (ds.Tables("TBLG3_REG_PARTICULAR")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_REG_PARTICULARDataTable(ds.Tables("TBLG3_REG_PARTICULAR")))
            End If
            If (Not (ds.Tables("TBLG3_SIGNATORY")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_SIGNATORYDataTable(ds.Tables("TBLG3_SIGNATORY")))
            End If
            If (Not (ds.Tables("TBLG3_SIGNATORY_TYPE")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_SIGNATORY_TYPEDataTable(ds.Tables("TBLG3_SIGNATORY_TYPE")))
            End If
            If (Not (ds.Tables("TBLG3_UNITS")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_UNITSDataTable(ds.Tables("TBLG3_UNITS")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUESTDataTable(ds.Tables("tblM4_PURCHASEREQUEST")))
            End If
            If (Not (ds.Tables("VWG3_DR_LIST")) Is Nothing) Then
                MyBase.Tables.Add(New VWG3_DR_LISTDataTable(ds.Tables("VWG3_DR_LIST")))
            End If
            If (Not (ds.Tables("VWG3_REG_DV")) Is Nothing) Then
                MyBase.Tables.Add(New VWG3_REG_DVDataTable(ds.Tables("VWG3_REG_DV")))
            End If
            If (Not (ds.Tables("VWG3_EMPLOYEE_LIST")) Is Nothing) Then
                MyBase.Tables.Add(New VWG3_EMPLOYEE_LISTDataTable(ds.Tables("VWG3_EMPLOYEE_LIST")))
            End If
            If (Not (ds.Tables("VWG3_INVOICE_LIST")) Is Nothing) Then
                MyBase.Tables.Add(New VWG3_INVOICE_LISTDataTable(ds.Tables("VWG3_INVOICE_LIST")))
            End If
            If (Not (ds.Tables("VWG3_PRIMARY_SIGNATORY")) Is Nothing) Then
                MyBase.Tables.Add(New VWG3_PRIMARY_SIGNATORYDataTable(ds.Tables("VWG3_PRIMARY_SIGNATORY")))
            End If
            If (Not (ds.Tables("VWG3_REG_BUS")) Is Nothing) Then
                MyBase.Tables.Add(New VWG3_REG_BUSDataTable(ds.Tables("VWG3_REG_BUS")))
            End If
            If (Not (ds.Tables("SPM4_PRCODE")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_PRCODEDataTable(ds.Tables("SPM4_PRCODE")))
            End If
            If (Not (ds.Tables("SPM4_CURRENTDATETIME")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_CURRENTDATETIMEDataTable(ds.Tables("SPM4_CURRENTDATETIME")))
            End If
            If (Not (ds.Tables("TBLG3_SIGNATORY1")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_SIGNATORY1DataTable(ds.Tables("TBLG3_SIGNATORY1")))
            End If
            If (Not (ds.Tables("SPM4_GETPR_INFO")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_GETPR_INFODataTable(ds.Tables("SPM4_GETPR_INFO")))
            End If
            If (Not (ds.Tables("tblM4_CATEGORY1")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_CATEGORY1DataTable(ds.Tables("tblM4_CATEGORY1")))
            End If
            If (Not (ds.Tables("tblM4_ITEMBRAND1")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_ITEMBRAND1DataTable(ds.Tables("tblM4_ITEMBRAND1")))
            End If
            If (Not (ds.Tables("tblM4_SUB_CATEGORY1")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_SUB_CATEGORY1DataTable(ds.Tables("tblM4_SUB_CATEGORY1")))
            End If
            If (Not (ds.Tables("SPM4_INVENTORY_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_INVENTORY_REPORTDataTable(ds.Tables("SPM4_INVENTORY_REPORT")))
            End If
            If (Not (ds.Tables("SPM4_PROPERTY_NO")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_PROPERTY_NODataTable(ds.Tables("SPM4_PROPERTY_NO")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST_CATEGORY")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUEST_CATEGORYDataTable(ds.Tables("tblM4_PURCHASEREQUEST_CATEGORY")))
            End If
            If (Not (ds.Tables("SPM4_PURCHASELIST")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_PURCHASELISTDataTable(ds.Tables("SPM4_PURCHASELIST")))
            End If
            If (Not (ds.Tables("SPM4_PURCHASEREQUEST_STATUS")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_PURCHASEREQUEST_STATUSDataTable(ds.Tables("SPM4_PURCHASEREQUEST_STATUS")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST_CANCELED")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUEST_CANCELEDDataTable(ds.Tables("tblM4_PURCHASEREQUEST_CANCELED")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST_REVISION")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUEST_REVISIONDataTable(ds.Tables("tblM4_PURCHASEREQUEST_REVISION")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST_POSTED")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUEST_POSTEDDataTable(ds.Tables("tblM4_PURCHASEREQUEST_POSTED")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST_ACCEPTED")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUEST_ACCEPTEDDataTable(ds.Tables("tblM4_PURCHASEREQUEST_ACCEPTED")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST_PROVIDER")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUEST_PROVIDERDataTable(ds.Tables("tblM4_PURCHASEREQUEST_PROVIDER")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ITEMS_LOCATION")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ITEMS_LOCATIONDataTable(ds.Tables("tblM4_INVENTORY_ITEMS_LOCATION")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ITEMS_DEFLOCATION")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable(ds.Tables("tblM4_INVENTORY_ITEMS_DEFLOCATION")))
            End If
            If (Not (ds.Tables("SPM4_INVENTORYDGVLIST")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_INVENTORYDGVLISTDataTable(ds.Tables("SPM4_INVENTORYDGVLIST")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_CATEGORY")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_CATEGORYDataTable(ds.Tables("tblM4_INVENTORY_CATEGORY")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ITEMBRAND")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ITEMBRANDDataTable(ds.Tables("tblM4_INVENTORY_ITEMBRAND")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ITEMS")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ITEMSDataTable(ds.Tables("tblM4_INVENTORY_ITEMS")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_SUB_CATEGORY")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_SUB_CATEGORYDataTable(ds.Tables("tblM4_INVENTORY_SUB_CATEGORY")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_CATEGORY1")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_CATEGORY1DataTable(ds.Tables("tblM4_INVENTORY_CATEGORY1")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ITEMBRAND1")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ITEMBRAND1DataTable(ds.Tables("tblM4_INVENTORY_ITEMBRAND1")))
            End If
            If (Not (ds.Tables("tblM4_CATEGORY_AND_SUB")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_CATEGORY_AND_SUBDataTable(ds.Tables("tblM4_CATEGORY_AND_SUB")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ASSIGN_PERSON")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ASSIGN_PERSONDataTable(ds.Tables("tblM4_INVENTORY_ASSIGN_PERSON")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ITEMS1")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ITEMS1DataTable(ds.Tables("tblM4_INVENTORY_ITEMS1")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ACQUISITION_ITEM_USAGE")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ACQUISITION_ITEM_USAGEDataTable(ds.Tables("tblM4_INVENTORY_ACQUISITION_ITEM_USAGE")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ACQUISITION_VALUE")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ACQUISITION_VALUEDataTable(ds.Tables("tblM4_INVENTORY_ACQUISITION_VALUE")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ITEMS_PROPERTY")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ITEMS_PROPERTYDataTable(ds.Tables("tblM4_INVENTORY_ITEMS_PROPERTY")))
            End If
            If (Not (ds.Tables("PR_PARTICULARS_PREVIEW")) Is Nothing) Then
                MyBase.Tables.Add(New PR_PARTICULARS_PREVIEWDataTable(ds.Tables("PR_PARTICULARS_PREVIEW")))
            End If
            If (Not (ds.Tables("ItemsDataGridView")) Is Nothing) Then
                MyBase.Tables.Add(New ItemsDataGridViewDataTable(ds.Tables("ItemsDataGridView")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBLG3_COMPANY_INFO() As TBLG3_COMPANY_INFODataTable
        Get
            Return Me.tableTBLG3_COMPANY_INFO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_PURCHASEREQUEST_ITEM() As tblM4_PURCHASEREQUEST_ITEMDataTable
        Get
            Return Me.tabletblM4_PURCHASEREQUEST_ITEM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBLG3_DELIVER_RECEIPT_DETAILS() As TBLG3_DELIVER_RECEIPT_DETAILSDataTable
        Get
            Return Me.tableTBLG3_DELIVER_RECEIPT_DETAILS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBLG3_DELIVERY_RECEIPT() As TBLG3_DELIVERY_RECEIPTDataTable
        Get
            Return Me.tableTBLG3_DELIVERY_RECEIPT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBLG3_INVOICE() As TBLG3_INVOICEDataTable
        Get
            Return Me.tableTBLG3_INVOICE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBLG3_INVOICE_DETAILS() As TBLG3_INVOICE_DETAILSDataTable
        Get
            Return Me.tableTBLG3_INVOICE_DETAILS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBLG3_PRIMARY_SIGNATORY() As TBLG3_PRIMARY_SIGNATORYDataTable
        Get
            Return Me.tableTBLG3_PRIMARY_SIGNATORY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBLG3_REG_BUS() As TBLG3_REG_BUSDataTable
        Get
            Return Me.tableTBLG3_REG_BUS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBLG3_REG_DV() As TBLG3_REG_DVDataTable
        Get
            Return Me.tableTBLG3_REG_DV
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBLG3_REG_PARTICULAR() As TBLG3_REG_PARTICULARDataTable
        Get
            Return Me.tableTBLG3_REG_PARTICULAR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBLG3_SIGNATORY() As TBLG3_SIGNATORYDataTable
        Get
            Return Me.tableTBLG3_SIGNATORY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBLG3_SIGNATORY_TYPE() As TBLG3_SIGNATORY_TYPEDataTable
        Get
            Return Me.tableTBLG3_SIGNATORY_TYPE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBLG3_UNITS() As TBLG3_UNITSDataTable
        Get
            Return Me.tableTBLG3_UNITS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_PURCHASEREQUEST() As tblM4_PURCHASEREQUESTDataTable
        Get
            Return Me.tabletblM4_PURCHASEREQUEST
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VWG3_DR_LIST() As VWG3_DR_LISTDataTable
        Get
            Return Me.tableVWG3_DR_LIST
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VWG3_REG_DV() As VWG3_REG_DVDataTable
        Get
            Return Me.tableVWG3_REG_DV
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VWG3_EMPLOYEE_LIST() As VWG3_EMPLOYEE_LISTDataTable
        Get
            Return Me.tableVWG3_EMPLOYEE_LIST
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VWG3_INVOICE_LIST() As VWG3_INVOICE_LISTDataTable
        Get
            Return Me.tableVWG3_INVOICE_LIST
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VWG3_PRIMARY_SIGNATORY() As VWG3_PRIMARY_SIGNATORYDataTable
        Get
            Return Me.tableVWG3_PRIMARY_SIGNATORY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VWG3_REG_BUS() As VWG3_REG_BUSDataTable
        Get
            Return Me.tableVWG3_REG_BUS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPM4_PRCODE() As SPM4_PRCODEDataTable
        Get
            Return Me.tableSPM4_PRCODE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPM4_CURRENTDATETIME() As SPM4_CURRENTDATETIMEDataTable
        Get
            Return Me.tableSPM4_CURRENTDATETIME
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBLG3_SIGNATORY1() As TBLG3_SIGNATORY1DataTable
        Get
            Return Me.tableTBLG3_SIGNATORY1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPM4_GETPR_INFO() As SPM4_GETPR_INFODataTable
        Get
            Return Me.tableSPM4_GETPR_INFO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_CATEGORY1() As tblM4_CATEGORY1DataTable
        Get
            Return Me.tabletblM4_CATEGORY1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_ITEMBRAND1() As tblM4_ITEMBRAND1DataTable
        Get
            Return Me.tabletblM4_ITEMBRAND1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_SUB_CATEGORY1() As tblM4_SUB_CATEGORY1DataTable
        Get
            Return Me.tabletblM4_SUB_CATEGORY1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPM4_INVENTORY_REPORT() As SPM4_INVENTORY_REPORTDataTable
        Get
            Return Me.tableSPM4_INVENTORY_REPORT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPM4_PROPERTY_NO() As SPM4_PROPERTY_NODataTable
        Get
            Return Me.tableSPM4_PROPERTY_NO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_PURCHASEREQUEST_CATEGORY() As tblM4_PURCHASEREQUEST_CATEGORYDataTable
        Get
            Return Me.tabletblM4_PURCHASEREQUEST_CATEGORY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPM4_PURCHASELIST() As SPM4_PURCHASELISTDataTable
        Get
            Return Me.tableSPM4_PURCHASELIST
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPM4_PURCHASEREQUEST_STATUS() As SPM4_PURCHASEREQUEST_STATUSDataTable
        Get
            Return Me.tableSPM4_PURCHASEREQUEST_STATUS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_PURCHASEREQUEST_CANCELED() As tblM4_PURCHASEREQUEST_CANCELEDDataTable
        Get
            Return Me.tabletblM4_PURCHASEREQUEST_CANCELED
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_PURCHASEREQUEST_REVISION() As tblM4_PURCHASEREQUEST_REVISIONDataTable
        Get
            Return Me.tabletblM4_PURCHASEREQUEST_REVISION
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_PURCHASEREQUEST_POSTED() As tblM4_PURCHASEREQUEST_POSTEDDataTable
        Get
            Return Me.tabletblM4_PURCHASEREQUEST_POSTED
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_PURCHASEREQUEST_ACCEPTED() As tblM4_PURCHASEREQUEST_ACCEPTEDDataTable
        Get
            Return Me.tabletblM4_PURCHASEREQUEST_ACCEPTED
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_PURCHASEREQUEST_PROVIDER() As tblM4_PURCHASEREQUEST_PROVIDERDataTable
        Get
            Return Me.tabletblM4_PURCHASEREQUEST_PROVIDER
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_INVENTORY_ITEMS_LOCATION() As tblM4_INVENTORY_ITEMS_LOCATIONDataTable
        Get
            Return Me.tabletblM4_INVENTORY_ITEMS_LOCATION
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_INVENTORY_ITEMS_DEFLOCATION() As tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable
        Get
            Return Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPM4_INVENTORYDGVLIST() As SPM4_INVENTORYDGVLISTDataTable
        Get
            Return Me.tableSPM4_INVENTORYDGVLIST
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_INVENTORY_CATEGORY() As tblM4_INVENTORY_CATEGORYDataTable
        Get
            Return Me.tabletblM4_INVENTORY_CATEGORY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_INVENTORY_ITEMBRAND() As tblM4_INVENTORY_ITEMBRANDDataTable
        Get
            Return Me.tabletblM4_INVENTORY_ITEMBRAND
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_INVENTORY_ITEMS() As tblM4_INVENTORY_ITEMSDataTable
        Get
            Return Me.tabletblM4_INVENTORY_ITEMS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_INVENTORY_SUB_CATEGORY() As tblM4_INVENTORY_SUB_CATEGORYDataTable
        Get
            Return Me.tabletblM4_INVENTORY_SUB_CATEGORY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_INVENTORY_CATEGORY1() As tblM4_INVENTORY_CATEGORY1DataTable
        Get
            Return Me.tabletblM4_INVENTORY_CATEGORY1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_INVENTORY_ITEMBRAND1() As tblM4_INVENTORY_ITEMBRAND1DataTable
        Get
            Return Me.tabletblM4_INVENTORY_ITEMBRAND1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_CATEGORY_AND_SUB() As tblM4_CATEGORY_AND_SUBDataTable
        Get
            Return Me.tabletblM4_CATEGORY_AND_SUB
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_INVENTORY_ASSIGN_PERSON() As tblM4_INVENTORY_ASSIGN_PERSONDataTable
        Get
            Return Me.tabletblM4_INVENTORY_ASSIGN_PERSON
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_INVENTORY_ITEMS1() As tblM4_INVENTORY_ITEMS1DataTable
        Get
            Return Me.tabletblM4_INVENTORY_ITEMS1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_INVENTORY_ACQUISITION_ITEM_USAGE() As tblM4_INVENTORY_ACQUISITION_ITEM_USAGEDataTable
        Get
            Return Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_INVENTORY_ACQUISITION_VALUE() As tblM4_INVENTORY_ACQUISITION_VALUEDataTable
        Get
            Return Me.tabletblM4_INVENTORY_ACQUISITION_VALUE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblM4_INVENTORY_ITEMS_PROPERTY() As tblM4_INVENTORY_ITEMS_PROPERTYDataTable
        Get
            Return Me.tabletblM4_INVENTORY_ITEMS_PROPERTY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PR_PARTICULARS_PREVIEW() As PR_PARTICULARS_PREVIEWDataTable
        Get
            Return Me.tablePR_PARTICULARS_PREVIEW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ItemsDataGridView() As ItemsDataGridViewDataTable
        Get
            Return Me.tableItemsDataGridView
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DS_PROPERTYDB = CType(MyBase.Clone,DS_PROPERTYDB)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("TBLG3_COMPANY_INFO")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_COMPANY_INFODataTable(ds.Tables("TBLG3_COMPANY_INFO")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST_ITEM")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUEST_ITEMDataTable(ds.Tables("tblM4_PURCHASEREQUEST_ITEM")))
            End If
            If (Not (ds.Tables("TBLG3_DELIVER_RECEIPT_DETAILS")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_DELIVER_RECEIPT_DETAILSDataTable(ds.Tables("TBLG3_DELIVER_RECEIPT_DETAILS")))
            End If
            If (Not (ds.Tables("TBLG3_DELIVERY_RECEIPT")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_DELIVERY_RECEIPTDataTable(ds.Tables("TBLG3_DELIVERY_RECEIPT")))
            End If
            If (Not (ds.Tables("TBLG3_INVOICE")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_INVOICEDataTable(ds.Tables("TBLG3_INVOICE")))
            End If
            If (Not (ds.Tables("TBLG3_INVOICE_DETAILS")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_INVOICE_DETAILSDataTable(ds.Tables("TBLG3_INVOICE_DETAILS")))
            End If
            If (Not (ds.Tables("TBLG3_PRIMARY_SIGNATORY")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_PRIMARY_SIGNATORYDataTable(ds.Tables("TBLG3_PRIMARY_SIGNATORY")))
            End If
            If (Not (ds.Tables("TBLG3_REG_BUS")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_REG_BUSDataTable(ds.Tables("TBLG3_REG_BUS")))
            End If
            If (Not (ds.Tables("TBLG3_REG_DV")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_REG_DVDataTable(ds.Tables("TBLG3_REG_DV")))
            End If
            If (Not (ds.Tables("TBLG3_REG_PARTICULAR")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_REG_PARTICULARDataTable(ds.Tables("TBLG3_REG_PARTICULAR")))
            End If
            If (Not (ds.Tables("TBLG3_SIGNATORY")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_SIGNATORYDataTable(ds.Tables("TBLG3_SIGNATORY")))
            End If
            If (Not (ds.Tables("TBLG3_SIGNATORY_TYPE")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_SIGNATORY_TYPEDataTable(ds.Tables("TBLG3_SIGNATORY_TYPE")))
            End If
            If (Not (ds.Tables("TBLG3_UNITS")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_UNITSDataTable(ds.Tables("TBLG3_UNITS")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUESTDataTable(ds.Tables("tblM4_PURCHASEREQUEST")))
            End If
            If (Not (ds.Tables("VWG3_DR_LIST")) Is Nothing) Then
                MyBase.Tables.Add(New VWG3_DR_LISTDataTable(ds.Tables("VWG3_DR_LIST")))
            End If
            If (Not (ds.Tables("VWG3_REG_DV")) Is Nothing) Then
                MyBase.Tables.Add(New VWG3_REG_DVDataTable(ds.Tables("VWG3_REG_DV")))
            End If
            If (Not (ds.Tables("VWG3_EMPLOYEE_LIST")) Is Nothing) Then
                MyBase.Tables.Add(New VWG3_EMPLOYEE_LISTDataTable(ds.Tables("VWG3_EMPLOYEE_LIST")))
            End If
            If (Not (ds.Tables("VWG3_INVOICE_LIST")) Is Nothing) Then
                MyBase.Tables.Add(New VWG3_INVOICE_LISTDataTable(ds.Tables("VWG3_INVOICE_LIST")))
            End If
            If (Not (ds.Tables("VWG3_PRIMARY_SIGNATORY")) Is Nothing) Then
                MyBase.Tables.Add(New VWG3_PRIMARY_SIGNATORYDataTable(ds.Tables("VWG3_PRIMARY_SIGNATORY")))
            End If
            If (Not (ds.Tables("VWG3_REG_BUS")) Is Nothing) Then
                MyBase.Tables.Add(New VWG3_REG_BUSDataTable(ds.Tables("VWG3_REG_BUS")))
            End If
            If (Not (ds.Tables("SPM4_PRCODE")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_PRCODEDataTable(ds.Tables("SPM4_PRCODE")))
            End If
            If (Not (ds.Tables("SPM4_CURRENTDATETIME")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_CURRENTDATETIMEDataTable(ds.Tables("SPM4_CURRENTDATETIME")))
            End If
            If (Not (ds.Tables("TBLG3_SIGNATORY1")) Is Nothing) Then
                MyBase.Tables.Add(New TBLG3_SIGNATORY1DataTable(ds.Tables("TBLG3_SIGNATORY1")))
            End If
            If (Not (ds.Tables("SPM4_GETPR_INFO")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_GETPR_INFODataTable(ds.Tables("SPM4_GETPR_INFO")))
            End If
            If (Not (ds.Tables("tblM4_CATEGORY1")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_CATEGORY1DataTable(ds.Tables("tblM4_CATEGORY1")))
            End If
            If (Not (ds.Tables("tblM4_ITEMBRAND1")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_ITEMBRAND1DataTable(ds.Tables("tblM4_ITEMBRAND1")))
            End If
            If (Not (ds.Tables("tblM4_SUB_CATEGORY1")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_SUB_CATEGORY1DataTable(ds.Tables("tblM4_SUB_CATEGORY1")))
            End If
            If (Not (ds.Tables("SPM4_INVENTORY_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_INVENTORY_REPORTDataTable(ds.Tables("SPM4_INVENTORY_REPORT")))
            End If
            If (Not (ds.Tables("SPM4_PROPERTY_NO")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_PROPERTY_NODataTable(ds.Tables("SPM4_PROPERTY_NO")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST_CATEGORY")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUEST_CATEGORYDataTable(ds.Tables("tblM4_PURCHASEREQUEST_CATEGORY")))
            End If
            If (Not (ds.Tables("SPM4_PURCHASELIST")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_PURCHASELISTDataTable(ds.Tables("SPM4_PURCHASELIST")))
            End If
            If (Not (ds.Tables("SPM4_PURCHASEREQUEST_STATUS")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_PURCHASEREQUEST_STATUSDataTable(ds.Tables("SPM4_PURCHASEREQUEST_STATUS")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST_CANCELED")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUEST_CANCELEDDataTable(ds.Tables("tblM4_PURCHASEREQUEST_CANCELED")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST_REVISION")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUEST_REVISIONDataTable(ds.Tables("tblM4_PURCHASEREQUEST_REVISION")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST_POSTED")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUEST_POSTEDDataTable(ds.Tables("tblM4_PURCHASEREQUEST_POSTED")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST_ACCEPTED")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUEST_ACCEPTEDDataTable(ds.Tables("tblM4_PURCHASEREQUEST_ACCEPTED")))
            End If
            If (Not (ds.Tables("tblM4_PURCHASEREQUEST_PROVIDER")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_PURCHASEREQUEST_PROVIDERDataTable(ds.Tables("tblM4_PURCHASEREQUEST_PROVIDER")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ITEMS_LOCATION")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ITEMS_LOCATIONDataTable(ds.Tables("tblM4_INVENTORY_ITEMS_LOCATION")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ITEMS_DEFLOCATION")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable(ds.Tables("tblM4_INVENTORY_ITEMS_DEFLOCATION")))
            End If
            If (Not (ds.Tables("SPM4_INVENTORYDGVLIST")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_INVENTORYDGVLISTDataTable(ds.Tables("SPM4_INVENTORYDGVLIST")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_CATEGORY")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_CATEGORYDataTable(ds.Tables("tblM4_INVENTORY_CATEGORY")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ITEMBRAND")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ITEMBRANDDataTable(ds.Tables("tblM4_INVENTORY_ITEMBRAND")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ITEMS")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ITEMSDataTable(ds.Tables("tblM4_INVENTORY_ITEMS")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_SUB_CATEGORY")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_SUB_CATEGORYDataTable(ds.Tables("tblM4_INVENTORY_SUB_CATEGORY")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_CATEGORY1")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_CATEGORY1DataTable(ds.Tables("tblM4_INVENTORY_CATEGORY1")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ITEMBRAND1")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ITEMBRAND1DataTable(ds.Tables("tblM4_INVENTORY_ITEMBRAND1")))
            End If
            If (Not (ds.Tables("tblM4_CATEGORY_AND_SUB")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_CATEGORY_AND_SUBDataTable(ds.Tables("tblM4_CATEGORY_AND_SUB")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ASSIGN_PERSON")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ASSIGN_PERSONDataTable(ds.Tables("tblM4_INVENTORY_ASSIGN_PERSON")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ITEMS1")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ITEMS1DataTable(ds.Tables("tblM4_INVENTORY_ITEMS1")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ACQUISITION_ITEM_USAGE")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ACQUISITION_ITEM_USAGEDataTable(ds.Tables("tblM4_INVENTORY_ACQUISITION_ITEM_USAGE")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ACQUISITION_VALUE")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ACQUISITION_VALUEDataTable(ds.Tables("tblM4_INVENTORY_ACQUISITION_VALUE")))
            End If
            If (Not (ds.Tables("tblM4_INVENTORY_ITEMS_PROPERTY")) Is Nothing) Then
                MyBase.Tables.Add(New tblM4_INVENTORY_ITEMS_PROPERTYDataTable(ds.Tables("tblM4_INVENTORY_ITEMS_PROPERTY")))
            End If
            If (Not (ds.Tables("PR_PARTICULARS_PREVIEW")) Is Nothing) Then
                MyBase.Tables.Add(New PR_PARTICULARS_PREVIEWDataTable(ds.Tables("PR_PARTICULARS_PREVIEW")))
            End If
            If (Not (ds.Tables("ItemsDataGridView")) Is Nothing) Then
                MyBase.Tables.Add(New ItemsDataGridViewDataTable(ds.Tables("ItemsDataGridView")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableTBLG3_COMPANY_INFO = CType(MyBase.Tables("TBLG3_COMPANY_INFO"),TBLG3_COMPANY_INFODataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBLG3_COMPANY_INFO) Is Nothing) Then
                Me.tableTBLG3_COMPANY_INFO.InitVars
            End If
        End If
        Me.tabletblM4_PURCHASEREQUEST_ITEM = CType(MyBase.Tables("tblM4_PURCHASEREQUEST_ITEM"),tblM4_PURCHASEREQUEST_ITEMDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_PURCHASEREQUEST_ITEM) Is Nothing) Then
                Me.tabletblM4_PURCHASEREQUEST_ITEM.InitVars
            End If
        End If
        Me.tableTBLG3_DELIVER_RECEIPT_DETAILS = CType(MyBase.Tables("TBLG3_DELIVER_RECEIPT_DETAILS"),TBLG3_DELIVER_RECEIPT_DETAILSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBLG3_DELIVER_RECEIPT_DETAILS) Is Nothing) Then
                Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.InitVars
            End If
        End If
        Me.tableTBLG3_DELIVERY_RECEIPT = CType(MyBase.Tables("TBLG3_DELIVERY_RECEIPT"),TBLG3_DELIVERY_RECEIPTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBLG3_DELIVERY_RECEIPT) Is Nothing) Then
                Me.tableTBLG3_DELIVERY_RECEIPT.InitVars
            End If
        End If
        Me.tableTBLG3_INVOICE = CType(MyBase.Tables("TBLG3_INVOICE"),TBLG3_INVOICEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBLG3_INVOICE) Is Nothing) Then
                Me.tableTBLG3_INVOICE.InitVars
            End If
        End If
        Me.tableTBLG3_INVOICE_DETAILS = CType(MyBase.Tables("TBLG3_INVOICE_DETAILS"),TBLG3_INVOICE_DETAILSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBLG3_INVOICE_DETAILS) Is Nothing) Then
                Me.tableTBLG3_INVOICE_DETAILS.InitVars
            End If
        End If
        Me.tableTBLG3_PRIMARY_SIGNATORY = CType(MyBase.Tables("TBLG3_PRIMARY_SIGNATORY"),TBLG3_PRIMARY_SIGNATORYDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBLG3_PRIMARY_SIGNATORY) Is Nothing) Then
                Me.tableTBLG3_PRIMARY_SIGNATORY.InitVars
            End If
        End If
        Me.tableTBLG3_REG_BUS = CType(MyBase.Tables("TBLG3_REG_BUS"),TBLG3_REG_BUSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBLG3_REG_BUS) Is Nothing) Then
                Me.tableTBLG3_REG_BUS.InitVars
            End If
        End If
        Me.tableTBLG3_REG_DV = CType(MyBase.Tables("TBLG3_REG_DV"),TBLG3_REG_DVDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBLG3_REG_DV) Is Nothing) Then
                Me.tableTBLG3_REG_DV.InitVars
            End If
        End If
        Me.tableTBLG3_REG_PARTICULAR = CType(MyBase.Tables("TBLG3_REG_PARTICULAR"),TBLG3_REG_PARTICULARDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBLG3_REG_PARTICULAR) Is Nothing) Then
                Me.tableTBLG3_REG_PARTICULAR.InitVars
            End If
        End If
        Me.tableTBLG3_SIGNATORY = CType(MyBase.Tables("TBLG3_SIGNATORY"),TBLG3_SIGNATORYDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBLG3_SIGNATORY) Is Nothing) Then
                Me.tableTBLG3_SIGNATORY.InitVars
            End If
        End If
        Me.tableTBLG3_SIGNATORY_TYPE = CType(MyBase.Tables("TBLG3_SIGNATORY_TYPE"),TBLG3_SIGNATORY_TYPEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBLG3_SIGNATORY_TYPE) Is Nothing) Then
                Me.tableTBLG3_SIGNATORY_TYPE.InitVars
            End If
        End If
        Me.tableTBLG3_UNITS = CType(MyBase.Tables("TBLG3_UNITS"),TBLG3_UNITSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBLG3_UNITS) Is Nothing) Then
                Me.tableTBLG3_UNITS.InitVars
            End If
        End If
        Me.tabletblM4_PURCHASEREQUEST = CType(MyBase.Tables("tblM4_PURCHASEREQUEST"),tblM4_PURCHASEREQUESTDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_PURCHASEREQUEST) Is Nothing) Then
                Me.tabletblM4_PURCHASEREQUEST.InitVars
            End If
        End If
        Me.tableVWG3_DR_LIST = CType(MyBase.Tables("VWG3_DR_LIST"),VWG3_DR_LISTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVWG3_DR_LIST) Is Nothing) Then
                Me.tableVWG3_DR_LIST.InitVars
            End If
        End If
        Me.tableVWG3_REG_DV = CType(MyBase.Tables("VWG3_REG_DV"),VWG3_REG_DVDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVWG3_REG_DV) Is Nothing) Then
                Me.tableVWG3_REG_DV.InitVars
            End If
        End If
        Me.tableVWG3_EMPLOYEE_LIST = CType(MyBase.Tables("VWG3_EMPLOYEE_LIST"),VWG3_EMPLOYEE_LISTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVWG3_EMPLOYEE_LIST) Is Nothing) Then
                Me.tableVWG3_EMPLOYEE_LIST.InitVars
            End If
        End If
        Me.tableVWG3_INVOICE_LIST = CType(MyBase.Tables("VWG3_INVOICE_LIST"),VWG3_INVOICE_LISTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVWG3_INVOICE_LIST) Is Nothing) Then
                Me.tableVWG3_INVOICE_LIST.InitVars
            End If
        End If
        Me.tableVWG3_PRIMARY_SIGNATORY = CType(MyBase.Tables("VWG3_PRIMARY_SIGNATORY"),VWG3_PRIMARY_SIGNATORYDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVWG3_PRIMARY_SIGNATORY) Is Nothing) Then
                Me.tableVWG3_PRIMARY_SIGNATORY.InitVars
            End If
        End If
        Me.tableVWG3_REG_BUS = CType(MyBase.Tables("VWG3_REG_BUS"),VWG3_REG_BUSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVWG3_REG_BUS) Is Nothing) Then
                Me.tableVWG3_REG_BUS.InitVars
            End If
        End If
        Me.tableSPM4_PRCODE = CType(MyBase.Tables("SPM4_PRCODE"),SPM4_PRCODEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPM4_PRCODE) Is Nothing) Then
                Me.tableSPM4_PRCODE.InitVars
            End If
        End If
        Me.tableSPM4_CURRENTDATETIME = CType(MyBase.Tables("SPM4_CURRENTDATETIME"),SPM4_CURRENTDATETIMEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPM4_CURRENTDATETIME) Is Nothing) Then
                Me.tableSPM4_CURRENTDATETIME.InitVars
            End If
        End If
        Me.tableTBLG3_SIGNATORY1 = CType(MyBase.Tables("TBLG3_SIGNATORY1"),TBLG3_SIGNATORY1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBLG3_SIGNATORY1) Is Nothing) Then
                Me.tableTBLG3_SIGNATORY1.InitVars
            End If
        End If
        Me.tableSPM4_GETPR_INFO = CType(MyBase.Tables("SPM4_GETPR_INFO"),SPM4_GETPR_INFODataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPM4_GETPR_INFO) Is Nothing) Then
                Me.tableSPM4_GETPR_INFO.InitVars
            End If
        End If
        Me.tabletblM4_CATEGORY1 = CType(MyBase.Tables("tblM4_CATEGORY1"),tblM4_CATEGORY1DataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_CATEGORY1) Is Nothing) Then
                Me.tabletblM4_CATEGORY1.InitVars
            End If
        End If
        Me.tabletblM4_ITEMBRAND1 = CType(MyBase.Tables("tblM4_ITEMBRAND1"),tblM4_ITEMBRAND1DataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_ITEMBRAND1) Is Nothing) Then
                Me.tabletblM4_ITEMBRAND1.InitVars
            End If
        End If
        Me.tabletblM4_SUB_CATEGORY1 = CType(MyBase.Tables("tblM4_SUB_CATEGORY1"),tblM4_SUB_CATEGORY1DataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_SUB_CATEGORY1) Is Nothing) Then
                Me.tabletblM4_SUB_CATEGORY1.InitVars
            End If
        End If
        Me.tableSPM4_INVENTORY_REPORT = CType(MyBase.Tables("SPM4_INVENTORY_REPORT"),SPM4_INVENTORY_REPORTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPM4_INVENTORY_REPORT) Is Nothing) Then
                Me.tableSPM4_INVENTORY_REPORT.InitVars
            End If
        End If
        Me.tableSPM4_PROPERTY_NO = CType(MyBase.Tables("SPM4_PROPERTY_NO"),SPM4_PROPERTY_NODataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPM4_PROPERTY_NO) Is Nothing) Then
                Me.tableSPM4_PROPERTY_NO.InitVars
            End If
        End If
        Me.tabletblM4_PURCHASEREQUEST_CATEGORY = CType(MyBase.Tables("tblM4_PURCHASEREQUEST_CATEGORY"),tblM4_PURCHASEREQUEST_CATEGORYDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_PURCHASEREQUEST_CATEGORY) Is Nothing) Then
                Me.tabletblM4_PURCHASEREQUEST_CATEGORY.InitVars
            End If
        End If
        Me.tableSPM4_PURCHASELIST = CType(MyBase.Tables("SPM4_PURCHASELIST"),SPM4_PURCHASELISTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPM4_PURCHASELIST) Is Nothing) Then
                Me.tableSPM4_PURCHASELIST.InitVars
            End If
        End If
        Me.tableSPM4_PURCHASEREQUEST_STATUS = CType(MyBase.Tables("SPM4_PURCHASEREQUEST_STATUS"),SPM4_PURCHASEREQUEST_STATUSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPM4_PURCHASEREQUEST_STATUS) Is Nothing) Then
                Me.tableSPM4_PURCHASEREQUEST_STATUS.InitVars
            End If
        End If
        Me.tabletblM4_PURCHASEREQUEST_CANCELED = CType(MyBase.Tables("tblM4_PURCHASEREQUEST_CANCELED"),tblM4_PURCHASEREQUEST_CANCELEDDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_PURCHASEREQUEST_CANCELED) Is Nothing) Then
                Me.tabletblM4_PURCHASEREQUEST_CANCELED.InitVars
            End If
        End If
        Me.tabletblM4_PURCHASEREQUEST_REVISION = CType(MyBase.Tables("tblM4_PURCHASEREQUEST_REVISION"),tblM4_PURCHASEREQUEST_REVISIONDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_PURCHASEREQUEST_REVISION) Is Nothing) Then
                Me.tabletblM4_PURCHASEREQUEST_REVISION.InitVars
            End If
        End If
        Me.tabletblM4_PURCHASEREQUEST_POSTED = CType(MyBase.Tables("tblM4_PURCHASEREQUEST_POSTED"),tblM4_PURCHASEREQUEST_POSTEDDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_PURCHASEREQUEST_POSTED) Is Nothing) Then
                Me.tabletblM4_PURCHASEREQUEST_POSTED.InitVars
            End If
        End If
        Me.tabletblM4_PURCHASEREQUEST_ACCEPTED = CType(MyBase.Tables("tblM4_PURCHASEREQUEST_ACCEPTED"),tblM4_PURCHASEREQUEST_ACCEPTEDDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_PURCHASEREQUEST_ACCEPTED) Is Nothing) Then
                Me.tabletblM4_PURCHASEREQUEST_ACCEPTED.InitVars
            End If
        End If
        Me.tabletblM4_PURCHASEREQUEST_PROVIDER = CType(MyBase.Tables("tblM4_PURCHASEREQUEST_PROVIDER"),tblM4_PURCHASEREQUEST_PROVIDERDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_PURCHASEREQUEST_PROVIDER) Is Nothing) Then
                Me.tabletblM4_PURCHASEREQUEST_PROVIDER.InitVars
            End If
        End If
        Me.tabletblM4_INVENTORY_ITEMS_LOCATION = CType(MyBase.Tables("tblM4_INVENTORY_ITEMS_LOCATION"),tblM4_INVENTORY_ITEMS_LOCATIONDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_INVENTORY_ITEMS_LOCATION) Is Nothing) Then
                Me.tabletblM4_INVENTORY_ITEMS_LOCATION.InitVars
            End If
        End If
        Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION = CType(MyBase.Tables("tblM4_INVENTORY_ITEMS_DEFLOCATION"),tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION) Is Nothing) Then
                Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION.InitVars
            End If
        End If
        Me.tableSPM4_INVENTORYDGVLIST = CType(MyBase.Tables("SPM4_INVENTORYDGVLIST"),SPM4_INVENTORYDGVLISTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPM4_INVENTORYDGVLIST) Is Nothing) Then
                Me.tableSPM4_INVENTORYDGVLIST.InitVars
            End If
        End If
        Me.tabletblM4_INVENTORY_CATEGORY = CType(MyBase.Tables("tblM4_INVENTORY_CATEGORY"),tblM4_INVENTORY_CATEGORYDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_INVENTORY_CATEGORY) Is Nothing) Then
                Me.tabletblM4_INVENTORY_CATEGORY.InitVars
            End If
        End If
        Me.tabletblM4_INVENTORY_ITEMBRAND = CType(MyBase.Tables("tblM4_INVENTORY_ITEMBRAND"),tblM4_INVENTORY_ITEMBRANDDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_INVENTORY_ITEMBRAND) Is Nothing) Then
                Me.tabletblM4_INVENTORY_ITEMBRAND.InitVars
            End If
        End If
        Me.tabletblM4_INVENTORY_ITEMS = CType(MyBase.Tables("tblM4_INVENTORY_ITEMS"),tblM4_INVENTORY_ITEMSDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_INVENTORY_ITEMS) Is Nothing) Then
                Me.tabletblM4_INVENTORY_ITEMS.InitVars
            End If
        End If
        Me.tabletblM4_INVENTORY_SUB_CATEGORY = CType(MyBase.Tables("tblM4_INVENTORY_SUB_CATEGORY"),tblM4_INVENTORY_SUB_CATEGORYDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_INVENTORY_SUB_CATEGORY) Is Nothing) Then
                Me.tabletblM4_INVENTORY_SUB_CATEGORY.InitVars
            End If
        End If
        Me.tabletblM4_INVENTORY_CATEGORY1 = CType(MyBase.Tables("tblM4_INVENTORY_CATEGORY1"),tblM4_INVENTORY_CATEGORY1DataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_INVENTORY_CATEGORY1) Is Nothing) Then
                Me.tabletblM4_INVENTORY_CATEGORY1.InitVars
            End If
        End If
        Me.tabletblM4_INVENTORY_ITEMBRAND1 = CType(MyBase.Tables("tblM4_INVENTORY_ITEMBRAND1"),tblM4_INVENTORY_ITEMBRAND1DataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_INVENTORY_ITEMBRAND1) Is Nothing) Then
                Me.tabletblM4_INVENTORY_ITEMBRAND1.InitVars
            End If
        End If
        Me.tabletblM4_CATEGORY_AND_SUB = CType(MyBase.Tables("tblM4_CATEGORY_AND_SUB"),tblM4_CATEGORY_AND_SUBDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_CATEGORY_AND_SUB) Is Nothing) Then
                Me.tabletblM4_CATEGORY_AND_SUB.InitVars
            End If
        End If
        Me.tabletblM4_INVENTORY_ASSIGN_PERSON = CType(MyBase.Tables("tblM4_INVENTORY_ASSIGN_PERSON"),tblM4_INVENTORY_ASSIGN_PERSONDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_INVENTORY_ASSIGN_PERSON) Is Nothing) Then
                Me.tabletblM4_INVENTORY_ASSIGN_PERSON.InitVars
            End If
        End If
        Me.tabletblM4_INVENTORY_ITEMS1 = CType(MyBase.Tables("tblM4_INVENTORY_ITEMS1"),tblM4_INVENTORY_ITEMS1DataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_INVENTORY_ITEMS1) Is Nothing) Then
                Me.tabletblM4_INVENTORY_ITEMS1.InitVars
            End If
        End If
        Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE = CType(MyBase.Tables("tblM4_INVENTORY_ACQUISITION_ITEM_USAGE"),tblM4_INVENTORY_ACQUISITION_ITEM_USAGEDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE) Is Nothing) Then
                Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE.InitVars
            End If
        End If
        Me.tabletblM4_INVENTORY_ACQUISITION_VALUE = CType(MyBase.Tables("tblM4_INVENTORY_ACQUISITION_VALUE"),tblM4_INVENTORY_ACQUISITION_VALUEDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_INVENTORY_ACQUISITION_VALUE) Is Nothing) Then
                Me.tabletblM4_INVENTORY_ACQUISITION_VALUE.InitVars
            End If
        End If
        Me.tabletblM4_INVENTORY_ITEMS_PROPERTY = CType(MyBase.Tables("tblM4_INVENTORY_ITEMS_PROPERTY"),tblM4_INVENTORY_ITEMS_PROPERTYDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblM4_INVENTORY_ITEMS_PROPERTY) Is Nothing) Then
                Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.InitVars
            End If
        End If
        Me.tablePR_PARTICULARS_PREVIEW = CType(MyBase.Tables("PR_PARTICULARS_PREVIEW"),PR_PARTICULARS_PREVIEWDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePR_PARTICULARS_PREVIEW) Is Nothing) Then
                Me.tablePR_PARTICULARS_PREVIEW.InitVars
            End If
        End If
        Me.tableItemsDataGridView = CType(MyBase.Tables("ItemsDataGridView"),ItemsDataGridViewDataTable)
        If (initTable = true) Then
            If (Not (Me.tableItemsDataGridView) Is Nothing) Then
                Me.tableItemsDataGridView.InitVars
            End If
        End If
        Me.relationFK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_DELIVERY_RECEIPT = Me.Relations("FK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_DELIVERY_RECEIPT")
        Me.relationFK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_UNITS = Me.Relations("FK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_UNITS")
        Me.relationFK_TBLG3_DELIVERY_RECEIPT_TBLG3_COMPANY_INFO = Me.Relations("FK_TBLG3_DELIVERY_RECEIPT_TBLG3_COMPANY_INFO")
        Me.relationFK_TBLG3_INVOICE_TBLG3_COMPANY_INFO = Me.Relations("FK_TBLG3_INVOICE_TBLG3_COMPANY_INFO")
        Me.relationFK_TBLG3_INVOICE_DETAILS_TBLG3_INVOICE = Me.Relations("FK_TBLG3_INVOICE_DETAILS_TBLG3_INVOICE")
        Me.relationFK_TBLG3_REG_PARTICULAR_TBLG3_REG_BUS = Me.Relations("FK_TBLG3_REG_PARTICULAR_TBLG3_REG_BUS")
        Me.relationFK_TBLG3_REG_PARTICULAR_TBLG3_REG_DV = Me.Relations("FK_TBLG3_REG_PARTICULAR_TBLG3_REG_DV")
        Me.relationFK_tblM4_PURCHASEREQUEST_ITEM_tblM4_PURCHASEREQUEST = Me.Relations("FK_tblM4_PURCHASEREQUEST_ITEM_tblM4_PURCHASEREQUEST")
        Me.relationFK_tblM4_PURCHASEREQUEST_CANCELED_tblM4_PURCHASEREQUEST = Me.Relations("FK_tblM4_PURCHASEREQUEST_CANCELED_tblM4_PURCHASEREQUEST")
        Me.relationFK_tblM4_PURCHASEREQUEST_REVISION_tblM4_PURCHASEREQUEST = Me.Relations("FK_tblM4_PURCHASEREQUEST_REVISION_tblM4_PURCHASEREQUEST")
        Me.relationFK_tblM4_PURCHASEREQUEST_POSTED_tblM4_PURCHASEREQUEST = Me.Relations("FK_tblM4_PURCHASEREQUEST_POSTED_tblM4_PURCHASEREQUEST")
        Me.relationFK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST = Me.Relations("FK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST")
        Me.relationFK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST_CATEGORY = Me.Relations("FK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST_CATEGORY")
        Me.relationFK_tblM4_ITEMS_tblM4_ITEMBRAND = Me.Relations("FK_tblM4_ITEMS_tblM4_ITEMBRAND")
        Me.relationFK_tblM4_INVENTORY_ITEMS_tblM4_INVENTORY_ITEMS = Me.Relations("FK_tblM4_INVENTORY_ITEMS_tblM4_INVENTORY_ITEMS")
        Me.relationFK_tblM4_SUB_CATEGORY_tblM4_CATEGORY = Me.Relations("FK_tblM4_SUB_CATEGORY_tblM4_CATEGORY")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DS_PROPERTYDB"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DS_PROPERTYDB.xsd"
        Me.EnforceConstraints = false
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableTBLG3_COMPANY_INFO = New TBLG3_COMPANY_INFODataTable()
        MyBase.Tables.Add(Me.tableTBLG3_COMPANY_INFO)
        Me.tabletblM4_PURCHASEREQUEST_ITEM = New tblM4_PURCHASEREQUEST_ITEMDataTable()
        MyBase.Tables.Add(Me.tabletblM4_PURCHASEREQUEST_ITEM)
        Me.tableTBLG3_DELIVER_RECEIPT_DETAILS = New TBLG3_DELIVER_RECEIPT_DETAILSDataTable()
        MyBase.Tables.Add(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS)
        Me.tableTBLG3_DELIVERY_RECEIPT = New TBLG3_DELIVERY_RECEIPTDataTable()
        MyBase.Tables.Add(Me.tableTBLG3_DELIVERY_RECEIPT)
        Me.tableTBLG3_INVOICE = New TBLG3_INVOICEDataTable()
        MyBase.Tables.Add(Me.tableTBLG3_INVOICE)
        Me.tableTBLG3_INVOICE_DETAILS = New TBLG3_INVOICE_DETAILSDataTable()
        MyBase.Tables.Add(Me.tableTBLG3_INVOICE_DETAILS)
        Me.tableTBLG3_PRIMARY_SIGNATORY = New TBLG3_PRIMARY_SIGNATORYDataTable()
        MyBase.Tables.Add(Me.tableTBLG3_PRIMARY_SIGNATORY)
        Me.tableTBLG3_REG_BUS = New TBLG3_REG_BUSDataTable()
        MyBase.Tables.Add(Me.tableTBLG3_REG_BUS)
        Me.tableTBLG3_REG_DV = New TBLG3_REG_DVDataTable()
        MyBase.Tables.Add(Me.tableTBLG3_REG_DV)
        Me.tableTBLG3_REG_PARTICULAR = New TBLG3_REG_PARTICULARDataTable()
        MyBase.Tables.Add(Me.tableTBLG3_REG_PARTICULAR)
        Me.tableTBLG3_SIGNATORY = New TBLG3_SIGNATORYDataTable()
        MyBase.Tables.Add(Me.tableTBLG3_SIGNATORY)
        Me.tableTBLG3_SIGNATORY_TYPE = New TBLG3_SIGNATORY_TYPEDataTable()
        MyBase.Tables.Add(Me.tableTBLG3_SIGNATORY_TYPE)
        Me.tableTBLG3_UNITS = New TBLG3_UNITSDataTable()
        MyBase.Tables.Add(Me.tableTBLG3_UNITS)
        Me.tabletblM4_PURCHASEREQUEST = New tblM4_PURCHASEREQUESTDataTable()
        MyBase.Tables.Add(Me.tabletblM4_PURCHASEREQUEST)
        Me.tableVWG3_DR_LIST = New VWG3_DR_LISTDataTable()
        MyBase.Tables.Add(Me.tableVWG3_DR_LIST)
        Me.tableVWG3_REG_DV = New VWG3_REG_DVDataTable()
        MyBase.Tables.Add(Me.tableVWG3_REG_DV)
        Me.tableVWG3_EMPLOYEE_LIST = New VWG3_EMPLOYEE_LISTDataTable()
        MyBase.Tables.Add(Me.tableVWG3_EMPLOYEE_LIST)
        Me.tableVWG3_INVOICE_LIST = New VWG3_INVOICE_LISTDataTable()
        MyBase.Tables.Add(Me.tableVWG3_INVOICE_LIST)
        Me.tableVWG3_PRIMARY_SIGNATORY = New VWG3_PRIMARY_SIGNATORYDataTable()
        MyBase.Tables.Add(Me.tableVWG3_PRIMARY_SIGNATORY)
        Me.tableVWG3_REG_BUS = New VWG3_REG_BUSDataTable()
        MyBase.Tables.Add(Me.tableVWG3_REG_BUS)
        Me.tableSPM4_PRCODE = New SPM4_PRCODEDataTable()
        MyBase.Tables.Add(Me.tableSPM4_PRCODE)
        Me.tableSPM4_CURRENTDATETIME = New SPM4_CURRENTDATETIMEDataTable()
        MyBase.Tables.Add(Me.tableSPM4_CURRENTDATETIME)
        Me.tableTBLG3_SIGNATORY1 = New TBLG3_SIGNATORY1DataTable()
        MyBase.Tables.Add(Me.tableTBLG3_SIGNATORY1)
        Me.tableSPM4_GETPR_INFO = New SPM4_GETPR_INFODataTable()
        MyBase.Tables.Add(Me.tableSPM4_GETPR_INFO)
        Me.tabletblM4_CATEGORY1 = New tblM4_CATEGORY1DataTable()
        MyBase.Tables.Add(Me.tabletblM4_CATEGORY1)
        Me.tabletblM4_ITEMBRAND1 = New tblM4_ITEMBRAND1DataTable()
        MyBase.Tables.Add(Me.tabletblM4_ITEMBRAND1)
        Me.tabletblM4_SUB_CATEGORY1 = New tblM4_SUB_CATEGORY1DataTable()
        MyBase.Tables.Add(Me.tabletblM4_SUB_CATEGORY1)
        Me.tableSPM4_INVENTORY_REPORT = New SPM4_INVENTORY_REPORTDataTable()
        MyBase.Tables.Add(Me.tableSPM4_INVENTORY_REPORT)
        Me.tableSPM4_PROPERTY_NO = New SPM4_PROPERTY_NODataTable()
        MyBase.Tables.Add(Me.tableSPM4_PROPERTY_NO)
        Me.tabletblM4_PURCHASEREQUEST_CATEGORY = New tblM4_PURCHASEREQUEST_CATEGORYDataTable()
        MyBase.Tables.Add(Me.tabletblM4_PURCHASEREQUEST_CATEGORY)
        Me.tableSPM4_PURCHASELIST = New SPM4_PURCHASELISTDataTable()
        MyBase.Tables.Add(Me.tableSPM4_PURCHASELIST)
        Me.tableSPM4_PURCHASEREQUEST_STATUS = New SPM4_PURCHASEREQUEST_STATUSDataTable()
        MyBase.Tables.Add(Me.tableSPM4_PURCHASEREQUEST_STATUS)
        Me.tabletblM4_PURCHASEREQUEST_CANCELED = New tblM4_PURCHASEREQUEST_CANCELEDDataTable()
        MyBase.Tables.Add(Me.tabletblM4_PURCHASEREQUEST_CANCELED)
        Me.tabletblM4_PURCHASEREQUEST_REVISION = New tblM4_PURCHASEREQUEST_REVISIONDataTable()
        MyBase.Tables.Add(Me.tabletblM4_PURCHASEREQUEST_REVISION)
        Me.tabletblM4_PURCHASEREQUEST_POSTED = New tblM4_PURCHASEREQUEST_POSTEDDataTable()
        MyBase.Tables.Add(Me.tabletblM4_PURCHASEREQUEST_POSTED)
        Me.tabletblM4_PURCHASEREQUEST_ACCEPTED = New tblM4_PURCHASEREQUEST_ACCEPTEDDataTable()
        MyBase.Tables.Add(Me.tabletblM4_PURCHASEREQUEST_ACCEPTED)
        Me.tabletblM4_PURCHASEREQUEST_PROVIDER = New tblM4_PURCHASEREQUEST_PROVIDERDataTable()
        MyBase.Tables.Add(Me.tabletblM4_PURCHASEREQUEST_PROVIDER)
        Me.tabletblM4_INVENTORY_ITEMS_LOCATION = New tblM4_INVENTORY_ITEMS_LOCATIONDataTable()
        MyBase.Tables.Add(Me.tabletblM4_INVENTORY_ITEMS_LOCATION)
        Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION = New tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable()
        MyBase.Tables.Add(Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION)
        Me.tableSPM4_INVENTORYDGVLIST = New SPM4_INVENTORYDGVLISTDataTable()
        MyBase.Tables.Add(Me.tableSPM4_INVENTORYDGVLIST)
        Me.tabletblM4_INVENTORY_CATEGORY = New tblM4_INVENTORY_CATEGORYDataTable()
        MyBase.Tables.Add(Me.tabletblM4_INVENTORY_CATEGORY)
        Me.tabletblM4_INVENTORY_ITEMBRAND = New tblM4_INVENTORY_ITEMBRANDDataTable()
        MyBase.Tables.Add(Me.tabletblM4_INVENTORY_ITEMBRAND)
        Me.tabletblM4_INVENTORY_ITEMS = New tblM4_INVENTORY_ITEMSDataTable()
        MyBase.Tables.Add(Me.tabletblM4_INVENTORY_ITEMS)
        Me.tabletblM4_INVENTORY_SUB_CATEGORY = New tblM4_INVENTORY_SUB_CATEGORYDataTable()
        MyBase.Tables.Add(Me.tabletblM4_INVENTORY_SUB_CATEGORY)
        Me.tabletblM4_INVENTORY_CATEGORY1 = New tblM4_INVENTORY_CATEGORY1DataTable()
        MyBase.Tables.Add(Me.tabletblM4_INVENTORY_CATEGORY1)
        Me.tabletblM4_INVENTORY_ITEMBRAND1 = New tblM4_INVENTORY_ITEMBRAND1DataTable()
        MyBase.Tables.Add(Me.tabletblM4_INVENTORY_ITEMBRAND1)
        Me.tabletblM4_CATEGORY_AND_SUB = New tblM4_CATEGORY_AND_SUBDataTable()
        MyBase.Tables.Add(Me.tabletblM4_CATEGORY_AND_SUB)
        Me.tabletblM4_INVENTORY_ASSIGN_PERSON = New tblM4_INVENTORY_ASSIGN_PERSONDataTable()
        MyBase.Tables.Add(Me.tabletblM4_INVENTORY_ASSIGN_PERSON)
        Me.tabletblM4_INVENTORY_ITEMS1 = New tblM4_INVENTORY_ITEMS1DataTable()
        MyBase.Tables.Add(Me.tabletblM4_INVENTORY_ITEMS1)
        Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE = New tblM4_INVENTORY_ACQUISITION_ITEM_USAGEDataTable()
        MyBase.Tables.Add(Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE)
        Me.tabletblM4_INVENTORY_ACQUISITION_VALUE = New tblM4_INVENTORY_ACQUISITION_VALUEDataTable()
        MyBase.Tables.Add(Me.tabletblM4_INVENTORY_ACQUISITION_VALUE)
        Me.tabletblM4_INVENTORY_ITEMS_PROPERTY = New tblM4_INVENTORY_ITEMS_PROPERTYDataTable()
        MyBase.Tables.Add(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY)
        Me.tablePR_PARTICULARS_PREVIEW = New PR_PARTICULARS_PREVIEWDataTable()
        MyBase.Tables.Add(Me.tablePR_PARTICULARS_PREVIEW)
        Me.tableItemsDataGridView = New ItemsDataGridViewDataTable()
        MyBase.Tables.Add(Me.tableItemsDataGridView)
        Me.relationFK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_DELIVERY_RECEIPT = New Global.System.Data.DataRelation("FK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_DELIVERY_RECEIPT", New Global.System.Data.DataColumn() {Me.tableTBLG3_DELIVERY_RECEIPT.DR_IDColumn}, New Global.System.Data.DataColumn() {Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DR_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_DELIVERY_RECEIPT)
        Me.relationFK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_UNITS = New Global.System.Data.DataRelation("FK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_UNITS", New Global.System.Data.DataColumn() {Me.tableTBLG3_UNITS.UN_NOColumn}, New Global.System.Data.DataColumn() {Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.UN_NOColumn}, false)
        Me.Relations.Add(Me.relationFK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_UNITS)
        Me.relationFK_TBLG3_DELIVERY_RECEIPT_TBLG3_COMPANY_INFO = New Global.System.Data.DataRelation("FK_TBLG3_DELIVERY_RECEIPT_TBLG3_COMPANY_INFO", New Global.System.Data.DataColumn() {Me.tableTBLG3_COMPANY_INFO.COM_TIN_NUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableTBLG3_DELIVERY_RECEIPT.COM_TIN_NUMBERColumn}, false)
        Me.Relations.Add(Me.relationFK_TBLG3_DELIVERY_RECEIPT_TBLG3_COMPANY_INFO)
        Me.relationFK_TBLG3_INVOICE_TBLG3_COMPANY_INFO = New Global.System.Data.DataRelation("FK_TBLG3_INVOICE_TBLG3_COMPANY_INFO", New Global.System.Data.DataColumn() {Me.tableTBLG3_COMPANY_INFO.COM_TIN_NUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableTBLG3_INVOICE.COM_TIN_NUMBERColumn}, false)
        Me.Relations.Add(Me.relationFK_TBLG3_INVOICE_TBLG3_COMPANY_INFO)
        Me.relationFK_TBLG3_INVOICE_DETAILS_TBLG3_INVOICE = New Global.System.Data.DataRelation("FK_TBLG3_INVOICE_DETAILS_TBLG3_INVOICE", New Global.System.Data.DataColumn() {Me.tableTBLG3_INVOICE.INV_IDColumn}, New Global.System.Data.DataColumn() {Me.tableTBLG3_INVOICE_DETAILS.INV_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_TBLG3_INVOICE_DETAILS_TBLG3_INVOICE)
        Me.relationFK_TBLG3_REG_PARTICULAR_TBLG3_REG_BUS = New Global.System.Data.DataRelation("FK_TBLG3_REG_PARTICULAR_TBLG3_REG_BUS", New Global.System.Data.DataColumn() {Me.tableTBLG3_REG_BUS.BUS_NO_SYSTEMColumn}, New Global.System.Data.DataColumn() {Me.tableTBLG3_REG_PARTICULAR.BUS_NO_SYSTEMColumn}, false)
        Me.Relations.Add(Me.relationFK_TBLG3_REG_PARTICULAR_TBLG3_REG_BUS)
        Me.relationFK_TBLG3_REG_PARTICULAR_TBLG3_REG_DV = New Global.System.Data.DataRelation("FK_TBLG3_REG_PARTICULAR_TBLG3_REG_DV", New Global.System.Data.DataColumn() {Me.tableTBLG3_REG_DV.DV_NO_SYSTEMColumn}, New Global.System.Data.DataColumn() {Me.tableTBLG3_REG_PARTICULAR.BUS_NO_SYSTEMColumn}, false)
        Me.Relations.Add(Me.relationFK_TBLG3_REG_PARTICULAR_TBLG3_REG_DV)
        Me.relationFK_tblM4_PURCHASEREQUEST_ITEM_tblM4_PURCHASEREQUEST = New Global.System.Data.DataRelation("FK_tblM4_PURCHASEREQUEST_ITEM_tblM4_PURCHASEREQUEST", New Global.System.Data.DataColumn() {Me.tabletblM4_PURCHASEREQUEST.PR_PRNOColumn}, New Global.System.Data.DataColumn() {Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_PRNOColumn}, false)
        Me.Relations.Add(Me.relationFK_tblM4_PURCHASEREQUEST_ITEM_tblM4_PURCHASEREQUEST)
        Me.relationFK_tblM4_PURCHASEREQUEST_CANCELED_tblM4_PURCHASEREQUEST = New Global.System.Data.DataRelation("FK_tblM4_PURCHASEREQUEST_CANCELED_tblM4_PURCHASEREQUEST", New Global.System.Data.DataColumn() {Me.tabletblM4_PURCHASEREQUEST.PR_PRNOColumn}, New Global.System.Data.DataColumn() {Me.tabletblM4_PURCHASEREQUEST_CANCELED.PR_PRNOColumn}, false)
        Me.Relations.Add(Me.relationFK_tblM4_PURCHASEREQUEST_CANCELED_tblM4_PURCHASEREQUEST)
        Me.relationFK_tblM4_PURCHASEREQUEST_REVISION_tblM4_PURCHASEREQUEST = New Global.System.Data.DataRelation("FK_tblM4_PURCHASEREQUEST_REVISION_tblM4_PURCHASEREQUEST", New Global.System.Data.DataColumn() {Me.tabletblM4_PURCHASEREQUEST.PR_PRNOColumn}, New Global.System.Data.DataColumn() {Me.tabletblM4_PURCHASEREQUEST_REVISION.PR_PRNOColumn}, false)
        Me.Relations.Add(Me.relationFK_tblM4_PURCHASEREQUEST_REVISION_tblM4_PURCHASEREQUEST)
        Me.relationFK_tblM4_PURCHASEREQUEST_POSTED_tblM4_PURCHASEREQUEST = New Global.System.Data.DataRelation("FK_tblM4_PURCHASEREQUEST_POSTED_tblM4_PURCHASEREQUEST", New Global.System.Data.DataColumn() {Me.tabletblM4_PURCHASEREQUEST.PR_PRNOColumn}, New Global.System.Data.DataColumn() {Me.tabletblM4_PURCHASEREQUEST_POSTED.PR_PRNOColumn}, false)
        Me.Relations.Add(Me.relationFK_tblM4_PURCHASEREQUEST_POSTED_tblM4_PURCHASEREQUEST)
        Me.relationFK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST = New Global.System.Data.DataRelation("FK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST", New Global.System.Data.DataColumn() {Me.tabletblM4_PURCHASEREQUEST.PR_PRNOColumn}, New Global.System.Data.DataColumn() {Me.tabletblM4_PURCHASEREQUEST_ACCEPTED.PR_PRNOColumn}, false)
        Me.Relations.Add(Me.relationFK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST)
        Me.relationFK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST_CATEGORY = New Global.System.Data.DataRelation("FK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST_CATEGORY", New Global.System.Data.DataColumn() {Me.tabletblM4_PURCHASEREQUEST_CATEGORY.PRCAT_NOColumn}, New Global.System.Data.DataColumn() {Me.tabletblM4_PURCHASEREQUEST_ACCEPTED.PRCAT_NOColumn}, false)
        Me.Relations.Add(Me.relationFK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST_CATEGORY)
        Me.relationFK_tblM4_ITEMS_tblM4_ITEMBRAND = New Global.System.Data.DataRelation("FK_tblM4_ITEMS_tblM4_ITEMBRAND", New Global.System.Data.DataColumn() {Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_NOColumn}, New Global.System.Data.DataColumn() {Me.tabletblM4_INVENTORY_ITEMS.ITBR_NOColumn}, false)
        Me.Relations.Add(Me.relationFK_tblM4_ITEMS_tblM4_ITEMBRAND)
        Me.relationFK_tblM4_INVENTORY_ITEMS_tblM4_INVENTORY_ITEMS = New Global.System.Data.DataRelation("FK_tblM4_INVENTORY_ITEMS_tblM4_INVENTORY_ITEMS", New Global.System.Data.DataColumn() {Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_NOColumn}, New Global.System.Data.DataColumn() {Me.tabletblM4_INVENTORY_ITEMS.SC_NOColumn}, false)
        Me.Relations.Add(Me.relationFK_tblM4_INVENTORY_ITEMS_tblM4_INVENTORY_ITEMS)
        Me.relationFK_tblM4_SUB_CATEGORY_tblM4_CATEGORY = New Global.System.Data.DataRelation("FK_tblM4_SUB_CATEGORY_tblM4_CATEGORY", New Global.System.Data.DataColumn() {Me.tabletblM4_INVENTORY_CATEGORY.CAT_CODEColumn}, New Global.System.Data.DataColumn() {Me.tabletblM4_INVENTORY_SUB_CATEGORY.CAT_CODEColumn}, false)
        Me.Relations.Add(Me.relationFK_tblM4_SUB_CATEGORY_tblM4_CATEGORY)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTBLG3_COMPANY_INFO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_PURCHASEREQUEST_ITEM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTBLG3_DELIVER_RECEIPT_DETAILS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTBLG3_DELIVERY_RECEIPT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTBLG3_INVOICE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTBLG3_INVOICE_DETAILS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTBLG3_PRIMARY_SIGNATORY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTBLG3_REG_BUS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTBLG3_REG_DV() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTBLG3_REG_PARTICULAR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTBLG3_SIGNATORY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTBLG3_SIGNATORY_TYPE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTBLG3_UNITS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_PURCHASEREQUEST() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeVWG3_DR_LIST() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeVWG3_REG_DV() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeVWG3_EMPLOYEE_LIST() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeVWG3_INVOICE_LIST() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeVWG3_PRIMARY_SIGNATORY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeVWG3_REG_BUS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeSPM4_PRCODE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeSPM4_CURRENTDATETIME() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTBLG3_SIGNATORY1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeSPM4_GETPR_INFO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_CATEGORY1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_ITEMBRAND1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_SUB_CATEGORY1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeSPM4_INVENTORY_REPORT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeSPM4_PROPERTY_NO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_PURCHASEREQUEST_CATEGORY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeSPM4_PURCHASELIST() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeSPM4_PURCHASEREQUEST_STATUS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_PURCHASEREQUEST_CANCELED() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_PURCHASEREQUEST_REVISION() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_PURCHASEREQUEST_POSTED() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_PURCHASEREQUEST_ACCEPTED() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_PURCHASEREQUEST_PROVIDER() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_INVENTORY_ITEMS_LOCATION() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_INVENTORY_ITEMS_DEFLOCATION() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeSPM4_INVENTORYDGVLIST() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_INVENTORY_CATEGORY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_INVENTORY_ITEMBRAND() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_INVENTORY_ITEMS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_INVENTORY_SUB_CATEGORY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_INVENTORY_CATEGORY1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_INVENTORY_ITEMBRAND1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_CATEGORY_AND_SUB() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_INVENTORY_ASSIGN_PERSON() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_INVENTORY_ITEMS1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_INVENTORY_ACQUISITION_ITEM_USAGE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_INVENTORY_ACQUISITION_VALUE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblM4_INVENTORY_ITEMS_PROPERTY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializePR_PARTICULARS_PREVIEW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeItemsDataGridView() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TBLG3_COMPANY_INFORowChangeEventHandler(ByVal sender As Object, ByVal e As TBLG3_COMPANY_INFORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_PURCHASEREQUEST_ITEMRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_PURCHASEREQUEST_ITEMRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TBLG3_DELIVER_RECEIPT_DETAILSRowChangeEventHandler(ByVal sender As Object, ByVal e As TBLG3_DELIVER_RECEIPT_DETAILSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TBLG3_DELIVERY_RECEIPTRowChangeEventHandler(ByVal sender As Object, ByVal e As TBLG3_DELIVERY_RECEIPTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TBLG3_INVOICERowChangeEventHandler(ByVal sender As Object, ByVal e As TBLG3_INVOICERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TBLG3_INVOICE_DETAILSRowChangeEventHandler(ByVal sender As Object, ByVal e As TBLG3_INVOICE_DETAILSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TBLG3_PRIMARY_SIGNATORYRowChangeEventHandler(ByVal sender As Object, ByVal e As TBLG3_PRIMARY_SIGNATORYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TBLG3_REG_BUSRowChangeEventHandler(ByVal sender As Object, ByVal e As TBLG3_REG_BUSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TBLG3_REG_DVRowChangeEventHandler(ByVal sender As Object, ByVal e As TBLG3_REG_DVRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TBLG3_REG_PARTICULARRowChangeEventHandler(ByVal sender As Object, ByVal e As TBLG3_REG_PARTICULARRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TBLG3_SIGNATORYRowChangeEventHandler(ByVal sender As Object, ByVal e As TBLG3_SIGNATORYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TBLG3_SIGNATORY_TYPERowChangeEventHandler(ByVal sender As Object, ByVal e As TBLG3_SIGNATORY_TYPERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TBLG3_UNITSRowChangeEventHandler(ByVal sender As Object, ByVal e As TBLG3_UNITSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_PURCHASEREQUESTRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_PURCHASEREQUESTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub VWG3_DR_LISTRowChangeEventHandler(ByVal sender As Object, ByVal e As VWG3_DR_LISTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub VWG3_REG_DVRowChangeEventHandler(ByVal sender As Object, ByVal e As VWG3_REG_DVRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub VWG3_EMPLOYEE_LISTRowChangeEventHandler(ByVal sender As Object, ByVal e As VWG3_EMPLOYEE_LISTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub VWG3_INVOICE_LISTRowChangeEventHandler(ByVal sender As Object, ByVal e As VWG3_INVOICE_LISTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub VWG3_PRIMARY_SIGNATORYRowChangeEventHandler(ByVal sender As Object, ByVal e As VWG3_PRIMARY_SIGNATORYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub VWG3_REG_BUSRowChangeEventHandler(ByVal sender As Object, ByVal e As VWG3_REG_BUSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub SPM4_PRCODERowChangeEventHandler(ByVal sender As Object, ByVal e As SPM4_PRCODERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub SPM4_CURRENTDATETIMERowChangeEventHandler(ByVal sender As Object, ByVal e As SPM4_CURRENTDATETIMERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TBLG3_SIGNATORY1RowChangeEventHandler(ByVal sender As Object, ByVal e As TBLG3_SIGNATORY1RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub SPM4_GETPR_INFORowChangeEventHandler(ByVal sender As Object, ByVal e As SPM4_GETPR_INFORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_CATEGORY1RowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_CATEGORY1RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_ITEMBRAND1RowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_ITEMBRAND1RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_SUB_CATEGORY1RowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_SUB_CATEGORY1RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub SPM4_INVENTORY_REPORTRowChangeEventHandler(ByVal sender As Object, ByVal e As SPM4_INVENTORY_REPORTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub SPM4_PROPERTY_NORowChangeEventHandler(ByVal sender As Object, ByVal e As SPM4_PROPERTY_NORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_PURCHASEREQUEST_CATEGORYRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_PURCHASEREQUEST_CATEGORYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub SPM4_PURCHASELISTRowChangeEventHandler(ByVal sender As Object, ByVal e As SPM4_PURCHASELISTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub SPM4_PURCHASEREQUEST_STATUSRowChangeEventHandler(ByVal sender As Object, ByVal e As SPM4_PURCHASEREQUEST_STATUSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_PURCHASEREQUEST_CANCELEDRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_PURCHASEREQUEST_CANCELEDRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_PURCHASEREQUEST_REVISIONRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_PURCHASEREQUEST_REVISIONRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_PURCHASEREQUEST_POSTEDRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_PURCHASEREQUEST_POSTEDRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_PURCHASEREQUEST_ACCEPTEDRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_PURCHASEREQUEST_ACCEPTEDRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_PURCHASEREQUEST_PROVIDERRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_PURCHASEREQUEST_PROVIDERRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_INVENTORY_ITEMS_LOCATIONRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_INVENTORY_ITEMS_LOCATIONRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub SPM4_INVENTORYDGVLISTRowChangeEventHandler(ByVal sender As Object, ByVal e As SPM4_INVENTORYDGVLISTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_INVENTORY_CATEGORYRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_INVENTORY_CATEGORYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_INVENTORY_ITEMBRANDRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_INVENTORY_ITEMBRANDRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_INVENTORY_ITEMSRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_INVENTORY_ITEMSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_INVENTORY_SUB_CATEGORYRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_INVENTORY_SUB_CATEGORYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_INVENTORY_CATEGORY1RowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_INVENTORY_CATEGORY1RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_INVENTORY_ITEMBRAND1RowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_INVENTORY_ITEMBRAND1RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_CATEGORY_AND_SUBRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_CATEGORY_AND_SUBRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_INVENTORY_ASSIGN_PERSONRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_INVENTORY_ASSIGN_PERSONRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_INVENTORY_ITEMS1RowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_INVENTORY_ITEMS1RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_INVENTORY_ACQUISITION_VALUERowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_INVENTORY_ACQUISITION_VALUERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblM4_INVENTORY_ITEMS_PROPERTYRowChangeEventHandler(ByVal sender As Object, ByVal e As tblM4_INVENTORY_ITEMS_PROPERTYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub PR_PARTICULARS_PREVIEWRowChangeEventHandler(ByVal sender As Object, ByVal e As PR_PARTICULARS_PREVIEWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ItemsDataGridViewRowChangeEventHandler(ByVal sender As Object, ByVal e As ItemsDataGridViewRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBLG3_COMPANY_INFODataTable
        Inherits Global.System.Data.TypedTableBase(Of TBLG3_COMPANY_INFORow)
        
        Private columnCOM_TIN_NUMBER As Global.System.Data.DataColumn
        
        Private columnCOM_COMPANY_NAME As Global.System.Data.DataColumn
        
        Private columnCOM_ADDRESS As Global.System.Data.DataColumn
        
        Private columnCOM_CONTACT_NO As Global.System.Data.DataColumn
        
        Private columnCOM_FAX_NO As Global.System.Data.DataColumn
        
        Private columnCOM_EMAIL As Global.System.Data.DataColumn
        
        Private columnCOM_DIRECTORY As Global.System.Data.DataColumn
        
        Private columnCOM_STATUS As Global.System.Data.DataColumn
        
        Private columnEMP_NO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBLG3_COMPANY_INFO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_TIN_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_TIN_NUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_COMPANY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_COMPANY_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_ADDRESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_CONTACT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_CONTACT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_FAX_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_FAX_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_EMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_DIRECTORYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_DIRECTORY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBLG3_COMPANY_INFORow
            Get
                Return CType(Me.Rows(index),TBLG3_COMPANY_INFORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_COMPANY_INFORowChanging As TBLG3_COMPANY_INFORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_COMPANY_INFORowChanged As TBLG3_COMPANY_INFORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_COMPANY_INFORowDeleting As TBLG3_COMPANY_INFORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_COMPANY_INFORowDeleted As TBLG3_COMPANY_INFORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTBLG3_COMPANY_INFORow(ByVal row As TBLG3_COMPANY_INFORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTBLG3_COMPANY_INFORow(ByVal COM_TIN_NUMBER As String, ByVal COM_COMPANY_NAME As String, ByVal COM_ADDRESS As String, ByVal COM_CONTACT_NO As String, ByVal COM_FAX_NO As String, ByVal COM_EMAIL As String, ByVal COM_DIRECTORY As String, ByVal COM_STATUS As Integer, ByVal EMP_NO As String) As TBLG3_COMPANY_INFORow
            Dim rowTBLG3_COMPANY_INFORow As TBLG3_COMPANY_INFORow = CType(Me.NewRow,TBLG3_COMPANY_INFORow)
            Dim columnValuesArray() As Object = New Object() {COM_TIN_NUMBER, COM_COMPANY_NAME, COM_ADDRESS, COM_CONTACT_NO, COM_FAX_NO, COM_EMAIL, COM_DIRECTORY, COM_STATUS, EMP_NO}
            rowTBLG3_COMPANY_INFORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBLG3_COMPANY_INFORow)
            Return rowTBLG3_COMPANY_INFORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByCOM_TIN_NUMBER(ByVal COM_TIN_NUMBER As String) As TBLG3_COMPANY_INFORow
            Return CType(Me.Rows.Find(New Object() {COM_TIN_NUMBER}),TBLG3_COMPANY_INFORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBLG3_COMPANY_INFODataTable = CType(MyBase.Clone,TBLG3_COMPANY_INFODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBLG3_COMPANY_INFODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCOM_TIN_NUMBER = MyBase.Columns("COM_TIN_NUMBER")
            Me.columnCOM_COMPANY_NAME = MyBase.Columns("COM_COMPANY_NAME")
            Me.columnCOM_ADDRESS = MyBase.Columns("COM_ADDRESS")
            Me.columnCOM_CONTACT_NO = MyBase.Columns("COM_CONTACT_NO")
            Me.columnCOM_FAX_NO = MyBase.Columns("COM_FAX_NO")
            Me.columnCOM_EMAIL = MyBase.Columns("COM_EMAIL")
            Me.columnCOM_DIRECTORY = MyBase.Columns("COM_DIRECTORY")
            Me.columnCOM_STATUS = MyBase.Columns("COM_STATUS")
            Me.columnEMP_NO = MyBase.Columns("EMP_NO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCOM_TIN_NUMBER = New Global.System.Data.DataColumn("COM_TIN_NUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_TIN_NUMBER)
            Me.columnCOM_COMPANY_NAME = New Global.System.Data.DataColumn("COM_COMPANY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_COMPANY_NAME)
            Me.columnCOM_ADDRESS = New Global.System.Data.DataColumn("COM_ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_ADDRESS)
            Me.columnCOM_CONTACT_NO = New Global.System.Data.DataColumn("COM_CONTACT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_CONTACT_NO)
            Me.columnCOM_FAX_NO = New Global.System.Data.DataColumn("COM_FAX_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_FAX_NO)
            Me.columnCOM_EMAIL = New Global.System.Data.DataColumn("COM_EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_EMAIL)
            Me.columnCOM_DIRECTORY = New Global.System.Data.DataColumn("COM_DIRECTORY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_DIRECTORY)
            Me.columnCOM_STATUS = New Global.System.Data.DataColumn("COM_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_STATUS)
            Me.columnEMP_NO = New Global.System.Data.DataColumn("EMP_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_NO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCOM_TIN_NUMBER}, true))
            Me.columnCOM_TIN_NUMBER.AllowDBNull = false
            Me.columnCOM_TIN_NUMBER.Unique = true
            Me.columnCOM_TIN_NUMBER.MaxLength = 50
            Me.columnCOM_COMPANY_NAME.MaxLength = 2147483647
            Me.columnCOM_ADDRESS.MaxLength = 2147483647
            Me.columnCOM_CONTACT_NO.MaxLength = 100
            Me.columnCOM_FAX_NO.MaxLength = 50
            Me.columnCOM_EMAIL.MaxLength = 100
            Me.columnCOM_DIRECTORY.MaxLength = 50
            Me.columnEMP_NO.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTBLG3_COMPANY_INFORow() As TBLG3_COMPANY_INFORow
            Return CType(Me.NewRow,TBLG3_COMPANY_INFORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBLG3_COMPANY_INFORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBLG3_COMPANY_INFORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBLG3_COMPANY_INFORowChangedEvent) Is Nothing) Then
                RaiseEvent TBLG3_COMPANY_INFORowChanged(Me, New TBLG3_COMPANY_INFORowChangeEvent(CType(e.Row,TBLG3_COMPANY_INFORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBLG3_COMPANY_INFORowChangingEvent) Is Nothing) Then
                RaiseEvent TBLG3_COMPANY_INFORowChanging(Me, New TBLG3_COMPANY_INFORowChangeEvent(CType(e.Row,TBLG3_COMPANY_INFORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBLG3_COMPANY_INFORowDeletedEvent) Is Nothing) Then
                RaiseEvent TBLG3_COMPANY_INFORowDeleted(Me, New TBLG3_COMPANY_INFORowChangeEvent(CType(e.Row,TBLG3_COMPANY_INFORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBLG3_COMPANY_INFORowDeletingEvent) Is Nothing) Then
                RaiseEvent TBLG3_COMPANY_INFORowDeleting(Me, New TBLG3_COMPANY_INFORowChangeEvent(CType(e.Row,TBLG3_COMPANY_INFORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTBLG3_COMPANY_INFORow(ByVal row As TBLG3_COMPANY_INFORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBLG3_COMPANY_INFODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_PURCHASEREQUEST_ITEMDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_PURCHASEREQUEST_ITEMRow)
        
        Private columnPRI_ITEMNO As Global.System.Data.DataColumn
        
        Private columnPR_QUANTITY As Global.System.Data.DataColumn
        
        Private columnPR_UNITISSUE As Global.System.Data.DataColumn
        
        Private columnPRI_ITEMDESCRIPTION As Global.System.Data.DataColumn
        
        Private columnPR_STOCKNO As Global.System.Data.DataColumn
        
        Private columnPR_ESTIMATEDUNITCOST As Global.System.Data.DataColumn
        
        Private columnPR_ESTIMATEDCOST As Global.System.Data.DataColumn
        
        Private columnPR_PRNO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_PURCHASEREQUEST_ITEM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRI_ITEMNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRI_ITEMNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_QUANTITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_QUANTITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_UNITISSUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_UNITISSUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRI_ITEMDESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRI_ITEMDESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_STOCKNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_STOCKNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_ESTIMATEDUNITCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_ESTIMATEDUNITCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_ESTIMATEDCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_ESTIMATEDCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_PRNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_PRNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_PURCHASEREQUEST_ITEMRow
            Get
                Return CType(Me.Rows(index),tblM4_PURCHASEREQUEST_ITEMRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_ITEMRowChanging As tblM4_PURCHASEREQUEST_ITEMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_ITEMRowChanged As tblM4_PURCHASEREQUEST_ITEMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_ITEMRowDeleting As tblM4_PURCHASEREQUEST_ITEMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_ITEMRowDeleted As tblM4_PURCHASEREQUEST_ITEMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_PURCHASEREQUEST_ITEMRow(ByVal row As tblM4_PURCHASEREQUEST_ITEMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_PURCHASEREQUEST_ITEMRow(ByVal PR_QUANTITY As Integer, ByVal PR_UNITISSUE As String, ByVal PRI_ITEMDESCRIPTION As String, ByVal PR_STOCKNO As String, ByVal PR_ESTIMATEDUNITCOST As Decimal, ByVal PR_ESTIMATEDCOST As Decimal, ByVal parenttblM4_PURCHASEREQUESTRowByFK_tblM4_PURCHASEREQUEST_ITEM_tblM4_PURCHASEREQUEST As tblM4_PURCHASEREQUESTRow) As tblM4_PURCHASEREQUEST_ITEMRow
            Dim rowtblM4_PURCHASEREQUEST_ITEMRow As tblM4_PURCHASEREQUEST_ITEMRow = CType(Me.NewRow,tblM4_PURCHASEREQUEST_ITEMRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PR_QUANTITY, PR_UNITISSUE, PRI_ITEMDESCRIPTION, PR_STOCKNO, PR_ESTIMATEDUNITCOST, PR_ESTIMATEDCOST, Nothing}
            If (Not (parenttblM4_PURCHASEREQUESTRowByFK_tblM4_PURCHASEREQUEST_ITEM_tblM4_PURCHASEREQUEST) Is Nothing) Then
                columnValuesArray(7) = parenttblM4_PURCHASEREQUESTRowByFK_tblM4_PURCHASEREQUEST_ITEM_tblM4_PURCHASEREQUEST(0)
            End If
            rowtblM4_PURCHASEREQUEST_ITEMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_PURCHASEREQUEST_ITEMRow)
            Return rowtblM4_PURCHASEREQUEST_ITEMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByPRI_ITEMNO(ByVal PRI_ITEMNO As Integer) As tblM4_PURCHASEREQUEST_ITEMRow
            Return CType(Me.Rows.Find(New Object() {PRI_ITEMNO}),tblM4_PURCHASEREQUEST_ITEMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_PURCHASEREQUEST_ITEMDataTable = CType(MyBase.Clone,tblM4_PURCHASEREQUEST_ITEMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_PURCHASEREQUEST_ITEMDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPRI_ITEMNO = MyBase.Columns("PRI_ITEMNO")
            Me.columnPR_QUANTITY = MyBase.Columns("PR_QUANTITY")
            Me.columnPR_UNITISSUE = MyBase.Columns("PR_UNITISSUE")
            Me.columnPRI_ITEMDESCRIPTION = MyBase.Columns("PRI_ITEMDESCRIPTION")
            Me.columnPR_STOCKNO = MyBase.Columns("PR_STOCKNO")
            Me.columnPR_ESTIMATEDUNITCOST = MyBase.Columns("PR_ESTIMATEDUNITCOST")
            Me.columnPR_ESTIMATEDCOST = MyBase.Columns("PR_ESTIMATEDCOST")
            Me.columnPR_PRNO = MyBase.Columns("PR_PRNO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPRI_ITEMNO = New Global.System.Data.DataColumn("PRI_ITEMNO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRI_ITEMNO)
            Me.columnPR_QUANTITY = New Global.System.Data.DataColumn("PR_QUANTITY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_QUANTITY)
            Me.columnPR_UNITISSUE = New Global.System.Data.DataColumn("PR_UNITISSUE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_UNITISSUE)
            Me.columnPRI_ITEMDESCRIPTION = New Global.System.Data.DataColumn("PRI_ITEMDESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRI_ITEMDESCRIPTION)
            Me.columnPR_STOCKNO = New Global.System.Data.DataColumn("PR_STOCKNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_STOCKNO)
            Me.columnPR_ESTIMATEDUNITCOST = New Global.System.Data.DataColumn("PR_ESTIMATEDUNITCOST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_ESTIMATEDUNITCOST)
            Me.columnPR_ESTIMATEDCOST = New Global.System.Data.DataColumn("PR_ESTIMATEDCOST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_ESTIMATEDCOST)
            Me.columnPR_PRNO = New Global.System.Data.DataColumn("PR_PRNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_PRNO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPRI_ITEMNO}, true))
            Me.columnPRI_ITEMNO.AutoIncrement = true
            Me.columnPRI_ITEMNO.AutoIncrementSeed = -1
            Me.columnPRI_ITEMNO.AutoIncrementStep = -1
            Me.columnPRI_ITEMNO.AllowDBNull = false
            Me.columnPRI_ITEMNO.ReadOnly = true
            Me.columnPRI_ITEMNO.Unique = true
            Me.columnPR_QUANTITY.AllowDBNull = false
            Me.columnPR_UNITISSUE.AllowDBNull = false
            Me.columnPR_UNITISSUE.MaxLength = 30
            Me.columnPRI_ITEMDESCRIPTION.AllowDBNull = false
            Me.columnPRI_ITEMDESCRIPTION.MaxLength = 2000
            Me.columnPR_STOCKNO.MaxLength = 30
            Me.columnPR_PRNO.AllowDBNull = false
            Me.columnPR_PRNO.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_PURCHASEREQUEST_ITEMRow() As tblM4_PURCHASEREQUEST_ITEMRow
            Return CType(Me.NewRow,tblM4_PURCHASEREQUEST_ITEMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_PURCHASEREQUEST_ITEMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_PURCHASEREQUEST_ITEMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_ITEMRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_ITEMRowChanged(Me, New tblM4_PURCHASEREQUEST_ITEMRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_ITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_ITEMRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_ITEMRowChanging(Me, New tblM4_PURCHASEREQUEST_ITEMRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_ITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_ITEMRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_ITEMRowDeleted(Me, New tblM4_PURCHASEREQUEST_ITEMRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_ITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_ITEMRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_ITEMRowDeleting(Me, New tblM4_PURCHASEREQUEST_ITEMRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_ITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_PURCHASEREQUEST_ITEMRow(ByVal row As tblM4_PURCHASEREQUEST_ITEMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_PURCHASEREQUEST_ITEMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBLG3_DELIVER_RECEIPT_DETAILSDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBLG3_DELIVER_RECEIPT_DETAILSRow)
        
        Private columnDRD_ID As Global.System.Data.DataColumn
        
        Private columnDR_ID As Global.System.Data.DataColumn
        
        Private columnUN_NO As Global.System.Data.DataColumn
        
        Private columnDRD_QUANTITY As Global.System.Data.DataColumn
        
        Private columnDRD_DESCRIPTION As Global.System.Data.DataColumn
        
        Private columnDRD_WARANTY As Global.System.Data.DataColumn
        
        Private columnDRD_STATUS As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBLG3_DELIVER_RECEIPT_DETAILS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DRD_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRD_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DR_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDR_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UN_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DRD_QUANTITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRD_QUANTITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DRD_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRD_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DRD_WARANTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRD_WARANTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DRD_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRD_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBLG3_DELIVER_RECEIPT_DETAILSRow
            Get
                Return CType(Me.Rows(index),TBLG3_DELIVER_RECEIPT_DETAILSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_DELIVER_RECEIPT_DETAILSRowChanging As TBLG3_DELIVER_RECEIPT_DETAILSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_DELIVER_RECEIPT_DETAILSRowChanged As TBLG3_DELIVER_RECEIPT_DETAILSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_DELIVER_RECEIPT_DETAILSRowDeleting As TBLG3_DELIVER_RECEIPT_DETAILSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_DELIVER_RECEIPT_DETAILSRowDeleted As TBLG3_DELIVER_RECEIPT_DETAILSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTBLG3_DELIVER_RECEIPT_DETAILSRow(ByVal row As TBLG3_DELIVER_RECEIPT_DETAILSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTBLG3_DELIVER_RECEIPT_DETAILSRow(ByVal parentTBLG3_DELIVERY_RECEIPTRowByFK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_DELIVERY_RECEIPT As TBLG3_DELIVERY_RECEIPTRow, ByVal parentTBLG3_UNITSRowByFK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_UNITS As TBLG3_UNITSRow, ByVal DRD_QUANTITY As Integer, ByVal DRD_DESCRIPTION As String, ByVal DRD_WARANTY As Date, ByVal DRD_STATUS As Integer, ByVal HRIS_EMPNO As String) As TBLG3_DELIVER_RECEIPT_DETAILSRow
            Dim rowTBLG3_DELIVER_RECEIPT_DETAILSRow As TBLG3_DELIVER_RECEIPT_DETAILSRow = CType(Me.NewRow,TBLG3_DELIVER_RECEIPT_DETAILSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, Nothing, DRD_QUANTITY, DRD_DESCRIPTION, DRD_WARANTY, DRD_STATUS, HRIS_EMPNO}
            If (Not (parentTBLG3_DELIVERY_RECEIPTRowByFK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_DELIVERY_RECEIPT) Is Nothing) Then
                columnValuesArray(1) = parentTBLG3_DELIVERY_RECEIPTRowByFK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_DELIVERY_RECEIPT(0)
            End If
            If (Not (parentTBLG3_UNITSRowByFK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_UNITS) Is Nothing) Then
                columnValuesArray(2) = parentTBLG3_UNITSRowByFK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_UNITS(0)
            End If
            rowTBLG3_DELIVER_RECEIPT_DETAILSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBLG3_DELIVER_RECEIPT_DETAILSRow)
            Return rowTBLG3_DELIVER_RECEIPT_DETAILSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByDRD_ID(ByVal DRD_ID As Integer) As TBLG3_DELIVER_RECEIPT_DETAILSRow
            Return CType(Me.Rows.Find(New Object() {DRD_ID}),TBLG3_DELIVER_RECEIPT_DETAILSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBLG3_DELIVER_RECEIPT_DETAILSDataTable = CType(MyBase.Clone,TBLG3_DELIVER_RECEIPT_DETAILSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBLG3_DELIVER_RECEIPT_DETAILSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDRD_ID = MyBase.Columns("DRD_ID")
            Me.columnDR_ID = MyBase.Columns("DR_ID")
            Me.columnUN_NO = MyBase.Columns("UN_NO")
            Me.columnDRD_QUANTITY = MyBase.Columns("DRD_QUANTITY")
            Me.columnDRD_DESCRIPTION = MyBase.Columns("DRD_DESCRIPTION")
            Me.columnDRD_WARANTY = MyBase.Columns("DRD_WARANTY")
            Me.columnDRD_STATUS = MyBase.Columns("DRD_STATUS")
            Me.columnHRIS_EMPNO = MyBase.Columns("HRIS_EMPNO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDRD_ID = New Global.System.Data.DataColumn("DRD_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRD_ID)
            Me.columnDR_ID = New Global.System.Data.DataColumn("DR_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDR_ID)
            Me.columnUN_NO = New Global.System.Data.DataColumn("UN_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN_NO)
            Me.columnDRD_QUANTITY = New Global.System.Data.DataColumn("DRD_QUANTITY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRD_QUANTITY)
            Me.columnDRD_DESCRIPTION = New Global.System.Data.DataColumn("DRD_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRD_DESCRIPTION)
            Me.columnDRD_WARANTY = New Global.System.Data.DataColumn("DRD_WARANTY", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRD_WARANTY)
            Me.columnDRD_STATUS = New Global.System.Data.DataColumn("DRD_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRD_STATUS)
            Me.columnHRIS_EMPNO = New Global.System.Data.DataColumn("HRIS_EMPNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDRD_ID}, true))
            Me.columnDRD_ID.AutoIncrement = true
            Me.columnDRD_ID.AutoIncrementSeed = -1
            Me.columnDRD_ID.AutoIncrementStep = -1
            Me.columnDRD_ID.AllowDBNull = false
            Me.columnDRD_ID.ReadOnly = true
            Me.columnDRD_ID.Unique = true
            Me.columnDR_ID.MaxLength = 50
            Me.columnDRD_DESCRIPTION.MaxLength = 2147483647
            Me.columnHRIS_EMPNO.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTBLG3_DELIVER_RECEIPT_DETAILSRow() As TBLG3_DELIVER_RECEIPT_DETAILSRow
            Return CType(Me.NewRow,TBLG3_DELIVER_RECEIPT_DETAILSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBLG3_DELIVER_RECEIPT_DETAILSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBLG3_DELIVER_RECEIPT_DETAILSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBLG3_DELIVER_RECEIPT_DETAILSRowChangedEvent) Is Nothing) Then
                RaiseEvent TBLG3_DELIVER_RECEIPT_DETAILSRowChanged(Me, New TBLG3_DELIVER_RECEIPT_DETAILSRowChangeEvent(CType(e.Row,TBLG3_DELIVER_RECEIPT_DETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBLG3_DELIVER_RECEIPT_DETAILSRowChangingEvent) Is Nothing) Then
                RaiseEvent TBLG3_DELIVER_RECEIPT_DETAILSRowChanging(Me, New TBLG3_DELIVER_RECEIPT_DETAILSRowChangeEvent(CType(e.Row,TBLG3_DELIVER_RECEIPT_DETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBLG3_DELIVER_RECEIPT_DETAILSRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBLG3_DELIVER_RECEIPT_DETAILSRowDeleted(Me, New TBLG3_DELIVER_RECEIPT_DETAILSRowChangeEvent(CType(e.Row,TBLG3_DELIVER_RECEIPT_DETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBLG3_DELIVER_RECEIPT_DETAILSRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBLG3_DELIVER_RECEIPT_DETAILSRowDeleting(Me, New TBLG3_DELIVER_RECEIPT_DETAILSRowChangeEvent(CType(e.Row,TBLG3_DELIVER_RECEIPT_DETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTBLG3_DELIVER_RECEIPT_DETAILSRow(ByVal row As TBLG3_DELIVER_RECEIPT_DETAILSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBLG3_DELIVER_RECEIPT_DETAILSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBLG3_DELIVERY_RECEIPTDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBLG3_DELIVERY_RECEIPTRow)
        
        Private columnDR_ID As Global.System.Data.DataColumn
        
        Private columnDR_NO As Global.System.Data.DataColumn
        
        Private columnCOM_TIN_NUMBER As Global.System.Data.DataColumn
        
        Private columnINV_ID As Global.System.Data.DataColumn
        
        Private columnDR_DELIVER As Global.System.Data.DataColumn
        
        Private columnDR_RECEIVED_BY As Global.System.Data.DataColumn
        
        Private columnDR_STATUS As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBLG3_DELIVERY_RECEIPT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DR_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDR_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DR_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDR_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_TIN_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_TIN_NUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INV_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINV_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DR_DELIVERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDR_DELIVER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DR_RECEIVED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDR_RECEIVED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DR_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDR_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBLG3_DELIVERY_RECEIPTRow
            Get
                Return CType(Me.Rows(index),TBLG3_DELIVERY_RECEIPTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_DELIVERY_RECEIPTRowChanging As TBLG3_DELIVERY_RECEIPTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_DELIVERY_RECEIPTRowChanged As TBLG3_DELIVERY_RECEIPTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_DELIVERY_RECEIPTRowDeleting As TBLG3_DELIVERY_RECEIPTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_DELIVERY_RECEIPTRowDeleted As TBLG3_DELIVERY_RECEIPTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTBLG3_DELIVERY_RECEIPTRow(ByVal row As TBLG3_DELIVERY_RECEIPTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTBLG3_DELIVERY_RECEIPTRow(ByVal DR_ID As String, ByVal DR_NO As String, ByVal parentTBLG3_COMPANY_INFORowByFK_TBLG3_DELIVERY_RECEIPT_TBLG3_COMPANY_INFO As TBLG3_COMPANY_INFORow, ByVal INV_ID As String, ByVal DR_DELIVER As Date, ByVal DR_RECEIVED_BY As String, ByVal DR_STATUS As Integer, ByVal HRIS_EMPNO As String) As TBLG3_DELIVERY_RECEIPTRow
            Dim rowTBLG3_DELIVERY_RECEIPTRow As TBLG3_DELIVERY_RECEIPTRow = CType(Me.NewRow,TBLG3_DELIVERY_RECEIPTRow)
            Dim columnValuesArray() As Object = New Object() {DR_ID, DR_NO, Nothing, INV_ID, DR_DELIVER, DR_RECEIVED_BY, DR_STATUS, HRIS_EMPNO}
            If (Not (parentTBLG3_COMPANY_INFORowByFK_TBLG3_DELIVERY_RECEIPT_TBLG3_COMPANY_INFO) Is Nothing) Then
                columnValuesArray(2) = parentTBLG3_COMPANY_INFORowByFK_TBLG3_DELIVERY_RECEIPT_TBLG3_COMPANY_INFO(0)
            End If
            rowTBLG3_DELIVERY_RECEIPTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBLG3_DELIVERY_RECEIPTRow)
            Return rowTBLG3_DELIVERY_RECEIPTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByDR_ID(ByVal DR_ID As String) As TBLG3_DELIVERY_RECEIPTRow
            Return CType(Me.Rows.Find(New Object() {DR_ID}),TBLG3_DELIVERY_RECEIPTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBLG3_DELIVERY_RECEIPTDataTable = CType(MyBase.Clone,TBLG3_DELIVERY_RECEIPTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBLG3_DELIVERY_RECEIPTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDR_ID = MyBase.Columns("DR_ID")
            Me.columnDR_NO = MyBase.Columns("DR_NO")
            Me.columnCOM_TIN_NUMBER = MyBase.Columns("COM_TIN_NUMBER")
            Me.columnINV_ID = MyBase.Columns("INV_ID")
            Me.columnDR_DELIVER = MyBase.Columns("DR_DELIVER")
            Me.columnDR_RECEIVED_BY = MyBase.Columns("DR_RECEIVED_BY")
            Me.columnDR_STATUS = MyBase.Columns("DR_STATUS")
            Me.columnHRIS_EMPNO = MyBase.Columns("HRIS_EMPNO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDR_ID = New Global.System.Data.DataColumn("DR_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDR_ID)
            Me.columnDR_NO = New Global.System.Data.DataColumn("DR_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDR_NO)
            Me.columnCOM_TIN_NUMBER = New Global.System.Data.DataColumn("COM_TIN_NUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_TIN_NUMBER)
            Me.columnINV_ID = New Global.System.Data.DataColumn("INV_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINV_ID)
            Me.columnDR_DELIVER = New Global.System.Data.DataColumn("DR_DELIVER", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDR_DELIVER)
            Me.columnDR_RECEIVED_BY = New Global.System.Data.DataColumn("DR_RECEIVED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDR_RECEIVED_BY)
            Me.columnDR_STATUS = New Global.System.Data.DataColumn("DR_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDR_STATUS)
            Me.columnHRIS_EMPNO = New Global.System.Data.DataColumn("HRIS_EMPNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDR_ID}, true))
            Me.columnDR_ID.AllowDBNull = false
            Me.columnDR_ID.Unique = true
            Me.columnDR_ID.MaxLength = 50
            Me.columnDR_NO.AllowDBNull = false
            Me.columnDR_NO.MaxLength = 50
            Me.columnCOM_TIN_NUMBER.AllowDBNull = false
            Me.columnCOM_TIN_NUMBER.MaxLength = 50
            Me.columnINV_ID.MaxLength = 50
            Me.columnDR_RECEIVED_BY.MaxLength = 500
            Me.columnHRIS_EMPNO.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTBLG3_DELIVERY_RECEIPTRow() As TBLG3_DELIVERY_RECEIPTRow
            Return CType(Me.NewRow,TBLG3_DELIVERY_RECEIPTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBLG3_DELIVERY_RECEIPTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBLG3_DELIVERY_RECEIPTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBLG3_DELIVERY_RECEIPTRowChangedEvent) Is Nothing) Then
                RaiseEvent TBLG3_DELIVERY_RECEIPTRowChanged(Me, New TBLG3_DELIVERY_RECEIPTRowChangeEvent(CType(e.Row,TBLG3_DELIVERY_RECEIPTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBLG3_DELIVERY_RECEIPTRowChangingEvent) Is Nothing) Then
                RaiseEvent TBLG3_DELIVERY_RECEIPTRowChanging(Me, New TBLG3_DELIVERY_RECEIPTRowChangeEvent(CType(e.Row,TBLG3_DELIVERY_RECEIPTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBLG3_DELIVERY_RECEIPTRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBLG3_DELIVERY_RECEIPTRowDeleted(Me, New TBLG3_DELIVERY_RECEIPTRowChangeEvent(CType(e.Row,TBLG3_DELIVERY_RECEIPTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBLG3_DELIVERY_RECEIPTRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBLG3_DELIVERY_RECEIPTRowDeleting(Me, New TBLG3_DELIVERY_RECEIPTRowChangeEvent(CType(e.Row,TBLG3_DELIVERY_RECEIPTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTBLG3_DELIVERY_RECEIPTRow(ByVal row As TBLG3_DELIVERY_RECEIPTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBLG3_DELIVERY_RECEIPTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBLG3_INVOICEDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBLG3_INVOICERow)
        
        Private columnINV_ID As Global.System.Data.DataColumn
        
        Private columnINV_NO As Global.System.Data.DataColumn
        
        Private columnCOM_TIN_NUMBER As Global.System.Data.DataColumn
        
        Private columnINV_DATE As Global.System.Data.DataColumn
        
        Private columnINV_DIRECTORY As Global.System.Data.DataColumn
        
        Private columnINV_TOTAL As Global.System.Data.DataColumn
        
        Private columnINV_STATUS As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBLG3_INVOICE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INV_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINV_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_TIN_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_TIN_NUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INV_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINV_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INV_DIRECTORYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINV_DIRECTORY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INV_TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINV_TOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INV_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINV_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBLG3_INVOICERow
            Get
                Return CType(Me.Rows(index),TBLG3_INVOICERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_INVOICERowChanging As TBLG3_INVOICERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_INVOICERowChanged As TBLG3_INVOICERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_INVOICERowDeleting As TBLG3_INVOICERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_INVOICERowDeleted As TBLG3_INVOICERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTBLG3_INVOICERow(ByVal row As TBLG3_INVOICERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTBLG3_INVOICERow(ByVal INV_ID As String, ByVal INV_NO As String, ByVal parentTBLG3_COMPANY_INFORowByFK_TBLG3_INVOICE_TBLG3_COMPANY_INFO As TBLG3_COMPANY_INFORow, ByVal INV_DATE As Date, ByVal INV_DIRECTORY As String, ByVal INV_TOTAL As Decimal, ByVal INV_STATUS As Integer, ByVal HRIS_EMPNO As String) As TBLG3_INVOICERow
            Dim rowTBLG3_INVOICERow As TBLG3_INVOICERow = CType(Me.NewRow,TBLG3_INVOICERow)
            Dim columnValuesArray() As Object = New Object() {INV_ID, INV_NO, Nothing, INV_DATE, INV_DIRECTORY, INV_TOTAL, INV_STATUS, HRIS_EMPNO}
            If (Not (parentTBLG3_COMPANY_INFORowByFK_TBLG3_INVOICE_TBLG3_COMPANY_INFO) Is Nothing) Then
                columnValuesArray(2) = parentTBLG3_COMPANY_INFORowByFK_TBLG3_INVOICE_TBLG3_COMPANY_INFO(0)
            End If
            rowTBLG3_INVOICERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBLG3_INVOICERow)
            Return rowTBLG3_INVOICERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByINV_ID(ByVal INV_ID As String) As TBLG3_INVOICERow
            Return CType(Me.Rows.Find(New Object() {INV_ID}),TBLG3_INVOICERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBLG3_INVOICEDataTable = CType(MyBase.Clone,TBLG3_INVOICEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBLG3_INVOICEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnINV_ID = MyBase.Columns("INV_ID")
            Me.columnINV_NO = MyBase.Columns("INV_NO")
            Me.columnCOM_TIN_NUMBER = MyBase.Columns("COM_TIN_NUMBER")
            Me.columnINV_DATE = MyBase.Columns("INV_DATE")
            Me.columnINV_DIRECTORY = MyBase.Columns("INV_DIRECTORY")
            Me.columnINV_TOTAL = MyBase.Columns("INV_TOTAL")
            Me.columnINV_STATUS = MyBase.Columns("INV_STATUS")
            Me.columnHRIS_EMPNO = MyBase.Columns("HRIS_EMPNO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnINV_ID = New Global.System.Data.DataColumn("INV_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINV_ID)
            Me.columnINV_NO = New Global.System.Data.DataColumn("INV_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINV_NO)
            Me.columnCOM_TIN_NUMBER = New Global.System.Data.DataColumn("COM_TIN_NUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_TIN_NUMBER)
            Me.columnINV_DATE = New Global.System.Data.DataColumn("INV_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINV_DATE)
            Me.columnINV_DIRECTORY = New Global.System.Data.DataColumn("INV_DIRECTORY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINV_DIRECTORY)
            Me.columnINV_TOTAL = New Global.System.Data.DataColumn("INV_TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINV_TOTAL)
            Me.columnINV_STATUS = New Global.System.Data.DataColumn("INV_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINV_STATUS)
            Me.columnHRIS_EMPNO = New Global.System.Data.DataColumn("HRIS_EMPNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnINV_ID}, true))
            Me.columnINV_ID.AllowDBNull = false
            Me.columnINV_ID.Unique = true
            Me.columnINV_ID.MaxLength = 50
            Me.columnINV_NO.MaxLength = 50
            Me.columnCOM_TIN_NUMBER.MaxLength = 50
            Me.columnINV_DIRECTORY.MaxLength = 2147483647
            Me.columnHRIS_EMPNO.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTBLG3_INVOICERow() As TBLG3_INVOICERow
            Return CType(Me.NewRow,TBLG3_INVOICERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBLG3_INVOICERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBLG3_INVOICERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBLG3_INVOICERowChangedEvent) Is Nothing) Then
                RaiseEvent TBLG3_INVOICERowChanged(Me, New TBLG3_INVOICERowChangeEvent(CType(e.Row,TBLG3_INVOICERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBLG3_INVOICERowChangingEvent) Is Nothing) Then
                RaiseEvent TBLG3_INVOICERowChanging(Me, New TBLG3_INVOICERowChangeEvent(CType(e.Row,TBLG3_INVOICERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBLG3_INVOICERowDeletedEvent) Is Nothing) Then
                RaiseEvent TBLG3_INVOICERowDeleted(Me, New TBLG3_INVOICERowChangeEvent(CType(e.Row,TBLG3_INVOICERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBLG3_INVOICERowDeletingEvent) Is Nothing) Then
                RaiseEvent TBLG3_INVOICERowDeleting(Me, New TBLG3_INVOICERowChangeEvent(CType(e.Row,TBLG3_INVOICERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTBLG3_INVOICERow(ByVal row As TBLG3_INVOICERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBLG3_INVOICEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBLG3_INVOICE_DETAILSDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBLG3_INVOICE_DETAILSRow)
        
        Private columnINVD_ID As Global.System.Data.DataColumn
        
        Private columnINV_ID As Global.System.Data.DataColumn
        
        Private columnUN_NO As Global.System.Data.DataColumn
        
        Private columnINVD_QTY As Global.System.Data.DataColumn
        
        Private columnINVD_PRICE As Global.System.Data.DataColumn
        
        Private columnINVD_DESCRIPTION As Global.System.Data.DataColumn
        
        Private columnINVD_STATUS As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBLG3_INVOICE_DETAILS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INVD_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVD_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INV_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINV_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UN_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INVD_QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVD_QTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INVD_PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVD_PRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INVD_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVD_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INVD_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVD_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBLG3_INVOICE_DETAILSRow
            Get
                Return CType(Me.Rows(index),TBLG3_INVOICE_DETAILSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_INVOICE_DETAILSRowChanging As TBLG3_INVOICE_DETAILSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_INVOICE_DETAILSRowChanged As TBLG3_INVOICE_DETAILSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_INVOICE_DETAILSRowDeleting As TBLG3_INVOICE_DETAILSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_INVOICE_DETAILSRowDeleted As TBLG3_INVOICE_DETAILSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTBLG3_INVOICE_DETAILSRow(ByVal row As TBLG3_INVOICE_DETAILSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTBLG3_INVOICE_DETAILSRow(ByVal parentTBLG3_INVOICERowByFK_TBLG3_INVOICE_DETAILS_TBLG3_INVOICE As TBLG3_INVOICERow, ByVal UN_NO As Integer, ByVal INVD_QTY As Integer, ByVal INVD_PRICE As Decimal, ByVal INVD_DESCRIPTION As String, ByVal INVD_STATUS As Integer, ByVal HRIS_EMPNO As String) As TBLG3_INVOICE_DETAILSRow
            Dim rowTBLG3_INVOICE_DETAILSRow As TBLG3_INVOICE_DETAILSRow = CType(Me.NewRow,TBLG3_INVOICE_DETAILSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, UN_NO, INVD_QTY, INVD_PRICE, INVD_DESCRIPTION, INVD_STATUS, HRIS_EMPNO}
            If (Not (parentTBLG3_INVOICERowByFK_TBLG3_INVOICE_DETAILS_TBLG3_INVOICE) Is Nothing) Then
                columnValuesArray(1) = parentTBLG3_INVOICERowByFK_TBLG3_INVOICE_DETAILS_TBLG3_INVOICE(0)
            End If
            rowTBLG3_INVOICE_DETAILSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBLG3_INVOICE_DETAILSRow)
            Return rowTBLG3_INVOICE_DETAILSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByINVD_ID(ByVal INVD_ID As Integer) As TBLG3_INVOICE_DETAILSRow
            Return CType(Me.Rows.Find(New Object() {INVD_ID}),TBLG3_INVOICE_DETAILSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBLG3_INVOICE_DETAILSDataTable = CType(MyBase.Clone,TBLG3_INVOICE_DETAILSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBLG3_INVOICE_DETAILSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnINVD_ID = MyBase.Columns("INVD_ID")
            Me.columnINV_ID = MyBase.Columns("INV_ID")
            Me.columnUN_NO = MyBase.Columns("UN_NO")
            Me.columnINVD_QTY = MyBase.Columns("INVD_QTY")
            Me.columnINVD_PRICE = MyBase.Columns("INVD_PRICE")
            Me.columnINVD_DESCRIPTION = MyBase.Columns("INVD_DESCRIPTION")
            Me.columnINVD_STATUS = MyBase.Columns("INVD_STATUS")
            Me.columnHRIS_EMPNO = MyBase.Columns("HRIS_EMPNO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnINVD_ID = New Global.System.Data.DataColumn("INVD_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVD_ID)
            Me.columnINV_ID = New Global.System.Data.DataColumn("INV_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINV_ID)
            Me.columnUN_NO = New Global.System.Data.DataColumn("UN_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN_NO)
            Me.columnINVD_QTY = New Global.System.Data.DataColumn("INVD_QTY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVD_QTY)
            Me.columnINVD_PRICE = New Global.System.Data.DataColumn("INVD_PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVD_PRICE)
            Me.columnINVD_DESCRIPTION = New Global.System.Data.DataColumn("INVD_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVD_DESCRIPTION)
            Me.columnINVD_STATUS = New Global.System.Data.DataColumn("INVD_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVD_STATUS)
            Me.columnHRIS_EMPNO = New Global.System.Data.DataColumn("HRIS_EMPNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnINVD_ID}, true))
            Me.columnINVD_ID.AutoIncrement = true
            Me.columnINVD_ID.AutoIncrementSeed = -1
            Me.columnINVD_ID.AutoIncrementStep = -1
            Me.columnINVD_ID.AllowDBNull = false
            Me.columnINVD_ID.ReadOnly = true
            Me.columnINVD_ID.Unique = true
            Me.columnINV_ID.MaxLength = 50
            Me.columnINVD_DESCRIPTION.MaxLength = 2147483647
            Me.columnHRIS_EMPNO.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTBLG3_INVOICE_DETAILSRow() As TBLG3_INVOICE_DETAILSRow
            Return CType(Me.NewRow,TBLG3_INVOICE_DETAILSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBLG3_INVOICE_DETAILSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBLG3_INVOICE_DETAILSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBLG3_INVOICE_DETAILSRowChangedEvent) Is Nothing) Then
                RaiseEvent TBLG3_INVOICE_DETAILSRowChanged(Me, New TBLG3_INVOICE_DETAILSRowChangeEvent(CType(e.Row,TBLG3_INVOICE_DETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBLG3_INVOICE_DETAILSRowChangingEvent) Is Nothing) Then
                RaiseEvent TBLG3_INVOICE_DETAILSRowChanging(Me, New TBLG3_INVOICE_DETAILSRowChangeEvent(CType(e.Row,TBLG3_INVOICE_DETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBLG3_INVOICE_DETAILSRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBLG3_INVOICE_DETAILSRowDeleted(Me, New TBLG3_INVOICE_DETAILSRowChangeEvent(CType(e.Row,TBLG3_INVOICE_DETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBLG3_INVOICE_DETAILSRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBLG3_INVOICE_DETAILSRowDeleting(Me, New TBLG3_INVOICE_DETAILSRowChangeEvent(CType(e.Row,TBLG3_INVOICE_DETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTBLG3_INVOICE_DETAILSRow(ByVal row As TBLG3_INVOICE_DETAILSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBLG3_INVOICE_DETAILSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBLG3_PRIMARY_SIGNATORYDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBLG3_PRIMARY_SIGNATORYRow)
        
        Private columnSIG_TY_NO As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO_USER As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO_SIG As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBLG3_PRIMARY_SIGNATORY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_TY_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_TY_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNO_USERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO_USER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNO_SIGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO_SIG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBLG3_PRIMARY_SIGNATORYRow
            Get
                Return CType(Me.Rows(index),TBLG3_PRIMARY_SIGNATORYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_PRIMARY_SIGNATORYRowChanging As TBLG3_PRIMARY_SIGNATORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_PRIMARY_SIGNATORYRowChanged As TBLG3_PRIMARY_SIGNATORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_PRIMARY_SIGNATORYRowDeleting As TBLG3_PRIMARY_SIGNATORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_PRIMARY_SIGNATORYRowDeleted As TBLG3_PRIMARY_SIGNATORYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTBLG3_PRIMARY_SIGNATORYRow(ByVal row As TBLG3_PRIMARY_SIGNATORYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTBLG3_PRIMARY_SIGNATORYRow(ByVal SIG_TY_NO As Integer, ByVal HRIS_EMPNO_USER As String, ByVal HRIS_EMPNO_SIG As String) As TBLG3_PRIMARY_SIGNATORYRow
            Dim rowTBLG3_PRIMARY_SIGNATORYRow As TBLG3_PRIMARY_SIGNATORYRow = CType(Me.NewRow,TBLG3_PRIMARY_SIGNATORYRow)
            Dim columnValuesArray() As Object = New Object() {SIG_TY_NO, HRIS_EMPNO_USER, HRIS_EMPNO_SIG}
            rowTBLG3_PRIMARY_SIGNATORYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBLG3_PRIMARY_SIGNATORYRow)
            Return rowTBLG3_PRIMARY_SIGNATORYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindBySIG_TY_NOHRIS_EMPNO_USER(ByVal SIG_TY_NO As Integer, ByVal HRIS_EMPNO_USER As String) As TBLG3_PRIMARY_SIGNATORYRow
            Return CType(Me.Rows.Find(New Object() {SIG_TY_NO, HRIS_EMPNO_USER}),TBLG3_PRIMARY_SIGNATORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBLG3_PRIMARY_SIGNATORYDataTable = CType(MyBase.Clone,TBLG3_PRIMARY_SIGNATORYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBLG3_PRIMARY_SIGNATORYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSIG_TY_NO = MyBase.Columns("SIG_TY_NO")
            Me.columnHRIS_EMPNO_USER = MyBase.Columns("HRIS_EMPNO_USER")
            Me.columnHRIS_EMPNO_SIG = MyBase.Columns("HRIS_EMPNO_SIG")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSIG_TY_NO = New Global.System.Data.DataColumn("SIG_TY_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_TY_NO)
            Me.columnHRIS_EMPNO_USER = New Global.System.Data.DataColumn("HRIS_EMPNO_USER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO_USER)
            Me.columnHRIS_EMPNO_SIG = New Global.System.Data.DataColumn("HRIS_EMPNO_SIG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO_SIG)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSIG_TY_NO, Me.columnHRIS_EMPNO_USER}, true))
            Me.columnSIG_TY_NO.AllowDBNull = false
            Me.columnHRIS_EMPNO_USER.AllowDBNull = false
            Me.columnHRIS_EMPNO_USER.MaxLength = 20
            Me.columnHRIS_EMPNO_SIG.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTBLG3_PRIMARY_SIGNATORYRow() As TBLG3_PRIMARY_SIGNATORYRow
            Return CType(Me.NewRow,TBLG3_PRIMARY_SIGNATORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBLG3_PRIMARY_SIGNATORYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBLG3_PRIMARY_SIGNATORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBLG3_PRIMARY_SIGNATORYRowChangedEvent) Is Nothing) Then
                RaiseEvent TBLG3_PRIMARY_SIGNATORYRowChanged(Me, New TBLG3_PRIMARY_SIGNATORYRowChangeEvent(CType(e.Row,TBLG3_PRIMARY_SIGNATORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBLG3_PRIMARY_SIGNATORYRowChangingEvent) Is Nothing) Then
                RaiseEvent TBLG3_PRIMARY_SIGNATORYRowChanging(Me, New TBLG3_PRIMARY_SIGNATORYRowChangeEvent(CType(e.Row,TBLG3_PRIMARY_SIGNATORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBLG3_PRIMARY_SIGNATORYRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBLG3_PRIMARY_SIGNATORYRowDeleted(Me, New TBLG3_PRIMARY_SIGNATORYRowChangeEvent(CType(e.Row,TBLG3_PRIMARY_SIGNATORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBLG3_PRIMARY_SIGNATORYRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBLG3_PRIMARY_SIGNATORYRowDeleting(Me, New TBLG3_PRIMARY_SIGNATORYRowChangeEvent(CType(e.Row,TBLG3_PRIMARY_SIGNATORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTBLG3_PRIMARY_SIGNATORYRow(ByVal row As TBLG3_PRIMARY_SIGNATORYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBLG3_PRIMARY_SIGNATORYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBLG3_REG_BUSDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBLG3_REG_BUSRow)
        
        Private columnBUS_NO_SYSTEM As Global.System.Data.DataColumn
        
        Private columnHDIVS_CODE As Global.System.Data.DataColumn
        
        Private columnEMP_NO As Global.System.Data.DataColumn
        
        Private columnBUS_DATE As Global.System.Data.DataColumn
        
        Private columnBUS_PAYEE As Global.System.Data.DataColumn
        
        Private columnBUS_OFFICE As Global.System.Data.DataColumn
        
        Private columnBUS_ADDRESS As Global.System.Data.DataColumn
        
        Private columnBUS_NAME_A As Global.System.Data.DataColumn
        
        Private columnBUS_POSITION_A As Global.System.Data.DataColumn
        
        Private columnBUS_NAME_B As Global.System.Data.DataColumn
        
        Private columnBUS_POSITION_B As Global.System.Data.DataColumn
        
        Private columnBUS_QR_CODE As Global.System.Data.DataColumn
        
        Private columnBUS_STATUS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBLG3_REG_BUS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_NO_SYSTEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_NO_SYSTEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDIVS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDIVS_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_PAYEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_PAYEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_OFFICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_OFFICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_ADDRESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_NAME_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_NAME_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_POSITION_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_POSITION_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_NAME_BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_NAME_B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_POSITION_BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_POSITION_B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_QR_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_QR_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBLG3_REG_BUSRow
            Get
                Return CType(Me.Rows(index),TBLG3_REG_BUSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_REG_BUSRowChanging As TBLG3_REG_BUSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_REG_BUSRowChanged As TBLG3_REG_BUSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_REG_BUSRowDeleting As TBLG3_REG_BUSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_REG_BUSRowDeleted As TBLG3_REG_BUSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTBLG3_REG_BUSRow(ByVal row As TBLG3_REG_BUSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTBLG3_REG_BUSRow(ByVal BUS_NO_SYSTEM As String, ByVal HDIVS_CODE As String, ByVal EMP_NO As String, ByVal BUS_DATE As Date, ByVal BUS_PAYEE As String, ByVal BUS_OFFICE As String, ByVal BUS_ADDRESS As String, ByVal BUS_NAME_A As String, ByVal BUS_POSITION_A As String, ByVal BUS_NAME_B As String, ByVal BUS_POSITION_B As String, ByVal BUS_QR_CODE() As Byte, ByVal BUS_STATUS As Integer) As TBLG3_REG_BUSRow
            Dim rowTBLG3_REG_BUSRow As TBLG3_REG_BUSRow = CType(Me.NewRow,TBLG3_REG_BUSRow)
            Dim columnValuesArray() As Object = New Object() {BUS_NO_SYSTEM, HDIVS_CODE, EMP_NO, BUS_DATE, BUS_PAYEE, BUS_OFFICE, BUS_ADDRESS, BUS_NAME_A, BUS_POSITION_A, BUS_NAME_B, BUS_POSITION_B, BUS_QR_CODE, BUS_STATUS}
            rowTBLG3_REG_BUSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBLG3_REG_BUSRow)
            Return rowTBLG3_REG_BUSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByBUS_NO_SYSTEM(ByVal BUS_NO_SYSTEM As String) As TBLG3_REG_BUSRow
            Return CType(Me.Rows.Find(New Object() {BUS_NO_SYSTEM}),TBLG3_REG_BUSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBLG3_REG_BUSDataTable = CType(MyBase.Clone,TBLG3_REG_BUSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBLG3_REG_BUSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBUS_NO_SYSTEM = MyBase.Columns("BUS_NO_SYSTEM")
            Me.columnHDIVS_CODE = MyBase.Columns("HDIVS_CODE")
            Me.columnEMP_NO = MyBase.Columns("EMP_NO")
            Me.columnBUS_DATE = MyBase.Columns("BUS_DATE")
            Me.columnBUS_PAYEE = MyBase.Columns("BUS_PAYEE")
            Me.columnBUS_OFFICE = MyBase.Columns("BUS_OFFICE")
            Me.columnBUS_ADDRESS = MyBase.Columns("BUS_ADDRESS")
            Me.columnBUS_NAME_A = MyBase.Columns("BUS_NAME_A")
            Me.columnBUS_POSITION_A = MyBase.Columns("BUS_POSITION_A")
            Me.columnBUS_NAME_B = MyBase.Columns("BUS_NAME_B")
            Me.columnBUS_POSITION_B = MyBase.Columns("BUS_POSITION_B")
            Me.columnBUS_QR_CODE = MyBase.Columns("BUS_QR_CODE")
            Me.columnBUS_STATUS = MyBase.Columns("BUS_STATUS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBUS_NO_SYSTEM = New Global.System.Data.DataColumn("BUS_NO_SYSTEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_NO_SYSTEM)
            Me.columnHDIVS_CODE = New Global.System.Data.DataColumn("HDIVS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDIVS_CODE)
            Me.columnEMP_NO = New Global.System.Data.DataColumn("EMP_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_NO)
            Me.columnBUS_DATE = New Global.System.Data.DataColumn("BUS_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_DATE)
            Me.columnBUS_PAYEE = New Global.System.Data.DataColumn("BUS_PAYEE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_PAYEE)
            Me.columnBUS_OFFICE = New Global.System.Data.DataColumn("BUS_OFFICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_OFFICE)
            Me.columnBUS_ADDRESS = New Global.System.Data.DataColumn("BUS_ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_ADDRESS)
            Me.columnBUS_NAME_A = New Global.System.Data.DataColumn("BUS_NAME_A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_NAME_A)
            Me.columnBUS_POSITION_A = New Global.System.Data.DataColumn("BUS_POSITION_A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_POSITION_A)
            Me.columnBUS_NAME_B = New Global.System.Data.DataColumn("BUS_NAME_B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_NAME_B)
            Me.columnBUS_POSITION_B = New Global.System.Data.DataColumn("BUS_POSITION_B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_POSITION_B)
            Me.columnBUS_QR_CODE = New Global.System.Data.DataColumn("BUS_QR_CODE", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_QR_CODE)
            Me.columnBUS_STATUS = New Global.System.Data.DataColumn("BUS_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_STATUS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnBUS_NO_SYSTEM}, true))
            Me.columnBUS_NO_SYSTEM.AllowDBNull = false
            Me.columnBUS_NO_SYSTEM.Unique = true
            Me.columnBUS_NO_SYSTEM.MaxLength = 50
            Me.columnHDIVS_CODE.MaxLength = 20
            Me.columnEMP_NO.MaxLength = 20
            Me.columnBUS_PAYEE.MaxLength = 2147483647
            Me.columnBUS_OFFICE.MaxLength = 2147483647
            Me.columnBUS_ADDRESS.MaxLength = 2147483647
            Me.columnBUS_NAME_A.MaxLength = 50
            Me.columnBUS_POSITION_A.MaxLength = 50
            Me.columnBUS_NAME_B.MaxLength = 50
            Me.columnBUS_POSITION_B.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTBLG3_REG_BUSRow() As TBLG3_REG_BUSRow
            Return CType(Me.NewRow,TBLG3_REG_BUSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBLG3_REG_BUSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBLG3_REG_BUSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBLG3_REG_BUSRowChangedEvent) Is Nothing) Then
                RaiseEvent TBLG3_REG_BUSRowChanged(Me, New TBLG3_REG_BUSRowChangeEvent(CType(e.Row,TBLG3_REG_BUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBLG3_REG_BUSRowChangingEvent) Is Nothing) Then
                RaiseEvent TBLG3_REG_BUSRowChanging(Me, New TBLG3_REG_BUSRowChangeEvent(CType(e.Row,TBLG3_REG_BUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBLG3_REG_BUSRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBLG3_REG_BUSRowDeleted(Me, New TBLG3_REG_BUSRowChangeEvent(CType(e.Row,TBLG3_REG_BUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBLG3_REG_BUSRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBLG3_REG_BUSRowDeleting(Me, New TBLG3_REG_BUSRowChangeEvent(CType(e.Row,TBLG3_REG_BUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTBLG3_REG_BUSRow(ByVal row As TBLG3_REG_BUSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBLG3_REG_BUSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBLG3_REG_DVDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBLG3_REG_DVRow)
        
        Private columnDV_NO_SYSTEM As Global.System.Data.DataColumn
        
        Private columnHDIVS_CODE As Global.System.Data.DataColumn
        
        Private columnEMP_NO As Global.System.Data.DataColumn
        
        Private columnDV_DATE As Global.System.Data.DataColumn
        
        Private columnDV_PAYEE As Global.System.Data.DataColumn
        
        Private columnDV_TIN_EMPLOYEE_NO As Global.System.Data.DataColumn
        
        Private columnDV_ADDRESS As Global.System.Data.DataColumn
        
        Private columnDV_A_NAME As Global.System.Data.DataColumn
        
        Private columnDV_A_POSITION As Global.System.Data.DataColumn
        
        Private columnDV_C_NAME As Global.System.Data.DataColumn
        
        Private columnDV_C_POSITION As Global.System.Data.DataColumn
        
        Private columnDV_D_NAME As Global.System.Data.DataColumn
        
        Private columnDV_D_POSITION As Global.System.Data.DataColumn
        
        Private columnDV_STATUS As Global.System.Data.DataColumn
        
        Private columnDV_QR_CODE As Global.System.Data.DataColumn
        
        Private columnDV_TYPE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBLG3_REG_DV"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_NO_SYSTEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_NO_SYSTEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDIVS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDIVS_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_PAYEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_PAYEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_TIN_EMPLOYEE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_TIN_EMPLOYEE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_ADDRESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_A_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_A_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_A_POSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_A_POSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_C_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_C_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_C_POSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_C_POSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_D_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_D_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_D_POSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_D_POSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_QR_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_QR_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBLG3_REG_DVRow
            Get
                Return CType(Me.Rows(index),TBLG3_REG_DVRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_REG_DVRowChanging As TBLG3_REG_DVRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_REG_DVRowChanged As TBLG3_REG_DVRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_REG_DVRowDeleting As TBLG3_REG_DVRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_REG_DVRowDeleted As TBLG3_REG_DVRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTBLG3_REG_DVRow(ByVal row As TBLG3_REG_DVRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTBLG3_REG_DVRow( _
                    ByVal DV_NO_SYSTEM As String,  _
                    ByVal HDIVS_CODE As String,  _
                    ByVal EMP_NO As String,  _
                    ByVal DV_DATE As Date,  _
                    ByVal DV_PAYEE As String,  _
                    ByVal DV_TIN_EMPLOYEE_NO As String,  _
                    ByVal DV_ADDRESS As String,  _
                    ByVal DV_A_NAME As String,  _
                    ByVal DV_A_POSITION As String,  _
                    ByVal DV_C_NAME As String,  _
                    ByVal DV_C_POSITION As String,  _
                    ByVal DV_D_NAME As String,  _
                    ByVal DV_D_POSITION As String,  _
                    ByVal DV_STATUS As Integer,  _
                    ByVal DV_QR_CODE() As Byte,  _
                    ByVal DV_TYPE As String) As TBLG3_REG_DVRow
            Dim rowTBLG3_REG_DVRow As TBLG3_REG_DVRow = CType(Me.NewRow,TBLG3_REG_DVRow)
            Dim columnValuesArray() As Object = New Object() {DV_NO_SYSTEM, HDIVS_CODE, EMP_NO, DV_DATE, DV_PAYEE, DV_TIN_EMPLOYEE_NO, DV_ADDRESS, DV_A_NAME, DV_A_POSITION, DV_C_NAME, DV_C_POSITION, DV_D_NAME, DV_D_POSITION, DV_STATUS, DV_QR_CODE, DV_TYPE}
            rowTBLG3_REG_DVRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBLG3_REG_DVRow)
            Return rowTBLG3_REG_DVRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByDV_NO_SYSTEM(ByVal DV_NO_SYSTEM As String) As TBLG3_REG_DVRow
            Return CType(Me.Rows.Find(New Object() {DV_NO_SYSTEM}),TBLG3_REG_DVRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBLG3_REG_DVDataTable = CType(MyBase.Clone,TBLG3_REG_DVDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBLG3_REG_DVDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDV_NO_SYSTEM = MyBase.Columns("DV_NO_SYSTEM")
            Me.columnHDIVS_CODE = MyBase.Columns("HDIVS_CODE")
            Me.columnEMP_NO = MyBase.Columns("EMP_NO")
            Me.columnDV_DATE = MyBase.Columns("DV_DATE")
            Me.columnDV_PAYEE = MyBase.Columns("DV_PAYEE")
            Me.columnDV_TIN_EMPLOYEE_NO = MyBase.Columns("DV_TIN_EMPLOYEE_NO")
            Me.columnDV_ADDRESS = MyBase.Columns("DV_ADDRESS")
            Me.columnDV_A_NAME = MyBase.Columns("DV_A_NAME")
            Me.columnDV_A_POSITION = MyBase.Columns("DV_A_POSITION")
            Me.columnDV_C_NAME = MyBase.Columns("DV_C_NAME")
            Me.columnDV_C_POSITION = MyBase.Columns("DV_C_POSITION")
            Me.columnDV_D_NAME = MyBase.Columns("DV_D_NAME")
            Me.columnDV_D_POSITION = MyBase.Columns("DV_D_POSITION")
            Me.columnDV_STATUS = MyBase.Columns("DV_STATUS")
            Me.columnDV_QR_CODE = MyBase.Columns("DV_QR_CODE")
            Me.columnDV_TYPE = MyBase.Columns("DV_TYPE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDV_NO_SYSTEM = New Global.System.Data.DataColumn("DV_NO_SYSTEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_NO_SYSTEM)
            Me.columnHDIVS_CODE = New Global.System.Data.DataColumn("HDIVS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDIVS_CODE)
            Me.columnEMP_NO = New Global.System.Data.DataColumn("EMP_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_NO)
            Me.columnDV_DATE = New Global.System.Data.DataColumn("DV_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_DATE)
            Me.columnDV_PAYEE = New Global.System.Data.DataColumn("DV_PAYEE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_PAYEE)
            Me.columnDV_TIN_EMPLOYEE_NO = New Global.System.Data.DataColumn("DV_TIN_EMPLOYEE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_TIN_EMPLOYEE_NO)
            Me.columnDV_ADDRESS = New Global.System.Data.DataColumn("DV_ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_ADDRESS)
            Me.columnDV_A_NAME = New Global.System.Data.DataColumn("DV_A_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_A_NAME)
            Me.columnDV_A_POSITION = New Global.System.Data.DataColumn("DV_A_POSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_A_POSITION)
            Me.columnDV_C_NAME = New Global.System.Data.DataColumn("DV_C_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_C_NAME)
            Me.columnDV_C_POSITION = New Global.System.Data.DataColumn("DV_C_POSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_C_POSITION)
            Me.columnDV_D_NAME = New Global.System.Data.DataColumn("DV_D_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_D_NAME)
            Me.columnDV_D_POSITION = New Global.System.Data.DataColumn("DV_D_POSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_D_POSITION)
            Me.columnDV_STATUS = New Global.System.Data.DataColumn("DV_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_STATUS)
            Me.columnDV_QR_CODE = New Global.System.Data.DataColumn("DV_QR_CODE", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_QR_CODE)
            Me.columnDV_TYPE = New Global.System.Data.DataColumn("DV_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_TYPE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDV_NO_SYSTEM}, true))
            Me.columnDV_NO_SYSTEM.AllowDBNull = false
            Me.columnDV_NO_SYSTEM.Unique = true
            Me.columnDV_NO_SYSTEM.MaxLength = 50
            Me.columnHDIVS_CODE.MaxLength = 20
            Me.columnEMP_NO.MaxLength = 20
            Me.columnDV_PAYEE.MaxLength = 2147483647
            Me.columnDV_TIN_EMPLOYEE_NO.MaxLength = 50
            Me.columnDV_ADDRESS.MaxLength = 2147483647
            Me.columnDV_A_NAME.MaxLength = 50
            Me.columnDV_A_POSITION.MaxLength = 50
            Me.columnDV_C_NAME.MaxLength = 50
            Me.columnDV_C_POSITION.MaxLength = 50
            Me.columnDV_D_NAME.MaxLength = 50
            Me.columnDV_D_POSITION.MaxLength = 50
            Me.columnDV_TYPE.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTBLG3_REG_DVRow() As TBLG3_REG_DVRow
            Return CType(Me.NewRow,TBLG3_REG_DVRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBLG3_REG_DVRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBLG3_REG_DVRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBLG3_REG_DVRowChangedEvent) Is Nothing) Then
                RaiseEvent TBLG3_REG_DVRowChanged(Me, New TBLG3_REG_DVRowChangeEvent(CType(e.Row,TBLG3_REG_DVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBLG3_REG_DVRowChangingEvent) Is Nothing) Then
                RaiseEvent TBLG3_REG_DVRowChanging(Me, New TBLG3_REG_DVRowChangeEvent(CType(e.Row,TBLG3_REG_DVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBLG3_REG_DVRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBLG3_REG_DVRowDeleted(Me, New TBLG3_REG_DVRowChangeEvent(CType(e.Row,TBLG3_REG_DVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBLG3_REG_DVRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBLG3_REG_DVRowDeleting(Me, New TBLG3_REG_DVRowChangeEvent(CType(e.Row,TBLG3_REG_DVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTBLG3_REG_DVRow(ByVal row As TBLG3_REG_DVRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBLG3_REG_DVDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBLG3_REG_PARTICULARDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBLG3_REG_PARTICULARRow)
        
        Private columnPAR_NO As Global.System.Data.DataColumn
        
        Private columnBUS_NO_SYSTEM As Global.System.Data.DataColumn
        
        Private columnPAR_PARTICULAR As Global.System.Data.DataColumn
        
        Private columnPAR_MFO_PAP As Global.System.Data.DataColumn
        
        Private columnPAR_UACS_OBJECT_CODE As Global.System.Data.DataColumn
        
        Private columnPAR_AMOUNT As Global.System.Data.DataColumn
        
        Private columnPAR_ISDOLLAR As Global.System.Data.DataColumn
        
        Private columnPAR_STATUS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBLG3_REG_PARTICULAR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_NO_SYSTEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_NO_SYSTEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_PARTICULARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_PARTICULAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_MFO_PAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_MFO_PAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_UACS_OBJECT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_UACS_OBJECT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_ISDOLLARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_ISDOLLAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBLG3_REG_PARTICULARRow
            Get
                Return CType(Me.Rows(index),TBLG3_REG_PARTICULARRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_REG_PARTICULARRowChanging As TBLG3_REG_PARTICULARRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_REG_PARTICULARRowChanged As TBLG3_REG_PARTICULARRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_REG_PARTICULARRowDeleting As TBLG3_REG_PARTICULARRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_REG_PARTICULARRowDeleted As TBLG3_REG_PARTICULARRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTBLG3_REG_PARTICULARRow(ByVal row As TBLG3_REG_PARTICULARRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTBLG3_REG_PARTICULARRow(ByVal parentTBLG3_REG_BUSRowByFK_TBLG3_REG_PARTICULAR_TBLG3_REG_BUS As TBLG3_REG_BUSRow, ByVal PAR_PARTICULAR As String, ByVal PAR_MFO_PAP As String, ByVal PAR_UACS_OBJECT_CODE As String, ByVal PAR_AMOUNT As Decimal, ByVal PAR_ISDOLLAR As String, ByVal PAR_STATUS As Integer) As TBLG3_REG_PARTICULARRow
            Dim rowTBLG3_REG_PARTICULARRow As TBLG3_REG_PARTICULARRow = CType(Me.NewRow,TBLG3_REG_PARTICULARRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, PAR_PARTICULAR, PAR_MFO_PAP, PAR_UACS_OBJECT_CODE, PAR_AMOUNT, PAR_ISDOLLAR, PAR_STATUS}
            If (Not (parentTBLG3_REG_BUSRowByFK_TBLG3_REG_PARTICULAR_TBLG3_REG_BUS) Is Nothing) Then
                columnValuesArray(1) = parentTBLG3_REG_BUSRowByFK_TBLG3_REG_PARTICULAR_TBLG3_REG_BUS(0)
            End If
            rowTBLG3_REG_PARTICULARRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBLG3_REG_PARTICULARRow)
            Return rowTBLG3_REG_PARTICULARRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByPAR_NO(ByVal PAR_NO As Integer) As TBLG3_REG_PARTICULARRow
            Return CType(Me.Rows.Find(New Object() {PAR_NO}),TBLG3_REG_PARTICULARRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBLG3_REG_PARTICULARDataTable = CType(MyBase.Clone,TBLG3_REG_PARTICULARDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBLG3_REG_PARTICULARDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPAR_NO = MyBase.Columns("PAR_NO")
            Me.columnBUS_NO_SYSTEM = MyBase.Columns("BUS_NO_SYSTEM")
            Me.columnPAR_PARTICULAR = MyBase.Columns("PAR_PARTICULAR")
            Me.columnPAR_MFO_PAP = MyBase.Columns("PAR_MFO_PAP")
            Me.columnPAR_UACS_OBJECT_CODE = MyBase.Columns("PAR_UACS_OBJECT_CODE")
            Me.columnPAR_AMOUNT = MyBase.Columns("PAR_AMOUNT")
            Me.columnPAR_ISDOLLAR = MyBase.Columns("PAR_ISDOLLAR")
            Me.columnPAR_STATUS = MyBase.Columns("PAR_STATUS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPAR_NO = New Global.System.Data.DataColumn("PAR_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_NO)
            Me.columnBUS_NO_SYSTEM = New Global.System.Data.DataColumn("BUS_NO_SYSTEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_NO_SYSTEM)
            Me.columnPAR_PARTICULAR = New Global.System.Data.DataColumn("PAR_PARTICULAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_PARTICULAR)
            Me.columnPAR_MFO_PAP = New Global.System.Data.DataColumn("PAR_MFO_PAP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_MFO_PAP)
            Me.columnPAR_UACS_OBJECT_CODE = New Global.System.Data.DataColumn("PAR_UACS_OBJECT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_UACS_OBJECT_CODE)
            Me.columnPAR_AMOUNT = New Global.System.Data.DataColumn("PAR_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_AMOUNT)
            Me.columnPAR_ISDOLLAR = New Global.System.Data.DataColumn("PAR_ISDOLLAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_ISDOLLAR)
            Me.columnPAR_STATUS = New Global.System.Data.DataColumn("PAR_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_STATUS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPAR_NO}, true))
            Me.columnPAR_NO.AutoIncrement = true
            Me.columnPAR_NO.AutoIncrementSeed = -1
            Me.columnPAR_NO.AutoIncrementStep = -1
            Me.columnPAR_NO.AllowDBNull = false
            Me.columnPAR_NO.ReadOnly = true
            Me.columnPAR_NO.Unique = true
            Me.columnBUS_NO_SYSTEM.MaxLength = 50
            Me.columnPAR_PARTICULAR.MaxLength = 2147483647
            Me.columnPAR_MFO_PAP.MaxLength = 50
            Me.columnPAR_UACS_OBJECT_CODE.MaxLength = 50
            Me.columnPAR_ISDOLLAR.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTBLG3_REG_PARTICULARRow() As TBLG3_REG_PARTICULARRow
            Return CType(Me.NewRow,TBLG3_REG_PARTICULARRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBLG3_REG_PARTICULARRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBLG3_REG_PARTICULARRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBLG3_REG_PARTICULARRowChangedEvent) Is Nothing) Then
                RaiseEvent TBLG3_REG_PARTICULARRowChanged(Me, New TBLG3_REG_PARTICULARRowChangeEvent(CType(e.Row,TBLG3_REG_PARTICULARRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBLG3_REG_PARTICULARRowChangingEvent) Is Nothing) Then
                RaiseEvent TBLG3_REG_PARTICULARRowChanging(Me, New TBLG3_REG_PARTICULARRowChangeEvent(CType(e.Row,TBLG3_REG_PARTICULARRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBLG3_REG_PARTICULARRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBLG3_REG_PARTICULARRowDeleted(Me, New TBLG3_REG_PARTICULARRowChangeEvent(CType(e.Row,TBLG3_REG_PARTICULARRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBLG3_REG_PARTICULARRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBLG3_REG_PARTICULARRowDeleting(Me, New TBLG3_REG_PARTICULARRowChangeEvent(CType(e.Row,TBLG3_REG_PARTICULARRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTBLG3_REG_PARTICULARRow(ByVal row As TBLG3_REG_PARTICULARRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBLG3_REG_PARTICULARDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBLG3_SIGNATORYDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBLG3_SIGNATORYRow)
        
        Private columnSIG_NO As Global.System.Data.DataColumn
        
        Private columnSIG_IMAGE As Global.System.Data.DataColumn
        
        Private columnSIG_LNAME As Global.System.Data.DataColumn
        
        Private columnSIG_FNAME As Global.System.Data.DataColumn
        
        Private columnSIG_MNAME As Global.System.Data.DataColumn
        
        Private columnSIG_POSITION As Global.System.Data.DataColumn
        
        Private columnSIG_OFFICE_ORDER As Global.System.Data.DataColumn
        
        Private columnSIG_POLICY As Global.System.Data.DataColumn
        
        Private columnSIG_AMOUNT As Global.System.Data.DataColumn
        
        Private columnSIG_STATUS As Global.System.Data.DataColumn
        
        Private columnHDIVS_CODE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBLG3_SIGNATORY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_IMAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_IMAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_LNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_LNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_FNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_FNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_MNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_MNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_POSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_POSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_OFFICE_ORDERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_OFFICE_ORDER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_POLICYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_POLICY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDIVS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDIVS_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBLG3_SIGNATORYRow
            Get
                Return CType(Me.Rows(index),TBLG3_SIGNATORYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_SIGNATORYRowChanging As TBLG3_SIGNATORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_SIGNATORYRowChanged As TBLG3_SIGNATORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_SIGNATORYRowDeleting As TBLG3_SIGNATORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_SIGNATORYRowDeleted As TBLG3_SIGNATORYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTBLG3_SIGNATORYRow(ByVal row As TBLG3_SIGNATORYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTBLG3_SIGNATORYRow(ByVal SIG_IMAGE() As Byte, ByVal SIG_LNAME As String, ByVal SIG_FNAME As String, ByVal SIG_MNAME As String, ByVal SIG_POSITION As String, ByVal SIG_OFFICE_ORDER As String, ByVal SIG_POLICY As Integer, ByVal SIG_AMOUNT As Decimal, ByVal SIG_STATUS As Integer, ByVal HDIVS_CODE As String) As TBLG3_SIGNATORYRow
            Dim rowTBLG3_SIGNATORYRow As TBLG3_SIGNATORYRow = CType(Me.NewRow,TBLG3_SIGNATORYRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SIG_IMAGE, SIG_LNAME, SIG_FNAME, SIG_MNAME, SIG_POSITION, SIG_OFFICE_ORDER, SIG_POLICY, SIG_AMOUNT, SIG_STATUS, HDIVS_CODE}
            rowTBLG3_SIGNATORYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBLG3_SIGNATORYRow)
            Return rowTBLG3_SIGNATORYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindBySIG_NO(ByVal SIG_NO As Integer) As TBLG3_SIGNATORYRow
            Return CType(Me.Rows.Find(New Object() {SIG_NO}),TBLG3_SIGNATORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBLG3_SIGNATORYDataTable = CType(MyBase.Clone,TBLG3_SIGNATORYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBLG3_SIGNATORYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSIG_NO = MyBase.Columns("SIG_NO")
            Me.columnSIG_IMAGE = MyBase.Columns("SIG_IMAGE")
            Me.columnSIG_LNAME = MyBase.Columns("SIG_LNAME")
            Me.columnSIG_FNAME = MyBase.Columns("SIG_FNAME")
            Me.columnSIG_MNAME = MyBase.Columns("SIG_MNAME")
            Me.columnSIG_POSITION = MyBase.Columns("SIG_POSITION")
            Me.columnSIG_OFFICE_ORDER = MyBase.Columns("SIG_OFFICE_ORDER")
            Me.columnSIG_POLICY = MyBase.Columns("SIG_POLICY")
            Me.columnSIG_AMOUNT = MyBase.Columns("SIG_AMOUNT")
            Me.columnSIG_STATUS = MyBase.Columns("SIG_STATUS")
            Me.columnHDIVS_CODE = MyBase.Columns("HDIVS_CODE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSIG_NO = New Global.System.Data.DataColumn("SIG_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_NO)
            Me.columnSIG_IMAGE = New Global.System.Data.DataColumn("SIG_IMAGE", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_IMAGE)
            Me.columnSIG_LNAME = New Global.System.Data.DataColumn("SIG_LNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_LNAME)
            Me.columnSIG_FNAME = New Global.System.Data.DataColumn("SIG_FNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_FNAME)
            Me.columnSIG_MNAME = New Global.System.Data.DataColumn("SIG_MNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_MNAME)
            Me.columnSIG_POSITION = New Global.System.Data.DataColumn("SIG_POSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_POSITION)
            Me.columnSIG_OFFICE_ORDER = New Global.System.Data.DataColumn("SIG_OFFICE_ORDER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_OFFICE_ORDER)
            Me.columnSIG_POLICY = New Global.System.Data.DataColumn("SIG_POLICY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_POLICY)
            Me.columnSIG_AMOUNT = New Global.System.Data.DataColumn("SIG_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_AMOUNT)
            Me.columnSIG_STATUS = New Global.System.Data.DataColumn("SIG_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_STATUS)
            Me.columnHDIVS_CODE = New Global.System.Data.DataColumn("HDIVS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDIVS_CODE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSIG_NO}, true))
            Me.columnSIG_NO.AutoIncrement = true
            Me.columnSIG_NO.AutoIncrementSeed = -1
            Me.columnSIG_NO.AutoIncrementStep = -1
            Me.columnSIG_NO.AllowDBNull = false
            Me.columnSIG_NO.ReadOnly = true
            Me.columnSIG_NO.Unique = true
            Me.columnSIG_LNAME.MaxLength = 50
            Me.columnSIG_FNAME.MaxLength = 50
            Me.columnSIG_MNAME.MaxLength = 5
            Me.columnSIG_POSITION.MaxLength = 50
            Me.columnSIG_OFFICE_ORDER.MaxLength = 50
            Me.columnHDIVS_CODE.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTBLG3_SIGNATORYRow() As TBLG3_SIGNATORYRow
            Return CType(Me.NewRow,TBLG3_SIGNATORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBLG3_SIGNATORYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBLG3_SIGNATORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBLG3_SIGNATORYRowChangedEvent) Is Nothing) Then
                RaiseEvent TBLG3_SIGNATORYRowChanged(Me, New TBLG3_SIGNATORYRowChangeEvent(CType(e.Row,TBLG3_SIGNATORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBLG3_SIGNATORYRowChangingEvent) Is Nothing) Then
                RaiseEvent TBLG3_SIGNATORYRowChanging(Me, New TBLG3_SIGNATORYRowChangeEvent(CType(e.Row,TBLG3_SIGNATORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBLG3_SIGNATORYRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBLG3_SIGNATORYRowDeleted(Me, New TBLG3_SIGNATORYRowChangeEvent(CType(e.Row,TBLG3_SIGNATORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBLG3_SIGNATORYRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBLG3_SIGNATORYRowDeleting(Me, New TBLG3_SIGNATORYRowChangeEvent(CType(e.Row,TBLG3_SIGNATORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTBLG3_SIGNATORYRow(ByVal row As TBLG3_SIGNATORYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBLG3_SIGNATORYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBLG3_SIGNATORY_TYPEDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBLG3_SIGNATORY_TYPERow)
        
        Private columnSIG_TY_NO As Global.System.Data.DataColumn
        
        Private columnSIG_TY_DESCRIPTON As Global.System.Data.DataColumn
        
        Private columnSIG_TY_FORM As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBLG3_SIGNATORY_TYPE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_TY_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_TY_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_TY_DESCRIPTONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_TY_DESCRIPTON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_TY_FORMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_TY_FORM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBLG3_SIGNATORY_TYPERow
            Get
                Return CType(Me.Rows(index),TBLG3_SIGNATORY_TYPERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_SIGNATORY_TYPERowChanging As TBLG3_SIGNATORY_TYPERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_SIGNATORY_TYPERowChanged As TBLG3_SIGNATORY_TYPERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_SIGNATORY_TYPERowDeleting As TBLG3_SIGNATORY_TYPERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_SIGNATORY_TYPERowDeleted As TBLG3_SIGNATORY_TYPERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTBLG3_SIGNATORY_TYPERow(ByVal row As TBLG3_SIGNATORY_TYPERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTBLG3_SIGNATORY_TYPERow(ByVal SIG_TY_NO As Integer, ByVal SIG_TY_DESCRIPTON As String, ByVal SIG_TY_FORM As String) As TBLG3_SIGNATORY_TYPERow
            Dim rowTBLG3_SIGNATORY_TYPERow As TBLG3_SIGNATORY_TYPERow = CType(Me.NewRow,TBLG3_SIGNATORY_TYPERow)
            Dim columnValuesArray() As Object = New Object() {SIG_TY_NO, SIG_TY_DESCRIPTON, SIG_TY_FORM}
            rowTBLG3_SIGNATORY_TYPERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBLG3_SIGNATORY_TYPERow)
            Return rowTBLG3_SIGNATORY_TYPERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBLG3_SIGNATORY_TYPEDataTable = CType(MyBase.Clone,TBLG3_SIGNATORY_TYPEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBLG3_SIGNATORY_TYPEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSIG_TY_NO = MyBase.Columns("SIG_TY_NO")
            Me.columnSIG_TY_DESCRIPTON = MyBase.Columns("SIG_TY_DESCRIPTON")
            Me.columnSIG_TY_FORM = MyBase.Columns("SIG_TY_FORM")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSIG_TY_NO = New Global.System.Data.DataColumn("SIG_TY_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_TY_NO)
            Me.columnSIG_TY_DESCRIPTON = New Global.System.Data.DataColumn("SIG_TY_DESCRIPTON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_TY_DESCRIPTON)
            Me.columnSIG_TY_FORM = New Global.System.Data.DataColumn("SIG_TY_FORM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_TY_FORM)
            Me.columnSIG_TY_DESCRIPTON.MaxLength = 2147483647
            Me.columnSIG_TY_FORM.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTBLG3_SIGNATORY_TYPERow() As TBLG3_SIGNATORY_TYPERow
            Return CType(Me.NewRow,TBLG3_SIGNATORY_TYPERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBLG3_SIGNATORY_TYPERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBLG3_SIGNATORY_TYPERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBLG3_SIGNATORY_TYPERowChangedEvent) Is Nothing) Then
                RaiseEvent TBLG3_SIGNATORY_TYPERowChanged(Me, New TBLG3_SIGNATORY_TYPERowChangeEvent(CType(e.Row,TBLG3_SIGNATORY_TYPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBLG3_SIGNATORY_TYPERowChangingEvent) Is Nothing) Then
                RaiseEvent TBLG3_SIGNATORY_TYPERowChanging(Me, New TBLG3_SIGNATORY_TYPERowChangeEvent(CType(e.Row,TBLG3_SIGNATORY_TYPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBLG3_SIGNATORY_TYPERowDeletedEvent) Is Nothing) Then
                RaiseEvent TBLG3_SIGNATORY_TYPERowDeleted(Me, New TBLG3_SIGNATORY_TYPERowChangeEvent(CType(e.Row,TBLG3_SIGNATORY_TYPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBLG3_SIGNATORY_TYPERowDeletingEvent) Is Nothing) Then
                RaiseEvent TBLG3_SIGNATORY_TYPERowDeleting(Me, New TBLG3_SIGNATORY_TYPERowChangeEvent(CType(e.Row,TBLG3_SIGNATORY_TYPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTBLG3_SIGNATORY_TYPERow(ByVal row As TBLG3_SIGNATORY_TYPERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBLG3_SIGNATORY_TYPEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBLG3_UNITSDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBLG3_UNITSRow)
        
        Private columnUN_NO As Global.System.Data.DataColumn
        
        Private columnUN_DESCRIPTION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBLG3_UNITS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UN_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UN_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBLG3_UNITSRow
            Get
                Return CType(Me.Rows(index),TBLG3_UNITSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_UNITSRowChanging As TBLG3_UNITSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_UNITSRowChanged As TBLG3_UNITSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_UNITSRowDeleting As TBLG3_UNITSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_UNITSRowDeleted As TBLG3_UNITSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTBLG3_UNITSRow(ByVal row As TBLG3_UNITSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTBLG3_UNITSRow(ByVal UN_DESCRIPTION As String) As TBLG3_UNITSRow
            Dim rowTBLG3_UNITSRow As TBLG3_UNITSRow = CType(Me.NewRow,TBLG3_UNITSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, UN_DESCRIPTION}
            rowTBLG3_UNITSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBLG3_UNITSRow)
            Return rowTBLG3_UNITSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByUN_NO(ByVal UN_NO As Integer) As TBLG3_UNITSRow
            Return CType(Me.Rows.Find(New Object() {UN_NO}),TBLG3_UNITSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBLG3_UNITSDataTable = CType(MyBase.Clone,TBLG3_UNITSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBLG3_UNITSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnUN_NO = MyBase.Columns("UN_NO")
            Me.columnUN_DESCRIPTION = MyBase.Columns("UN_DESCRIPTION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnUN_NO = New Global.System.Data.DataColumn("UN_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN_NO)
            Me.columnUN_DESCRIPTION = New Global.System.Data.DataColumn("UN_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN_DESCRIPTION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnUN_NO}, true))
            Me.columnUN_NO.AutoIncrement = true
            Me.columnUN_NO.AutoIncrementSeed = -1
            Me.columnUN_NO.AutoIncrementStep = -1
            Me.columnUN_NO.AllowDBNull = false
            Me.columnUN_NO.ReadOnly = true
            Me.columnUN_NO.Unique = true
            Me.columnUN_DESCRIPTION.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTBLG3_UNITSRow() As TBLG3_UNITSRow
            Return CType(Me.NewRow,TBLG3_UNITSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBLG3_UNITSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBLG3_UNITSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBLG3_UNITSRowChangedEvent) Is Nothing) Then
                RaiseEvent TBLG3_UNITSRowChanged(Me, New TBLG3_UNITSRowChangeEvent(CType(e.Row,TBLG3_UNITSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBLG3_UNITSRowChangingEvent) Is Nothing) Then
                RaiseEvent TBLG3_UNITSRowChanging(Me, New TBLG3_UNITSRowChangeEvent(CType(e.Row,TBLG3_UNITSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBLG3_UNITSRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBLG3_UNITSRowDeleted(Me, New TBLG3_UNITSRowChangeEvent(CType(e.Row,TBLG3_UNITSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBLG3_UNITSRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBLG3_UNITSRowDeleting(Me, New TBLG3_UNITSRowChangeEvent(CType(e.Row,TBLG3_UNITSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTBLG3_UNITSRow(ByVal row As TBLG3_UNITSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBLG3_UNITSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_PURCHASEREQUESTDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_PURCHASEREQUESTRow)
        
        Private columnPR_PRNO As Global.System.Data.DataColumn
        
        Private columnPR_DATEREQUESTED As Global.System.Data.DataColumn
        
        Private columnPR_APPCODE As Global.System.Data.DataColumn
        
        Private columnPR_PURPOSE As Global.System.Data.DataColumn
        
        Private columnPR_STATUS As Global.System.Data.DataColumn
        
        Private columnPR_REQUESTEDBY As Global.System.Data.DataColumn
        
        Private columnPR_REQUESTEDBYPOSITION As Global.System.Data.DataColumn
        
        Private columnPR_APPROVEDBY As Global.System.Data.DataColumn
        
        Private columnPR_APPROVEDBYPOSITION As Global.System.Data.DataColumn
        
        Private columnPR_CERTIFIEDBY As Global.System.Data.DataColumn
        
        Private columnPR_CERTIFIEDBYPOSITION As Global.System.Data.DataColumn
        
        Private columnPR_NOTEDBY As Global.System.Data.DataColumn
        
        Private columnPR_NOTEDBYPOSITION As Global.System.Data.DataColumn
        
        Private columnPR_SUBMITTEDBY As Global.System.Data.DataColumn
        
        Private columnPR_DEPARTMENT As Global.System.Data.DataColumn
        
        Private columnPR_DIVISION As Global.System.Data.DataColumn
        
        Private columnCREATED_DATE As Global.System.Data.DataColumn
        
        Private columnPR_UPDATEDBY As Global.System.Data.DataColumn
        
        Private columnPR_ISDOLLAR As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_PURCHASEREQUEST"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_PRNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_PRNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_DATEREQUESTEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_DATEREQUESTED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_APPCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_APPCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_PURPOSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_PURPOSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_REQUESTEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_REQUESTEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_REQUESTEDBYPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_REQUESTEDBYPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_APPROVEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_APPROVEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_APPROVEDBYPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_APPROVEDBYPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_CERTIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_CERTIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_CERTIFIEDBYPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_CERTIFIEDBYPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_NOTEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_NOTEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_NOTEDBYPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_NOTEDBYPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_SUBMITTEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_SUBMITTEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_DEPARTMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_DEPARTMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_DIVISIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_DIVISION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_UPDATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_UPDATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_ISDOLLARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_ISDOLLAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_PURCHASEREQUESTRow
            Get
                Return CType(Me.Rows(index),tblM4_PURCHASEREQUESTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUESTRowChanging As tblM4_PURCHASEREQUESTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUESTRowChanged As tblM4_PURCHASEREQUESTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUESTRowDeleting As tblM4_PURCHASEREQUESTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUESTRowDeleted As tblM4_PURCHASEREQUESTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_PURCHASEREQUESTRow(ByVal row As tblM4_PURCHASEREQUESTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_PURCHASEREQUESTRow( _
                    ByVal PR_PRNO As String,  _
                    ByVal PR_DATEREQUESTED As Date,  _
                    ByVal PR_APPCODE As String,  _
                    ByVal PR_PURPOSE As String,  _
                    ByVal PR_STATUS As String,  _
                    ByVal PR_REQUESTEDBY As String,  _
                    ByVal PR_REQUESTEDBYPOSITION As String,  _
                    ByVal PR_APPROVEDBY As String,  _
                    ByVal PR_APPROVEDBYPOSITION As String,  _
                    ByVal PR_CERTIFIEDBY As String,  _
                    ByVal PR_CERTIFIEDBYPOSITION As String,  _
                    ByVal PR_NOTEDBY As String,  _
                    ByVal PR_NOTEDBYPOSITION As String,  _
                    ByVal PR_SUBMITTEDBY As String,  _
                    ByVal PR_DEPARTMENT As String,  _
                    ByVal PR_DIVISION As String,  _
                    ByVal CREATED_DATE As Date,  _
                    ByVal PR_UPDATEDBY As String,  _
                    ByVal PR_ISDOLLAR As Boolean) As tblM4_PURCHASEREQUESTRow
            Dim rowtblM4_PURCHASEREQUESTRow As tblM4_PURCHASEREQUESTRow = CType(Me.NewRow,tblM4_PURCHASEREQUESTRow)
            Dim columnValuesArray() As Object = New Object() {PR_PRNO, PR_DATEREQUESTED, PR_APPCODE, PR_PURPOSE, PR_STATUS, PR_REQUESTEDBY, PR_REQUESTEDBYPOSITION, PR_APPROVEDBY, PR_APPROVEDBYPOSITION, PR_CERTIFIEDBY, PR_CERTIFIEDBYPOSITION, PR_NOTEDBY, PR_NOTEDBYPOSITION, PR_SUBMITTEDBY, PR_DEPARTMENT, PR_DIVISION, CREATED_DATE, PR_UPDATEDBY, PR_ISDOLLAR}
            rowtblM4_PURCHASEREQUESTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_PURCHASEREQUESTRow)
            Return rowtblM4_PURCHASEREQUESTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByPR_PRNO(ByVal PR_PRNO As String) As tblM4_PURCHASEREQUESTRow
            Return CType(Me.Rows.Find(New Object() {PR_PRNO}),tblM4_PURCHASEREQUESTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_PURCHASEREQUESTDataTable = CType(MyBase.Clone,tblM4_PURCHASEREQUESTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_PURCHASEREQUESTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPR_PRNO = MyBase.Columns("PR_PRNO")
            Me.columnPR_DATEREQUESTED = MyBase.Columns("PR_DATEREQUESTED")
            Me.columnPR_APPCODE = MyBase.Columns("PR_APPCODE")
            Me.columnPR_PURPOSE = MyBase.Columns("PR_PURPOSE")
            Me.columnPR_STATUS = MyBase.Columns("PR_STATUS")
            Me.columnPR_REQUESTEDBY = MyBase.Columns("PR_REQUESTEDBY")
            Me.columnPR_REQUESTEDBYPOSITION = MyBase.Columns("PR_REQUESTEDBYPOSITION")
            Me.columnPR_APPROVEDBY = MyBase.Columns("PR_APPROVEDBY")
            Me.columnPR_APPROVEDBYPOSITION = MyBase.Columns("PR_APPROVEDBYPOSITION")
            Me.columnPR_CERTIFIEDBY = MyBase.Columns("PR_CERTIFIEDBY")
            Me.columnPR_CERTIFIEDBYPOSITION = MyBase.Columns("PR_CERTIFIEDBYPOSITION")
            Me.columnPR_NOTEDBY = MyBase.Columns("PR_NOTEDBY")
            Me.columnPR_NOTEDBYPOSITION = MyBase.Columns("PR_NOTEDBYPOSITION")
            Me.columnPR_SUBMITTEDBY = MyBase.Columns("PR_SUBMITTEDBY")
            Me.columnPR_DEPARTMENT = MyBase.Columns("PR_DEPARTMENT")
            Me.columnPR_DIVISION = MyBase.Columns("PR_DIVISION")
            Me.columnCREATED_DATE = MyBase.Columns("CREATED_DATE")
            Me.columnPR_UPDATEDBY = MyBase.Columns("PR_UPDATEDBY")
            Me.columnPR_ISDOLLAR = MyBase.Columns("PR_ISDOLLAR")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPR_PRNO = New Global.System.Data.DataColumn("PR_PRNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_PRNO)
            Me.columnPR_DATEREQUESTED = New Global.System.Data.DataColumn("PR_DATEREQUESTED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_DATEREQUESTED)
            Me.columnPR_APPCODE = New Global.System.Data.DataColumn("PR_APPCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_APPCODE)
            Me.columnPR_PURPOSE = New Global.System.Data.DataColumn("PR_PURPOSE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_PURPOSE)
            Me.columnPR_STATUS = New Global.System.Data.DataColumn("PR_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_STATUS)
            Me.columnPR_REQUESTEDBY = New Global.System.Data.DataColumn("PR_REQUESTEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_REQUESTEDBY)
            Me.columnPR_REQUESTEDBYPOSITION = New Global.System.Data.DataColumn("PR_REQUESTEDBYPOSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_REQUESTEDBYPOSITION)
            Me.columnPR_APPROVEDBY = New Global.System.Data.DataColumn("PR_APPROVEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_APPROVEDBY)
            Me.columnPR_APPROVEDBYPOSITION = New Global.System.Data.DataColumn("PR_APPROVEDBYPOSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_APPROVEDBYPOSITION)
            Me.columnPR_CERTIFIEDBY = New Global.System.Data.DataColumn("PR_CERTIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_CERTIFIEDBY)
            Me.columnPR_CERTIFIEDBYPOSITION = New Global.System.Data.DataColumn("PR_CERTIFIEDBYPOSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_CERTIFIEDBYPOSITION)
            Me.columnPR_NOTEDBY = New Global.System.Data.DataColumn("PR_NOTEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_NOTEDBY)
            Me.columnPR_NOTEDBYPOSITION = New Global.System.Data.DataColumn("PR_NOTEDBYPOSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_NOTEDBYPOSITION)
            Me.columnPR_SUBMITTEDBY = New Global.System.Data.DataColumn("PR_SUBMITTEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_SUBMITTEDBY)
            Me.columnPR_DEPARTMENT = New Global.System.Data.DataColumn("PR_DEPARTMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_DEPARTMENT)
            Me.columnPR_DIVISION = New Global.System.Data.DataColumn("PR_DIVISION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_DIVISION)
            Me.columnCREATED_DATE = New Global.System.Data.DataColumn("CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATED_DATE)
            Me.columnPR_UPDATEDBY = New Global.System.Data.DataColumn("PR_UPDATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_UPDATEDBY)
            Me.columnPR_ISDOLLAR = New Global.System.Data.DataColumn("PR_ISDOLLAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_ISDOLLAR)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPR_PRNO}, true))
            Me.columnPR_PRNO.AllowDBNull = false
            Me.columnPR_PRNO.Unique = true
            Me.columnPR_PRNO.MaxLength = 20
            Me.columnPR_DATEREQUESTED.AllowDBNull = false
            Me.columnPR_APPCODE.MaxLength = 20
            Me.columnPR_PURPOSE.MaxLength = 300
            Me.columnPR_STATUS.AllowDBNull = false
            Me.columnPR_STATUS.MaxLength = 1
            Me.columnPR_REQUESTEDBY.AllowDBNull = false
            Me.columnPR_REQUESTEDBY.MaxLength = 100
            Me.columnPR_REQUESTEDBYPOSITION.MaxLength = 100
            Me.columnPR_APPROVEDBY.MaxLength = 100
            Me.columnPR_APPROVEDBYPOSITION.MaxLength = 100
            Me.columnPR_CERTIFIEDBY.MaxLength = 100
            Me.columnPR_CERTIFIEDBYPOSITION.MaxLength = 100
            Me.columnPR_NOTEDBY.MaxLength = 100
            Me.columnPR_NOTEDBYPOSITION.MaxLength = 100
            Me.columnPR_SUBMITTEDBY.MaxLength = 50
            Me.columnPR_DEPARTMENT.MaxLength = 100
            Me.columnPR_DIVISION.MaxLength = 100
            Me.columnPR_UPDATEDBY.MaxLength = 50
            Me.columnPR_ISDOLLAR.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_PURCHASEREQUESTRow() As tblM4_PURCHASEREQUESTRow
            Return CType(Me.NewRow,tblM4_PURCHASEREQUESTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_PURCHASEREQUESTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_PURCHASEREQUESTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_PURCHASEREQUESTRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUESTRowChanged(Me, New tblM4_PURCHASEREQUESTRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUESTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_PURCHASEREQUESTRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUESTRowChanging(Me, New tblM4_PURCHASEREQUESTRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUESTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_PURCHASEREQUESTRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUESTRowDeleted(Me, New tblM4_PURCHASEREQUESTRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUESTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_PURCHASEREQUESTRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUESTRowDeleting(Me, New tblM4_PURCHASEREQUESTRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUESTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_PURCHASEREQUESTRow(ByVal row As tblM4_PURCHASEREQUESTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_PURCHASEREQUESTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VWG3_DR_LISTDataTable
        Inherits Global.System.Data.TypedTableBase(Of VWG3_DR_LISTRow)
        
        Private columnDR_ID As Global.System.Data.DataColumn
        
        Private columnDR_NO As Global.System.Data.DataColumn
        
        Private columnDR_DELIVER As Global.System.Data.DataColumn
        
        Private columnDR_RECEIVED_BY As Global.System.Data.DataColumn
        
        Private columnDR_STATUS As Global.System.Data.DataColumn
        
        Private columnDRD_ID As Global.System.Data.DataColumn
        
        Private columnDRD_QUANTITY As Global.System.Data.DataColumn
        
        Private columnDRD_DESCRIPTION As Global.System.Data.DataColumn
        
        Private columnDRD_STATUS As Global.System.Data.DataColumn
        
        Private columnCOM_TIN_NUMBER As Global.System.Data.DataColumn
        
        Private columnCOM_COMPANY_NAME As Global.System.Data.DataColumn
        
        Private columnCOM_ADDRESS As Global.System.Data.DataColumn
        
        Private columnCOM_CONTACT_NO As Global.System.Data.DataColumn
        
        Private columnCOM_FAX_NO As Global.System.Data.DataColumn
        
        Private columnCOM_EMAIL As Global.System.Data.DataColumn
        
        Private columnCOM_DIRECTORY As Global.System.Data.DataColumn
        
        Private columnCOM_STATUS As Global.System.Data.DataColumn
        
        Private columnUN_NO As Global.System.Data.DataColumn
        
        Private columnUN_DESCRIPTION As Global.System.Data.DataColumn
        
        Private columnINV_ID As Global.System.Data.DataColumn
        
        Private columnDRD_WARANTY As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VWG3_DR_LIST"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DR_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDR_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DR_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDR_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DR_DELIVERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDR_DELIVER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DR_RECEIVED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDR_RECEIVED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DR_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDR_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DRD_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRD_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DRD_QUANTITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRD_QUANTITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DRD_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRD_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DRD_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRD_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_TIN_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_TIN_NUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_COMPANY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_COMPANY_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_ADDRESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_CONTACT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_CONTACT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_FAX_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_FAX_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_EMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_DIRECTORYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_DIRECTORY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UN_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UN_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INV_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINV_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DRD_WARANTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRD_WARANTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VWG3_DR_LISTRow
            Get
                Return CType(Me.Rows(index),VWG3_DR_LISTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_DR_LISTRowChanging As VWG3_DR_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_DR_LISTRowChanged As VWG3_DR_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_DR_LISTRowDeleting As VWG3_DR_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_DR_LISTRowDeleted As VWG3_DR_LISTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddVWG3_DR_LISTRow(ByVal row As VWG3_DR_LISTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddVWG3_DR_LISTRow( _
                    ByVal DR_ID As String,  _
                    ByVal DR_NO As String,  _
                    ByVal DR_DELIVER As Date,  _
                    ByVal DR_RECEIVED_BY As String,  _
                    ByVal DR_STATUS As Integer,  _
                    ByVal DRD_ID As Integer,  _
                    ByVal DRD_QUANTITY As Integer,  _
                    ByVal DRD_DESCRIPTION As String,  _
                    ByVal DRD_STATUS As Integer,  _
                    ByVal COM_TIN_NUMBER As String,  _
                    ByVal COM_COMPANY_NAME As String,  _
                    ByVal COM_ADDRESS As String,  _
                    ByVal COM_CONTACT_NO As String,  _
                    ByVal COM_FAX_NO As String,  _
                    ByVal COM_EMAIL As String,  _
                    ByVal COM_DIRECTORY As String,  _
                    ByVal COM_STATUS As Integer,  _
                    ByVal UN_NO As Integer,  _
                    ByVal UN_DESCRIPTION As String,  _
                    ByVal INV_ID As String,  _
                    ByVal DRD_WARANTY As Date) As VWG3_DR_LISTRow
            Dim rowVWG3_DR_LISTRow As VWG3_DR_LISTRow = CType(Me.NewRow,VWG3_DR_LISTRow)
            Dim columnValuesArray() As Object = New Object() {DR_ID, DR_NO, DR_DELIVER, DR_RECEIVED_BY, DR_STATUS, DRD_ID, DRD_QUANTITY, DRD_DESCRIPTION, DRD_STATUS, COM_TIN_NUMBER, COM_COMPANY_NAME, COM_ADDRESS, COM_CONTACT_NO, COM_FAX_NO, COM_EMAIL, COM_DIRECTORY, COM_STATUS, UN_NO, UN_DESCRIPTION, INV_ID, DRD_WARANTY}
            rowVWG3_DR_LISTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVWG3_DR_LISTRow)
            Return rowVWG3_DR_LISTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VWG3_DR_LISTDataTable = CType(MyBase.Clone,VWG3_DR_LISTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VWG3_DR_LISTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDR_ID = MyBase.Columns("DR_ID")
            Me.columnDR_NO = MyBase.Columns("DR_NO")
            Me.columnDR_DELIVER = MyBase.Columns("DR_DELIVER")
            Me.columnDR_RECEIVED_BY = MyBase.Columns("DR_RECEIVED_BY")
            Me.columnDR_STATUS = MyBase.Columns("DR_STATUS")
            Me.columnDRD_ID = MyBase.Columns("DRD_ID")
            Me.columnDRD_QUANTITY = MyBase.Columns("DRD_QUANTITY")
            Me.columnDRD_DESCRIPTION = MyBase.Columns("DRD_DESCRIPTION")
            Me.columnDRD_STATUS = MyBase.Columns("DRD_STATUS")
            Me.columnCOM_TIN_NUMBER = MyBase.Columns("COM_TIN_NUMBER")
            Me.columnCOM_COMPANY_NAME = MyBase.Columns("COM_COMPANY_NAME")
            Me.columnCOM_ADDRESS = MyBase.Columns("COM_ADDRESS")
            Me.columnCOM_CONTACT_NO = MyBase.Columns("COM_CONTACT_NO")
            Me.columnCOM_FAX_NO = MyBase.Columns("COM_FAX_NO")
            Me.columnCOM_EMAIL = MyBase.Columns("COM_EMAIL")
            Me.columnCOM_DIRECTORY = MyBase.Columns("COM_DIRECTORY")
            Me.columnCOM_STATUS = MyBase.Columns("COM_STATUS")
            Me.columnUN_NO = MyBase.Columns("UN_NO")
            Me.columnUN_DESCRIPTION = MyBase.Columns("UN_DESCRIPTION")
            Me.columnINV_ID = MyBase.Columns("INV_ID")
            Me.columnDRD_WARANTY = MyBase.Columns("DRD_WARANTY")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDR_ID = New Global.System.Data.DataColumn("DR_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDR_ID)
            Me.columnDR_NO = New Global.System.Data.DataColumn("DR_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDR_NO)
            Me.columnDR_DELIVER = New Global.System.Data.DataColumn("DR_DELIVER", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDR_DELIVER)
            Me.columnDR_RECEIVED_BY = New Global.System.Data.DataColumn("DR_RECEIVED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDR_RECEIVED_BY)
            Me.columnDR_STATUS = New Global.System.Data.DataColumn("DR_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDR_STATUS)
            Me.columnDRD_ID = New Global.System.Data.DataColumn("DRD_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRD_ID)
            Me.columnDRD_QUANTITY = New Global.System.Data.DataColumn("DRD_QUANTITY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRD_QUANTITY)
            Me.columnDRD_DESCRIPTION = New Global.System.Data.DataColumn("DRD_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRD_DESCRIPTION)
            Me.columnDRD_STATUS = New Global.System.Data.DataColumn("DRD_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRD_STATUS)
            Me.columnCOM_TIN_NUMBER = New Global.System.Data.DataColumn("COM_TIN_NUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_TIN_NUMBER)
            Me.columnCOM_COMPANY_NAME = New Global.System.Data.DataColumn("COM_COMPANY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_COMPANY_NAME)
            Me.columnCOM_ADDRESS = New Global.System.Data.DataColumn("COM_ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_ADDRESS)
            Me.columnCOM_CONTACT_NO = New Global.System.Data.DataColumn("COM_CONTACT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_CONTACT_NO)
            Me.columnCOM_FAX_NO = New Global.System.Data.DataColumn("COM_FAX_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_FAX_NO)
            Me.columnCOM_EMAIL = New Global.System.Data.DataColumn("COM_EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_EMAIL)
            Me.columnCOM_DIRECTORY = New Global.System.Data.DataColumn("COM_DIRECTORY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_DIRECTORY)
            Me.columnCOM_STATUS = New Global.System.Data.DataColumn("COM_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_STATUS)
            Me.columnUN_NO = New Global.System.Data.DataColumn("UN_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN_NO)
            Me.columnUN_DESCRIPTION = New Global.System.Data.DataColumn("UN_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN_DESCRIPTION)
            Me.columnINV_ID = New Global.System.Data.DataColumn("INV_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINV_ID)
            Me.columnDRD_WARANTY = New Global.System.Data.DataColumn("DRD_WARANTY", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRD_WARANTY)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDR_ID, Me.columnDRD_ID, Me.columnCOM_TIN_NUMBER, Me.columnUN_NO}, false))
            Me.columnDR_ID.AllowDBNull = false
            Me.columnDR_ID.MaxLength = 50
            Me.columnDR_NO.AllowDBNull = false
            Me.columnDR_NO.MaxLength = 50
            Me.columnDR_RECEIVED_BY.MaxLength = 500
            Me.columnDRD_DESCRIPTION.MaxLength = 2147483647
            Me.columnCOM_TIN_NUMBER.MaxLength = 50
            Me.columnCOM_COMPANY_NAME.MaxLength = 2147483647
            Me.columnCOM_ADDRESS.MaxLength = 2147483647
            Me.columnCOM_CONTACT_NO.MaxLength = 100
            Me.columnCOM_FAX_NO.MaxLength = 50
            Me.columnCOM_EMAIL.MaxLength = 100
            Me.columnCOM_DIRECTORY.MaxLength = 50
            Me.columnUN_DESCRIPTION.MaxLength = 50
            Me.columnINV_ID.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewVWG3_DR_LISTRow() As VWG3_DR_LISTRow
            Return CType(Me.NewRow,VWG3_DR_LISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VWG3_DR_LISTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VWG3_DR_LISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VWG3_DR_LISTRowChangedEvent) Is Nothing) Then
                RaiseEvent VWG3_DR_LISTRowChanged(Me, New VWG3_DR_LISTRowChangeEvent(CType(e.Row,VWG3_DR_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VWG3_DR_LISTRowChangingEvent) Is Nothing) Then
                RaiseEvent VWG3_DR_LISTRowChanging(Me, New VWG3_DR_LISTRowChangeEvent(CType(e.Row,VWG3_DR_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VWG3_DR_LISTRowDeletedEvent) Is Nothing) Then
                RaiseEvent VWG3_DR_LISTRowDeleted(Me, New VWG3_DR_LISTRowChangeEvent(CType(e.Row,VWG3_DR_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VWG3_DR_LISTRowDeletingEvent) Is Nothing) Then
                RaiseEvent VWG3_DR_LISTRowDeleting(Me, New VWG3_DR_LISTRowChangeEvent(CType(e.Row,VWG3_DR_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveVWG3_DR_LISTRow(ByVal row As VWG3_DR_LISTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VWG3_DR_LISTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VWG3_REG_DVDataTable
        Inherits Global.System.Data.TypedTableBase(Of VWG3_REG_DVRow)
        
        Private columnDV_NO_SYSTEM As Global.System.Data.DataColumn
        
        Private columnHDIVS_CODE As Global.System.Data.DataColumn
        
        Private columnEMP_NO As Global.System.Data.DataColumn
        
        Private columnDV_DATE As Global.System.Data.DataColumn
        
        Private columnDV_PAYEE As Global.System.Data.DataColumn
        
        Private columnDV_TIN_EMPLOYEE_NO As Global.System.Data.DataColumn
        
        Private columnDV_ADDRESS As Global.System.Data.DataColumn
        
        Private columnDV_A_NAME As Global.System.Data.DataColumn
        
        Private columnDV_A_POSITION As Global.System.Data.DataColumn
        
        Private columnDV_C_NAME As Global.System.Data.DataColumn
        
        Private columnDV_C_POSITION As Global.System.Data.DataColumn
        
        Private columnDV_D_NAME As Global.System.Data.DataColumn
        
        Private columnDV_D_POSITION As Global.System.Data.DataColumn
        
        Private columnDV_STATUS As Global.System.Data.DataColumn
        
        Private columnDV_QR_CODE As Global.System.Data.DataColumn
        
        Private columnDV_TYPE As Global.System.Data.DataColumn
        
        Private columnPAR_NO As Global.System.Data.DataColumn
        
        Private columnPAR_PARTICULAR As Global.System.Data.DataColumn
        
        Private columnPAR_MFO_PAP As Global.System.Data.DataColumn
        
        Private columnPAR_UACS_OBJECT_CODE As Global.System.Data.DataColumn
        
        Private columnPAR_AMOUNT As Global.System.Data.DataColumn
        
        Private columnPAR_STATUS As Global.System.Data.DataColumn
        
        Private columnCUR_SYMBOL As Global.System.Data.DataColumn
        
        Private columnCUR_DESCRIPTION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VWG3_REG_DV"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_NO_SYSTEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_NO_SYSTEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDIVS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDIVS_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_PAYEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_PAYEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_TIN_EMPLOYEE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_TIN_EMPLOYEE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_ADDRESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_A_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_A_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_A_POSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_A_POSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_C_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_C_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_C_POSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_C_POSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_D_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_D_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_D_POSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_D_POSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_QR_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_QR_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DV_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_PARTICULARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_PARTICULAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_MFO_PAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_MFO_PAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_UACS_OBJECT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_UACS_OBJECT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CUR_SYMBOLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUR_SYMBOL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CUR_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUR_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VWG3_REG_DVRow
            Get
                Return CType(Me.Rows(index),VWG3_REG_DVRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_REG_DVRowChanging As VWG3_REG_DVRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_REG_DVRowChanged As VWG3_REG_DVRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_REG_DVRowDeleting As VWG3_REG_DVRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_REG_DVRowDeleted As VWG3_REG_DVRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddVWG3_REG_DVRow(ByVal row As VWG3_REG_DVRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddVWG3_REG_DVRow( _
                    ByVal DV_NO_SYSTEM As String,  _
                    ByVal HDIVS_CODE As String,  _
                    ByVal EMP_NO As String,  _
                    ByVal DV_DATE As Date,  _
                    ByVal DV_PAYEE As String,  _
                    ByVal DV_TIN_EMPLOYEE_NO As String,  _
                    ByVal DV_ADDRESS As String,  _
                    ByVal DV_A_NAME As String,  _
                    ByVal DV_A_POSITION As String,  _
                    ByVal DV_C_NAME As String,  _
                    ByVal DV_C_POSITION As String,  _
                    ByVal DV_D_NAME As String,  _
                    ByVal DV_D_POSITION As String,  _
                    ByVal DV_STATUS As Integer,  _
                    ByVal DV_QR_CODE() As Byte,  _
                    ByVal DV_TYPE As String,  _
                    ByVal PAR_NO As Integer,  _
                    ByVal PAR_PARTICULAR As String,  _
                    ByVal PAR_MFO_PAP As String,  _
                    ByVal PAR_UACS_OBJECT_CODE As String,  _
                    ByVal PAR_AMOUNT As Decimal,  _
                    ByVal PAR_STATUS As Integer,  _
                    ByVal CUR_SYMBOL As String,  _
                    ByVal CUR_DESCRIPTION As String) As VWG3_REG_DVRow
            Dim rowVWG3_REG_DVRow As VWG3_REG_DVRow = CType(Me.NewRow,VWG3_REG_DVRow)
            Dim columnValuesArray() As Object = New Object() {DV_NO_SYSTEM, HDIVS_CODE, EMP_NO, DV_DATE, DV_PAYEE, DV_TIN_EMPLOYEE_NO, DV_ADDRESS, DV_A_NAME, DV_A_POSITION, DV_C_NAME, DV_C_POSITION, DV_D_NAME, DV_D_POSITION, DV_STATUS, DV_QR_CODE, DV_TYPE, PAR_NO, PAR_PARTICULAR, PAR_MFO_PAP, PAR_UACS_OBJECT_CODE, PAR_AMOUNT, PAR_STATUS, CUR_SYMBOL, CUR_DESCRIPTION}
            rowVWG3_REG_DVRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVWG3_REG_DVRow)
            Return rowVWG3_REG_DVRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VWG3_REG_DVDataTable = CType(MyBase.Clone,VWG3_REG_DVDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VWG3_REG_DVDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDV_NO_SYSTEM = MyBase.Columns("DV_NO_SYSTEM")
            Me.columnHDIVS_CODE = MyBase.Columns("HDIVS_CODE")
            Me.columnEMP_NO = MyBase.Columns("EMP_NO")
            Me.columnDV_DATE = MyBase.Columns("DV_DATE")
            Me.columnDV_PAYEE = MyBase.Columns("DV_PAYEE")
            Me.columnDV_TIN_EMPLOYEE_NO = MyBase.Columns("DV_TIN_EMPLOYEE_NO")
            Me.columnDV_ADDRESS = MyBase.Columns("DV_ADDRESS")
            Me.columnDV_A_NAME = MyBase.Columns("DV_A_NAME")
            Me.columnDV_A_POSITION = MyBase.Columns("DV_A_POSITION")
            Me.columnDV_C_NAME = MyBase.Columns("DV_C_NAME")
            Me.columnDV_C_POSITION = MyBase.Columns("DV_C_POSITION")
            Me.columnDV_D_NAME = MyBase.Columns("DV_D_NAME")
            Me.columnDV_D_POSITION = MyBase.Columns("DV_D_POSITION")
            Me.columnDV_STATUS = MyBase.Columns("DV_STATUS")
            Me.columnDV_QR_CODE = MyBase.Columns("DV_QR_CODE")
            Me.columnDV_TYPE = MyBase.Columns("DV_TYPE")
            Me.columnPAR_NO = MyBase.Columns("PAR_NO")
            Me.columnPAR_PARTICULAR = MyBase.Columns("PAR_PARTICULAR")
            Me.columnPAR_MFO_PAP = MyBase.Columns("PAR_MFO_PAP")
            Me.columnPAR_UACS_OBJECT_CODE = MyBase.Columns("PAR_UACS_OBJECT_CODE")
            Me.columnPAR_AMOUNT = MyBase.Columns("PAR_AMOUNT")
            Me.columnPAR_STATUS = MyBase.Columns("PAR_STATUS")
            Me.columnCUR_SYMBOL = MyBase.Columns("CUR_SYMBOL")
            Me.columnCUR_DESCRIPTION = MyBase.Columns("CUR_DESCRIPTION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDV_NO_SYSTEM = New Global.System.Data.DataColumn("DV_NO_SYSTEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_NO_SYSTEM)
            Me.columnHDIVS_CODE = New Global.System.Data.DataColumn("HDIVS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDIVS_CODE)
            Me.columnEMP_NO = New Global.System.Data.DataColumn("EMP_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_NO)
            Me.columnDV_DATE = New Global.System.Data.DataColumn("DV_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_DATE)
            Me.columnDV_PAYEE = New Global.System.Data.DataColumn("DV_PAYEE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_PAYEE)
            Me.columnDV_TIN_EMPLOYEE_NO = New Global.System.Data.DataColumn("DV_TIN_EMPLOYEE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_TIN_EMPLOYEE_NO)
            Me.columnDV_ADDRESS = New Global.System.Data.DataColumn("DV_ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_ADDRESS)
            Me.columnDV_A_NAME = New Global.System.Data.DataColumn("DV_A_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_A_NAME)
            Me.columnDV_A_POSITION = New Global.System.Data.DataColumn("DV_A_POSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_A_POSITION)
            Me.columnDV_C_NAME = New Global.System.Data.DataColumn("DV_C_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_C_NAME)
            Me.columnDV_C_POSITION = New Global.System.Data.DataColumn("DV_C_POSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_C_POSITION)
            Me.columnDV_D_NAME = New Global.System.Data.DataColumn("DV_D_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_D_NAME)
            Me.columnDV_D_POSITION = New Global.System.Data.DataColumn("DV_D_POSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_D_POSITION)
            Me.columnDV_STATUS = New Global.System.Data.DataColumn("DV_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_STATUS)
            Me.columnDV_QR_CODE = New Global.System.Data.DataColumn("DV_QR_CODE", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_QR_CODE)
            Me.columnDV_TYPE = New Global.System.Data.DataColumn("DV_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV_TYPE)
            Me.columnPAR_NO = New Global.System.Data.DataColumn("PAR_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_NO)
            Me.columnPAR_PARTICULAR = New Global.System.Data.DataColumn("PAR_PARTICULAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_PARTICULAR)
            Me.columnPAR_MFO_PAP = New Global.System.Data.DataColumn("PAR_MFO_PAP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_MFO_PAP)
            Me.columnPAR_UACS_OBJECT_CODE = New Global.System.Data.DataColumn("PAR_UACS_OBJECT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_UACS_OBJECT_CODE)
            Me.columnPAR_AMOUNT = New Global.System.Data.DataColumn("PAR_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_AMOUNT)
            Me.columnPAR_STATUS = New Global.System.Data.DataColumn("PAR_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_STATUS)
            Me.columnCUR_SYMBOL = New Global.System.Data.DataColumn("CUR_SYMBOL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUR_SYMBOL)
            Me.columnCUR_DESCRIPTION = New Global.System.Data.DataColumn("CUR_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUR_DESCRIPTION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDV_NO_SYSTEM, Me.columnPAR_NO}, false))
            Me.columnDV_NO_SYSTEM.AllowDBNull = false
            Me.columnDV_NO_SYSTEM.MaxLength = 50
            Me.columnHDIVS_CODE.MaxLength = 20
            Me.columnEMP_NO.MaxLength = 20
            Me.columnDV_PAYEE.MaxLength = 2147483647
            Me.columnDV_TIN_EMPLOYEE_NO.MaxLength = 50
            Me.columnDV_ADDRESS.MaxLength = 2147483647
            Me.columnDV_A_NAME.MaxLength = 50
            Me.columnDV_A_POSITION.MaxLength = 50
            Me.columnDV_C_NAME.MaxLength = 50
            Me.columnDV_C_POSITION.MaxLength = 50
            Me.columnDV_D_NAME.MaxLength = 50
            Me.columnDV_D_POSITION.MaxLength = 50
            Me.columnDV_TYPE.MaxLength = 10
            Me.columnPAR_PARTICULAR.MaxLength = 2147483647
            Me.columnPAR_MFO_PAP.MaxLength = 50
            Me.columnPAR_UACS_OBJECT_CODE.MaxLength = 50
            Me.columnCUR_SYMBOL.MaxLength = 50
            Me.columnCUR_DESCRIPTION.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewVWG3_REG_DVRow() As VWG3_REG_DVRow
            Return CType(Me.NewRow,VWG3_REG_DVRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VWG3_REG_DVRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VWG3_REG_DVRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VWG3_REG_DVRowChangedEvent) Is Nothing) Then
                RaiseEvent VWG3_REG_DVRowChanged(Me, New VWG3_REG_DVRowChangeEvent(CType(e.Row,VWG3_REG_DVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VWG3_REG_DVRowChangingEvent) Is Nothing) Then
                RaiseEvent VWG3_REG_DVRowChanging(Me, New VWG3_REG_DVRowChangeEvent(CType(e.Row,VWG3_REG_DVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VWG3_REG_DVRowDeletedEvent) Is Nothing) Then
                RaiseEvent VWG3_REG_DVRowDeleted(Me, New VWG3_REG_DVRowChangeEvent(CType(e.Row,VWG3_REG_DVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VWG3_REG_DVRowDeletingEvent) Is Nothing) Then
                RaiseEvent VWG3_REG_DVRowDeleting(Me, New VWG3_REG_DVRowChangeEvent(CType(e.Row,VWG3_REG_DVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveVWG3_REG_DVRow(ByVal row As VWG3_REG_DVRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VWG3_REG_DVDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VWG3_EMPLOYEE_LISTDataTable
        Inherits Global.System.Data.TypedTableBase(Of VWG3_EMPLOYEE_LISTRow)
        
        Private columnHRIS_EMPNO As Global.System.Data.DataColumn
        
        Private columnFULLNAME As Global.System.Data.DataColumn
        
        Private columnHDIVS_CODE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VWG3_EMPLOYEE_LIST"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FULLNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFULLNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDIVS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDIVS_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VWG3_EMPLOYEE_LISTRow
            Get
                Return CType(Me.Rows(index),VWG3_EMPLOYEE_LISTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_EMPLOYEE_LISTRowChanging As VWG3_EMPLOYEE_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_EMPLOYEE_LISTRowChanged As VWG3_EMPLOYEE_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_EMPLOYEE_LISTRowDeleting As VWG3_EMPLOYEE_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_EMPLOYEE_LISTRowDeleted As VWG3_EMPLOYEE_LISTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddVWG3_EMPLOYEE_LISTRow(ByVal row As VWG3_EMPLOYEE_LISTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddVWG3_EMPLOYEE_LISTRow(ByVal HRIS_EMPNO As String, ByVal FULLNAME As String, ByVal HDIVS_CODE As String) As VWG3_EMPLOYEE_LISTRow
            Dim rowVWG3_EMPLOYEE_LISTRow As VWG3_EMPLOYEE_LISTRow = CType(Me.NewRow,VWG3_EMPLOYEE_LISTRow)
            Dim columnValuesArray() As Object = New Object() {HRIS_EMPNO, FULLNAME, HDIVS_CODE}
            rowVWG3_EMPLOYEE_LISTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVWG3_EMPLOYEE_LISTRow)
            Return rowVWG3_EMPLOYEE_LISTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByHRIS_EMPNO(ByVal HRIS_EMPNO As String) As VWG3_EMPLOYEE_LISTRow
            Return CType(Me.Rows.Find(New Object() {HRIS_EMPNO}),VWG3_EMPLOYEE_LISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VWG3_EMPLOYEE_LISTDataTable = CType(MyBase.Clone,VWG3_EMPLOYEE_LISTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VWG3_EMPLOYEE_LISTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnHRIS_EMPNO = MyBase.Columns("HRIS_EMPNO")
            Me.columnFULLNAME = MyBase.Columns("FULLNAME")
            Me.columnHDIVS_CODE = MyBase.Columns("HDIVS_CODE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnHRIS_EMPNO = New Global.System.Data.DataColumn("HRIS_EMPNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO)
            Me.columnFULLNAME = New Global.System.Data.DataColumn("FULLNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFULLNAME)
            Me.columnHDIVS_CODE = New Global.System.Data.DataColumn("HDIVS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDIVS_CODE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnHRIS_EMPNO}, true))
            Me.columnHRIS_EMPNO.AllowDBNull = false
            Me.columnHRIS_EMPNO.Unique = true
            Me.columnHRIS_EMPNO.MaxLength = 20
            Me.columnFULLNAME.ReadOnly = true
            Me.columnFULLNAME.MaxLength = 515
            Me.columnHDIVS_CODE.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewVWG3_EMPLOYEE_LISTRow() As VWG3_EMPLOYEE_LISTRow
            Return CType(Me.NewRow,VWG3_EMPLOYEE_LISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VWG3_EMPLOYEE_LISTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VWG3_EMPLOYEE_LISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VWG3_EMPLOYEE_LISTRowChangedEvent) Is Nothing) Then
                RaiseEvent VWG3_EMPLOYEE_LISTRowChanged(Me, New VWG3_EMPLOYEE_LISTRowChangeEvent(CType(e.Row,VWG3_EMPLOYEE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VWG3_EMPLOYEE_LISTRowChangingEvent) Is Nothing) Then
                RaiseEvent VWG3_EMPLOYEE_LISTRowChanging(Me, New VWG3_EMPLOYEE_LISTRowChangeEvent(CType(e.Row,VWG3_EMPLOYEE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VWG3_EMPLOYEE_LISTRowDeletedEvent) Is Nothing) Then
                RaiseEvent VWG3_EMPLOYEE_LISTRowDeleted(Me, New VWG3_EMPLOYEE_LISTRowChangeEvent(CType(e.Row,VWG3_EMPLOYEE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VWG3_EMPLOYEE_LISTRowDeletingEvent) Is Nothing) Then
                RaiseEvent VWG3_EMPLOYEE_LISTRowDeleting(Me, New VWG3_EMPLOYEE_LISTRowChangeEvent(CType(e.Row,VWG3_EMPLOYEE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveVWG3_EMPLOYEE_LISTRow(ByVal row As VWG3_EMPLOYEE_LISTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VWG3_EMPLOYEE_LISTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VWG3_INVOICE_LISTDataTable
        Inherits Global.System.Data.TypedTableBase(Of VWG3_INVOICE_LISTRow)
        
        Private columnINV_ID As Global.System.Data.DataColumn
        
        Private columnINV_NO As Global.System.Data.DataColumn
        
        Private columnINV_DATE As Global.System.Data.DataColumn
        
        Private columnINV_DIRECTORY As Global.System.Data.DataColumn
        
        Private columnINV_TOTAL As Global.System.Data.DataColumn
        
        Private columnINVD_ID As Global.System.Data.DataColumn
        
        Private columnINVD_QTY As Global.System.Data.DataColumn
        
        Private columnINVD_PRICE As Global.System.Data.DataColumn
        
        Private columnINVD_DESCRIPTION As Global.System.Data.DataColumn
        
        Private columnUN_NO As Global.System.Data.DataColumn
        
        Private columnUN_DESCRIPTION As Global.System.Data.DataColumn
        
        Private columnCOM_TIN_NUMBER As Global.System.Data.DataColumn
        
        Private columnCOM_COMPANY_NAME As Global.System.Data.DataColumn
        
        Private columnCOM_ADDRESS As Global.System.Data.DataColumn
        
        Private columnCOM_CONTACT_NO As Global.System.Data.DataColumn
        
        Private columnCOM_FAX_NO As Global.System.Data.DataColumn
        
        Private columnCOM_EMAIL As Global.System.Data.DataColumn
        
        Private columnCOM_DIRECTORY As Global.System.Data.DataColumn
        
        Private columnCOM_STATUS As Global.System.Data.DataColumn
        
        Private columnTOTAL_AMOUNT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VWG3_INVOICE_LIST"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INV_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINV_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INV_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINV_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INV_DIRECTORYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINV_DIRECTORY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INV_TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINV_TOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INVD_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVD_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INVD_QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVD_QTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INVD_PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVD_PRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INVD_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVD_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UN_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UN_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_TIN_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_TIN_NUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_COMPANY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_COMPANY_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_ADDRESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_CONTACT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_CONTACT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_FAX_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_FAX_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_EMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_DIRECTORYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_DIRECTORY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COM_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOM_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TOTAL_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VWG3_INVOICE_LISTRow
            Get
                Return CType(Me.Rows(index),VWG3_INVOICE_LISTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_INVOICE_LISTRowChanging As VWG3_INVOICE_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_INVOICE_LISTRowChanged As VWG3_INVOICE_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_INVOICE_LISTRowDeleting As VWG3_INVOICE_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_INVOICE_LISTRowDeleted As VWG3_INVOICE_LISTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddVWG3_INVOICE_LISTRow(ByVal row As VWG3_INVOICE_LISTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddVWG3_INVOICE_LISTRow( _
                    ByVal INV_ID As String,  _
                    ByVal INV_NO As String,  _
                    ByVal INV_DATE As Date,  _
                    ByVal INV_DIRECTORY As String,  _
                    ByVal INV_TOTAL As Decimal,  _
                    ByVal INVD_ID As Integer,  _
                    ByVal INVD_QTY As Integer,  _
                    ByVal INVD_PRICE As Decimal,  _
                    ByVal INVD_DESCRIPTION As String,  _
                    ByVal UN_NO As Integer,  _
                    ByVal UN_DESCRIPTION As String,  _
                    ByVal COM_TIN_NUMBER As String,  _
                    ByVal COM_COMPANY_NAME As String,  _
                    ByVal COM_ADDRESS As String,  _
                    ByVal COM_CONTACT_NO As String,  _
                    ByVal COM_FAX_NO As String,  _
                    ByVal COM_EMAIL As String,  _
                    ByVal COM_DIRECTORY As String,  _
                    ByVal COM_STATUS As Integer,  _
                    ByVal TOTAL_AMOUNT As Decimal) As VWG3_INVOICE_LISTRow
            Dim rowVWG3_INVOICE_LISTRow As VWG3_INVOICE_LISTRow = CType(Me.NewRow,VWG3_INVOICE_LISTRow)
            Dim columnValuesArray() As Object = New Object() {INV_ID, INV_NO, INV_DATE, INV_DIRECTORY, INV_TOTAL, INVD_ID, INVD_QTY, INVD_PRICE, INVD_DESCRIPTION, UN_NO, UN_DESCRIPTION, COM_TIN_NUMBER, COM_COMPANY_NAME, COM_ADDRESS, COM_CONTACT_NO, COM_FAX_NO, COM_EMAIL, COM_DIRECTORY, COM_STATUS, TOTAL_AMOUNT}
            rowVWG3_INVOICE_LISTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVWG3_INVOICE_LISTRow)
            Return rowVWG3_INVOICE_LISTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VWG3_INVOICE_LISTDataTable = CType(MyBase.Clone,VWG3_INVOICE_LISTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VWG3_INVOICE_LISTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnINV_ID = MyBase.Columns("INV_ID")
            Me.columnINV_NO = MyBase.Columns("INV_NO")
            Me.columnINV_DATE = MyBase.Columns("INV_DATE")
            Me.columnINV_DIRECTORY = MyBase.Columns("INV_DIRECTORY")
            Me.columnINV_TOTAL = MyBase.Columns("INV_TOTAL")
            Me.columnINVD_ID = MyBase.Columns("INVD_ID")
            Me.columnINVD_QTY = MyBase.Columns("INVD_QTY")
            Me.columnINVD_PRICE = MyBase.Columns("INVD_PRICE")
            Me.columnINVD_DESCRIPTION = MyBase.Columns("INVD_DESCRIPTION")
            Me.columnUN_NO = MyBase.Columns("UN_NO")
            Me.columnUN_DESCRIPTION = MyBase.Columns("UN_DESCRIPTION")
            Me.columnCOM_TIN_NUMBER = MyBase.Columns("COM_TIN_NUMBER")
            Me.columnCOM_COMPANY_NAME = MyBase.Columns("COM_COMPANY_NAME")
            Me.columnCOM_ADDRESS = MyBase.Columns("COM_ADDRESS")
            Me.columnCOM_CONTACT_NO = MyBase.Columns("COM_CONTACT_NO")
            Me.columnCOM_FAX_NO = MyBase.Columns("COM_FAX_NO")
            Me.columnCOM_EMAIL = MyBase.Columns("COM_EMAIL")
            Me.columnCOM_DIRECTORY = MyBase.Columns("COM_DIRECTORY")
            Me.columnCOM_STATUS = MyBase.Columns("COM_STATUS")
            Me.columnTOTAL_AMOUNT = MyBase.Columns("TOTAL_AMOUNT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnINV_ID = New Global.System.Data.DataColumn("INV_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINV_ID)
            Me.columnINV_NO = New Global.System.Data.DataColumn("INV_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINV_NO)
            Me.columnINV_DATE = New Global.System.Data.DataColumn("INV_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINV_DATE)
            Me.columnINV_DIRECTORY = New Global.System.Data.DataColumn("INV_DIRECTORY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINV_DIRECTORY)
            Me.columnINV_TOTAL = New Global.System.Data.DataColumn("INV_TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINV_TOTAL)
            Me.columnINVD_ID = New Global.System.Data.DataColumn("INVD_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVD_ID)
            Me.columnINVD_QTY = New Global.System.Data.DataColumn("INVD_QTY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVD_QTY)
            Me.columnINVD_PRICE = New Global.System.Data.DataColumn("INVD_PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVD_PRICE)
            Me.columnINVD_DESCRIPTION = New Global.System.Data.DataColumn("INVD_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVD_DESCRIPTION)
            Me.columnUN_NO = New Global.System.Data.DataColumn("UN_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN_NO)
            Me.columnUN_DESCRIPTION = New Global.System.Data.DataColumn("UN_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN_DESCRIPTION)
            Me.columnCOM_TIN_NUMBER = New Global.System.Data.DataColumn("COM_TIN_NUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_TIN_NUMBER)
            Me.columnCOM_COMPANY_NAME = New Global.System.Data.DataColumn("COM_COMPANY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_COMPANY_NAME)
            Me.columnCOM_ADDRESS = New Global.System.Data.DataColumn("COM_ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_ADDRESS)
            Me.columnCOM_CONTACT_NO = New Global.System.Data.DataColumn("COM_CONTACT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_CONTACT_NO)
            Me.columnCOM_FAX_NO = New Global.System.Data.DataColumn("COM_FAX_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_FAX_NO)
            Me.columnCOM_EMAIL = New Global.System.Data.DataColumn("COM_EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_EMAIL)
            Me.columnCOM_DIRECTORY = New Global.System.Data.DataColumn("COM_DIRECTORY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_DIRECTORY)
            Me.columnCOM_STATUS = New Global.System.Data.DataColumn("COM_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOM_STATUS)
            Me.columnTOTAL_AMOUNT = New Global.System.Data.DataColumn("TOTAL_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_AMOUNT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnINV_ID, Me.columnINVD_ID, Me.columnUN_NO, Me.columnCOM_TIN_NUMBER}, false))
            Me.columnINV_ID.AllowDBNull = false
            Me.columnINV_ID.MaxLength = 50
            Me.columnINV_NO.MaxLength = 50
            Me.columnINV_DIRECTORY.MaxLength = 2147483647
            Me.columnINVD_DESCRIPTION.MaxLength = 2147483647
            Me.columnUN_DESCRIPTION.MaxLength = 50
            Me.columnCOM_TIN_NUMBER.MaxLength = 50
            Me.columnCOM_COMPANY_NAME.MaxLength = 2147483647
            Me.columnCOM_ADDRESS.MaxLength = 2147483647
            Me.columnCOM_CONTACT_NO.MaxLength = 100
            Me.columnCOM_FAX_NO.MaxLength = 50
            Me.columnCOM_EMAIL.MaxLength = 100
            Me.columnCOM_DIRECTORY.MaxLength = 50
            Me.columnTOTAL_AMOUNT.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewVWG3_INVOICE_LISTRow() As VWG3_INVOICE_LISTRow
            Return CType(Me.NewRow,VWG3_INVOICE_LISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VWG3_INVOICE_LISTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VWG3_INVOICE_LISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VWG3_INVOICE_LISTRowChangedEvent) Is Nothing) Then
                RaiseEvent VWG3_INVOICE_LISTRowChanged(Me, New VWG3_INVOICE_LISTRowChangeEvent(CType(e.Row,VWG3_INVOICE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VWG3_INVOICE_LISTRowChangingEvent) Is Nothing) Then
                RaiseEvent VWG3_INVOICE_LISTRowChanging(Me, New VWG3_INVOICE_LISTRowChangeEvent(CType(e.Row,VWG3_INVOICE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VWG3_INVOICE_LISTRowDeletedEvent) Is Nothing) Then
                RaiseEvent VWG3_INVOICE_LISTRowDeleted(Me, New VWG3_INVOICE_LISTRowChangeEvent(CType(e.Row,VWG3_INVOICE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VWG3_INVOICE_LISTRowDeletingEvent) Is Nothing) Then
                RaiseEvent VWG3_INVOICE_LISTRowDeleting(Me, New VWG3_INVOICE_LISTRowChangeEvent(CType(e.Row,VWG3_INVOICE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveVWG3_INVOICE_LISTRow(ByVal row As VWG3_INVOICE_LISTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VWG3_INVOICE_LISTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VWG3_PRIMARY_SIGNATORYDataTable
        Inherits Global.System.Data.TypedTableBase(Of VWG3_PRIMARY_SIGNATORYRow)
        
        Private columnSIG_OFFICE_ORDER As Global.System.Data.DataColumn
        
        Private columnSIG_POLICY As Global.System.Data.DataColumn
        
        Private columnSIG_AMOUNT As Global.System.Data.DataColumn
        
        Private columnSIG_STATUS As Global.System.Data.DataColumn
        
        Private columnHDIVS_CODE As Global.System.Data.DataColumn
        
        Private columnSIG_TY_NO As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO_USER As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO_SIG As Global.System.Data.DataColumn
        
        Private columnFULLNAME As Global.System.Data.DataColumn
        
        Private columnSIG_POSITION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VWG3_PRIMARY_SIGNATORY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_OFFICE_ORDERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_OFFICE_ORDER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_POLICYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_POLICY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDIVS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDIVS_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_TY_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_TY_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNO_USERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO_USER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNO_SIGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO_SIG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FULLNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFULLNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_POSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_POSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VWG3_PRIMARY_SIGNATORYRow
            Get
                Return CType(Me.Rows(index),VWG3_PRIMARY_SIGNATORYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_PRIMARY_SIGNATORYRowChanging As VWG3_PRIMARY_SIGNATORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_PRIMARY_SIGNATORYRowChanged As VWG3_PRIMARY_SIGNATORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_PRIMARY_SIGNATORYRowDeleting As VWG3_PRIMARY_SIGNATORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_PRIMARY_SIGNATORYRowDeleted As VWG3_PRIMARY_SIGNATORYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddVWG3_PRIMARY_SIGNATORYRow(ByVal row As VWG3_PRIMARY_SIGNATORYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddVWG3_PRIMARY_SIGNATORYRow(ByVal SIG_OFFICE_ORDER As String, ByVal SIG_POLICY As Integer, ByVal SIG_AMOUNT As Decimal, ByVal SIG_STATUS As Integer, ByVal HDIVS_CODE As String, ByVal SIG_TY_NO As Integer, ByVal HRIS_EMPNO_USER As String, ByVal HRIS_EMPNO_SIG As String, ByVal FULLNAME As String, ByVal SIG_POSITION As String) As VWG3_PRIMARY_SIGNATORYRow
            Dim rowVWG3_PRIMARY_SIGNATORYRow As VWG3_PRIMARY_SIGNATORYRow = CType(Me.NewRow,VWG3_PRIMARY_SIGNATORYRow)
            Dim columnValuesArray() As Object = New Object() {SIG_OFFICE_ORDER, SIG_POLICY, SIG_AMOUNT, SIG_STATUS, HDIVS_CODE, SIG_TY_NO, HRIS_EMPNO_USER, HRIS_EMPNO_SIG, FULLNAME, SIG_POSITION}
            rowVWG3_PRIMARY_SIGNATORYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVWG3_PRIMARY_SIGNATORYRow)
            Return rowVWG3_PRIMARY_SIGNATORYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindBySIG_TY_NOHRIS_EMPNO_USER(ByVal SIG_TY_NO As Integer, ByVal HRIS_EMPNO_USER As String) As VWG3_PRIMARY_SIGNATORYRow
            Return CType(Me.Rows.Find(New Object() {SIG_TY_NO, HRIS_EMPNO_USER}),VWG3_PRIMARY_SIGNATORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VWG3_PRIMARY_SIGNATORYDataTable = CType(MyBase.Clone,VWG3_PRIMARY_SIGNATORYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VWG3_PRIMARY_SIGNATORYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSIG_OFFICE_ORDER = MyBase.Columns("SIG_OFFICE_ORDER")
            Me.columnSIG_POLICY = MyBase.Columns("SIG_POLICY")
            Me.columnSIG_AMOUNT = MyBase.Columns("SIG_AMOUNT")
            Me.columnSIG_STATUS = MyBase.Columns("SIG_STATUS")
            Me.columnHDIVS_CODE = MyBase.Columns("HDIVS_CODE")
            Me.columnSIG_TY_NO = MyBase.Columns("SIG_TY_NO")
            Me.columnHRIS_EMPNO_USER = MyBase.Columns("HRIS_EMPNO_USER")
            Me.columnHRIS_EMPNO_SIG = MyBase.Columns("HRIS_EMPNO_SIG")
            Me.columnFULLNAME = MyBase.Columns("FULLNAME")
            Me.columnSIG_POSITION = MyBase.Columns("SIG_POSITION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSIG_OFFICE_ORDER = New Global.System.Data.DataColumn("SIG_OFFICE_ORDER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_OFFICE_ORDER)
            Me.columnSIG_POLICY = New Global.System.Data.DataColumn("SIG_POLICY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_POLICY)
            Me.columnSIG_AMOUNT = New Global.System.Data.DataColumn("SIG_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_AMOUNT)
            Me.columnSIG_STATUS = New Global.System.Data.DataColumn("SIG_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_STATUS)
            Me.columnHDIVS_CODE = New Global.System.Data.DataColumn("HDIVS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDIVS_CODE)
            Me.columnSIG_TY_NO = New Global.System.Data.DataColumn("SIG_TY_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_TY_NO)
            Me.columnHRIS_EMPNO_USER = New Global.System.Data.DataColumn("HRIS_EMPNO_USER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO_USER)
            Me.columnHRIS_EMPNO_SIG = New Global.System.Data.DataColumn("HRIS_EMPNO_SIG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO_SIG)
            Me.columnFULLNAME = New Global.System.Data.DataColumn("FULLNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFULLNAME)
            Me.columnSIG_POSITION = New Global.System.Data.DataColumn("SIG_POSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_POSITION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSIG_TY_NO, Me.columnHRIS_EMPNO_USER}, true))
            Me.columnSIG_OFFICE_ORDER.MaxLength = 50
            Me.columnHDIVS_CODE.MaxLength = 10
            Me.columnSIG_TY_NO.AllowDBNull = false
            Me.columnHRIS_EMPNO_USER.AllowDBNull = false
            Me.columnHRIS_EMPNO_USER.MaxLength = 20
            Me.columnHRIS_EMPNO_SIG.MaxLength = 20
            Me.columnFULLNAME.ReadOnly = true
            Me.columnFULLNAME.MaxLength = 2147483647
            Me.columnSIG_POSITION.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewVWG3_PRIMARY_SIGNATORYRow() As VWG3_PRIMARY_SIGNATORYRow
            Return CType(Me.NewRow,VWG3_PRIMARY_SIGNATORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VWG3_PRIMARY_SIGNATORYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VWG3_PRIMARY_SIGNATORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VWG3_PRIMARY_SIGNATORYRowChangedEvent) Is Nothing) Then
                RaiseEvent VWG3_PRIMARY_SIGNATORYRowChanged(Me, New VWG3_PRIMARY_SIGNATORYRowChangeEvent(CType(e.Row,VWG3_PRIMARY_SIGNATORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VWG3_PRIMARY_SIGNATORYRowChangingEvent) Is Nothing) Then
                RaiseEvent VWG3_PRIMARY_SIGNATORYRowChanging(Me, New VWG3_PRIMARY_SIGNATORYRowChangeEvent(CType(e.Row,VWG3_PRIMARY_SIGNATORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VWG3_PRIMARY_SIGNATORYRowDeletedEvent) Is Nothing) Then
                RaiseEvent VWG3_PRIMARY_SIGNATORYRowDeleted(Me, New VWG3_PRIMARY_SIGNATORYRowChangeEvent(CType(e.Row,VWG3_PRIMARY_SIGNATORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VWG3_PRIMARY_SIGNATORYRowDeletingEvent) Is Nothing) Then
                RaiseEvent VWG3_PRIMARY_SIGNATORYRowDeleting(Me, New VWG3_PRIMARY_SIGNATORYRowChangeEvent(CType(e.Row,VWG3_PRIMARY_SIGNATORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveVWG3_PRIMARY_SIGNATORYRow(ByVal row As VWG3_PRIMARY_SIGNATORYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VWG3_PRIMARY_SIGNATORYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VWG3_REG_BUSDataTable
        Inherits Global.System.Data.TypedTableBase(Of VWG3_REG_BUSRow)
        
        Private columnBUS_NO_SYSTEM As Global.System.Data.DataColumn
        
        Private columnHDIVS_CODE As Global.System.Data.DataColumn
        
        Private columnEMP_NO As Global.System.Data.DataColumn
        
        Private columnBUS_DATE As Global.System.Data.DataColumn
        
        Private columnBUS_PAYEE As Global.System.Data.DataColumn
        
        Private columnBUS_OFFICE As Global.System.Data.DataColumn
        
        Private columnBUS_ADDRESS As Global.System.Data.DataColumn
        
        Private columnBUS_NAME_A As Global.System.Data.DataColumn
        
        Private columnBUS_POSITION_A As Global.System.Data.DataColumn
        
        Private columnBUS_NAME_B As Global.System.Data.DataColumn
        
        Private columnBUS_POSITION_B As Global.System.Data.DataColumn
        
        Private columnBUS_QR_CODE As Global.System.Data.DataColumn
        
        Private columnBUS_STATUS As Global.System.Data.DataColumn
        
        Private columnPAR_NO As Global.System.Data.DataColumn
        
        Private columnPAR_PARTICULAR As Global.System.Data.DataColumn
        
        Private columnPAR_MFO_PAP As Global.System.Data.DataColumn
        
        Private columnPAR_UACS_OBJECT_CODE As Global.System.Data.DataColumn
        
        Private columnPAR_AMOUNT As Global.System.Data.DataColumn
        
        Private columnPAR_ISDOLLAR As Global.System.Data.DataColumn
        
        Private columnPAR_STATUS As Global.System.Data.DataColumn
        
        Private columnCUR_SYMBOL As Global.System.Data.DataColumn
        
        Private columnCUR_DESCRIPTION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VWG3_REG_BUS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_NO_SYSTEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_NO_SYSTEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDIVS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDIVS_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_PAYEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_PAYEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_OFFICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_OFFICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_ADDRESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_NAME_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_NAME_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_POSITION_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_POSITION_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_NAME_BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_NAME_B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_POSITION_BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_POSITION_B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_QR_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_QR_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BUS_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_PARTICULARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_PARTICULAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_MFO_PAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_MFO_PAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_UACS_OBJECT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_UACS_OBJECT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_ISDOLLARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_ISDOLLAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAR_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CUR_SYMBOLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUR_SYMBOL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CUR_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUR_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VWG3_REG_BUSRow
            Get
                Return CType(Me.Rows(index),VWG3_REG_BUSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_REG_BUSRowChanging As VWG3_REG_BUSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_REG_BUSRowChanged As VWG3_REG_BUSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_REG_BUSRowDeleting As VWG3_REG_BUSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event VWG3_REG_BUSRowDeleted As VWG3_REG_BUSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddVWG3_REG_BUSRow(ByVal row As VWG3_REG_BUSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddVWG3_REG_BUSRow( _
                    ByVal BUS_NO_SYSTEM As String,  _
                    ByVal HDIVS_CODE As String,  _
                    ByVal EMP_NO As String,  _
                    ByVal BUS_DATE As Date,  _
                    ByVal BUS_PAYEE As String,  _
                    ByVal BUS_OFFICE As String,  _
                    ByVal BUS_ADDRESS As String,  _
                    ByVal BUS_NAME_A As String,  _
                    ByVal BUS_POSITION_A As String,  _
                    ByVal BUS_NAME_B As String,  _
                    ByVal BUS_POSITION_B As String,  _
                    ByVal BUS_QR_CODE() As Byte,  _
                    ByVal BUS_STATUS As Integer,  _
                    ByVal PAR_NO As Integer,  _
                    ByVal PAR_PARTICULAR As String,  _
                    ByVal PAR_MFO_PAP As String,  _
                    ByVal PAR_UACS_OBJECT_CODE As String,  _
                    ByVal PAR_AMOUNT As Decimal,  _
                    ByVal PAR_ISDOLLAR As String,  _
                    ByVal PAR_STATUS As Integer,  _
                    ByVal CUR_SYMBOL As String,  _
                    ByVal CUR_DESCRIPTION As String) As VWG3_REG_BUSRow
            Dim rowVWG3_REG_BUSRow As VWG3_REG_BUSRow = CType(Me.NewRow,VWG3_REG_BUSRow)
            Dim columnValuesArray() As Object = New Object() {BUS_NO_SYSTEM, HDIVS_CODE, EMP_NO, BUS_DATE, BUS_PAYEE, BUS_OFFICE, BUS_ADDRESS, BUS_NAME_A, BUS_POSITION_A, BUS_NAME_B, BUS_POSITION_B, BUS_QR_CODE, BUS_STATUS, PAR_NO, PAR_PARTICULAR, PAR_MFO_PAP, PAR_UACS_OBJECT_CODE, PAR_AMOUNT, PAR_ISDOLLAR, PAR_STATUS, CUR_SYMBOL, CUR_DESCRIPTION}
            rowVWG3_REG_BUSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVWG3_REG_BUSRow)
            Return rowVWG3_REG_BUSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VWG3_REG_BUSDataTable = CType(MyBase.Clone,VWG3_REG_BUSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VWG3_REG_BUSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBUS_NO_SYSTEM = MyBase.Columns("BUS_NO_SYSTEM")
            Me.columnHDIVS_CODE = MyBase.Columns("HDIVS_CODE")
            Me.columnEMP_NO = MyBase.Columns("EMP_NO")
            Me.columnBUS_DATE = MyBase.Columns("BUS_DATE")
            Me.columnBUS_PAYEE = MyBase.Columns("BUS_PAYEE")
            Me.columnBUS_OFFICE = MyBase.Columns("BUS_OFFICE")
            Me.columnBUS_ADDRESS = MyBase.Columns("BUS_ADDRESS")
            Me.columnBUS_NAME_A = MyBase.Columns("BUS_NAME_A")
            Me.columnBUS_POSITION_A = MyBase.Columns("BUS_POSITION_A")
            Me.columnBUS_NAME_B = MyBase.Columns("BUS_NAME_B")
            Me.columnBUS_POSITION_B = MyBase.Columns("BUS_POSITION_B")
            Me.columnBUS_QR_CODE = MyBase.Columns("BUS_QR_CODE")
            Me.columnBUS_STATUS = MyBase.Columns("BUS_STATUS")
            Me.columnPAR_NO = MyBase.Columns("PAR_NO")
            Me.columnPAR_PARTICULAR = MyBase.Columns("PAR_PARTICULAR")
            Me.columnPAR_MFO_PAP = MyBase.Columns("PAR_MFO_PAP")
            Me.columnPAR_UACS_OBJECT_CODE = MyBase.Columns("PAR_UACS_OBJECT_CODE")
            Me.columnPAR_AMOUNT = MyBase.Columns("PAR_AMOUNT")
            Me.columnPAR_ISDOLLAR = MyBase.Columns("PAR_ISDOLLAR")
            Me.columnPAR_STATUS = MyBase.Columns("PAR_STATUS")
            Me.columnCUR_SYMBOL = MyBase.Columns("CUR_SYMBOL")
            Me.columnCUR_DESCRIPTION = MyBase.Columns("CUR_DESCRIPTION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBUS_NO_SYSTEM = New Global.System.Data.DataColumn("BUS_NO_SYSTEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_NO_SYSTEM)
            Me.columnHDIVS_CODE = New Global.System.Data.DataColumn("HDIVS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDIVS_CODE)
            Me.columnEMP_NO = New Global.System.Data.DataColumn("EMP_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_NO)
            Me.columnBUS_DATE = New Global.System.Data.DataColumn("BUS_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_DATE)
            Me.columnBUS_PAYEE = New Global.System.Data.DataColumn("BUS_PAYEE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_PAYEE)
            Me.columnBUS_OFFICE = New Global.System.Data.DataColumn("BUS_OFFICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_OFFICE)
            Me.columnBUS_ADDRESS = New Global.System.Data.DataColumn("BUS_ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_ADDRESS)
            Me.columnBUS_NAME_A = New Global.System.Data.DataColumn("BUS_NAME_A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_NAME_A)
            Me.columnBUS_POSITION_A = New Global.System.Data.DataColumn("BUS_POSITION_A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_POSITION_A)
            Me.columnBUS_NAME_B = New Global.System.Data.DataColumn("BUS_NAME_B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_NAME_B)
            Me.columnBUS_POSITION_B = New Global.System.Data.DataColumn("BUS_POSITION_B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_POSITION_B)
            Me.columnBUS_QR_CODE = New Global.System.Data.DataColumn("BUS_QR_CODE", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_QR_CODE)
            Me.columnBUS_STATUS = New Global.System.Data.DataColumn("BUS_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_STATUS)
            Me.columnPAR_NO = New Global.System.Data.DataColumn("PAR_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_NO)
            Me.columnPAR_PARTICULAR = New Global.System.Data.DataColumn("PAR_PARTICULAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_PARTICULAR)
            Me.columnPAR_MFO_PAP = New Global.System.Data.DataColumn("PAR_MFO_PAP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_MFO_PAP)
            Me.columnPAR_UACS_OBJECT_CODE = New Global.System.Data.DataColumn("PAR_UACS_OBJECT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_UACS_OBJECT_CODE)
            Me.columnPAR_AMOUNT = New Global.System.Data.DataColumn("PAR_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_AMOUNT)
            Me.columnPAR_ISDOLLAR = New Global.System.Data.DataColumn("PAR_ISDOLLAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_ISDOLLAR)
            Me.columnPAR_STATUS = New Global.System.Data.DataColumn("PAR_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_STATUS)
            Me.columnCUR_SYMBOL = New Global.System.Data.DataColumn("CUR_SYMBOL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUR_SYMBOL)
            Me.columnCUR_DESCRIPTION = New Global.System.Data.DataColumn("CUR_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUR_DESCRIPTION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnBUS_NO_SYSTEM, Me.columnPAR_NO}, false))
            Me.columnBUS_NO_SYSTEM.AllowDBNull = false
            Me.columnBUS_NO_SYSTEM.MaxLength = 50
            Me.columnHDIVS_CODE.MaxLength = 20
            Me.columnEMP_NO.MaxLength = 20
            Me.columnBUS_PAYEE.MaxLength = 2147483647
            Me.columnBUS_OFFICE.MaxLength = 2147483647
            Me.columnBUS_ADDRESS.MaxLength = 2147483647
            Me.columnBUS_NAME_A.MaxLength = 50
            Me.columnBUS_POSITION_A.MaxLength = 50
            Me.columnBUS_NAME_B.MaxLength = 50
            Me.columnBUS_POSITION_B.MaxLength = 50
            Me.columnPAR_PARTICULAR.MaxLength = 2147483647
            Me.columnPAR_MFO_PAP.MaxLength = 50
            Me.columnPAR_UACS_OBJECT_CODE.MaxLength = 50
            Me.columnPAR_ISDOLLAR.MaxLength = 20
            Me.columnCUR_SYMBOL.MaxLength = 50
            Me.columnCUR_DESCRIPTION.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewVWG3_REG_BUSRow() As VWG3_REG_BUSRow
            Return CType(Me.NewRow,VWG3_REG_BUSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VWG3_REG_BUSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VWG3_REG_BUSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VWG3_REG_BUSRowChangedEvent) Is Nothing) Then
                RaiseEvent VWG3_REG_BUSRowChanged(Me, New VWG3_REG_BUSRowChangeEvent(CType(e.Row,VWG3_REG_BUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VWG3_REG_BUSRowChangingEvent) Is Nothing) Then
                RaiseEvent VWG3_REG_BUSRowChanging(Me, New VWG3_REG_BUSRowChangeEvent(CType(e.Row,VWG3_REG_BUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VWG3_REG_BUSRowDeletedEvent) Is Nothing) Then
                RaiseEvent VWG3_REG_BUSRowDeleted(Me, New VWG3_REG_BUSRowChangeEvent(CType(e.Row,VWG3_REG_BUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VWG3_REG_BUSRowDeletingEvent) Is Nothing) Then
                RaiseEvent VWG3_REG_BUSRowDeleting(Me, New VWG3_REG_BUSRowChangeEvent(CType(e.Row,VWG3_REG_BUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveVWG3_REG_BUSRow(ByVal row As VWG3_REG_BUSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VWG3_REG_BUSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPM4_PRCODEDataTable
        Inherits Global.System.Data.TypedTableBase(Of SPM4_PRCODERow)
        
        Private columnPR_No_ As Global.System.Data.DataColumn
        
        Private columnColumn1 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPM4_PRCODE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_No_Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_No_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPM4_PRCODERow
            Get
                Return CType(Me.Rows(index),SPM4_PRCODERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PRCODERowChanging As SPM4_PRCODERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PRCODERowChanged As SPM4_PRCODERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PRCODERowDeleting As SPM4_PRCODERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PRCODERowDeleted As SPM4_PRCODERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddSPM4_PRCODERow(ByVal row As SPM4_PRCODERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddSPM4_PRCODERow(ByVal PR_No_ As String, ByVal Column1 As String) As SPM4_PRCODERow
            Dim rowSPM4_PRCODERow As SPM4_PRCODERow = CType(Me.NewRow,SPM4_PRCODERow)
            Dim columnValuesArray() As Object = New Object() {PR_No_, Column1}
            rowSPM4_PRCODERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSPM4_PRCODERow)
            Return rowSPM4_PRCODERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SPM4_PRCODEDataTable = CType(MyBase.Clone,SPM4_PRCODEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SPM4_PRCODEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPR_No_ = MyBase.Columns("PR No_")
            Me.columnColumn1 = MyBase.Columns("Column1")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPR_No_ = New Global.System.Data.DataColumn("PR No_", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_No_)
            Me.columnColumn1 = New Global.System.Data.DataColumn("Column1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn1)
            Me.columnPR_No_.ReadOnly = true
            Me.columnPR_No_.Caption = "PR No."
            Me.columnPR_No_.MaxLength = 4000
            Me.columnColumn1.ReadOnly = true
            Me.columnColumn1.MaxLength = 4000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewSPM4_PRCODERow() As SPM4_PRCODERow
            Return CType(Me.NewRow,SPM4_PRCODERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SPM4_PRCODERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SPM4_PRCODERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPM4_PRCODERowChangedEvent) Is Nothing) Then
                RaiseEvent SPM4_PRCODERowChanged(Me, New SPM4_PRCODERowChangeEvent(CType(e.Row,SPM4_PRCODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPM4_PRCODERowChangingEvent) Is Nothing) Then
                RaiseEvent SPM4_PRCODERowChanging(Me, New SPM4_PRCODERowChangeEvent(CType(e.Row,SPM4_PRCODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPM4_PRCODERowDeletedEvent) Is Nothing) Then
                RaiseEvent SPM4_PRCODERowDeleted(Me, New SPM4_PRCODERowChangeEvent(CType(e.Row,SPM4_PRCODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPM4_PRCODERowDeletingEvent) Is Nothing) Then
                RaiseEvent SPM4_PRCODERowDeleting(Me, New SPM4_PRCODERowChangeEvent(CType(e.Row,SPM4_PRCODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveSPM4_PRCODERow(ByVal row As SPM4_PRCODERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPM4_PRCODEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPM4_CURRENTDATETIMEDataTable
        Inherits Global.System.Data.TypedTableBase(Of SPM4_CURRENTDATETIMERow)
        
        Private columnColumn1 As Global.System.Data.DataColumn
        
        Private columndatenow As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPM4_CURRENTDATETIME"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property datenowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndatenow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPM4_CURRENTDATETIMERow
            Get
                Return CType(Me.Rows(index),SPM4_CURRENTDATETIMERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_CURRENTDATETIMERowChanging As SPM4_CURRENTDATETIMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_CURRENTDATETIMERowChanged As SPM4_CURRENTDATETIMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_CURRENTDATETIMERowDeleting As SPM4_CURRENTDATETIMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_CURRENTDATETIMERowDeleted As SPM4_CURRENTDATETIMERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddSPM4_CURRENTDATETIMERow(ByVal row As SPM4_CURRENTDATETIMERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddSPM4_CURRENTDATETIMERow(ByVal Column1 As Date, ByVal datenow As String) As SPM4_CURRENTDATETIMERow
            Dim rowSPM4_CURRENTDATETIMERow As SPM4_CURRENTDATETIMERow = CType(Me.NewRow,SPM4_CURRENTDATETIMERow)
            Dim columnValuesArray() As Object = New Object() {Column1, datenow}
            rowSPM4_CURRENTDATETIMERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSPM4_CURRENTDATETIMERow)
            Return rowSPM4_CURRENTDATETIMERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SPM4_CURRENTDATETIMEDataTable = CType(MyBase.Clone,SPM4_CURRENTDATETIMEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SPM4_CURRENTDATETIMEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnColumn1 = MyBase.Columns("Column1")
            Me.columndatenow = MyBase.Columns("datenow")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnColumn1 = New Global.System.Data.DataColumn("Column1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn1)
            Me.columndatenow = New Global.System.Data.DataColumn("datenow", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndatenow)
            Me.columnColumn1.ReadOnly = true
            Me.columndatenow.ReadOnly = true
            Me.columndatenow.MaxLength = 4000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewSPM4_CURRENTDATETIMERow() As SPM4_CURRENTDATETIMERow
            Return CType(Me.NewRow,SPM4_CURRENTDATETIMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SPM4_CURRENTDATETIMERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SPM4_CURRENTDATETIMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPM4_CURRENTDATETIMERowChangedEvent) Is Nothing) Then
                RaiseEvent SPM4_CURRENTDATETIMERowChanged(Me, New SPM4_CURRENTDATETIMERowChangeEvent(CType(e.Row,SPM4_CURRENTDATETIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPM4_CURRENTDATETIMERowChangingEvent) Is Nothing) Then
                RaiseEvent SPM4_CURRENTDATETIMERowChanging(Me, New SPM4_CURRENTDATETIMERowChangeEvent(CType(e.Row,SPM4_CURRENTDATETIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPM4_CURRENTDATETIMERowDeletedEvent) Is Nothing) Then
                RaiseEvent SPM4_CURRENTDATETIMERowDeleted(Me, New SPM4_CURRENTDATETIMERowChangeEvent(CType(e.Row,SPM4_CURRENTDATETIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPM4_CURRENTDATETIMERowDeletingEvent) Is Nothing) Then
                RaiseEvent SPM4_CURRENTDATETIMERowDeleting(Me, New SPM4_CURRENTDATETIMERowChangeEvent(CType(e.Row,SPM4_CURRENTDATETIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveSPM4_CURRENTDATETIMERow(ByVal row As SPM4_CURRENTDATETIMERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPM4_CURRENTDATETIMEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBLG3_SIGNATORY1DataTable
        Inherits Global.System.Data.TypedTableBase(Of TBLG3_SIGNATORY1Row)
        
        Private columnfullname As Global.System.Data.DataColumn
        
        Private columnSIG_POSITION As Global.System.Data.DataColumn
        
        Private columnSIG_NO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBLG3_SIGNATORY1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property fullnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfullname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_POSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_POSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SIG_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIG_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBLG3_SIGNATORY1Row
            Get
                Return CType(Me.Rows(index),TBLG3_SIGNATORY1Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_SIGNATORY1RowChanging As TBLG3_SIGNATORY1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_SIGNATORY1RowChanged As TBLG3_SIGNATORY1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_SIGNATORY1RowDeleting As TBLG3_SIGNATORY1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TBLG3_SIGNATORY1RowDeleted As TBLG3_SIGNATORY1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTBLG3_SIGNATORY1Row(ByVal row As TBLG3_SIGNATORY1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTBLG3_SIGNATORY1Row(ByVal fullname As String, ByVal SIG_POSITION As String) As TBLG3_SIGNATORY1Row
            Dim rowTBLG3_SIGNATORY1Row As TBLG3_SIGNATORY1Row = CType(Me.NewRow,TBLG3_SIGNATORY1Row)
            Dim columnValuesArray() As Object = New Object() {fullname, SIG_POSITION, Nothing}
            rowTBLG3_SIGNATORY1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBLG3_SIGNATORY1Row)
            Return rowTBLG3_SIGNATORY1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindBySIG_NO(ByVal SIG_NO As Integer) As TBLG3_SIGNATORY1Row
            Return CType(Me.Rows.Find(New Object() {SIG_NO}),TBLG3_SIGNATORY1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBLG3_SIGNATORY1DataTable = CType(MyBase.Clone,TBLG3_SIGNATORY1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBLG3_SIGNATORY1DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnfullname = MyBase.Columns("fullname")
            Me.columnSIG_POSITION = MyBase.Columns("SIG_POSITION")
            Me.columnSIG_NO = MyBase.Columns("SIG_NO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnfullname = New Global.System.Data.DataColumn("fullname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfullname)
            Me.columnSIG_POSITION = New Global.System.Data.DataColumn("SIG_POSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_POSITION)
            Me.columnSIG_NO = New Global.System.Data.DataColumn("SIG_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIG_NO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSIG_NO}, true))
            Me.columnfullname.ReadOnly = true
            Me.columnfullname.MaxLength = 105
            Me.columnSIG_POSITION.MaxLength = 50
            Me.columnSIG_NO.AutoIncrement = true
            Me.columnSIG_NO.AutoIncrementSeed = -1
            Me.columnSIG_NO.AutoIncrementStep = -1
            Me.columnSIG_NO.AllowDBNull = false
            Me.columnSIG_NO.ReadOnly = true
            Me.columnSIG_NO.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTBLG3_SIGNATORY1Row() As TBLG3_SIGNATORY1Row
            Return CType(Me.NewRow,TBLG3_SIGNATORY1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBLG3_SIGNATORY1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBLG3_SIGNATORY1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBLG3_SIGNATORY1RowChangedEvent) Is Nothing) Then
                RaiseEvent TBLG3_SIGNATORY1RowChanged(Me, New TBLG3_SIGNATORY1RowChangeEvent(CType(e.Row,TBLG3_SIGNATORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBLG3_SIGNATORY1RowChangingEvent) Is Nothing) Then
                RaiseEvent TBLG3_SIGNATORY1RowChanging(Me, New TBLG3_SIGNATORY1RowChangeEvent(CType(e.Row,TBLG3_SIGNATORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBLG3_SIGNATORY1RowDeletedEvent) Is Nothing) Then
                RaiseEvent TBLG3_SIGNATORY1RowDeleted(Me, New TBLG3_SIGNATORY1RowChangeEvent(CType(e.Row,TBLG3_SIGNATORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBLG3_SIGNATORY1RowDeletingEvent) Is Nothing) Then
                RaiseEvent TBLG3_SIGNATORY1RowDeleting(Me, New TBLG3_SIGNATORY1RowChangeEvent(CType(e.Row,TBLG3_SIGNATORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTBLG3_SIGNATORY1Row(ByVal row As TBLG3_SIGNATORY1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBLG3_SIGNATORY1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPM4_GETPR_INFODataTable
        Inherits Global.System.Data.TypedTableBase(Of SPM4_GETPR_INFORow)
        
        Private columnPR_PRNO As Global.System.Data.DataColumn
        
        Private columnPR_DATEREQUESTED As Global.System.Data.DataColumn
        
        Private columnPR_APPCODE As Global.System.Data.DataColumn
        
        Private columnPR_PURPOSE As Global.System.Data.DataColumn
        
        Private columnPR_REQUESTEDBY As Global.System.Data.DataColumn
        
        Private columnPR_REQUESTEDBYPOSITION As Global.System.Data.DataColumn
        
        Private columnPR_APPROVEDBY As Global.System.Data.DataColumn
        
        Private columnPR_APPROVEDBYPOSITION As Global.System.Data.DataColumn
        
        Private columnPR_CERTIFIEDBY As Global.System.Data.DataColumn
        
        Private columnPR_CERTIFIEDBYPOSITION As Global.System.Data.DataColumn
        
        Private columnPR_NOTEDBY As Global.System.Data.DataColumn
        
        Private columnPR_NOTEDBYPOSITION As Global.System.Data.DataColumn
        
        Private columnPR_SUBMITTEDBY As Global.System.Data.DataColumn
        
        Private columnPR_DEPARTMENT As Global.System.Data.DataColumn
        
        Private columnPR_DIVISION As Global.System.Data.DataColumn
        
        Private columnPR_QUANTITY As Global.System.Data.DataColumn
        
        Private columnPR_UNITISSUE As Global.System.Data.DataColumn
        
        Private columnPRI_ITEMDESCRIPTION As Global.System.Data.DataColumn
        
        Private columnPR_STOCKNO As Global.System.Data.DataColumn
        
        Private columnPR_ESTIMATEDUNITCOST As Global.System.Data.DataColumn
        
        Private columnPR_ESTIMATEDCOST As Global.System.Data.DataColumn
        
        Private columnimg As Global.System.Data.DataColumn
        
        Private columnPR_ISDOLLAR As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPM4_GETPR_INFO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_PRNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_PRNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_DATEREQUESTEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_DATEREQUESTED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_APPCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_APPCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_PURPOSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_PURPOSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_REQUESTEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_REQUESTEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_REQUESTEDBYPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_REQUESTEDBYPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_APPROVEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_APPROVEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_APPROVEDBYPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_APPROVEDBYPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_CERTIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_CERTIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_CERTIFIEDBYPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_CERTIFIEDBYPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_NOTEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_NOTEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_NOTEDBYPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_NOTEDBYPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_SUBMITTEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_SUBMITTEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_DEPARTMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_DEPARTMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_DIVISIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_DIVISION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_QUANTITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_QUANTITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_UNITISSUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_UNITISSUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRI_ITEMDESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRI_ITEMDESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_STOCKNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_STOCKNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_ESTIMATEDUNITCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_ESTIMATEDUNITCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_ESTIMATEDCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_ESTIMATEDCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property imgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_ISDOLLARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_ISDOLLAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPM4_GETPR_INFORow
            Get
                Return CType(Me.Rows(index),SPM4_GETPR_INFORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_GETPR_INFORowChanging As SPM4_GETPR_INFORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_GETPR_INFORowChanged As SPM4_GETPR_INFORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_GETPR_INFORowDeleting As SPM4_GETPR_INFORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_GETPR_INFORowDeleted As SPM4_GETPR_INFORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddSPM4_GETPR_INFORow(ByVal row As SPM4_GETPR_INFORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddSPM4_GETPR_INFORow( _
                    ByVal PR_PRNO As String,  _
                    ByVal PR_DATEREQUESTED As Date,  _
                    ByVal PR_APPCODE As String,  _
                    ByVal PR_PURPOSE As String,  _
                    ByVal PR_REQUESTEDBY As String,  _
                    ByVal PR_REQUESTEDBYPOSITION As String,  _
                    ByVal PR_APPROVEDBY As String,  _
                    ByVal PR_APPROVEDBYPOSITION As String,  _
                    ByVal PR_CERTIFIEDBY As String,  _
                    ByVal PR_CERTIFIEDBYPOSITION As String,  _
                    ByVal PR_NOTEDBY As String,  _
                    ByVal PR_NOTEDBYPOSITION As String,  _
                    ByVal PR_SUBMITTEDBY As String,  _
                    ByVal PR_DEPARTMENT As String,  _
                    ByVal PR_DIVISION As String,  _
                    ByVal PR_QUANTITY As Integer,  _
                    ByVal PR_UNITISSUE As String,  _
                    ByVal PRI_ITEMDESCRIPTION As String,  _
                    ByVal PR_STOCKNO As String,  _
                    ByVal PR_ESTIMATEDUNITCOST As Decimal,  _
                    ByVal PR_ESTIMATEDCOST As Decimal,  _
                    ByVal img() As Byte,  _
                    ByVal PR_ISDOLLAR As Boolean) As SPM4_GETPR_INFORow
            Dim rowSPM4_GETPR_INFORow As SPM4_GETPR_INFORow = CType(Me.NewRow,SPM4_GETPR_INFORow)
            Dim columnValuesArray() As Object = New Object() {PR_PRNO, PR_DATEREQUESTED, PR_APPCODE, PR_PURPOSE, PR_REQUESTEDBY, PR_REQUESTEDBYPOSITION, PR_APPROVEDBY, PR_APPROVEDBYPOSITION, PR_CERTIFIEDBY, PR_CERTIFIEDBYPOSITION, PR_NOTEDBY, PR_NOTEDBYPOSITION, PR_SUBMITTEDBY, PR_DEPARTMENT, PR_DIVISION, PR_QUANTITY, PR_UNITISSUE, PRI_ITEMDESCRIPTION, PR_STOCKNO, PR_ESTIMATEDUNITCOST, PR_ESTIMATEDCOST, img, PR_ISDOLLAR}
            rowSPM4_GETPR_INFORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSPM4_GETPR_INFORow)
            Return rowSPM4_GETPR_INFORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByPR_PRNO(ByVal PR_PRNO As String) As SPM4_GETPR_INFORow
            Return CType(Me.Rows.Find(New Object() {PR_PRNO}),SPM4_GETPR_INFORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SPM4_GETPR_INFODataTable = CType(MyBase.Clone,SPM4_GETPR_INFODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SPM4_GETPR_INFODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPR_PRNO = MyBase.Columns("PR_PRNO")
            Me.columnPR_DATEREQUESTED = MyBase.Columns("PR_DATEREQUESTED")
            Me.columnPR_APPCODE = MyBase.Columns("PR_APPCODE")
            Me.columnPR_PURPOSE = MyBase.Columns("PR_PURPOSE")
            Me.columnPR_REQUESTEDBY = MyBase.Columns("PR_REQUESTEDBY")
            Me.columnPR_REQUESTEDBYPOSITION = MyBase.Columns("PR_REQUESTEDBYPOSITION")
            Me.columnPR_APPROVEDBY = MyBase.Columns("PR_APPROVEDBY")
            Me.columnPR_APPROVEDBYPOSITION = MyBase.Columns("PR_APPROVEDBYPOSITION")
            Me.columnPR_CERTIFIEDBY = MyBase.Columns("PR_CERTIFIEDBY")
            Me.columnPR_CERTIFIEDBYPOSITION = MyBase.Columns("PR_CERTIFIEDBYPOSITION")
            Me.columnPR_NOTEDBY = MyBase.Columns("PR_NOTEDBY")
            Me.columnPR_NOTEDBYPOSITION = MyBase.Columns("PR_NOTEDBYPOSITION")
            Me.columnPR_SUBMITTEDBY = MyBase.Columns("PR_SUBMITTEDBY")
            Me.columnPR_DEPARTMENT = MyBase.Columns("PR_DEPARTMENT")
            Me.columnPR_DIVISION = MyBase.Columns("PR_DIVISION")
            Me.columnPR_QUANTITY = MyBase.Columns("PR_QUANTITY")
            Me.columnPR_UNITISSUE = MyBase.Columns("PR_UNITISSUE")
            Me.columnPRI_ITEMDESCRIPTION = MyBase.Columns("PRI_ITEMDESCRIPTION")
            Me.columnPR_STOCKNO = MyBase.Columns("PR_STOCKNO")
            Me.columnPR_ESTIMATEDUNITCOST = MyBase.Columns("PR_ESTIMATEDUNITCOST")
            Me.columnPR_ESTIMATEDCOST = MyBase.Columns("PR_ESTIMATEDCOST")
            Me.columnimg = MyBase.Columns("img")
            Me.columnPR_ISDOLLAR = MyBase.Columns("PR_ISDOLLAR")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPR_PRNO = New Global.System.Data.DataColumn("PR_PRNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_PRNO)
            Me.columnPR_DATEREQUESTED = New Global.System.Data.DataColumn("PR_DATEREQUESTED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_DATEREQUESTED)
            Me.columnPR_APPCODE = New Global.System.Data.DataColumn("PR_APPCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_APPCODE)
            Me.columnPR_PURPOSE = New Global.System.Data.DataColumn("PR_PURPOSE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_PURPOSE)
            Me.columnPR_REQUESTEDBY = New Global.System.Data.DataColumn("PR_REQUESTEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_REQUESTEDBY)
            Me.columnPR_REQUESTEDBYPOSITION = New Global.System.Data.DataColumn("PR_REQUESTEDBYPOSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_REQUESTEDBYPOSITION)
            Me.columnPR_APPROVEDBY = New Global.System.Data.DataColumn("PR_APPROVEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_APPROVEDBY)
            Me.columnPR_APPROVEDBYPOSITION = New Global.System.Data.DataColumn("PR_APPROVEDBYPOSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_APPROVEDBYPOSITION)
            Me.columnPR_CERTIFIEDBY = New Global.System.Data.DataColumn("PR_CERTIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_CERTIFIEDBY)
            Me.columnPR_CERTIFIEDBYPOSITION = New Global.System.Data.DataColumn("PR_CERTIFIEDBYPOSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_CERTIFIEDBYPOSITION)
            Me.columnPR_NOTEDBY = New Global.System.Data.DataColumn("PR_NOTEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_NOTEDBY)
            Me.columnPR_NOTEDBYPOSITION = New Global.System.Data.DataColumn("PR_NOTEDBYPOSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_NOTEDBYPOSITION)
            Me.columnPR_SUBMITTEDBY = New Global.System.Data.DataColumn("PR_SUBMITTEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_SUBMITTEDBY)
            Me.columnPR_DEPARTMENT = New Global.System.Data.DataColumn("PR_DEPARTMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_DEPARTMENT)
            Me.columnPR_DIVISION = New Global.System.Data.DataColumn("PR_DIVISION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_DIVISION)
            Me.columnPR_QUANTITY = New Global.System.Data.DataColumn("PR_QUANTITY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_QUANTITY)
            Me.columnPR_UNITISSUE = New Global.System.Data.DataColumn("PR_UNITISSUE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_UNITISSUE)
            Me.columnPRI_ITEMDESCRIPTION = New Global.System.Data.DataColumn("PRI_ITEMDESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRI_ITEMDESCRIPTION)
            Me.columnPR_STOCKNO = New Global.System.Data.DataColumn("PR_STOCKNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_STOCKNO)
            Me.columnPR_ESTIMATEDUNITCOST = New Global.System.Data.DataColumn("PR_ESTIMATEDUNITCOST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_ESTIMATEDUNITCOST)
            Me.columnPR_ESTIMATEDCOST = New Global.System.Data.DataColumn("PR_ESTIMATEDCOST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_ESTIMATEDCOST)
            Me.columnimg = New Global.System.Data.DataColumn("img", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimg)
            Me.columnPR_ISDOLLAR = New Global.System.Data.DataColumn("PR_ISDOLLAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_ISDOLLAR)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPR_PRNO}, true))
            Me.columnPR_PRNO.AllowDBNull = false
            Me.columnPR_PRNO.Unique = true
            Me.columnPR_PRNO.MaxLength = 20
            Me.columnPR_DATEREQUESTED.AllowDBNull = false
            Me.columnPR_APPCODE.MaxLength = 20
            Me.columnPR_PURPOSE.MaxLength = 300
            Me.columnPR_REQUESTEDBY.AllowDBNull = false
            Me.columnPR_REQUESTEDBY.MaxLength = 100
            Me.columnPR_REQUESTEDBYPOSITION.MaxLength = 100
            Me.columnPR_APPROVEDBY.MaxLength = 100
            Me.columnPR_APPROVEDBYPOSITION.MaxLength = 100
            Me.columnPR_CERTIFIEDBY.MaxLength = 100
            Me.columnPR_CERTIFIEDBYPOSITION.MaxLength = 100
            Me.columnPR_NOTEDBY.MaxLength = 100
            Me.columnPR_NOTEDBYPOSITION.MaxLength = 100
            Me.columnPR_SUBMITTEDBY.MaxLength = 50
            Me.columnPR_DEPARTMENT.MaxLength = 100
            Me.columnPR_DIVISION.MaxLength = 100
            Me.columnPR_UNITISSUE.MaxLength = 30
            Me.columnPRI_ITEMDESCRIPTION.MaxLength = 2000
            Me.columnPR_STOCKNO.MaxLength = 30
            Me.columnimg.ReadOnly = true
            Me.columnPR_ISDOLLAR.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewSPM4_GETPR_INFORow() As SPM4_GETPR_INFORow
            Return CType(Me.NewRow,SPM4_GETPR_INFORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SPM4_GETPR_INFORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SPM4_GETPR_INFORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPM4_GETPR_INFORowChangedEvent) Is Nothing) Then
                RaiseEvent SPM4_GETPR_INFORowChanged(Me, New SPM4_GETPR_INFORowChangeEvent(CType(e.Row,SPM4_GETPR_INFORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPM4_GETPR_INFORowChangingEvent) Is Nothing) Then
                RaiseEvent SPM4_GETPR_INFORowChanging(Me, New SPM4_GETPR_INFORowChangeEvent(CType(e.Row,SPM4_GETPR_INFORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPM4_GETPR_INFORowDeletedEvent) Is Nothing) Then
                RaiseEvent SPM4_GETPR_INFORowDeleted(Me, New SPM4_GETPR_INFORowChangeEvent(CType(e.Row,SPM4_GETPR_INFORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPM4_GETPR_INFORowDeletingEvent) Is Nothing) Then
                RaiseEvent SPM4_GETPR_INFORowDeleting(Me, New SPM4_GETPR_INFORowChangeEvent(CType(e.Row,SPM4_GETPR_INFORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveSPM4_GETPR_INFORow(ByVal row As SPM4_GETPR_INFORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPM4_GETPR_INFODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_CATEGORY1DataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_CATEGORY1Row)
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnCategory_Code As Global.System.Data.DataColumn
        
        Private columnCategory_Name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_CATEGORY1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Category_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategory_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Category_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategory_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_CATEGORY1Row
            Get
                Return CType(Me.Rows(index),tblM4_CATEGORY1Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_CATEGORY1RowChanging As tblM4_CATEGORY1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_CATEGORY1RowChanged As tblM4_CATEGORY1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_CATEGORY1RowDeleting As tblM4_CATEGORY1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_CATEGORY1RowDeleted As tblM4_CATEGORY1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_CATEGORY1Row(ByVal row As tblM4_CATEGORY1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_CATEGORY1Row(ByVal Status As String, ByVal Category_Code As String, ByVal Category_Name As String) As tblM4_CATEGORY1Row
            Dim rowtblM4_CATEGORY1Row As tblM4_CATEGORY1Row = CType(Me.NewRow,tblM4_CATEGORY1Row)
            Dim columnValuesArray() As Object = New Object() {Status, Category_Code, Category_Name}
            rowtblM4_CATEGORY1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_CATEGORY1Row)
            Return rowtblM4_CATEGORY1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByCategory_Code(ByVal Category_Code As String) As tblM4_CATEGORY1Row
            Return CType(Me.Rows.Find(New Object() {Category_Code}),tblM4_CATEGORY1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_CATEGORY1DataTable = CType(MyBase.Clone,tblM4_CATEGORY1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_CATEGORY1DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnCategory_Code = MyBase.Columns("Category Code")
            Me.columnCategory_Name = MyBase.Columns("Category Name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnCategory_Code = New Global.System.Data.DataColumn("Category Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategory_Code)
            Me.columnCategory_Name = New Global.System.Data.DataColumn("Category Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategory_Name)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCategory_Code}, true))
            Me.columnStatus.ReadOnly = true
            Me.columnStatus.MaxLength = 8
            Me.columnCategory_Code.AllowDBNull = false
            Me.columnCategory_Code.Unique = true
            Me.columnCategory_Code.MaxLength = 50
            Me.columnCategory_Name.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_CATEGORY1Row() As tblM4_CATEGORY1Row
            Return CType(Me.NewRow,tblM4_CATEGORY1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_CATEGORY1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_CATEGORY1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_CATEGORY1RowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_CATEGORY1RowChanged(Me, New tblM4_CATEGORY1RowChangeEvent(CType(e.Row,tblM4_CATEGORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_CATEGORY1RowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_CATEGORY1RowChanging(Me, New tblM4_CATEGORY1RowChangeEvent(CType(e.Row,tblM4_CATEGORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_CATEGORY1RowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_CATEGORY1RowDeleted(Me, New tblM4_CATEGORY1RowChangeEvent(CType(e.Row,tblM4_CATEGORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_CATEGORY1RowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_CATEGORY1RowDeleting(Me, New tblM4_CATEGORY1RowChangeEvent(CType(e.Row,tblM4_CATEGORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_CATEGORY1Row(ByVal row As tblM4_CATEGORY1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_CATEGORY1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_ITEMBRAND1DataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_ITEMBRAND1Row)
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnItem_Brand_No_ As Global.System.Data.DataColumn
        
        Private columnBrand_Name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_ITEMBRAND1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Item_Brand_No_Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Brand_No_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Brand_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrand_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_ITEMBRAND1Row
            Get
                Return CType(Me.Rows(index),tblM4_ITEMBRAND1Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_ITEMBRAND1RowChanging As tblM4_ITEMBRAND1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_ITEMBRAND1RowChanged As tblM4_ITEMBRAND1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_ITEMBRAND1RowDeleting As tblM4_ITEMBRAND1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_ITEMBRAND1RowDeleted As tblM4_ITEMBRAND1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_ITEMBRAND1Row(ByVal row As tblM4_ITEMBRAND1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_ITEMBRAND1Row(ByVal Status As String, ByVal Brand_Name As String) As tblM4_ITEMBRAND1Row
            Dim rowtblM4_ITEMBRAND1Row As tblM4_ITEMBRAND1Row = CType(Me.NewRow,tblM4_ITEMBRAND1Row)
            Dim columnValuesArray() As Object = New Object() {Status, Nothing, Brand_Name}
            rowtblM4_ITEMBRAND1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_ITEMBRAND1Row)
            Return rowtblM4_ITEMBRAND1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByItem_Brand_No_(ByVal Item_Brand_No_ As Integer) As tblM4_ITEMBRAND1Row
            Return CType(Me.Rows.Find(New Object() {Item_Brand_No_}),tblM4_ITEMBRAND1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_ITEMBRAND1DataTable = CType(MyBase.Clone,tblM4_ITEMBRAND1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_ITEMBRAND1DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnItem_Brand_No_ = MyBase.Columns("Item Brand No_")
            Me.columnBrand_Name = MyBase.Columns("Brand Name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnItem_Brand_No_ = New Global.System.Data.DataColumn("Item Brand No_", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Brand_No_)
            Me.columnBrand_Name = New Global.System.Data.DataColumn("Brand Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrand_Name)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnItem_Brand_No_}, true))
            Me.columnStatus.ReadOnly = true
            Me.columnStatus.MaxLength = 8
            Me.columnItem_Brand_No_.AutoIncrement = true
            Me.columnItem_Brand_No_.AutoIncrementSeed = -1
            Me.columnItem_Brand_No_.AutoIncrementStep = -1
            Me.columnItem_Brand_No_.AllowDBNull = false
            Me.columnItem_Brand_No_.ReadOnly = true
            Me.columnItem_Brand_No_.Unique = true
            Me.columnItem_Brand_No_.Caption = "Item Brand No."
            Me.columnBrand_Name.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_ITEMBRAND1Row() As tblM4_ITEMBRAND1Row
            Return CType(Me.NewRow,tblM4_ITEMBRAND1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_ITEMBRAND1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_ITEMBRAND1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_ITEMBRAND1RowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_ITEMBRAND1RowChanged(Me, New tblM4_ITEMBRAND1RowChangeEvent(CType(e.Row,tblM4_ITEMBRAND1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_ITEMBRAND1RowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_ITEMBRAND1RowChanging(Me, New tblM4_ITEMBRAND1RowChangeEvent(CType(e.Row,tblM4_ITEMBRAND1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_ITEMBRAND1RowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_ITEMBRAND1RowDeleted(Me, New tblM4_ITEMBRAND1RowChangeEvent(CType(e.Row,tblM4_ITEMBRAND1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_ITEMBRAND1RowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_ITEMBRAND1RowDeleting(Me, New tblM4_ITEMBRAND1RowChangeEvent(CType(e.Row,tblM4_ITEMBRAND1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_ITEMBRAND1Row(ByVal row As tblM4_ITEMBRAND1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_ITEMBRAND1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_SUB_CATEGORY1DataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_SUB_CATEGORY1Row)
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnSC_No_ As Global.System.Data.DataColumn
        
        Private columnCategory_Name As Global.System.Data.DataColumn
        
        Private _columnSub_Category_Name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_SUB_CATEGORY1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SC_No_Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSC_No_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Category_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategory_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Sub_Category_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnSub_Category_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_SUB_CATEGORY1Row
            Get
                Return CType(Me.Rows(index),tblM4_SUB_CATEGORY1Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_SUB_CATEGORY1RowChanging As tblM4_SUB_CATEGORY1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_SUB_CATEGORY1RowChanged As tblM4_SUB_CATEGORY1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_SUB_CATEGORY1RowDeleting As tblM4_SUB_CATEGORY1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_SUB_CATEGORY1RowDeleted As tblM4_SUB_CATEGORY1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_SUB_CATEGORY1Row(ByVal row As tblM4_SUB_CATEGORY1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_SUB_CATEGORY1Row(ByVal Status As String, ByVal Category_Name As String, ByVal _Sub_Category_Name As String) As tblM4_SUB_CATEGORY1Row
            Dim rowtblM4_SUB_CATEGORY1Row As tblM4_SUB_CATEGORY1Row = CType(Me.NewRow,tblM4_SUB_CATEGORY1Row)
            Dim columnValuesArray() As Object = New Object() {Status, Nothing, Category_Name, _Sub_Category_Name}
            rowtblM4_SUB_CATEGORY1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_SUB_CATEGORY1Row)
            Return rowtblM4_SUB_CATEGORY1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindBySC_No_(ByVal SC_No_ As Integer) As tblM4_SUB_CATEGORY1Row
            Return CType(Me.Rows.Find(New Object() {SC_No_}),tblM4_SUB_CATEGORY1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_SUB_CATEGORY1DataTable = CType(MyBase.Clone,tblM4_SUB_CATEGORY1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_SUB_CATEGORY1DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnSC_No_ = MyBase.Columns("SC No_")
            Me.columnCategory_Name = MyBase.Columns("Category Name")
            Me._columnSub_Category_Name = MyBase.Columns("Sub-Category Name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnSC_No_ = New Global.System.Data.DataColumn("SC No_", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSC_No_)
            Me.columnCategory_Name = New Global.System.Data.DataColumn("Category Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategory_Name)
            Me._columnSub_Category_Name = New Global.System.Data.DataColumn("Sub-Category Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnSub_Category_Name.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSub_Category_Name")
            Me._columnSub_Category_Name.ExtendedProperties.Add("Generator_UserColumnName", "Sub-Category Name")
            MyBase.Columns.Add(Me._columnSub_Category_Name)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSC_No_}, true))
            Me.columnStatus.ReadOnly = true
            Me.columnStatus.MaxLength = 8
            Me.columnSC_No_.AutoIncrement = true
            Me.columnSC_No_.AutoIncrementSeed = -1
            Me.columnSC_No_.AutoIncrementStep = -1
            Me.columnSC_No_.AllowDBNull = false
            Me.columnSC_No_.ReadOnly = true
            Me.columnSC_No_.Unique = true
            Me.columnSC_No_.Caption = "SC No."
            Me.columnCategory_Name.MaxLength = 2147483647
            Me._columnSub_Category_Name.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_SUB_CATEGORY1Row() As tblM4_SUB_CATEGORY1Row
            Return CType(Me.NewRow,tblM4_SUB_CATEGORY1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_SUB_CATEGORY1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_SUB_CATEGORY1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_SUB_CATEGORY1RowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_SUB_CATEGORY1RowChanged(Me, New tblM4_SUB_CATEGORY1RowChangeEvent(CType(e.Row,tblM4_SUB_CATEGORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_SUB_CATEGORY1RowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_SUB_CATEGORY1RowChanging(Me, New tblM4_SUB_CATEGORY1RowChangeEvent(CType(e.Row,tblM4_SUB_CATEGORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_SUB_CATEGORY1RowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_SUB_CATEGORY1RowDeleted(Me, New tblM4_SUB_CATEGORY1RowChangeEvent(CType(e.Row,tblM4_SUB_CATEGORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_SUB_CATEGORY1RowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_SUB_CATEGORY1RowDeleting(Me, New tblM4_SUB_CATEGORY1RowChangeEvent(CType(e.Row,tblM4_SUB_CATEGORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_SUB_CATEGORY1Row(ByVal row As tblM4_SUB_CATEGORY1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_SUB_CATEGORY1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPM4_INVENTORY_REPORTDataTable
        Inherits Global.System.Data.TypedTableBase(Of SPM4_INVENTORY_REPORTRow)
        
        Private columnCategory As Global.System.Data.DataColumn
        
        Private columnSub_Category As Global.System.Data.DataColumn
        
        Private _columnBrand_Provider As Global.System.Data.DataColumn
        
        Private columnItem_Description As Global.System.Data.DataColumn
        
        Private columnUnit_Type As Global.System.Data.DataColumn
        
        Private columnUnit_Cost As Global.System.Data.DataColumn
        
        Private columnTotal_Cost As Global.System.Data.DataColumn
        
        Private columnQuantity As Global.System.Data.DataColumn
        
        Private columnDate_Encoded As Global.System.Data.DataColumn
        
        Private columnProperty_No_ As Global.System.Data.DataColumn
        
        Private columnSerial_No_ As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPM4_INVENTORY_REPORT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CategoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategory
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sub_CategoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSub_Category
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Brand_ProviderColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnBrand_Provider
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Item_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Unit_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnit_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Unit_CostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnit_Cost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Total_CostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Cost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property QuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Date_EncodedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Encoded
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Property_No_Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProperty_No_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Serial_No_Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerial_No_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPM4_INVENTORY_REPORTRow
            Get
                Return CType(Me.Rows(index),SPM4_INVENTORY_REPORTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_INVENTORY_REPORTRowChanging As SPM4_INVENTORY_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_INVENTORY_REPORTRowChanged As SPM4_INVENTORY_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_INVENTORY_REPORTRowDeleting As SPM4_INVENTORY_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_INVENTORY_REPORTRowDeleted As SPM4_INVENTORY_REPORTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddSPM4_INVENTORY_REPORTRow(ByVal row As SPM4_INVENTORY_REPORTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddSPM4_INVENTORY_REPORTRow(ByVal Category As String, ByVal Sub_Category As String, ByVal _Brand_Provider As String, ByVal Item_Description As String, ByVal Unit_Type As String, ByVal Unit_Cost As Decimal, ByVal Total_Cost As Decimal, ByVal Quantity As Integer, ByVal Date_Encoded As Date, ByVal Property_No_ As String, ByVal Serial_No_ As String) As SPM4_INVENTORY_REPORTRow
            Dim rowSPM4_INVENTORY_REPORTRow As SPM4_INVENTORY_REPORTRow = CType(Me.NewRow,SPM4_INVENTORY_REPORTRow)
            Dim columnValuesArray() As Object = New Object() {Category, Sub_Category, _Brand_Provider, Item_Description, Unit_Type, Unit_Cost, Total_Cost, Quantity, Date_Encoded, Property_No_, Serial_No_}
            rowSPM4_INVENTORY_REPORTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSPM4_INVENTORY_REPORTRow)
            Return rowSPM4_INVENTORY_REPORTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByProperty_No_(ByVal Property_No_ As String) As SPM4_INVENTORY_REPORTRow
            Return CType(Me.Rows.Find(New Object() {Property_No_}),SPM4_INVENTORY_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SPM4_INVENTORY_REPORTDataTable = CType(MyBase.Clone,SPM4_INVENTORY_REPORTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SPM4_INVENTORY_REPORTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCategory = MyBase.Columns("Category")
            Me.columnSub_Category = MyBase.Columns("Sub Category")
            Me._columnBrand_Provider = MyBase.Columns("Brand/Provider")
            Me.columnItem_Description = MyBase.Columns("Item Description")
            Me.columnUnit_Type = MyBase.Columns("Unit Type")
            Me.columnUnit_Cost = MyBase.Columns("Unit Cost")
            Me.columnTotal_Cost = MyBase.Columns("Total Cost")
            Me.columnQuantity = MyBase.Columns("Quantity")
            Me.columnDate_Encoded = MyBase.Columns("Date Encoded")
            Me.columnProperty_No_ = MyBase.Columns("Property No_")
            Me.columnSerial_No_ = MyBase.Columns("Serial No_")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCategory = New Global.System.Data.DataColumn("Category", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategory)
            Me.columnSub_Category = New Global.System.Data.DataColumn("Sub Category", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSub_Category)
            Me._columnBrand_Provider = New Global.System.Data.DataColumn("Brand/Provider", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnBrand_Provider.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnBrand_Provider")
            Me._columnBrand_Provider.ExtendedProperties.Add("Generator_UserColumnName", "Brand/Provider")
            MyBase.Columns.Add(Me._columnBrand_Provider)
            Me.columnItem_Description = New Global.System.Data.DataColumn("Item Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Description)
            Me.columnUnit_Type = New Global.System.Data.DataColumn("Unit Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnit_Type)
            Me.columnUnit_Cost = New Global.System.Data.DataColumn("Unit Cost", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnit_Cost)
            Me.columnTotal_Cost = New Global.System.Data.DataColumn("Total Cost", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Cost)
            Me.columnQuantity = New Global.System.Data.DataColumn("Quantity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuantity)
            Me.columnDate_Encoded = New Global.System.Data.DataColumn("Date Encoded", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Encoded)
            Me.columnProperty_No_ = New Global.System.Data.DataColumn("Property No_", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProperty_No_)
            Me.columnSerial_No_ = New Global.System.Data.DataColumn("Serial No_", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerial_No_)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnProperty_No_}, true))
            Me.columnCategory.MaxLength = 2147483647
            Me.columnSub_Category.MaxLength = 100
            Me._columnBrand_Provider.MaxLength = 100
            Me.columnItem_Description.AllowDBNull = false
            Me.columnItem_Description.MaxLength = 100
            Me.columnUnit_Type.AllowDBNull = false
            Me.columnUnit_Type.MaxLength = 10
            Me.columnUnit_Cost.AllowDBNull = false
            Me.columnTotal_Cost.AllowDBNull = false
            Me.columnQuantity.AllowDBNull = false
            Me.columnDate_Encoded.AllowDBNull = false
            Me.columnProperty_No_.AllowDBNull = false
            Me.columnProperty_No_.Unique = true
            Me.columnProperty_No_.Caption = "Property No."
            Me.columnProperty_No_.MaxLength = 50
            Me.columnSerial_No_.Caption = "Serial No."
            Me.columnSerial_No_.MaxLength = 40
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewSPM4_INVENTORY_REPORTRow() As SPM4_INVENTORY_REPORTRow
            Return CType(Me.NewRow,SPM4_INVENTORY_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SPM4_INVENTORY_REPORTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SPM4_INVENTORY_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPM4_INVENTORY_REPORTRowChangedEvent) Is Nothing) Then
                RaiseEvent SPM4_INVENTORY_REPORTRowChanged(Me, New SPM4_INVENTORY_REPORTRowChangeEvent(CType(e.Row,SPM4_INVENTORY_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPM4_INVENTORY_REPORTRowChangingEvent) Is Nothing) Then
                RaiseEvent SPM4_INVENTORY_REPORTRowChanging(Me, New SPM4_INVENTORY_REPORTRowChangeEvent(CType(e.Row,SPM4_INVENTORY_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPM4_INVENTORY_REPORTRowDeletedEvent) Is Nothing) Then
                RaiseEvent SPM4_INVENTORY_REPORTRowDeleted(Me, New SPM4_INVENTORY_REPORTRowChangeEvent(CType(e.Row,SPM4_INVENTORY_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPM4_INVENTORY_REPORTRowDeletingEvent) Is Nothing) Then
                RaiseEvent SPM4_INVENTORY_REPORTRowDeleting(Me, New SPM4_INVENTORY_REPORTRowChangeEvent(CType(e.Row,SPM4_INVENTORY_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveSPM4_INVENTORY_REPORTRow(ByVal row As SPM4_INVENTORY_REPORTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPM4_INVENTORY_REPORTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPM4_PROPERTY_NODataTable
        Inherits Global.System.Data.TypedTableBase(Of SPM4_PROPERTY_NORow)
        
        Private columnPROP_NO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPM4_PROPERTY_NO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PROP_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROP_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPM4_PROPERTY_NORow
            Get
                Return CType(Me.Rows(index),SPM4_PROPERTY_NORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PROPERTY_NORowChanging As SPM4_PROPERTY_NORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PROPERTY_NORowChanged As SPM4_PROPERTY_NORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PROPERTY_NORowDeleting As SPM4_PROPERTY_NORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PROPERTY_NORowDeleted As SPM4_PROPERTY_NORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddSPM4_PROPERTY_NORow(ByVal row As SPM4_PROPERTY_NORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddSPM4_PROPERTY_NORow(ByVal PROP_NO As String) As SPM4_PROPERTY_NORow
            Dim rowSPM4_PROPERTY_NORow As SPM4_PROPERTY_NORow = CType(Me.NewRow,SPM4_PROPERTY_NORow)
            Dim columnValuesArray() As Object = New Object() {PROP_NO}
            rowSPM4_PROPERTY_NORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSPM4_PROPERTY_NORow)
            Return rowSPM4_PROPERTY_NORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SPM4_PROPERTY_NODataTable = CType(MyBase.Clone,SPM4_PROPERTY_NODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SPM4_PROPERTY_NODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPROP_NO = MyBase.Columns("PROP_NO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPROP_NO = New Global.System.Data.DataColumn("PROP_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROP_NO)
            Me.columnPROP_NO.ReadOnly = true
            Me.columnPROP_NO.MaxLength = 4000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewSPM4_PROPERTY_NORow() As SPM4_PROPERTY_NORow
            Return CType(Me.NewRow,SPM4_PROPERTY_NORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SPM4_PROPERTY_NORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SPM4_PROPERTY_NORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPM4_PROPERTY_NORowChangedEvent) Is Nothing) Then
                RaiseEvent SPM4_PROPERTY_NORowChanged(Me, New SPM4_PROPERTY_NORowChangeEvent(CType(e.Row,SPM4_PROPERTY_NORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPM4_PROPERTY_NORowChangingEvent) Is Nothing) Then
                RaiseEvent SPM4_PROPERTY_NORowChanging(Me, New SPM4_PROPERTY_NORowChangeEvent(CType(e.Row,SPM4_PROPERTY_NORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPM4_PROPERTY_NORowDeletedEvent) Is Nothing) Then
                RaiseEvent SPM4_PROPERTY_NORowDeleted(Me, New SPM4_PROPERTY_NORowChangeEvent(CType(e.Row,SPM4_PROPERTY_NORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPM4_PROPERTY_NORowDeletingEvent) Is Nothing) Then
                RaiseEvent SPM4_PROPERTY_NORowDeleting(Me, New SPM4_PROPERTY_NORowChangeEvent(CType(e.Row,SPM4_PROPERTY_NORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveSPM4_PROPERTY_NORow(ByVal row As SPM4_PROPERTY_NORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPM4_PROPERTY_NODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_PURCHASEREQUEST_CATEGORYDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_PURCHASEREQUEST_CATEGORYRow)
        
        Private columnPRCAT_NO As Global.System.Data.DataColumn
        
        Private columnPRCAT_CATEGORY_NAME As Global.System.Data.DataColumn
        
        Private columnPRCAT_ISACTIVE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_PURCHASEREQUEST_CATEGORY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRCAT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRCAT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRCAT_CATEGORY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRCAT_CATEGORY_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRCAT_ISACTIVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRCAT_ISACTIVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_PURCHASEREQUEST_CATEGORYRow
            Get
                Return CType(Me.Rows(index),tblM4_PURCHASEREQUEST_CATEGORYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_CATEGORYRowChanging As tblM4_PURCHASEREQUEST_CATEGORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_CATEGORYRowChanged As tblM4_PURCHASEREQUEST_CATEGORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_CATEGORYRowDeleting As tblM4_PURCHASEREQUEST_CATEGORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_CATEGORYRowDeleted As tblM4_PURCHASEREQUEST_CATEGORYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_PURCHASEREQUEST_CATEGORYRow(ByVal row As tblM4_PURCHASEREQUEST_CATEGORYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_PURCHASEREQUEST_CATEGORYRow(ByVal PRCAT_CATEGORY_NAME As String, ByVal PRCAT_ISACTIVE As Boolean) As tblM4_PURCHASEREQUEST_CATEGORYRow
            Dim rowtblM4_PURCHASEREQUEST_CATEGORYRow As tblM4_PURCHASEREQUEST_CATEGORYRow = CType(Me.NewRow,tblM4_PURCHASEREQUEST_CATEGORYRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PRCAT_CATEGORY_NAME, PRCAT_ISACTIVE}
            rowtblM4_PURCHASEREQUEST_CATEGORYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_PURCHASEREQUEST_CATEGORYRow)
            Return rowtblM4_PURCHASEREQUEST_CATEGORYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByPRCAT_NO(ByVal PRCAT_NO As Integer) As tblM4_PURCHASEREQUEST_CATEGORYRow
            Return CType(Me.Rows.Find(New Object() {PRCAT_NO}),tblM4_PURCHASEREQUEST_CATEGORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_PURCHASEREQUEST_CATEGORYDataTable = CType(MyBase.Clone,tblM4_PURCHASEREQUEST_CATEGORYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_PURCHASEREQUEST_CATEGORYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPRCAT_NO = MyBase.Columns("PRCAT_NO")
            Me.columnPRCAT_CATEGORY_NAME = MyBase.Columns("PRCAT_CATEGORY_NAME")
            Me.columnPRCAT_ISACTIVE = MyBase.Columns("PRCAT_ISACTIVE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPRCAT_NO = New Global.System.Data.DataColumn("PRCAT_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRCAT_NO)
            Me.columnPRCAT_CATEGORY_NAME = New Global.System.Data.DataColumn("PRCAT_CATEGORY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRCAT_CATEGORY_NAME)
            Me.columnPRCAT_ISACTIVE = New Global.System.Data.DataColumn("PRCAT_ISACTIVE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRCAT_ISACTIVE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPRCAT_NO}, true))
            Me.columnPRCAT_NO.AutoIncrement = true
            Me.columnPRCAT_NO.AutoIncrementSeed = -1
            Me.columnPRCAT_NO.AutoIncrementStep = -1
            Me.columnPRCAT_NO.AllowDBNull = false
            Me.columnPRCAT_NO.ReadOnly = true
            Me.columnPRCAT_NO.Unique = true
            Me.columnPRCAT_CATEGORY_NAME.AllowDBNull = false
            Me.columnPRCAT_CATEGORY_NAME.MaxLength = 50
            Me.columnPRCAT_ISACTIVE.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_PURCHASEREQUEST_CATEGORYRow() As tblM4_PURCHASEREQUEST_CATEGORYRow
            Return CType(Me.NewRow,tblM4_PURCHASEREQUEST_CATEGORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_PURCHASEREQUEST_CATEGORYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_PURCHASEREQUEST_CATEGORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_CATEGORYRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_CATEGORYRowChanged(Me, New tblM4_PURCHASEREQUEST_CATEGORYRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_CATEGORYRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_CATEGORYRowChanging(Me, New tblM4_PURCHASEREQUEST_CATEGORYRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_CATEGORYRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_CATEGORYRowDeleted(Me, New tblM4_PURCHASEREQUEST_CATEGORYRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_CATEGORYRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_CATEGORYRowDeleting(Me, New tblM4_PURCHASEREQUEST_CATEGORYRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_PURCHASEREQUEST_CATEGORYRow(ByVal row As tblM4_PURCHASEREQUEST_CATEGORYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_PURCHASEREQUEST_CATEGORYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPM4_PURCHASELISTDataTable
        Inherits Global.System.Data.TypedTableBase(Of SPM4_PURCHASELISTRow)
        
        Private columnPR_PRNO As Global.System.Data.DataColumn
        
        Private _columnRemarks_Purpose As Global.System.Data.DataColumn
        
        Private columnStatus_of_Ongoing_PR As Global.System.Data.DataColumn
        
        Private columnPR_STATUS As Global.System.Data.DataColumn
        
        Private columnCREATED_DATE As Global.System.Data.DataColumn
        
        Private columnPR_PRNO1 As Global.System.Data.DataColumn
        
        Private columnMAXDATE As Global.System.Data.DataColumn
        
        Private columnDateCreated As Global.System.Data.DataColumn
        
        Private columnMAXDATE1 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPM4_PURCHASELIST"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_PRNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_PRNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Remarks_PurposeColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnRemarks_Purpose
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Status_of_Ongoing_PRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus_of_Ongoing_PR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_PRNO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_PRNO1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MAXDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAXDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DateCreatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateCreated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MAXDATE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAXDATE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPM4_PURCHASELISTRow
            Get
                Return CType(Me.Rows(index),SPM4_PURCHASELISTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PURCHASELISTRowChanging As SPM4_PURCHASELISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PURCHASELISTRowChanged As SPM4_PURCHASELISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PURCHASELISTRowDeleting As SPM4_PURCHASELISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PURCHASELISTRowDeleted As SPM4_PURCHASELISTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddSPM4_PURCHASELISTRow(ByVal row As SPM4_PURCHASELISTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddSPM4_PURCHASELISTRow(ByVal PR_PRNO As String, ByVal _Remarks_Purpose As String, ByVal Status_of_Ongoing_PR As String, ByVal PR_STATUS As String, ByVal CREATED_DATE As Date, ByVal PR_PRNO1 As String, ByVal MAXDATE As Date, ByVal DateCreated As String, ByVal MAXDATE1 As String) As SPM4_PURCHASELISTRow
            Dim rowSPM4_PURCHASELISTRow As SPM4_PURCHASELISTRow = CType(Me.NewRow,SPM4_PURCHASELISTRow)
            Dim columnValuesArray() As Object = New Object() {PR_PRNO, _Remarks_Purpose, Status_of_Ongoing_PR, PR_STATUS, CREATED_DATE, PR_PRNO1, MAXDATE, DateCreated, MAXDATE1}
            rowSPM4_PURCHASELISTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSPM4_PURCHASELISTRow)
            Return rowSPM4_PURCHASELISTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SPM4_PURCHASELISTDataTable = CType(MyBase.Clone,SPM4_PURCHASELISTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SPM4_PURCHASELISTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPR_PRNO = MyBase.Columns("PR_PRNO")
            Me._columnRemarks_Purpose = MyBase.Columns("Remarks/Purpose")
            Me.columnStatus_of_Ongoing_PR = MyBase.Columns("Status of Ongoing PR")
            Me.columnPR_STATUS = MyBase.Columns("PR_STATUS")
            Me.columnCREATED_DATE = MyBase.Columns("CREATED_DATE")
            Me.columnPR_PRNO1 = MyBase.Columns("PR_PRNO1")
            Me.columnMAXDATE = MyBase.Columns("MAXDATE")
            Me.columnDateCreated = MyBase.Columns("DateCreated")
            Me.columnMAXDATE1 = MyBase.Columns("MAXDATE1")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPR_PRNO = New Global.System.Data.DataColumn("PR_PRNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_PRNO)
            Me._columnRemarks_Purpose = New Global.System.Data.DataColumn("Remarks/Purpose", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnRemarks_Purpose.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnRemarks_Purpose")
            Me._columnRemarks_Purpose.ExtendedProperties.Add("Generator_UserColumnName", "Remarks/Purpose")
            MyBase.Columns.Add(Me._columnRemarks_Purpose)
            Me.columnStatus_of_Ongoing_PR = New Global.System.Data.DataColumn("Status of Ongoing PR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus_of_Ongoing_PR)
            Me.columnPR_STATUS = New Global.System.Data.DataColumn("PR_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_STATUS)
            Me.columnCREATED_DATE = New Global.System.Data.DataColumn("CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATED_DATE)
            Me.columnPR_PRNO1 = New Global.System.Data.DataColumn("PR_PRNO1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_PRNO1)
            Me.columnMAXDATE = New Global.System.Data.DataColumn("MAXDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAXDATE)
            Me.columnDateCreated = New Global.System.Data.DataColumn("DateCreated", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateCreated)
            Me.columnMAXDATE1 = New Global.System.Data.DataColumn("MAXDATE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAXDATE1)
            Me.columnPR_PRNO.ReadOnly = true
            Me.columnPR_PRNO.MaxLength = 20
            Me._columnRemarks_Purpose.ReadOnly = true
            Me._columnRemarks_Purpose.MaxLength = 300
            Me.columnStatus_of_Ongoing_PR.MaxLength = 200
            Me.columnPR_STATUS.MaxLength = 1
            Me.columnCREATED_DATE.ReadOnly = true
            Me.columnPR_PRNO1.ReadOnly = true
            Me.columnPR_PRNO1.MaxLength = 20
            Me.columnMAXDATE.ReadOnly = true
            Me.columnDateCreated.ReadOnly = true
            Me.columnDateCreated.MaxLength = 4000
            Me.columnMAXDATE1.ReadOnly = true
            Me.columnMAXDATE1.Caption = "MAXDATE"
            Me.columnMAXDATE1.MaxLength = 4000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewSPM4_PURCHASELISTRow() As SPM4_PURCHASELISTRow
            Return CType(Me.NewRow,SPM4_PURCHASELISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SPM4_PURCHASELISTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SPM4_PURCHASELISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPM4_PURCHASELISTRowChangedEvent) Is Nothing) Then
                RaiseEvent SPM4_PURCHASELISTRowChanged(Me, New SPM4_PURCHASELISTRowChangeEvent(CType(e.Row,SPM4_PURCHASELISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPM4_PURCHASELISTRowChangingEvent) Is Nothing) Then
                RaiseEvent SPM4_PURCHASELISTRowChanging(Me, New SPM4_PURCHASELISTRowChangeEvent(CType(e.Row,SPM4_PURCHASELISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPM4_PURCHASELISTRowDeletedEvent) Is Nothing) Then
                RaiseEvent SPM4_PURCHASELISTRowDeleted(Me, New SPM4_PURCHASELISTRowChangeEvent(CType(e.Row,SPM4_PURCHASELISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPM4_PURCHASELISTRowDeletingEvent) Is Nothing) Then
                RaiseEvent SPM4_PURCHASELISTRowDeleting(Me, New SPM4_PURCHASELISTRowChangeEvent(CType(e.Row,SPM4_PURCHASELISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveSPM4_PURCHASELISTRow(ByVal row As SPM4_PURCHASELISTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPM4_PURCHASELISTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPM4_PURCHASEREQUEST_STATUSDataTable
        Inherits Global.System.Data.TypedTableBase(Of SPM4_PURCHASEREQUEST_STATUSRow)
        
        Private columnstatus As Global.System.Data.DataColumn
        
        Private columnDate As Global.System.Data.DataColumn
        
        Private columnTime As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPM4_PURCHASEREQUEST_STATUS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPM4_PURCHASEREQUEST_STATUSRow
            Get
                Return CType(Me.Rows(index),SPM4_PURCHASEREQUEST_STATUSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PURCHASEREQUEST_STATUSRowChanging As SPM4_PURCHASEREQUEST_STATUSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PURCHASEREQUEST_STATUSRowChanged As SPM4_PURCHASEREQUEST_STATUSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PURCHASEREQUEST_STATUSRowDeleting As SPM4_PURCHASEREQUEST_STATUSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PURCHASEREQUEST_STATUSRowDeleted As SPM4_PURCHASEREQUEST_STATUSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddSPM4_PURCHASEREQUEST_STATUSRow(ByVal row As SPM4_PURCHASEREQUEST_STATUSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddSPM4_PURCHASEREQUEST_STATUSRow(ByVal status As String, ByVal _Date As String, ByVal Time As String) As SPM4_PURCHASEREQUEST_STATUSRow
            Dim rowSPM4_PURCHASEREQUEST_STATUSRow As SPM4_PURCHASEREQUEST_STATUSRow = CType(Me.NewRow,SPM4_PURCHASEREQUEST_STATUSRow)
            Dim columnValuesArray() As Object = New Object() {status, _Date, Time}
            rowSPM4_PURCHASEREQUEST_STATUSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSPM4_PURCHASEREQUEST_STATUSRow)
            Return rowSPM4_PURCHASEREQUEST_STATUSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SPM4_PURCHASEREQUEST_STATUSDataTable = CType(MyBase.Clone,SPM4_PURCHASEREQUEST_STATUSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SPM4_PURCHASEREQUEST_STATUSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnstatus = MyBase.Columns("status")
            Me.columnDate = MyBase.Columns("Date")
            Me.columnTime = MyBase.Columns("Time")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnstatus = New Global.System.Data.DataColumn("status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstatus)
            Me.columnDate = New Global.System.Data.DataColumn("Date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "DateColumn")
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnDate")
            Me.columnDate.ExtendedProperties.Add("Generator_UserColumnName", "Date")
            MyBase.Columns.Add(Me.columnDate)
            Me.columnTime = New Global.System.Data.DataColumn("Time", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTime)
            Me.columnstatus.MaxLength = 1
            Me.columnDate.MaxLength = 20
            Me.columnTime.MaxLength = 4000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewSPM4_PURCHASEREQUEST_STATUSRow() As SPM4_PURCHASEREQUEST_STATUSRow
            Return CType(Me.NewRow,SPM4_PURCHASEREQUEST_STATUSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SPM4_PURCHASEREQUEST_STATUSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SPM4_PURCHASEREQUEST_STATUSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPM4_PURCHASEREQUEST_STATUSRowChangedEvent) Is Nothing) Then
                RaiseEvent SPM4_PURCHASEREQUEST_STATUSRowChanged(Me, New SPM4_PURCHASEREQUEST_STATUSRowChangeEvent(CType(e.Row,SPM4_PURCHASEREQUEST_STATUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPM4_PURCHASEREQUEST_STATUSRowChangingEvent) Is Nothing) Then
                RaiseEvent SPM4_PURCHASEREQUEST_STATUSRowChanging(Me, New SPM4_PURCHASEREQUEST_STATUSRowChangeEvent(CType(e.Row,SPM4_PURCHASEREQUEST_STATUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPM4_PURCHASEREQUEST_STATUSRowDeletedEvent) Is Nothing) Then
                RaiseEvent SPM4_PURCHASEREQUEST_STATUSRowDeleted(Me, New SPM4_PURCHASEREQUEST_STATUSRowChangeEvent(CType(e.Row,SPM4_PURCHASEREQUEST_STATUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPM4_PURCHASEREQUEST_STATUSRowDeletingEvent) Is Nothing) Then
                RaiseEvent SPM4_PURCHASEREQUEST_STATUSRowDeleting(Me, New SPM4_PURCHASEREQUEST_STATUSRowChangeEvent(CType(e.Row,SPM4_PURCHASEREQUEST_STATUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveSPM4_PURCHASEREQUEST_STATUSRow(ByVal row As SPM4_PURCHASEREQUEST_STATUSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPM4_PURCHASEREQUEST_STATUSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_PURCHASEREQUEST_CANCELEDDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_PURCHASEREQUEST_CANCELEDRow)
        
        Private columnPR_PRNO As Global.System.Data.DataColumn
        
        Private columnCAPR_REMARKS As Global.System.Data.DataColumn
        
        Private columnCAPR_CREATED_BY As Global.System.Data.DataColumn
        
        Private columnCAPR_DATE_CREATED As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_PURCHASEREQUEST_CANCELED"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_PRNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_PRNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CAPR_REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAPR_REMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CAPR_CREATED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAPR_CREATED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CAPR_DATE_CREATEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAPR_DATE_CREATED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_PURCHASEREQUEST_CANCELEDRow
            Get
                Return CType(Me.Rows(index),tblM4_PURCHASEREQUEST_CANCELEDRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_CANCELEDRowChanging As tblM4_PURCHASEREQUEST_CANCELEDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_CANCELEDRowChanged As tblM4_PURCHASEREQUEST_CANCELEDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_CANCELEDRowDeleting As tblM4_PURCHASEREQUEST_CANCELEDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_CANCELEDRowDeleted As tblM4_PURCHASEREQUEST_CANCELEDRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_PURCHASEREQUEST_CANCELEDRow(ByVal row As tblM4_PURCHASEREQUEST_CANCELEDRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_PURCHASEREQUEST_CANCELEDRow(ByVal parenttblM4_PURCHASEREQUESTRowByFK_tblM4_PURCHASEREQUEST_CANCELED_tblM4_PURCHASEREQUEST As tblM4_PURCHASEREQUESTRow, ByVal CAPR_REMARKS As String, ByVal CAPR_CREATED_BY As String, ByVal CAPR_DATE_CREATED As Date) As tblM4_PURCHASEREQUEST_CANCELEDRow
            Dim rowtblM4_PURCHASEREQUEST_CANCELEDRow As tblM4_PURCHASEREQUEST_CANCELEDRow = CType(Me.NewRow,tblM4_PURCHASEREQUEST_CANCELEDRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CAPR_REMARKS, CAPR_CREATED_BY, CAPR_DATE_CREATED}
            If (Not (parenttblM4_PURCHASEREQUESTRowByFK_tblM4_PURCHASEREQUEST_CANCELED_tblM4_PURCHASEREQUEST) Is Nothing) Then
                columnValuesArray(0) = parenttblM4_PURCHASEREQUESTRowByFK_tblM4_PURCHASEREQUEST_CANCELED_tblM4_PURCHASEREQUEST(0)
            End If
            rowtblM4_PURCHASEREQUEST_CANCELEDRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_PURCHASEREQUEST_CANCELEDRow)
            Return rowtblM4_PURCHASEREQUEST_CANCELEDRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByPR_PRNO(ByVal PR_PRNO As String) As tblM4_PURCHASEREQUEST_CANCELEDRow
            Return CType(Me.Rows.Find(New Object() {PR_PRNO}),tblM4_PURCHASEREQUEST_CANCELEDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_PURCHASEREQUEST_CANCELEDDataTable = CType(MyBase.Clone,tblM4_PURCHASEREQUEST_CANCELEDDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_PURCHASEREQUEST_CANCELEDDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPR_PRNO = MyBase.Columns("PR_PRNO")
            Me.columnCAPR_REMARKS = MyBase.Columns("CAPR_REMARKS")
            Me.columnCAPR_CREATED_BY = MyBase.Columns("CAPR_CREATED_BY")
            Me.columnCAPR_DATE_CREATED = MyBase.Columns("CAPR_DATE_CREATED")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPR_PRNO = New Global.System.Data.DataColumn("PR_PRNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_PRNO)
            Me.columnCAPR_REMARKS = New Global.System.Data.DataColumn("CAPR_REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAPR_REMARKS)
            Me.columnCAPR_CREATED_BY = New Global.System.Data.DataColumn("CAPR_CREATED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAPR_CREATED_BY)
            Me.columnCAPR_DATE_CREATED = New Global.System.Data.DataColumn("CAPR_DATE_CREATED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAPR_DATE_CREATED)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPR_PRNO}, true))
            Me.columnPR_PRNO.AllowDBNull = false
            Me.columnPR_PRNO.Unique = true
            Me.columnPR_PRNO.MaxLength = 20
            Me.columnCAPR_REMARKS.MaxLength = 200
            Me.columnCAPR_CREATED_BY.AllowDBNull = false
            Me.columnCAPR_CREATED_BY.MaxLength = 20
            Me.columnCAPR_DATE_CREATED.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_PURCHASEREQUEST_CANCELEDRow() As tblM4_PURCHASEREQUEST_CANCELEDRow
            Return CType(Me.NewRow,tblM4_PURCHASEREQUEST_CANCELEDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_PURCHASEREQUEST_CANCELEDRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_PURCHASEREQUEST_CANCELEDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_CANCELEDRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_CANCELEDRowChanged(Me, New tblM4_PURCHASEREQUEST_CANCELEDRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_CANCELEDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_CANCELEDRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_CANCELEDRowChanging(Me, New tblM4_PURCHASEREQUEST_CANCELEDRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_CANCELEDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_CANCELEDRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_CANCELEDRowDeleted(Me, New tblM4_PURCHASEREQUEST_CANCELEDRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_CANCELEDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_CANCELEDRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_CANCELEDRowDeleting(Me, New tblM4_PURCHASEREQUEST_CANCELEDRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_CANCELEDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_PURCHASEREQUEST_CANCELEDRow(ByVal row As tblM4_PURCHASEREQUEST_CANCELEDRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_PURCHASEREQUEST_CANCELEDDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_PURCHASEREQUEST_REVISIONDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_PURCHASEREQUEST_REVISIONRow)
        
        Private columnPR_PRNO As Global.System.Data.DataColumn
        
        Private columnREPR_QUANTITY_REMARKS As Global.System.Data.DataColumn
        
        Private columnREPR_UNITISSUE_REMARKS As Global.System.Data.DataColumn
        
        Private columnREPR_ITEMDESCRIPTION_REMARKS As Global.System.Data.DataColumn
        
        Private columnREPR_ESTIMATEDUNITCOST_REMARKS As Global.System.Data.DataColumn
        
        Private columnREPR_ESTIMATEDCOST_REMARKS As Global.System.Data.DataColumn
        
        Private columnREPR_CREATED_DATE As Global.System.Data.DataColumn
        
        Private columnREPR_CREATED_BY As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_PURCHASEREQUEST_REVISION"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_PRNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_PRNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property REPR_QUANTITY_REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPR_QUANTITY_REMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property REPR_UNITISSUE_REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPR_UNITISSUE_REMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property REPR_ITEMDESCRIPTION_REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPR_ITEMDESCRIPTION_REMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property REPR_ESTIMATEDUNITCOST_REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPR_ESTIMATEDUNITCOST_REMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property REPR_ESTIMATEDCOST_REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPR_ESTIMATEDCOST_REMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property REPR_CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPR_CREATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property REPR_CREATED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPR_CREATED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_PURCHASEREQUEST_REVISIONRow
            Get
                Return CType(Me.Rows(index),tblM4_PURCHASEREQUEST_REVISIONRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_REVISIONRowChanging As tblM4_PURCHASEREQUEST_REVISIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_REVISIONRowChanged As tblM4_PURCHASEREQUEST_REVISIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_REVISIONRowDeleting As tblM4_PURCHASEREQUEST_REVISIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_REVISIONRowDeleted As tblM4_PURCHASEREQUEST_REVISIONRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_PURCHASEREQUEST_REVISIONRow(ByVal row As tblM4_PURCHASEREQUEST_REVISIONRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_PURCHASEREQUEST_REVISIONRow(ByVal parenttblM4_PURCHASEREQUESTRowByFK_tblM4_PURCHASEREQUEST_REVISION_tblM4_PURCHASEREQUEST As tblM4_PURCHASEREQUESTRow, ByVal REPR_QUANTITY_REMARKS As String, ByVal REPR_UNITISSUE_REMARKS As String, ByVal REPR_ITEMDESCRIPTION_REMARKS As String, ByVal REPR_ESTIMATEDUNITCOST_REMARKS As String, ByVal REPR_ESTIMATEDCOST_REMARKS As String, ByVal REPR_CREATED_DATE As Date, ByVal REPR_CREATED_BY As String) As tblM4_PURCHASEREQUEST_REVISIONRow
            Dim rowtblM4_PURCHASEREQUEST_REVISIONRow As tblM4_PURCHASEREQUEST_REVISIONRow = CType(Me.NewRow,tblM4_PURCHASEREQUEST_REVISIONRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, REPR_QUANTITY_REMARKS, REPR_UNITISSUE_REMARKS, REPR_ITEMDESCRIPTION_REMARKS, REPR_ESTIMATEDUNITCOST_REMARKS, REPR_ESTIMATEDCOST_REMARKS, REPR_CREATED_DATE, REPR_CREATED_BY}
            If (Not (parenttblM4_PURCHASEREQUESTRowByFK_tblM4_PURCHASEREQUEST_REVISION_tblM4_PURCHASEREQUEST) Is Nothing) Then
                columnValuesArray(0) = parenttblM4_PURCHASEREQUESTRowByFK_tblM4_PURCHASEREQUEST_REVISION_tblM4_PURCHASEREQUEST(0)
            End If
            rowtblM4_PURCHASEREQUEST_REVISIONRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_PURCHASEREQUEST_REVISIONRow)
            Return rowtblM4_PURCHASEREQUEST_REVISIONRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByPR_PRNO(ByVal PR_PRNO As String) As tblM4_PURCHASEREQUEST_REVISIONRow
            Return CType(Me.Rows.Find(New Object() {PR_PRNO}),tblM4_PURCHASEREQUEST_REVISIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_PURCHASEREQUEST_REVISIONDataTable = CType(MyBase.Clone,tblM4_PURCHASEREQUEST_REVISIONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_PURCHASEREQUEST_REVISIONDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPR_PRNO = MyBase.Columns("PR_PRNO")
            Me.columnREPR_QUANTITY_REMARKS = MyBase.Columns("REPR_QUANTITY_REMARKS")
            Me.columnREPR_UNITISSUE_REMARKS = MyBase.Columns("REPR_UNITISSUE_REMARKS")
            Me.columnREPR_ITEMDESCRIPTION_REMARKS = MyBase.Columns("REPR_ITEMDESCRIPTION_REMARKS")
            Me.columnREPR_ESTIMATEDUNITCOST_REMARKS = MyBase.Columns("REPR_ESTIMATEDUNITCOST_REMARKS")
            Me.columnREPR_ESTIMATEDCOST_REMARKS = MyBase.Columns("REPR_ESTIMATEDCOST_REMARKS")
            Me.columnREPR_CREATED_DATE = MyBase.Columns("REPR_CREATED_DATE")
            Me.columnREPR_CREATED_BY = MyBase.Columns("REPR_CREATED_BY")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPR_PRNO = New Global.System.Data.DataColumn("PR_PRNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_PRNO)
            Me.columnREPR_QUANTITY_REMARKS = New Global.System.Data.DataColumn("REPR_QUANTITY_REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPR_QUANTITY_REMARKS)
            Me.columnREPR_UNITISSUE_REMARKS = New Global.System.Data.DataColumn("REPR_UNITISSUE_REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPR_UNITISSUE_REMARKS)
            Me.columnREPR_ITEMDESCRIPTION_REMARKS = New Global.System.Data.DataColumn("REPR_ITEMDESCRIPTION_REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPR_ITEMDESCRIPTION_REMARKS)
            Me.columnREPR_ESTIMATEDUNITCOST_REMARKS = New Global.System.Data.DataColumn("REPR_ESTIMATEDUNITCOST_REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPR_ESTIMATEDUNITCOST_REMARKS)
            Me.columnREPR_ESTIMATEDCOST_REMARKS = New Global.System.Data.DataColumn("REPR_ESTIMATEDCOST_REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPR_ESTIMATEDCOST_REMARKS)
            Me.columnREPR_CREATED_DATE = New Global.System.Data.DataColumn("REPR_CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPR_CREATED_DATE)
            Me.columnREPR_CREATED_BY = New Global.System.Data.DataColumn("REPR_CREATED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPR_CREATED_BY)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPR_PRNO}, true))
            Me.columnPR_PRNO.AllowDBNull = false
            Me.columnPR_PRNO.Unique = true
            Me.columnPR_PRNO.MaxLength = 20
            Me.columnREPR_QUANTITY_REMARKS.AllowDBNull = false
            Me.columnREPR_QUANTITY_REMARKS.MaxLength = 200
            Me.columnREPR_UNITISSUE_REMARKS.AllowDBNull = false
            Me.columnREPR_UNITISSUE_REMARKS.MaxLength = 200
            Me.columnREPR_ITEMDESCRIPTION_REMARKS.AllowDBNull = false
            Me.columnREPR_ITEMDESCRIPTION_REMARKS.MaxLength = 200
            Me.columnREPR_ESTIMATEDUNITCOST_REMARKS.AllowDBNull = false
            Me.columnREPR_ESTIMATEDUNITCOST_REMARKS.MaxLength = 200
            Me.columnREPR_ESTIMATEDCOST_REMARKS.AllowDBNull = false
            Me.columnREPR_ESTIMATEDCOST_REMARKS.MaxLength = 200
            Me.columnREPR_CREATED_DATE.AllowDBNull = false
            Me.columnREPR_CREATED_BY.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_PURCHASEREQUEST_REVISIONRow() As tblM4_PURCHASEREQUEST_REVISIONRow
            Return CType(Me.NewRow,tblM4_PURCHASEREQUEST_REVISIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_PURCHASEREQUEST_REVISIONRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_PURCHASEREQUEST_REVISIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_REVISIONRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_REVISIONRowChanged(Me, New tblM4_PURCHASEREQUEST_REVISIONRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_REVISIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_REVISIONRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_REVISIONRowChanging(Me, New tblM4_PURCHASEREQUEST_REVISIONRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_REVISIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_REVISIONRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_REVISIONRowDeleted(Me, New tblM4_PURCHASEREQUEST_REVISIONRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_REVISIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_REVISIONRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_REVISIONRowDeleting(Me, New tblM4_PURCHASEREQUEST_REVISIONRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_REVISIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_PURCHASEREQUEST_REVISIONRow(ByVal row As tblM4_PURCHASEREQUEST_REVISIONRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_PURCHASEREQUEST_REVISIONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_PURCHASEREQUEST_POSTEDDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_PURCHASEREQUEST_POSTEDRow)
        
        Private columnPR_PRNO As Global.System.Data.DataColumn
        
        Private columnPRP_REMARKS As Global.System.Data.DataColumn
        
        Private columnPRP_URL As Global.System.Data.DataColumn
        
        Private columnPRP_CREATED_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_PURCHASEREQUEST_POSTED"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_PRNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_PRNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRP_REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRP_REMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRP_URLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRP_URL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRP_CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRP_CREATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_PURCHASEREQUEST_POSTEDRow
            Get
                Return CType(Me.Rows(index),tblM4_PURCHASEREQUEST_POSTEDRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_POSTEDRowChanging As tblM4_PURCHASEREQUEST_POSTEDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_POSTEDRowChanged As tblM4_PURCHASEREQUEST_POSTEDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_POSTEDRowDeleting As tblM4_PURCHASEREQUEST_POSTEDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_POSTEDRowDeleted As tblM4_PURCHASEREQUEST_POSTEDRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_PURCHASEREQUEST_POSTEDRow(ByVal row As tblM4_PURCHASEREQUEST_POSTEDRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_PURCHASEREQUEST_POSTEDRow(ByVal parenttblM4_PURCHASEREQUESTRowByFK_tblM4_PURCHASEREQUEST_POSTED_tblM4_PURCHASEREQUEST As tblM4_PURCHASEREQUESTRow, ByVal PRP_REMARKS As String, ByVal PRP_URL As String, ByVal PRP_CREATED_DATE As Date) As tblM4_PURCHASEREQUEST_POSTEDRow
            Dim rowtblM4_PURCHASEREQUEST_POSTEDRow As tblM4_PURCHASEREQUEST_POSTEDRow = CType(Me.NewRow,tblM4_PURCHASEREQUEST_POSTEDRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PRP_REMARKS, PRP_URL, PRP_CREATED_DATE}
            If (Not (parenttblM4_PURCHASEREQUESTRowByFK_tblM4_PURCHASEREQUEST_POSTED_tblM4_PURCHASEREQUEST) Is Nothing) Then
                columnValuesArray(0) = parenttblM4_PURCHASEREQUESTRowByFK_tblM4_PURCHASEREQUEST_POSTED_tblM4_PURCHASEREQUEST(0)
            End If
            rowtblM4_PURCHASEREQUEST_POSTEDRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_PURCHASEREQUEST_POSTEDRow)
            Return rowtblM4_PURCHASEREQUEST_POSTEDRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByPR_PRNO(ByVal PR_PRNO As String) As tblM4_PURCHASEREQUEST_POSTEDRow
            Return CType(Me.Rows.Find(New Object() {PR_PRNO}),tblM4_PURCHASEREQUEST_POSTEDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_PURCHASEREQUEST_POSTEDDataTable = CType(MyBase.Clone,tblM4_PURCHASEREQUEST_POSTEDDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_PURCHASEREQUEST_POSTEDDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPR_PRNO = MyBase.Columns("PR_PRNO")
            Me.columnPRP_REMARKS = MyBase.Columns("PRP_REMARKS")
            Me.columnPRP_URL = MyBase.Columns("PRP_URL")
            Me.columnPRP_CREATED_DATE = MyBase.Columns("PRP_CREATED_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPR_PRNO = New Global.System.Data.DataColumn("PR_PRNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_PRNO)
            Me.columnPRP_REMARKS = New Global.System.Data.DataColumn("PRP_REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRP_REMARKS)
            Me.columnPRP_URL = New Global.System.Data.DataColumn("PRP_URL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRP_URL)
            Me.columnPRP_CREATED_DATE = New Global.System.Data.DataColumn("PRP_CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRP_CREATED_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPR_PRNO}, true))
            Me.columnPR_PRNO.AllowDBNull = false
            Me.columnPR_PRNO.Unique = true
            Me.columnPR_PRNO.MaxLength = 20
            Me.columnPRP_REMARKS.AllowDBNull = false
            Me.columnPRP_REMARKS.MaxLength = 300
            Me.columnPRP_URL.MaxLength = 500
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_PURCHASEREQUEST_POSTEDRow() As tblM4_PURCHASEREQUEST_POSTEDRow
            Return CType(Me.NewRow,tblM4_PURCHASEREQUEST_POSTEDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_PURCHASEREQUEST_POSTEDRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_PURCHASEREQUEST_POSTEDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_POSTEDRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_POSTEDRowChanged(Me, New tblM4_PURCHASEREQUEST_POSTEDRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_POSTEDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_POSTEDRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_POSTEDRowChanging(Me, New tblM4_PURCHASEREQUEST_POSTEDRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_POSTEDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_POSTEDRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_POSTEDRowDeleted(Me, New tblM4_PURCHASEREQUEST_POSTEDRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_POSTEDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_POSTEDRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_POSTEDRowDeleting(Me, New tblM4_PURCHASEREQUEST_POSTEDRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_POSTEDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_PURCHASEREQUEST_POSTEDRow(ByVal row As tblM4_PURCHASEREQUEST_POSTEDRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_PURCHASEREQUEST_POSTEDDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_PURCHASEREQUEST_ACCEPTEDDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_PURCHASEREQUEST_ACCEPTEDRow)
        
        Private columnPR_PRNO As Global.System.Data.DataColumn
        
        Private columnPRAC_ACCEPTEDBY As Global.System.Data.DataColumn
        
        Private columnPRAC_DATECREATED As Global.System.Data.DataColumn
        
        Private columnPRCAT_NO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_PURCHASEREQUEST_ACCEPTED"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_PRNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_PRNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRAC_ACCEPTEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRAC_ACCEPTEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRAC_DATECREATEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRAC_DATECREATED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRCAT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRCAT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_PURCHASEREQUEST_ACCEPTEDRow
            Get
                Return CType(Me.Rows(index),tblM4_PURCHASEREQUEST_ACCEPTEDRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_ACCEPTEDRowChanging As tblM4_PURCHASEREQUEST_ACCEPTEDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_ACCEPTEDRowChanged As tblM4_PURCHASEREQUEST_ACCEPTEDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_ACCEPTEDRowDeleting As tblM4_PURCHASEREQUEST_ACCEPTEDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_ACCEPTEDRowDeleted As tblM4_PURCHASEREQUEST_ACCEPTEDRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_PURCHASEREQUEST_ACCEPTEDRow(ByVal row As tblM4_PURCHASEREQUEST_ACCEPTEDRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_PURCHASEREQUEST_ACCEPTEDRow(ByVal parenttblM4_PURCHASEREQUESTRowByFK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST As tblM4_PURCHASEREQUESTRow, ByVal PRAC_ACCEPTEDBY As String, ByVal PRAC_DATECREATED As Date, ByVal parenttblM4_PURCHASEREQUEST_CATEGORYRowByFK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST_CATEGORY As tblM4_PURCHASEREQUEST_CATEGORYRow) As tblM4_PURCHASEREQUEST_ACCEPTEDRow
            Dim rowtblM4_PURCHASEREQUEST_ACCEPTEDRow As tblM4_PURCHASEREQUEST_ACCEPTEDRow = CType(Me.NewRow,tblM4_PURCHASEREQUEST_ACCEPTEDRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PRAC_ACCEPTEDBY, PRAC_DATECREATED, Nothing}
            If (Not (parenttblM4_PURCHASEREQUESTRowByFK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST) Is Nothing) Then
                columnValuesArray(0) = parenttblM4_PURCHASEREQUESTRowByFK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST(0)
            End If
            If (Not (parenttblM4_PURCHASEREQUEST_CATEGORYRowByFK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST_CATEGORY) Is Nothing) Then
                columnValuesArray(3) = parenttblM4_PURCHASEREQUEST_CATEGORYRowByFK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST_CATEGORY(0)
            End If
            rowtblM4_PURCHASEREQUEST_ACCEPTEDRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_PURCHASEREQUEST_ACCEPTEDRow)
            Return rowtblM4_PURCHASEREQUEST_ACCEPTEDRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByPR_PRNO(ByVal PR_PRNO As String) As tblM4_PURCHASEREQUEST_ACCEPTEDRow
            Return CType(Me.Rows.Find(New Object() {PR_PRNO}),tblM4_PURCHASEREQUEST_ACCEPTEDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_PURCHASEREQUEST_ACCEPTEDDataTable = CType(MyBase.Clone,tblM4_PURCHASEREQUEST_ACCEPTEDDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_PURCHASEREQUEST_ACCEPTEDDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPR_PRNO = MyBase.Columns("PR_PRNO")
            Me.columnPRAC_ACCEPTEDBY = MyBase.Columns("PRAC_ACCEPTEDBY")
            Me.columnPRAC_DATECREATED = MyBase.Columns("PRAC_DATECREATED")
            Me.columnPRCAT_NO = MyBase.Columns("PRCAT_NO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPR_PRNO = New Global.System.Data.DataColumn("PR_PRNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_PRNO)
            Me.columnPRAC_ACCEPTEDBY = New Global.System.Data.DataColumn("PRAC_ACCEPTEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRAC_ACCEPTEDBY)
            Me.columnPRAC_DATECREATED = New Global.System.Data.DataColumn("PRAC_DATECREATED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRAC_DATECREATED)
            Me.columnPRCAT_NO = New Global.System.Data.DataColumn("PRCAT_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRCAT_NO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPR_PRNO}, true))
            Me.columnPR_PRNO.AllowDBNull = false
            Me.columnPR_PRNO.Unique = true
            Me.columnPR_PRNO.MaxLength = 20
            Me.columnPRAC_ACCEPTEDBY.AllowDBNull = false
            Me.columnPRAC_ACCEPTEDBY.MaxLength = 30
            Me.columnPRAC_DATECREATED.AllowDBNull = false
            Me.columnPRCAT_NO.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_PURCHASEREQUEST_ACCEPTEDRow() As tblM4_PURCHASEREQUEST_ACCEPTEDRow
            Return CType(Me.NewRow,tblM4_PURCHASEREQUEST_ACCEPTEDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_PURCHASEREQUEST_ACCEPTEDRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_PURCHASEREQUEST_ACCEPTEDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_ACCEPTEDRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_ACCEPTEDRowChanged(Me, New tblM4_PURCHASEREQUEST_ACCEPTEDRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_ACCEPTEDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_ACCEPTEDRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_ACCEPTEDRowChanging(Me, New tblM4_PURCHASEREQUEST_ACCEPTEDRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_ACCEPTEDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_ACCEPTEDRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_ACCEPTEDRowDeleted(Me, New tblM4_PURCHASEREQUEST_ACCEPTEDRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_ACCEPTEDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_ACCEPTEDRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_ACCEPTEDRowDeleting(Me, New tblM4_PURCHASEREQUEST_ACCEPTEDRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_ACCEPTEDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_PURCHASEREQUEST_ACCEPTEDRow(ByVal row As tblM4_PURCHASEREQUEST_ACCEPTEDRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_PURCHASEREQUEST_ACCEPTEDDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_PURCHASEREQUEST_PROVIDERDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_PURCHASEREQUEST_PROVIDERRow)
        
        Private columnPRPR_NO As Global.System.Data.DataColumn
        
        Private columnPRAB_REF_NO As Global.System.Data.DataColumn
        
        Private columnPRPR_CONTACTNO As Global.System.Data.DataColumn
        
        Private columnPRPR_NAME As Global.System.Data.DataColumn
        
        Private columnPRPR_BIDPRICE As Global.System.Data.DataColumn
        
        Private columnPRPR_QUANTITY As Global.System.Data.DataColumn
        
        Private columnPRPR_CREATED_DATE As Global.System.Data.DataColumn
        
        Private columnPRPR_TOTALBIDPRICE As Global.System.Data.DataColumn
        
        Private columnPRPR_IS_LOWEST As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_PURCHASEREQUEST_PROVIDER"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRPR_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRPR_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRAB_REF_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRAB_REF_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRPR_CONTACTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRPR_CONTACTNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRPR_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRPR_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRPR_BIDPRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRPR_BIDPRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRPR_QUANTITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRPR_QUANTITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRPR_CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRPR_CREATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRPR_TOTALBIDPRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRPR_TOTALBIDPRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRPR_IS_LOWESTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRPR_IS_LOWEST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_PURCHASEREQUEST_PROVIDERRow
            Get
                Return CType(Me.Rows(index),tblM4_PURCHASEREQUEST_PROVIDERRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_PROVIDERRowChanging As tblM4_PURCHASEREQUEST_PROVIDERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_PROVIDERRowChanged As tblM4_PURCHASEREQUEST_PROVIDERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_PROVIDERRowDeleting As tblM4_PURCHASEREQUEST_PROVIDERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_PURCHASEREQUEST_PROVIDERRowDeleted As tblM4_PURCHASEREQUEST_PROVIDERRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_PURCHASEREQUEST_PROVIDERRow(ByVal row As tblM4_PURCHASEREQUEST_PROVIDERRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_PURCHASEREQUEST_PROVIDERRow(ByVal PRPR_NO As String, ByVal PRAB_REF_NO As String, ByVal PRPR_CONTACTNO As String, ByVal PRPR_NAME As String, ByVal PRPR_BIDPRICE As Decimal, ByVal PRPR_QUANTITY As Integer, ByVal PRPR_CREATED_DATE As Date, ByVal PRPR_TOTALBIDPRICE As Decimal, ByVal PRPR_IS_LOWEST As Boolean) As tblM4_PURCHASEREQUEST_PROVIDERRow
            Dim rowtblM4_PURCHASEREQUEST_PROVIDERRow As tblM4_PURCHASEREQUEST_PROVIDERRow = CType(Me.NewRow,tblM4_PURCHASEREQUEST_PROVIDERRow)
            Dim columnValuesArray() As Object = New Object() {PRPR_NO, PRAB_REF_NO, PRPR_CONTACTNO, PRPR_NAME, PRPR_BIDPRICE, PRPR_QUANTITY, PRPR_CREATED_DATE, PRPR_TOTALBIDPRICE, PRPR_IS_LOWEST}
            rowtblM4_PURCHASEREQUEST_PROVIDERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_PURCHASEREQUEST_PROVIDERRow)
            Return rowtblM4_PURCHASEREQUEST_PROVIDERRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByPRPR_NO(ByVal PRPR_NO As String) As tblM4_PURCHASEREQUEST_PROVIDERRow
            Return CType(Me.Rows.Find(New Object() {PRPR_NO}),tblM4_PURCHASEREQUEST_PROVIDERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_PURCHASEREQUEST_PROVIDERDataTable = CType(MyBase.Clone,tblM4_PURCHASEREQUEST_PROVIDERDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_PURCHASEREQUEST_PROVIDERDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPRPR_NO = MyBase.Columns("PRPR_NO")
            Me.columnPRAB_REF_NO = MyBase.Columns("PRAB_REF_NO")
            Me.columnPRPR_CONTACTNO = MyBase.Columns("PRPR_CONTACTNO")
            Me.columnPRPR_NAME = MyBase.Columns("PRPR_NAME")
            Me.columnPRPR_BIDPRICE = MyBase.Columns("PRPR_BIDPRICE")
            Me.columnPRPR_QUANTITY = MyBase.Columns("PRPR_QUANTITY")
            Me.columnPRPR_CREATED_DATE = MyBase.Columns("PRPR_CREATED_DATE")
            Me.columnPRPR_TOTALBIDPRICE = MyBase.Columns("PRPR_TOTALBIDPRICE")
            Me.columnPRPR_IS_LOWEST = MyBase.Columns("PRPR_IS_LOWEST")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPRPR_NO = New Global.System.Data.DataColumn("PRPR_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRPR_NO)
            Me.columnPRAB_REF_NO = New Global.System.Data.DataColumn("PRAB_REF_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRAB_REF_NO)
            Me.columnPRPR_CONTACTNO = New Global.System.Data.DataColumn("PRPR_CONTACTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRPR_CONTACTNO)
            Me.columnPRPR_NAME = New Global.System.Data.DataColumn("PRPR_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRPR_NAME)
            Me.columnPRPR_BIDPRICE = New Global.System.Data.DataColumn("PRPR_BIDPRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRPR_BIDPRICE)
            Me.columnPRPR_QUANTITY = New Global.System.Data.DataColumn("PRPR_QUANTITY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRPR_QUANTITY)
            Me.columnPRPR_CREATED_DATE = New Global.System.Data.DataColumn("PRPR_CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRPR_CREATED_DATE)
            Me.columnPRPR_TOTALBIDPRICE = New Global.System.Data.DataColumn("PRPR_TOTALBIDPRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRPR_TOTALBIDPRICE)
            Me.columnPRPR_IS_LOWEST = New Global.System.Data.DataColumn("PRPR_IS_LOWEST", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRPR_IS_LOWEST)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPRPR_NO}, true))
            Me.columnPRPR_NO.AllowDBNull = false
            Me.columnPRPR_NO.Unique = true
            Me.columnPRPR_NO.MaxLength = 20
            Me.columnPRAB_REF_NO.AllowDBNull = false
            Me.columnPRAB_REF_NO.MaxLength = 30
            Me.columnPRPR_CONTACTNO.AllowDBNull = false
            Me.columnPRPR_CONTACTNO.MaxLength = 20
            Me.columnPRPR_NAME.AllowDBNull = false
            Me.columnPRPR_NAME.MaxLength = 100
            Me.columnPRPR_BIDPRICE.AllowDBNull = false
            Me.columnPRPR_QUANTITY.AllowDBNull = false
            Me.columnPRPR_CREATED_DATE.AllowDBNull = false
            Me.columnPRPR_TOTALBIDPRICE.AllowDBNull = false
            Me.columnPRPR_IS_LOWEST.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_PURCHASEREQUEST_PROVIDERRow() As tblM4_PURCHASEREQUEST_PROVIDERRow
            Return CType(Me.NewRow,tblM4_PURCHASEREQUEST_PROVIDERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_PURCHASEREQUEST_PROVIDERRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_PURCHASEREQUEST_PROVIDERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_PROVIDERRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_PROVIDERRowChanged(Me, New tblM4_PURCHASEREQUEST_PROVIDERRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_PROVIDERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_PROVIDERRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_PROVIDERRowChanging(Me, New tblM4_PURCHASEREQUEST_PROVIDERRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_PROVIDERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_PROVIDERRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_PROVIDERRowDeleted(Me, New tblM4_PURCHASEREQUEST_PROVIDERRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_PROVIDERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_PURCHASEREQUEST_PROVIDERRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_PURCHASEREQUEST_PROVIDERRowDeleting(Me, New tblM4_PURCHASEREQUEST_PROVIDERRowChangeEvent(CType(e.Row,tblM4_PURCHASEREQUEST_PROVIDERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_PURCHASEREQUEST_PROVIDERRow(ByVal row As tblM4_PURCHASEREQUEST_PROVIDERRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_PURCHASEREQUEST_PROVIDERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_INVENTORY_ITEMS_LOCATIONDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_INVENTORY_ITEMS_LOCATIONRow)
        
        Private columnLOC_ITEM_CODE As Global.System.Data.DataColumn
        
        Private columnLOC_LOCATION_ID As Global.System.Data.DataColumn
        
        Private columnLOC_CREATED_DATE As Global.System.Data.DataColumn
        
        Private columnLOC_UPDATED_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_INVENTORY_ITEMS_LOCATION"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LOC_ITEM_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOC_ITEM_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LOC_LOCATION_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOC_LOCATION_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LOC_CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOC_CREATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LOC_UPDATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOC_UPDATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_INVENTORY_ITEMS_LOCATIONRow
            Get
                Return CType(Me.Rows(index),tblM4_INVENTORY_ITEMS_LOCATIONRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS_LOCATIONRowChanging As tblM4_INVENTORY_ITEMS_LOCATIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS_LOCATIONRowChanged As tblM4_INVENTORY_ITEMS_LOCATIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS_LOCATIONRowDeleting As tblM4_INVENTORY_ITEMS_LOCATIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS_LOCATIONRowDeleted As tblM4_INVENTORY_ITEMS_LOCATIONRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_INVENTORY_ITEMS_LOCATIONRow(ByVal row As tblM4_INVENTORY_ITEMS_LOCATIONRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_INVENTORY_ITEMS_LOCATIONRow(ByVal LOC_ITEM_CODE As String, ByVal LOC_LOCATION_ID As Integer, ByVal LOC_CREATED_DATE As Date, ByVal LOC_UPDATED_DATE As Date) As tblM4_INVENTORY_ITEMS_LOCATIONRow
            Dim rowtblM4_INVENTORY_ITEMS_LOCATIONRow As tblM4_INVENTORY_ITEMS_LOCATIONRow = CType(Me.NewRow,tblM4_INVENTORY_ITEMS_LOCATIONRow)
            Dim columnValuesArray() As Object = New Object() {LOC_ITEM_CODE, LOC_LOCATION_ID, LOC_CREATED_DATE, LOC_UPDATED_DATE}
            rowtblM4_INVENTORY_ITEMS_LOCATIONRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_INVENTORY_ITEMS_LOCATIONRow)
            Return rowtblM4_INVENTORY_ITEMS_LOCATIONRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByLOC_ITEM_CODE(ByVal LOC_ITEM_CODE As String) As tblM4_INVENTORY_ITEMS_LOCATIONRow
            Return CType(Me.Rows.Find(New Object() {LOC_ITEM_CODE}),tblM4_INVENTORY_ITEMS_LOCATIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_INVENTORY_ITEMS_LOCATIONDataTable = CType(MyBase.Clone,tblM4_INVENTORY_ITEMS_LOCATIONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_INVENTORY_ITEMS_LOCATIONDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnLOC_ITEM_CODE = MyBase.Columns("LOC_ITEM_CODE")
            Me.columnLOC_LOCATION_ID = MyBase.Columns("LOC_LOCATION_ID")
            Me.columnLOC_CREATED_DATE = MyBase.Columns("LOC_CREATED_DATE")
            Me.columnLOC_UPDATED_DATE = MyBase.Columns("LOC_UPDATED_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnLOC_ITEM_CODE = New Global.System.Data.DataColumn("LOC_ITEM_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOC_ITEM_CODE)
            Me.columnLOC_LOCATION_ID = New Global.System.Data.DataColumn("LOC_LOCATION_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOC_LOCATION_ID)
            Me.columnLOC_CREATED_DATE = New Global.System.Data.DataColumn("LOC_CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOC_CREATED_DATE)
            Me.columnLOC_UPDATED_DATE = New Global.System.Data.DataColumn("LOC_UPDATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOC_UPDATED_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnLOC_ITEM_CODE}, true))
            Me.columnLOC_ITEM_CODE.AllowDBNull = false
            Me.columnLOC_ITEM_CODE.Unique = true
            Me.columnLOC_ITEM_CODE.MaxLength = 50
            Me.columnLOC_LOCATION_ID.AllowDBNull = false
            Me.columnLOC_CREATED_DATE.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_INVENTORY_ITEMS_LOCATIONRow() As tblM4_INVENTORY_ITEMS_LOCATIONRow
            Return CType(Me.NewRow,tblM4_INVENTORY_ITEMS_LOCATIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_INVENTORY_ITEMS_LOCATIONRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_INVENTORY_ITEMS_LOCATIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS_LOCATIONRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS_LOCATIONRowChanged(Me, New tblM4_INVENTORY_ITEMS_LOCATIONRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS_LOCATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS_LOCATIONRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS_LOCATIONRowChanging(Me, New tblM4_INVENTORY_ITEMS_LOCATIONRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS_LOCATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS_LOCATIONRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS_LOCATIONRowDeleted(Me, New tblM4_INVENTORY_ITEMS_LOCATIONRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS_LOCATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS_LOCATIONRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS_LOCATIONRowDeleting(Me, New tblM4_INVENTORY_ITEMS_LOCATIONRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS_LOCATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_INVENTORY_ITEMS_LOCATIONRow(ByVal row As tblM4_INVENTORY_ITEMS_LOCATIONRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_INVENTORY_ITEMS_LOCATIONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_INVENTORY_ITEMS_DEFLOCATIONRow)
        
        Private columnLOC_LOCATION_ID As Global.System.Data.DataColumn
        
        Private columnLOC_NAME As Global.System.Data.DataColumn
        
        Private columnLOC_ISACTIVE As Global.System.Data.DataColumn
        
        Private columnLOC_CREATED_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_INVENTORY_ITEMS_DEFLOCATION"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LOC_LOCATION_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOC_LOCATION_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LOC_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOC_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LOC_ISACTIVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOC_ISACTIVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LOC_CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOC_CREATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_INVENTORY_ITEMS_DEFLOCATIONRow
            Get
                Return CType(Me.Rows(index),tblM4_INVENTORY_ITEMS_DEFLOCATIONRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChanging As tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChanged As tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS_DEFLOCATIONRowDeleting As tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS_DEFLOCATIONRowDeleted As tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_INVENTORY_ITEMS_DEFLOCATIONRow(ByVal row As tblM4_INVENTORY_ITEMS_DEFLOCATIONRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_INVENTORY_ITEMS_DEFLOCATIONRow(ByVal LOC_LOCATION_ID As Integer, ByVal LOC_NAME As String, ByVal LOC_ISACTIVE As Boolean, ByVal LOC_CREATED_DATE As Date) As tblM4_INVENTORY_ITEMS_DEFLOCATIONRow
            Dim rowtblM4_INVENTORY_ITEMS_DEFLOCATIONRow As tblM4_INVENTORY_ITEMS_DEFLOCATIONRow = CType(Me.NewRow,tblM4_INVENTORY_ITEMS_DEFLOCATIONRow)
            Dim columnValuesArray() As Object = New Object() {LOC_LOCATION_ID, LOC_NAME, LOC_ISACTIVE, LOC_CREATED_DATE}
            rowtblM4_INVENTORY_ITEMS_DEFLOCATIONRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_INVENTORY_ITEMS_DEFLOCATIONRow)
            Return rowtblM4_INVENTORY_ITEMS_DEFLOCATIONRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByLOC_LOCATION_ID(ByVal LOC_LOCATION_ID As Integer) As tblM4_INVENTORY_ITEMS_DEFLOCATIONRow
            Return CType(Me.Rows.Find(New Object() {LOC_LOCATION_ID}),tblM4_INVENTORY_ITEMS_DEFLOCATIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable = CType(MyBase.Clone,tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnLOC_LOCATION_ID = MyBase.Columns("LOC_LOCATION_ID")
            Me.columnLOC_NAME = MyBase.Columns("LOC_NAME")
            Me.columnLOC_ISACTIVE = MyBase.Columns("LOC_ISACTIVE")
            Me.columnLOC_CREATED_DATE = MyBase.Columns("LOC_CREATED_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnLOC_LOCATION_ID = New Global.System.Data.DataColumn("LOC_LOCATION_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOC_LOCATION_ID)
            Me.columnLOC_NAME = New Global.System.Data.DataColumn("LOC_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOC_NAME)
            Me.columnLOC_ISACTIVE = New Global.System.Data.DataColumn("LOC_ISACTIVE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOC_ISACTIVE)
            Me.columnLOC_CREATED_DATE = New Global.System.Data.DataColumn("LOC_CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOC_CREATED_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnLOC_LOCATION_ID}, true))
            Me.columnLOC_LOCATION_ID.AllowDBNull = false
            Me.columnLOC_LOCATION_ID.Unique = true
            Me.columnLOC_NAME.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_INVENTORY_ITEMS_DEFLOCATIONRow() As tblM4_INVENTORY_ITEMS_DEFLOCATIONRow
            Return CType(Me.NewRow,tblM4_INVENTORY_ITEMS_DEFLOCATIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_INVENTORY_ITEMS_DEFLOCATIONRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_INVENTORY_ITEMS_DEFLOCATIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChanged(Me, New tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS_DEFLOCATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChanging(Me, New tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS_DEFLOCATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS_DEFLOCATIONRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS_DEFLOCATIONRowDeleted(Me, New tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS_DEFLOCATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS_DEFLOCATIONRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS_DEFLOCATIONRowDeleting(Me, New tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS_DEFLOCATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_INVENTORY_ITEMS_DEFLOCATIONRow(ByVal row As tblM4_INVENTORY_ITEMS_DEFLOCATIONRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPM4_INVENTORYDGVLISTDataTable
        Inherits Global.System.Data.TypedTableBase(Of SPM4_INVENTORYDGVLISTRow)
        
        Private columnITEM_CODE As Global.System.Data.DataColumn
        
        Private columnSC_NO As Global.System.Data.DataColumn
        
        Private columnITBR_NO As Global.System.Data.DataColumn
        
        Private columnITEM_SERIAL_NO As Global.System.Data.DataColumn
        
        Private columnITEM_DESCRIPTION As Global.System.Data.DataColumn
        
        Private columnITEM_UNIT As Global.System.Data.DataColumn
        
        Private columnITEM_UNIT_COST As Global.System.Data.DataColumn
        
        Private columnITEM_TOTAL_COST As Global.System.Data.DataColumn
        
        Private columnITEM_QUANTITY As Global.System.Data.DataColumn
        
        Private columnITEM_DATE_AQUISITION As Global.System.Data.DataColumn
        
        Private columnITEM_CREATED_DATE As Global.System.Data.DataColumn
        
        Private columnITEM_UPDATED_DATE As Global.System.Data.DataColumn
        
        Private columnCAT_NAME As Global.System.Data.DataColumn
        
        Private columnSC_SUBCATEGORY_NAME As Global.System.Data.DataColumn
        
        Private columnITBR_NAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPM4_INVENTORYDGVLIST"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SC_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSC_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITBR_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITBR_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_SERIAL_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_SERIAL_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_UNITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_UNIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_UNIT_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_UNIT_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_TOTAL_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_TOTAL_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_QUANTITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_QUANTITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_DATE_AQUISITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_DATE_AQUISITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_CREATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_UPDATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_UPDATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CAT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SC_SUBCATEGORY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSC_SUBCATEGORY_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITBR_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITBR_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPM4_INVENTORYDGVLISTRow
            Get
                Return CType(Me.Rows(index),SPM4_INVENTORYDGVLISTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_INVENTORYDGVLISTRowChanging As SPM4_INVENTORYDGVLISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_INVENTORYDGVLISTRowChanged As SPM4_INVENTORYDGVLISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_INVENTORYDGVLISTRowDeleting As SPM4_INVENTORYDGVLISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_INVENTORYDGVLISTRowDeleted As SPM4_INVENTORYDGVLISTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddSPM4_INVENTORYDGVLISTRow(ByVal row As SPM4_INVENTORYDGVLISTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddSPM4_INVENTORYDGVLISTRow(ByVal ITEM_CODE As String, ByVal SC_NO As String, ByVal ITBR_NO As String, ByVal ITEM_SERIAL_NO As String, ByVal ITEM_DESCRIPTION As String, ByVal ITEM_UNIT As String, ByVal ITEM_UNIT_COST As String, ByVal ITEM_TOTAL_COST As String, ByVal ITEM_QUANTITY As Integer, ByVal ITEM_DATE_AQUISITION As Date, ByVal ITEM_CREATED_DATE As Date, ByVal ITEM_UPDATED_DATE As Date, ByVal CAT_NAME As String, ByVal SC_SUBCATEGORY_NAME As String, ByVal ITBR_NAME As String) As SPM4_INVENTORYDGVLISTRow
            Dim rowSPM4_INVENTORYDGVLISTRow As SPM4_INVENTORYDGVLISTRow = CType(Me.NewRow,SPM4_INVENTORYDGVLISTRow)
            Dim columnValuesArray() As Object = New Object() {ITEM_CODE, SC_NO, ITBR_NO, ITEM_SERIAL_NO, ITEM_DESCRIPTION, ITEM_UNIT, ITEM_UNIT_COST, ITEM_TOTAL_COST, ITEM_QUANTITY, ITEM_DATE_AQUISITION, ITEM_CREATED_DATE, ITEM_UPDATED_DATE, CAT_NAME, SC_SUBCATEGORY_NAME, ITBR_NAME}
            rowSPM4_INVENTORYDGVLISTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSPM4_INVENTORYDGVLISTRow)
            Return rowSPM4_INVENTORYDGVLISTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByITEM_CODE(ByVal ITEM_CODE As String) As SPM4_INVENTORYDGVLISTRow
            Return CType(Me.Rows.Find(New Object() {ITEM_CODE}),SPM4_INVENTORYDGVLISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SPM4_INVENTORYDGVLISTDataTable = CType(MyBase.Clone,SPM4_INVENTORYDGVLISTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SPM4_INVENTORYDGVLISTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnITEM_CODE = MyBase.Columns("ITEM_CODE")
            Me.columnSC_NO = MyBase.Columns("SC_NO")
            Me.columnITBR_NO = MyBase.Columns("ITBR_NO")
            Me.columnITEM_SERIAL_NO = MyBase.Columns("ITEM_SERIAL_NO")
            Me.columnITEM_DESCRIPTION = MyBase.Columns("ITEM_DESCRIPTION")
            Me.columnITEM_UNIT = MyBase.Columns("ITEM_UNIT")
            Me.columnITEM_UNIT_COST = MyBase.Columns("ITEM_UNIT_COST")
            Me.columnITEM_TOTAL_COST = MyBase.Columns("ITEM_TOTAL_COST")
            Me.columnITEM_QUANTITY = MyBase.Columns("ITEM_QUANTITY")
            Me.columnITEM_DATE_AQUISITION = MyBase.Columns("ITEM_DATE_AQUISITION")
            Me.columnITEM_CREATED_DATE = MyBase.Columns("ITEM_CREATED_DATE")
            Me.columnITEM_UPDATED_DATE = MyBase.Columns("ITEM_UPDATED_DATE")
            Me.columnCAT_NAME = MyBase.Columns("CAT_NAME")
            Me.columnSC_SUBCATEGORY_NAME = MyBase.Columns("SC_SUBCATEGORY_NAME")
            Me.columnITBR_NAME = MyBase.Columns("ITBR_NAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnITEM_CODE = New Global.System.Data.DataColumn("ITEM_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_CODE)
            Me.columnSC_NO = New Global.System.Data.DataColumn("SC_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSC_NO)
            Me.columnITBR_NO = New Global.System.Data.DataColumn("ITBR_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITBR_NO)
            Me.columnITEM_SERIAL_NO = New Global.System.Data.DataColumn("ITEM_SERIAL_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_SERIAL_NO)
            Me.columnITEM_DESCRIPTION = New Global.System.Data.DataColumn("ITEM_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_DESCRIPTION)
            Me.columnITEM_UNIT = New Global.System.Data.DataColumn("ITEM_UNIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_UNIT)
            Me.columnITEM_UNIT_COST = New Global.System.Data.DataColumn("ITEM_UNIT_COST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_UNIT_COST)
            Me.columnITEM_TOTAL_COST = New Global.System.Data.DataColumn("ITEM_TOTAL_COST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_TOTAL_COST)
            Me.columnITEM_QUANTITY = New Global.System.Data.DataColumn("ITEM_QUANTITY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_QUANTITY)
            Me.columnITEM_DATE_AQUISITION = New Global.System.Data.DataColumn("ITEM_DATE_AQUISITION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_DATE_AQUISITION)
            Me.columnITEM_CREATED_DATE = New Global.System.Data.DataColumn("ITEM_CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_CREATED_DATE)
            Me.columnITEM_UPDATED_DATE = New Global.System.Data.DataColumn("ITEM_UPDATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_UPDATED_DATE)
            Me.columnCAT_NAME = New Global.System.Data.DataColumn("CAT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAT_NAME)
            Me.columnSC_SUBCATEGORY_NAME = New Global.System.Data.DataColumn("SC_SUBCATEGORY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSC_SUBCATEGORY_NAME)
            Me.columnITBR_NAME = New Global.System.Data.DataColumn("ITBR_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITBR_NAME)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnITEM_CODE}, true))
            Me.columnITEM_CODE.AllowDBNull = false
            Me.columnITEM_CODE.Unique = true
            Me.columnITEM_CODE.MaxLength = 50
            Me.columnSC_NO.AllowDBNull = false
            Me.columnSC_NO.MaxLength = 50
            Me.columnITBR_NO.AllowDBNull = false
            Me.columnITBR_NO.MaxLength = 50
            Me.columnITEM_SERIAL_NO.MaxLength = 40
            Me.columnITEM_DESCRIPTION.AllowDBNull = false
            Me.columnITEM_DESCRIPTION.MaxLength = 100
            Me.columnITEM_UNIT.AllowDBNull = false
            Me.columnITEM_UNIT.MaxLength = 10
            Me.columnITEM_UNIT_COST.ReadOnly = true
            Me.columnITEM_UNIT_COST.MaxLength = 4000
            Me.columnITEM_TOTAL_COST.ReadOnly = true
            Me.columnITEM_TOTAL_COST.MaxLength = 4000
            Me.columnITEM_QUANTITY.AllowDBNull = false
            Me.columnITEM_DATE_AQUISITION.AllowDBNull = false
            Me.columnITEM_CREATED_DATE.AllowDBNull = false
            Me.columnCAT_NAME.MaxLength = 2147483647
            Me.columnSC_SUBCATEGORY_NAME.MaxLength = 100
            Me.columnITBR_NAME.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewSPM4_INVENTORYDGVLISTRow() As SPM4_INVENTORYDGVLISTRow
            Return CType(Me.NewRow,SPM4_INVENTORYDGVLISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SPM4_INVENTORYDGVLISTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SPM4_INVENTORYDGVLISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPM4_INVENTORYDGVLISTRowChangedEvent) Is Nothing) Then
                RaiseEvent SPM4_INVENTORYDGVLISTRowChanged(Me, New SPM4_INVENTORYDGVLISTRowChangeEvent(CType(e.Row,SPM4_INVENTORYDGVLISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPM4_INVENTORYDGVLISTRowChangingEvent) Is Nothing) Then
                RaiseEvent SPM4_INVENTORYDGVLISTRowChanging(Me, New SPM4_INVENTORYDGVLISTRowChangeEvent(CType(e.Row,SPM4_INVENTORYDGVLISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPM4_INVENTORYDGVLISTRowDeletedEvent) Is Nothing) Then
                RaiseEvent SPM4_INVENTORYDGVLISTRowDeleted(Me, New SPM4_INVENTORYDGVLISTRowChangeEvent(CType(e.Row,SPM4_INVENTORYDGVLISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPM4_INVENTORYDGVLISTRowDeletingEvent) Is Nothing) Then
                RaiseEvent SPM4_INVENTORYDGVLISTRowDeleting(Me, New SPM4_INVENTORYDGVLISTRowChangeEvent(CType(e.Row,SPM4_INVENTORYDGVLISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveSPM4_INVENTORYDGVLISTRow(ByVal row As SPM4_INVENTORYDGVLISTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPM4_INVENTORYDGVLISTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_INVENTORY_CATEGORYDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_INVENTORY_CATEGORYRow)
        
        Private columnCAT_CODE As Global.System.Data.DataColumn
        
        Private columnCAT_NAME As Global.System.Data.DataColumn
        
        Private columnCAT_STATUS As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO As Global.System.Data.DataColumn
        
        Private columnCAT_CREATED_DATE As Global.System.Data.DataColumn
        
        Private columnCAT_UPDATED_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_INVENTORY_CATEGORY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CAT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CAT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CAT_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAT_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CAT_CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAT_CREATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CAT_UPDATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAT_UPDATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_INVENTORY_CATEGORYRow
            Get
                Return CType(Me.Rows(index),tblM4_INVENTORY_CATEGORYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_CATEGORYRowChanging As tblM4_INVENTORY_CATEGORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_CATEGORYRowChanged As tblM4_INVENTORY_CATEGORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_CATEGORYRowDeleting As tblM4_INVENTORY_CATEGORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_CATEGORYRowDeleted As tblM4_INVENTORY_CATEGORYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_INVENTORY_CATEGORYRow(ByVal row As tblM4_INVENTORY_CATEGORYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_INVENTORY_CATEGORYRow(ByVal CAT_CODE As String, ByVal CAT_NAME As String, ByVal CAT_STATUS As Integer, ByVal HRIS_EMPNO As String, ByVal CAT_CREATED_DATE As Date, ByVal CAT_UPDATED_DATE As Date) As tblM4_INVENTORY_CATEGORYRow
            Dim rowtblM4_INVENTORY_CATEGORYRow As tblM4_INVENTORY_CATEGORYRow = CType(Me.NewRow,tblM4_INVENTORY_CATEGORYRow)
            Dim columnValuesArray() As Object = New Object() {CAT_CODE, CAT_NAME, CAT_STATUS, HRIS_EMPNO, CAT_CREATED_DATE, CAT_UPDATED_DATE}
            rowtblM4_INVENTORY_CATEGORYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_INVENTORY_CATEGORYRow)
            Return rowtblM4_INVENTORY_CATEGORYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByCAT_CODE(ByVal CAT_CODE As String) As tblM4_INVENTORY_CATEGORYRow
            Return CType(Me.Rows.Find(New Object() {CAT_CODE}),tblM4_INVENTORY_CATEGORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_INVENTORY_CATEGORYDataTable = CType(MyBase.Clone,tblM4_INVENTORY_CATEGORYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_INVENTORY_CATEGORYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCAT_CODE = MyBase.Columns("CAT_CODE")
            Me.columnCAT_NAME = MyBase.Columns("CAT_NAME")
            Me.columnCAT_STATUS = MyBase.Columns("CAT_STATUS")
            Me.columnHRIS_EMPNO = MyBase.Columns("HRIS_EMPNO")
            Me.columnCAT_CREATED_DATE = MyBase.Columns("CAT_CREATED_DATE")
            Me.columnCAT_UPDATED_DATE = MyBase.Columns("CAT_UPDATED_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCAT_CODE = New Global.System.Data.DataColumn("CAT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAT_CODE)
            Me.columnCAT_NAME = New Global.System.Data.DataColumn("CAT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAT_NAME)
            Me.columnCAT_STATUS = New Global.System.Data.DataColumn("CAT_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAT_STATUS)
            Me.columnHRIS_EMPNO = New Global.System.Data.DataColumn("HRIS_EMPNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO)
            Me.columnCAT_CREATED_DATE = New Global.System.Data.DataColumn("CAT_CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAT_CREATED_DATE)
            Me.columnCAT_UPDATED_DATE = New Global.System.Data.DataColumn("CAT_UPDATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAT_UPDATED_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCAT_CODE}, true))
            Me.columnCAT_CODE.AllowDBNull = false
            Me.columnCAT_CODE.Unique = true
            Me.columnCAT_CODE.MaxLength = 50
            Me.columnCAT_NAME.MaxLength = 2147483647
            Me.columnHRIS_EMPNO.MaxLength = 20
            Me.columnCAT_CREATED_DATE.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_INVENTORY_CATEGORYRow() As tblM4_INVENTORY_CATEGORYRow
            Return CType(Me.NewRow,tblM4_INVENTORY_CATEGORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_INVENTORY_CATEGORYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_INVENTORY_CATEGORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_INVENTORY_CATEGORYRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_CATEGORYRowChanged(Me, New tblM4_INVENTORY_CATEGORYRowChangeEvent(CType(e.Row,tblM4_INVENTORY_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_INVENTORY_CATEGORYRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_CATEGORYRowChanging(Me, New tblM4_INVENTORY_CATEGORYRowChangeEvent(CType(e.Row,tblM4_INVENTORY_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_INVENTORY_CATEGORYRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_CATEGORYRowDeleted(Me, New tblM4_INVENTORY_CATEGORYRowChangeEvent(CType(e.Row,tblM4_INVENTORY_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_INVENTORY_CATEGORYRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_CATEGORYRowDeleting(Me, New tblM4_INVENTORY_CATEGORYRowChangeEvent(CType(e.Row,tblM4_INVENTORY_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_INVENTORY_CATEGORYRow(ByVal row As tblM4_INVENTORY_CATEGORYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_INVENTORY_CATEGORYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_INVENTORY_ITEMBRANDDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_INVENTORY_ITEMBRANDRow)
        
        Private columnITBR_NO As Global.System.Data.DataColumn
        
        Private columnITBR_NAME As Global.System.Data.DataColumn
        
        Private columnITBR_CREATED_DATE As Global.System.Data.DataColumn
        
        Private columnITBR_UPDATED_DATE As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO As Global.System.Data.DataColumn
        
        Private columnITBR_STATUS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_INVENTORY_ITEMBRAND"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITBR_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITBR_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITBR_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITBR_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITBR_CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITBR_CREATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITBR_UPDATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITBR_UPDATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITBR_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITBR_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_INVENTORY_ITEMBRANDRow
            Get
                Return CType(Me.Rows(index),tblM4_INVENTORY_ITEMBRANDRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMBRANDRowChanging As tblM4_INVENTORY_ITEMBRANDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMBRANDRowChanged As tblM4_INVENTORY_ITEMBRANDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMBRANDRowDeleting As tblM4_INVENTORY_ITEMBRANDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMBRANDRowDeleted As tblM4_INVENTORY_ITEMBRANDRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_INVENTORY_ITEMBRANDRow(ByVal row As tblM4_INVENTORY_ITEMBRANDRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_INVENTORY_ITEMBRANDRow(ByVal ITBR_NO As String, ByVal ITBR_NAME As String, ByVal ITBR_CREATED_DATE As Date, ByVal ITBR_UPDATED_DATE As Date, ByVal HRIS_EMPNO As String, ByVal ITBR_STATUS As Integer) As tblM4_INVENTORY_ITEMBRANDRow
            Dim rowtblM4_INVENTORY_ITEMBRANDRow As tblM4_INVENTORY_ITEMBRANDRow = CType(Me.NewRow,tblM4_INVENTORY_ITEMBRANDRow)
            Dim columnValuesArray() As Object = New Object() {ITBR_NO, ITBR_NAME, ITBR_CREATED_DATE, ITBR_UPDATED_DATE, HRIS_EMPNO, ITBR_STATUS}
            rowtblM4_INVENTORY_ITEMBRANDRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_INVENTORY_ITEMBRANDRow)
            Return rowtblM4_INVENTORY_ITEMBRANDRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByITBR_NO(ByVal ITBR_NO As String) As tblM4_INVENTORY_ITEMBRANDRow
            Return CType(Me.Rows.Find(New Object() {ITBR_NO}),tblM4_INVENTORY_ITEMBRANDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_INVENTORY_ITEMBRANDDataTable = CType(MyBase.Clone,tblM4_INVENTORY_ITEMBRANDDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_INVENTORY_ITEMBRANDDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnITBR_NO = MyBase.Columns("ITBR_NO")
            Me.columnITBR_NAME = MyBase.Columns("ITBR_NAME")
            Me.columnITBR_CREATED_DATE = MyBase.Columns("ITBR_CREATED_DATE")
            Me.columnITBR_UPDATED_DATE = MyBase.Columns("ITBR_UPDATED_DATE")
            Me.columnHRIS_EMPNO = MyBase.Columns("HRIS_EMPNO")
            Me.columnITBR_STATUS = MyBase.Columns("ITBR_STATUS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnITBR_NO = New Global.System.Data.DataColumn("ITBR_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITBR_NO)
            Me.columnITBR_NAME = New Global.System.Data.DataColumn("ITBR_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITBR_NAME)
            Me.columnITBR_CREATED_DATE = New Global.System.Data.DataColumn("ITBR_CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITBR_CREATED_DATE)
            Me.columnITBR_UPDATED_DATE = New Global.System.Data.DataColumn("ITBR_UPDATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITBR_UPDATED_DATE)
            Me.columnHRIS_EMPNO = New Global.System.Data.DataColumn("HRIS_EMPNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO)
            Me.columnITBR_STATUS = New Global.System.Data.DataColumn("ITBR_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITBR_STATUS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnITBR_NO}, true))
            Me.columnITBR_NO.AllowDBNull = false
            Me.columnITBR_NO.Unique = true
            Me.columnITBR_NO.MaxLength = 50
            Me.columnITBR_NAME.MaxLength = 100
            Me.columnITBR_CREATED_DATE.AllowDBNull = false
            Me.columnHRIS_EMPNO.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_INVENTORY_ITEMBRANDRow() As tblM4_INVENTORY_ITEMBRANDRow
            Return CType(Me.NewRow,tblM4_INVENTORY_ITEMBRANDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_INVENTORY_ITEMBRANDRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_INVENTORY_ITEMBRANDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_INVENTORY_ITEMBRANDRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMBRANDRowChanged(Me, New tblM4_INVENTORY_ITEMBRANDRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMBRANDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_INVENTORY_ITEMBRANDRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMBRANDRowChanging(Me, New tblM4_INVENTORY_ITEMBRANDRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMBRANDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_INVENTORY_ITEMBRANDRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMBRANDRowDeleted(Me, New tblM4_INVENTORY_ITEMBRANDRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMBRANDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_INVENTORY_ITEMBRANDRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMBRANDRowDeleting(Me, New tblM4_INVENTORY_ITEMBRANDRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMBRANDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_INVENTORY_ITEMBRANDRow(ByVal row As tblM4_INVENTORY_ITEMBRANDRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_INVENTORY_ITEMBRANDDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_INVENTORY_ITEMSDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_INVENTORY_ITEMSRow)
        
        Private columnITEM_CODE As Global.System.Data.DataColumn
        
        Private columnSC_NO As Global.System.Data.DataColumn
        
        Private columnITBR_NO As Global.System.Data.DataColumn
        
        Private columnITEM_SERIAL_NO As Global.System.Data.DataColumn
        
        Private columnITEM_DESCRIPTION As Global.System.Data.DataColumn
        
        Private columnITEM_UNIT As Global.System.Data.DataColumn
        
        Private columnITEM_UNIT_COST As Global.System.Data.DataColumn
        
        Private columnITEM_TOTAL_COST As Global.System.Data.DataColumn
        
        Private columnITEM_QUANTITY As Global.System.Data.DataColumn
        
        Private columnITEM_DATE_AQUISITION As Global.System.Data.DataColumn
        
        Private columnITEM_CREATED_DATE As Global.System.Data.DataColumn
        
        Private columnITEM_UPDATED_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_INVENTORY_ITEMS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SC_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSC_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITBR_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITBR_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_SERIAL_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_SERIAL_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_UNITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_UNIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_UNIT_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_UNIT_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_TOTAL_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_TOTAL_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_QUANTITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_QUANTITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_DATE_AQUISITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_DATE_AQUISITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_CREATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_UPDATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_UPDATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_INVENTORY_ITEMSRow
            Get
                Return CType(Me.Rows(index),tblM4_INVENTORY_ITEMSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMSRowChanging As tblM4_INVENTORY_ITEMSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMSRowChanged As tblM4_INVENTORY_ITEMSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMSRowDeleting As tblM4_INVENTORY_ITEMSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMSRowDeleted As tblM4_INVENTORY_ITEMSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_INVENTORY_ITEMSRow(ByVal row As tblM4_INVENTORY_ITEMSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_INVENTORY_ITEMSRow(ByVal ITEM_CODE As String, ByVal parenttblM4_INVENTORY_SUB_CATEGORYRowByFK_tblM4_INVENTORY_ITEMS_tblM4_INVENTORY_ITEMS As tblM4_INVENTORY_SUB_CATEGORYRow, ByVal parenttblM4_INVENTORY_ITEMBRANDRowByFK_tblM4_ITEMS_tblM4_ITEMBRAND As tblM4_INVENTORY_ITEMBRANDRow, ByVal ITEM_SERIAL_NO As String, ByVal ITEM_DESCRIPTION As String, ByVal ITEM_UNIT As String, ByVal ITEM_UNIT_COST As Decimal, ByVal ITEM_TOTAL_COST As Decimal, ByVal ITEM_QUANTITY As Integer, ByVal ITEM_DATE_AQUISITION As Date, ByVal ITEM_CREATED_DATE As Date, ByVal ITEM_UPDATED_DATE As Date) As tblM4_INVENTORY_ITEMSRow
            Dim rowtblM4_INVENTORY_ITEMSRow As tblM4_INVENTORY_ITEMSRow = CType(Me.NewRow,tblM4_INVENTORY_ITEMSRow)
            Dim columnValuesArray() As Object = New Object() {ITEM_CODE, Nothing, Nothing, ITEM_SERIAL_NO, ITEM_DESCRIPTION, ITEM_UNIT, ITEM_UNIT_COST, ITEM_TOTAL_COST, ITEM_QUANTITY, ITEM_DATE_AQUISITION, ITEM_CREATED_DATE, ITEM_UPDATED_DATE}
            If (Not (parenttblM4_INVENTORY_SUB_CATEGORYRowByFK_tblM4_INVENTORY_ITEMS_tblM4_INVENTORY_ITEMS) Is Nothing) Then
                columnValuesArray(1) = parenttblM4_INVENTORY_SUB_CATEGORYRowByFK_tblM4_INVENTORY_ITEMS_tblM4_INVENTORY_ITEMS(0)
            End If
            If (Not (parenttblM4_INVENTORY_ITEMBRANDRowByFK_tblM4_ITEMS_tblM4_ITEMBRAND) Is Nothing) Then
                columnValuesArray(2) = parenttblM4_INVENTORY_ITEMBRANDRowByFK_tblM4_ITEMS_tblM4_ITEMBRAND(0)
            End If
            rowtblM4_INVENTORY_ITEMSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_INVENTORY_ITEMSRow)
            Return rowtblM4_INVENTORY_ITEMSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByITEM_CODE(ByVal ITEM_CODE As String) As tblM4_INVENTORY_ITEMSRow
            Return CType(Me.Rows.Find(New Object() {ITEM_CODE}),tblM4_INVENTORY_ITEMSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_INVENTORY_ITEMSDataTable = CType(MyBase.Clone,tblM4_INVENTORY_ITEMSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_INVENTORY_ITEMSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnITEM_CODE = MyBase.Columns("ITEM_CODE")
            Me.columnSC_NO = MyBase.Columns("SC_NO")
            Me.columnITBR_NO = MyBase.Columns("ITBR_NO")
            Me.columnITEM_SERIAL_NO = MyBase.Columns("ITEM_SERIAL_NO")
            Me.columnITEM_DESCRIPTION = MyBase.Columns("ITEM_DESCRIPTION")
            Me.columnITEM_UNIT = MyBase.Columns("ITEM_UNIT")
            Me.columnITEM_UNIT_COST = MyBase.Columns("ITEM_UNIT_COST")
            Me.columnITEM_TOTAL_COST = MyBase.Columns("ITEM_TOTAL_COST")
            Me.columnITEM_QUANTITY = MyBase.Columns("ITEM_QUANTITY")
            Me.columnITEM_DATE_AQUISITION = MyBase.Columns("ITEM_DATE_AQUISITION")
            Me.columnITEM_CREATED_DATE = MyBase.Columns("ITEM_CREATED_DATE")
            Me.columnITEM_UPDATED_DATE = MyBase.Columns("ITEM_UPDATED_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnITEM_CODE = New Global.System.Data.DataColumn("ITEM_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_CODE)
            Me.columnSC_NO = New Global.System.Data.DataColumn("SC_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSC_NO)
            Me.columnITBR_NO = New Global.System.Data.DataColumn("ITBR_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITBR_NO)
            Me.columnITEM_SERIAL_NO = New Global.System.Data.DataColumn("ITEM_SERIAL_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_SERIAL_NO)
            Me.columnITEM_DESCRIPTION = New Global.System.Data.DataColumn("ITEM_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_DESCRIPTION)
            Me.columnITEM_UNIT = New Global.System.Data.DataColumn("ITEM_UNIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_UNIT)
            Me.columnITEM_UNIT_COST = New Global.System.Data.DataColumn("ITEM_UNIT_COST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_UNIT_COST)
            Me.columnITEM_TOTAL_COST = New Global.System.Data.DataColumn("ITEM_TOTAL_COST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_TOTAL_COST)
            Me.columnITEM_QUANTITY = New Global.System.Data.DataColumn("ITEM_QUANTITY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_QUANTITY)
            Me.columnITEM_DATE_AQUISITION = New Global.System.Data.DataColumn("ITEM_DATE_AQUISITION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_DATE_AQUISITION)
            Me.columnITEM_CREATED_DATE = New Global.System.Data.DataColumn("ITEM_CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_CREATED_DATE)
            Me.columnITEM_UPDATED_DATE = New Global.System.Data.DataColumn("ITEM_UPDATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_UPDATED_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnITEM_CODE}, true))
            Me.columnITEM_CODE.AllowDBNull = false
            Me.columnITEM_CODE.Unique = true
            Me.columnITEM_CODE.MaxLength = 50
            Me.columnSC_NO.AllowDBNull = false
            Me.columnSC_NO.MaxLength = 50
            Me.columnITBR_NO.AllowDBNull = false
            Me.columnITBR_NO.MaxLength = 50
            Me.columnITEM_SERIAL_NO.MaxLength = 40
            Me.columnITEM_DESCRIPTION.AllowDBNull = false
            Me.columnITEM_DESCRIPTION.MaxLength = 100
            Me.columnITEM_UNIT.AllowDBNull = false
            Me.columnITEM_UNIT.MaxLength = 10
            Me.columnITEM_UNIT_COST.AllowDBNull = false
            Me.columnITEM_TOTAL_COST.AllowDBNull = false
            Me.columnITEM_QUANTITY.AllowDBNull = false
            Me.columnITEM_DATE_AQUISITION.AllowDBNull = false
            Me.columnITEM_CREATED_DATE.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_INVENTORY_ITEMSRow() As tblM4_INVENTORY_ITEMSRow
            Return CType(Me.NewRow,tblM4_INVENTORY_ITEMSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_INVENTORY_ITEMSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_INVENTORY_ITEMSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_INVENTORY_ITEMSRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMSRowChanged(Me, New tblM4_INVENTORY_ITEMSRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_INVENTORY_ITEMSRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMSRowChanging(Me, New tblM4_INVENTORY_ITEMSRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_INVENTORY_ITEMSRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMSRowDeleted(Me, New tblM4_INVENTORY_ITEMSRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_INVENTORY_ITEMSRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMSRowDeleting(Me, New tblM4_INVENTORY_ITEMSRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_INVENTORY_ITEMSRow(ByVal row As tblM4_INVENTORY_ITEMSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_INVENTORY_ITEMSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_INVENTORY_SUB_CATEGORYDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_INVENTORY_SUB_CATEGORYRow)
        
        Private columnSC_NO As Global.System.Data.DataColumn
        
        Private columnCAT_CODE As Global.System.Data.DataColumn
        
        Private columnSC_SUBCATEGORY_NAME As Global.System.Data.DataColumn
        
        Private columnSC_STATUS As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO As Global.System.Data.DataColumn
        
        Private columnSC_CREATED_DATE As Global.System.Data.DataColumn
        
        Private columnSC_UPDATED_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_INVENTORY_SUB_CATEGORY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SC_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSC_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CAT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SC_SUBCATEGORY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSC_SUBCATEGORY_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SC_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSC_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SC_CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSC_CREATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SC_UPDATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSC_UPDATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_INVENTORY_SUB_CATEGORYRow
            Get
                Return CType(Me.Rows(index),tblM4_INVENTORY_SUB_CATEGORYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_SUB_CATEGORYRowChanging As tblM4_INVENTORY_SUB_CATEGORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_SUB_CATEGORYRowChanged As tblM4_INVENTORY_SUB_CATEGORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_SUB_CATEGORYRowDeleting As tblM4_INVENTORY_SUB_CATEGORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_SUB_CATEGORYRowDeleted As tblM4_INVENTORY_SUB_CATEGORYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_INVENTORY_SUB_CATEGORYRow(ByVal row As tblM4_INVENTORY_SUB_CATEGORYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_INVENTORY_SUB_CATEGORYRow(ByVal SC_NO As String, ByVal parenttblM4_INVENTORY_CATEGORYRowByFK_tblM4_SUB_CATEGORY_tblM4_CATEGORY As tblM4_INVENTORY_CATEGORYRow, ByVal SC_SUBCATEGORY_NAME As String, ByVal SC_STATUS As Integer, ByVal HRIS_EMPNO As String, ByVal SC_CREATED_DATE As Date, ByVal SC_UPDATED_DATE As Date) As tblM4_INVENTORY_SUB_CATEGORYRow
            Dim rowtblM4_INVENTORY_SUB_CATEGORYRow As tblM4_INVENTORY_SUB_CATEGORYRow = CType(Me.NewRow,tblM4_INVENTORY_SUB_CATEGORYRow)
            Dim columnValuesArray() As Object = New Object() {SC_NO, Nothing, SC_SUBCATEGORY_NAME, SC_STATUS, HRIS_EMPNO, SC_CREATED_DATE, SC_UPDATED_DATE}
            If (Not (parenttblM4_INVENTORY_CATEGORYRowByFK_tblM4_SUB_CATEGORY_tblM4_CATEGORY) Is Nothing) Then
                columnValuesArray(1) = parenttblM4_INVENTORY_CATEGORYRowByFK_tblM4_SUB_CATEGORY_tblM4_CATEGORY(0)
            End If
            rowtblM4_INVENTORY_SUB_CATEGORYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_INVENTORY_SUB_CATEGORYRow)
            Return rowtblM4_INVENTORY_SUB_CATEGORYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindBySC_NO(ByVal SC_NO As String) As tblM4_INVENTORY_SUB_CATEGORYRow
            Return CType(Me.Rows.Find(New Object() {SC_NO}),tblM4_INVENTORY_SUB_CATEGORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_INVENTORY_SUB_CATEGORYDataTable = CType(MyBase.Clone,tblM4_INVENTORY_SUB_CATEGORYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_INVENTORY_SUB_CATEGORYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSC_NO = MyBase.Columns("SC_NO")
            Me.columnCAT_CODE = MyBase.Columns("CAT_CODE")
            Me.columnSC_SUBCATEGORY_NAME = MyBase.Columns("SC_SUBCATEGORY_NAME")
            Me.columnSC_STATUS = MyBase.Columns("SC_STATUS")
            Me.columnHRIS_EMPNO = MyBase.Columns("HRIS_EMPNO")
            Me.columnSC_CREATED_DATE = MyBase.Columns("SC_CREATED_DATE")
            Me.columnSC_UPDATED_DATE = MyBase.Columns("SC_UPDATED_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSC_NO = New Global.System.Data.DataColumn("SC_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSC_NO)
            Me.columnCAT_CODE = New Global.System.Data.DataColumn("CAT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAT_CODE)
            Me.columnSC_SUBCATEGORY_NAME = New Global.System.Data.DataColumn("SC_SUBCATEGORY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSC_SUBCATEGORY_NAME)
            Me.columnSC_STATUS = New Global.System.Data.DataColumn("SC_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSC_STATUS)
            Me.columnHRIS_EMPNO = New Global.System.Data.DataColumn("HRIS_EMPNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO)
            Me.columnSC_CREATED_DATE = New Global.System.Data.DataColumn("SC_CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSC_CREATED_DATE)
            Me.columnSC_UPDATED_DATE = New Global.System.Data.DataColumn("SC_UPDATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSC_UPDATED_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSC_NO}, true))
            Me.columnSC_NO.AllowDBNull = false
            Me.columnSC_NO.Unique = true
            Me.columnSC_NO.MaxLength = 50
            Me.columnCAT_CODE.MaxLength = 50
            Me.columnSC_SUBCATEGORY_NAME.MaxLength = 100
            Me.columnHRIS_EMPNO.MaxLength = 20
            Me.columnSC_CREATED_DATE.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_INVENTORY_SUB_CATEGORYRow() As tblM4_INVENTORY_SUB_CATEGORYRow
            Return CType(Me.NewRow,tblM4_INVENTORY_SUB_CATEGORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_INVENTORY_SUB_CATEGORYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_INVENTORY_SUB_CATEGORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_INVENTORY_SUB_CATEGORYRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_SUB_CATEGORYRowChanged(Me, New tblM4_INVENTORY_SUB_CATEGORYRowChangeEvent(CType(e.Row,tblM4_INVENTORY_SUB_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_INVENTORY_SUB_CATEGORYRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_SUB_CATEGORYRowChanging(Me, New tblM4_INVENTORY_SUB_CATEGORYRowChangeEvent(CType(e.Row,tblM4_INVENTORY_SUB_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_INVENTORY_SUB_CATEGORYRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_SUB_CATEGORYRowDeleted(Me, New tblM4_INVENTORY_SUB_CATEGORYRowChangeEvent(CType(e.Row,tblM4_INVENTORY_SUB_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_INVENTORY_SUB_CATEGORYRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_SUB_CATEGORYRowDeleting(Me, New tblM4_INVENTORY_SUB_CATEGORYRowChangeEvent(CType(e.Row,tblM4_INVENTORY_SUB_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_INVENTORY_SUB_CATEGORYRow(ByVal row As tblM4_INVENTORY_SUB_CATEGORYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_INVENTORY_SUB_CATEGORYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_INVENTORY_CATEGORY1DataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_INVENTORY_CATEGORY1Row)
        
        Private columnCategory_Code As Global.System.Data.DataColumn
        
        Private columnCategory_Name As Global.System.Data.DataColumn
        
        Private columnCreated_Date As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_INVENTORY_CATEGORY1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Category_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategory_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Category_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategory_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Created_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreated_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_INVENTORY_CATEGORY1Row
            Get
                Return CType(Me.Rows(index),tblM4_INVENTORY_CATEGORY1Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_CATEGORY1RowChanging As tblM4_INVENTORY_CATEGORY1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_CATEGORY1RowChanged As tblM4_INVENTORY_CATEGORY1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_CATEGORY1RowDeleting As tblM4_INVENTORY_CATEGORY1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_CATEGORY1RowDeleted As tblM4_INVENTORY_CATEGORY1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_INVENTORY_CATEGORY1Row(ByVal row As tblM4_INVENTORY_CATEGORY1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_INVENTORY_CATEGORY1Row(ByVal Category_Code As String, ByVal Category_Name As String, ByVal Created_Date As String, ByVal Status As String) As tblM4_INVENTORY_CATEGORY1Row
            Dim rowtblM4_INVENTORY_CATEGORY1Row As tblM4_INVENTORY_CATEGORY1Row = CType(Me.NewRow,tblM4_INVENTORY_CATEGORY1Row)
            Dim columnValuesArray() As Object = New Object() {Category_Code, Category_Name, Created_Date, Status}
            rowtblM4_INVENTORY_CATEGORY1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_INVENTORY_CATEGORY1Row)
            Return rowtblM4_INVENTORY_CATEGORY1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByCategory_Code(ByVal Category_Code As String) As tblM4_INVENTORY_CATEGORY1Row
            Return CType(Me.Rows.Find(New Object() {Category_Code}),tblM4_INVENTORY_CATEGORY1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_INVENTORY_CATEGORY1DataTable = CType(MyBase.Clone,tblM4_INVENTORY_CATEGORY1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_INVENTORY_CATEGORY1DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCategory_Code = MyBase.Columns("Category Code")
            Me.columnCategory_Name = MyBase.Columns("Category Name")
            Me.columnCreated_Date = MyBase.Columns("Created Date")
            Me.columnStatus = MyBase.Columns("Status")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCategory_Code = New Global.System.Data.DataColumn("Category Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategory_Code)
            Me.columnCategory_Name = New Global.System.Data.DataColumn("Category Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategory_Name)
            Me.columnCreated_Date = New Global.System.Data.DataColumn("Created Date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreated_Date)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCategory_Code}, true))
            Me.columnCategory_Code.AllowDBNull = false
            Me.columnCategory_Code.Unique = true
            Me.columnCategory_Code.MaxLength = 50
            Me.columnCategory_Name.MaxLength = 2147483647
            Me.columnCreated_Date.ReadOnly = true
            Me.columnCreated_Date.MaxLength = 4000
            Me.columnStatus.ReadOnly = true
            Me.columnStatus.MaxLength = 8
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_INVENTORY_CATEGORY1Row() As tblM4_INVENTORY_CATEGORY1Row
            Return CType(Me.NewRow,tblM4_INVENTORY_CATEGORY1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_INVENTORY_CATEGORY1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_INVENTORY_CATEGORY1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_INVENTORY_CATEGORY1RowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_CATEGORY1RowChanged(Me, New tblM4_INVENTORY_CATEGORY1RowChangeEvent(CType(e.Row,tblM4_INVENTORY_CATEGORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_INVENTORY_CATEGORY1RowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_CATEGORY1RowChanging(Me, New tblM4_INVENTORY_CATEGORY1RowChangeEvent(CType(e.Row,tblM4_INVENTORY_CATEGORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_INVENTORY_CATEGORY1RowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_CATEGORY1RowDeleted(Me, New tblM4_INVENTORY_CATEGORY1RowChangeEvent(CType(e.Row,tblM4_INVENTORY_CATEGORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_INVENTORY_CATEGORY1RowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_CATEGORY1RowDeleting(Me, New tblM4_INVENTORY_CATEGORY1RowChangeEvent(CType(e.Row,tblM4_INVENTORY_CATEGORY1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_INVENTORY_CATEGORY1Row(ByVal row As tblM4_INVENTORY_CATEGORY1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_INVENTORY_CATEGORY1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_INVENTORY_ITEMBRAND1DataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_INVENTORY_ITEMBRAND1Row)
        
        Private columnBrand_Code As Global.System.Data.DataColumn
        
        Private _columnBrand_Provider_Name As Global.System.Data.DataColumn
        
        Private columnDate_Created As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_INVENTORY_ITEMBRAND1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Brand_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrand_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Brand_Provider_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnBrand_Provider_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Date_CreatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Created
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_INVENTORY_ITEMBRAND1Row
            Get
                Return CType(Me.Rows(index),tblM4_INVENTORY_ITEMBRAND1Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMBRAND1RowChanging As tblM4_INVENTORY_ITEMBRAND1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMBRAND1RowChanged As tblM4_INVENTORY_ITEMBRAND1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMBRAND1RowDeleting As tblM4_INVENTORY_ITEMBRAND1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMBRAND1RowDeleted As tblM4_INVENTORY_ITEMBRAND1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_INVENTORY_ITEMBRAND1Row(ByVal row As tblM4_INVENTORY_ITEMBRAND1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_INVENTORY_ITEMBRAND1Row(ByVal Brand_Code As String, ByVal _Brand_Provider_Name As String, ByVal Date_Created As String, ByVal Status As String) As tblM4_INVENTORY_ITEMBRAND1Row
            Dim rowtblM4_INVENTORY_ITEMBRAND1Row As tblM4_INVENTORY_ITEMBRAND1Row = CType(Me.NewRow,tblM4_INVENTORY_ITEMBRAND1Row)
            Dim columnValuesArray() As Object = New Object() {Brand_Code, _Brand_Provider_Name, Date_Created, Status}
            rowtblM4_INVENTORY_ITEMBRAND1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_INVENTORY_ITEMBRAND1Row)
            Return rowtblM4_INVENTORY_ITEMBRAND1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByBrand_Code(ByVal Brand_Code As String) As tblM4_INVENTORY_ITEMBRAND1Row
            Return CType(Me.Rows.Find(New Object() {Brand_Code}),tblM4_INVENTORY_ITEMBRAND1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_INVENTORY_ITEMBRAND1DataTable = CType(MyBase.Clone,tblM4_INVENTORY_ITEMBRAND1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_INVENTORY_ITEMBRAND1DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBrand_Code = MyBase.Columns("Brand Code")
            Me._columnBrand_Provider_Name = MyBase.Columns("Brand/Provider Name")
            Me.columnDate_Created = MyBase.Columns("Date Created")
            Me.columnStatus = MyBase.Columns("Status")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBrand_Code = New Global.System.Data.DataColumn("Brand Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrand_Code)
            Me._columnBrand_Provider_Name = New Global.System.Data.DataColumn("Brand/Provider Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnBrand_Provider_Name.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnBrand_Provider_Name")
            Me._columnBrand_Provider_Name.ExtendedProperties.Add("Generator_UserColumnName", "Brand/Provider Name")
            MyBase.Columns.Add(Me._columnBrand_Provider_Name)
            Me.columnDate_Created = New Global.System.Data.DataColumn("Date Created", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Created)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnBrand_Code}, true))
            Me.columnBrand_Code.AllowDBNull = false
            Me.columnBrand_Code.Unique = true
            Me.columnBrand_Code.MaxLength = 50
            Me._columnBrand_Provider_Name.MaxLength = 100
            Me.columnDate_Created.ReadOnly = true
            Me.columnDate_Created.MaxLength = 4000
            Me.columnStatus.ReadOnly = true
            Me.columnStatus.MaxLength = 8
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_INVENTORY_ITEMBRAND1Row() As tblM4_INVENTORY_ITEMBRAND1Row
            Return CType(Me.NewRow,tblM4_INVENTORY_ITEMBRAND1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_INVENTORY_ITEMBRAND1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_INVENTORY_ITEMBRAND1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_INVENTORY_ITEMBRAND1RowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMBRAND1RowChanged(Me, New tblM4_INVENTORY_ITEMBRAND1RowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMBRAND1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_INVENTORY_ITEMBRAND1RowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMBRAND1RowChanging(Me, New tblM4_INVENTORY_ITEMBRAND1RowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMBRAND1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_INVENTORY_ITEMBRAND1RowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMBRAND1RowDeleted(Me, New tblM4_INVENTORY_ITEMBRAND1RowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMBRAND1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_INVENTORY_ITEMBRAND1RowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMBRAND1RowDeleting(Me, New tblM4_INVENTORY_ITEMBRAND1RowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMBRAND1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_INVENTORY_ITEMBRAND1Row(ByVal row As tblM4_INVENTORY_ITEMBRAND1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_INVENTORY_ITEMBRAND1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_CATEGORY_AND_SUBDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_CATEGORY_AND_SUBRow)
        
        Private _columnSub_Category_Code As Global.System.Data.DataColumn
        
        Private columnCategory_Name As Global.System.Data.DataColumn
        
        Private _columnSub_Category_Name As Global.System.Data.DataColumn
        
        Private columnCreated_Date As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_CATEGORY_AND_SUB"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Sub_Category_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnSub_Category_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Category_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategory_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Sub_Category_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnSub_Category_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Created_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreated_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_CATEGORY_AND_SUBRow
            Get
                Return CType(Me.Rows(index),tblM4_CATEGORY_AND_SUBRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_CATEGORY_AND_SUBRowChanging As tblM4_CATEGORY_AND_SUBRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_CATEGORY_AND_SUBRowChanged As tblM4_CATEGORY_AND_SUBRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_CATEGORY_AND_SUBRowDeleting As tblM4_CATEGORY_AND_SUBRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_CATEGORY_AND_SUBRowDeleted As tblM4_CATEGORY_AND_SUBRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_CATEGORY_AND_SUBRow(ByVal row As tblM4_CATEGORY_AND_SUBRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_CATEGORY_AND_SUBRow(ByVal _Sub_Category_Code As String, ByVal Category_Name As String, ByVal _Sub_Category_Name As String, ByVal Created_Date As String, ByVal Status As String) As tblM4_CATEGORY_AND_SUBRow
            Dim rowtblM4_CATEGORY_AND_SUBRow As tblM4_CATEGORY_AND_SUBRow = CType(Me.NewRow,tblM4_CATEGORY_AND_SUBRow)
            Dim columnValuesArray() As Object = New Object() {_Sub_Category_Code, Category_Name, _Sub_Category_Name, Created_Date, Status}
            rowtblM4_CATEGORY_AND_SUBRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_CATEGORY_AND_SUBRow)
            Return rowtblM4_CATEGORY_AND_SUBRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindBy_Sub_Category_Code(ByVal _Sub_Category_Code As String) As tblM4_CATEGORY_AND_SUBRow
            Return CType(Me.Rows.Find(New Object() {_Sub_Category_Code}),tblM4_CATEGORY_AND_SUBRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_CATEGORY_AND_SUBDataTable = CType(MyBase.Clone,tblM4_CATEGORY_AND_SUBDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_CATEGORY_AND_SUBDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me._columnSub_Category_Code = MyBase.Columns("Sub-Category Code")
            Me.columnCategory_Name = MyBase.Columns("Category Name")
            Me._columnSub_Category_Name = MyBase.Columns("Sub-Category Name")
            Me.columnCreated_Date = MyBase.Columns("Created Date")
            Me.columnStatus = MyBase.Columns("Status")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me._columnSub_Category_Code = New Global.System.Data.DataColumn("Sub-Category Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnSub_Category_Code.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSub_Category_Code")
            Me._columnSub_Category_Code.ExtendedProperties.Add("Generator_UserColumnName", "Sub-Category Code")
            MyBase.Columns.Add(Me._columnSub_Category_Code)
            Me.columnCategory_Name = New Global.System.Data.DataColumn("Category Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategory_Name)
            Me._columnSub_Category_Name = New Global.System.Data.DataColumn("Sub-Category Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnSub_Category_Name.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSub_Category_Name")
            Me._columnSub_Category_Name.ExtendedProperties.Add("Generator_UserColumnName", "Sub-Category Name")
            MyBase.Columns.Add(Me._columnSub_Category_Name)
            Me.columnCreated_Date = New Global.System.Data.DataColumn("Created Date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreated_Date)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me._columnSub_Category_Code}, true))
            Me._columnSub_Category_Code.AllowDBNull = false
            Me._columnSub_Category_Code.Unique = true
            Me._columnSub_Category_Code.MaxLength = 50
            Me.columnCategory_Name.MaxLength = 2147483647
            Me._columnSub_Category_Name.MaxLength = 100
            Me.columnCreated_Date.ReadOnly = true
            Me.columnCreated_Date.MaxLength = 4000
            Me.columnStatus.ReadOnly = true
            Me.columnStatus.MaxLength = 8
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_CATEGORY_AND_SUBRow() As tblM4_CATEGORY_AND_SUBRow
            Return CType(Me.NewRow,tblM4_CATEGORY_AND_SUBRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_CATEGORY_AND_SUBRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_CATEGORY_AND_SUBRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_CATEGORY_AND_SUBRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_CATEGORY_AND_SUBRowChanged(Me, New tblM4_CATEGORY_AND_SUBRowChangeEvent(CType(e.Row,tblM4_CATEGORY_AND_SUBRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_CATEGORY_AND_SUBRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_CATEGORY_AND_SUBRowChanging(Me, New tblM4_CATEGORY_AND_SUBRowChangeEvent(CType(e.Row,tblM4_CATEGORY_AND_SUBRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_CATEGORY_AND_SUBRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_CATEGORY_AND_SUBRowDeleted(Me, New tblM4_CATEGORY_AND_SUBRowChangeEvent(CType(e.Row,tblM4_CATEGORY_AND_SUBRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_CATEGORY_AND_SUBRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_CATEGORY_AND_SUBRowDeleting(Me, New tblM4_CATEGORY_AND_SUBRowChangeEvent(CType(e.Row,tblM4_CATEGORY_AND_SUBRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_CATEGORY_AND_SUBRow(ByVal row As tblM4_CATEGORY_AND_SUBRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_CATEGORY_AND_SUBDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_INVENTORY_ASSIGN_PERSONDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_INVENTORY_ASSIGN_PERSONRow)
        
        Private columnASSI_NO As Global.System.Data.DataColumn
        
        Private columnITEM_CODE As Global.System.Data.DataColumn
        
        Private columnEMP_NO As Global.System.Data.DataColumn
        
        Private columnASSI_ORIGINATED As Global.System.Data.DataColumn
        
        Private columnREMARKS As Global.System.Data.DataColumn
        
        Private columnASSI_ASSIGNED_BY As Global.System.Data.DataColumn
        
        Private columnDATE_ASSIGNED As Global.System.Data.DataColumn
        
        Private columnDATE_CREATED As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_INVENTORY_ASSIGN_PERSON"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ASSI_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSI_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ASSI_ORIGINATEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSI_ORIGINATED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ASSI_ASSIGNED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSI_ASSIGNED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DATE_ASSIGNEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_ASSIGNED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DATE_CREATEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_CREATED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_INVENTORY_ASSIGN_PERSONRow
            Get
                Return CType(Me.Rows(index),tblM4_INVENTORY_ASSIGN_PERSONRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ASSIGN_PERSONRowChanging As tblM4_INVENTORY_ASSIGN_PERSONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ASSIGN_PERSONRowChanged As tblM4_INVENTORY_ASSIGN_PERSONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ASSIGN_PERSONRowDeleting As tblM4_INVENTORY_ASSIGN_PERSONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ASSIGN_PERSONRowDeleted As tblM4_INVENTORY_ASSIGN_PERSONRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_INVENTORY_ASSIGN_PERSONRow(ByVal row As tblM4_INVENTORY_ASSIGN_PERSONRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_INVENTORY_ASSIGN_PERSONRow(ByVal ASSI_NO As Date, ByVal ITEM_CODE As String, ByVal EMP_NO As String, ByVal ASSI_ORIGINATED As String, ByVal REMARKS As String, ByVal ASSI_ASSIGNED_BY As String, ByVal DATE_ASSIGNED As Date, ByVal DATE_CREATED As Date) As tblM4_INVENTORY_ASSIGN_PERSONRow
            Dim rowtblM4_INVENTORY_ASSIGN_PERSONRow As tblM4_INVENTORY_ASSIGN_PERSONRow = CType(Me.NewRow,tblM4_INVENTORY_ASSIGN_PERSONRow)
            Dim columnValuesArray() As Object = New Object() {ASSI_NO, ITEM_CODE, EMP_NO, ASSI_ORIGINATED, REMARKS, ASSI_ASSIGNED_BY, DATE_ASSIGNED, DATE_CREATED}
            rowtblM4_INVENTORY_ASSIGN_PERSONRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_INVENTORY_ASSIGN_PERSONRow)
            Return rowtblM4_INVENTORY_ASSIGN_PERSONRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByASSI_NOITEM_CODEEMP_NO(ByVal ASSI_NO As Date, ByVal ITEM_CODE As String, ByVal EMP_NO As String) As tblM4_INVENTORY_ASSIGN_PERSONRow
            Return CType(Me.Rows.Find(New Object() {ASSI_NO, ITEM_CODE, EMP_NO}),tblM4_INVENTORY_ASSIGN_PERSONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_INVENTORY_ASSIGN_PERSONDataTable = CType(MyBase.Clone,tblM4_INVENTORY_ASSIGN_PERSONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_INVENTORY_ASSIGN_PERSONDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnASSI_NO = MyBase.Columns("ASSI_NO")
            Me.columnITEM_CODE = MyBase.Columns("ITEM_CODE")
            Me.columnEMP_NO = MyBase.Columns("EMP_NO")
            Me.columnASSI_ORIGINATED = MyBase.Columns("ASSI_ORIGINATED")
            Me.columnREMARKS = MyBase.Columns("REMARKS")
            Me.columnASSI_ASSIGNED_BY = MyBase.Columns("ASSI_ASSIGNED_BY")
            Me.columnDATE_ASSIGNED = MyBase.Columns("DATE_ASSIGNED")
            Me.columnDATE_CREATED = MyBase.Columns("DATE_CREATED")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnASSI_NO = New Global.System.Data.DataColumn("ASSI_NO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSI_NO)
            Me.columnITEM_CODE = New Global.System.Data.DataColumn("ITEM_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_CODE)
            Me.columnEMP_NO = New Global.System.Data.DataColumn("EMP_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_NO)
            Me.columnASSI_ORIGINATED = New Global.System.Data.DataColumn("ASSI_ORIGINATED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSI_ORIGINATED)
            Me.columnREMARKS = New Global.System.Data.DataColumn("REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREMARKS)
            Me.columnASSI_ASSIGNED_BY = New Global.System.Data.DataColumn("ASSI_ASSIGNED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSI_ASSIGNED_BY)
            Me.columnDATE_ASSIGNED = New Global.System.Data.DataColumn("DATE_ASSIGNED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_ASSIGNED)
            Me.columnDATE_CREATED = New Global.System.Data.DataColumn("DATE_CREATED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_CREATED)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnASSI_NO, Me.columnITEM_CODE, Me.columnEMP_NO}, true))
            Me.columnASSI_NO.AllowDBNull = false
            Me.columnITEM_CODE.AllowDBNull = false
            Me.columnITEM_CODE.MaxLength = 50
            Me.columnEMP_NO.AllowDBNull = false
            Me.columnEMP_NO.MaxLength = 50
            Me.columnASSI_ORIGINATED.MaxLength = 50
            Me.columnREMARKS.MaxLength = 100
            Me.columnASSI_ASSIGNED_BY.AllowDBNull = false
            Me.columnASSI_ASSIGNED_BY.MaxLength = 50
            Me.columnDATE_ASSIGNED.AllowDBNull = false
            Me.columnDATE_CREATED.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_INVENTORY_ASSIGN_PERSONRow() As tblM4_INVENTORY_ASSIGN_PERSONRow
            Return CType(Me.NewRow,tblM4_INVENTORY_ASSIGN_PERSONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_INVENTORY_ASSIGN_PERSONRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_INVENTORY_ASSIGN_PERSONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_INVENTORY_ASSIGN_PERSONRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ASSIGN_PERSONRowChanged(Me, New tblM4_INVENTORY_ASSIGN_PERSONRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ASSIGN_PERSONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_INVENTORY_ASSIGN_PERSONRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ASSIGN_PERSONRowChanging(Me, New tblM4_INVENTORY_ASSIGN_PERSONRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ASSIGN_PERSONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_INVENTORY_ASSIGN_PERSONRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ASSIGN_PERSONRowDeleted(Me, New tblM4_INVENTORY_ASSIGN_PERSONRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ASSIGN_PERSONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_INVENTORY_ASSIGN_PERSONRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ASSIGN_PERSONRowDeleting(Me, New tblM4_INVENTORY_ASSIGN_PERSONRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ASSIGN_PERSONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_INVENTORY_ASSIGN_PERSONRow(ByVal row As tblM4_INVENTORY_ASSIGN_PERSONRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_INVENTORY_ASSIGN_PERSONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_INVENTORY_ITEMS1DataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_INVENTORY_ITEMS1Row)
        
        Private columnITEM_CODE As Global.System.Data.DataColumn
        
        Private columnITEM_SERIAL_NO As Global.System.Data.DataColumn
        
        Private columnITEM_DESCRIPTION As Global.System.Data.DataColumn
        
        Private columnITEM_UNIT As Global.System.Data.DataColumn
        
        Private columnITEM_UNIT_COST As Global.System.Data.DataColumn
        
        Private columnITEM_TOTAL_COST As Global.System.Data.DataColumn
        
        Private columnITEM_QUANTITY As Global.System.Data.DataColumn
        
        Private columnITEM_DATE_AQUISITION As Global.System.Data.DataColumn
        
        Private columnASSI_ORIGINATED As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_INVENTORY_ITEMS1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_SERIAL_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_SERIAL_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_UNITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_UNIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_UNIT_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_UNIT_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_TOTAL_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_TOTAL_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_QUANTITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_QUANTITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_DATE_AQUISITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_DATE_AQUISITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ASSI_ORIGINATEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSI_ORIGINATED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_INVENTORY_ITEMS1Row
            Get
                Return CType(Me.Rows(index),tblM4_INVENTORY_ITEMS1Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS1RowChanging As tblM4_INVENTORY_ITEMS1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS1RowChanged As tblM4_INVENTORY_ITEMS1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS1RowDeleting As tblM4_INVENTORY_ITEMS1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS1RowDeleted As tblM4_INVENTORY_ITEMS1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_INVENTORY_ITEMS1Row(ByVal row As tblM4_INVENTORY_ITEMS1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_INVENTORY_ITEMS1Row(ByVal ITEM_CODE As String, ByVal ITEM_SERIAL_NO As String, ByVal ITEM_DESCRIPTION As String, ByVal ITEM_UNIT As String, ByVal ITEM_UNIT_COST As Decimal, ByVal ITEM_TOTAL_COST As Decimal, ByVal ITEM_QUANTITY As Integer, ByVal ITEM_DATE_AQUISITION As Date, ByVal ASSI_ORIGINATED As String) As tblM4_INVENTORY_ITEMS1Row
            Dim rowtblM4_INVENTORY_ITEMS1Row As tblM4_INVENTORY_ITEMS1Row = CType(Me.NewRow,tblM4_INVENTORY_ITEMS1Row)
            Dim columnValuesArray() As Object = New Object() {ITEM_CODE, ITEM_SERIAL_NO, ITEM_DESCRIPTION, ITEM_UNIT, ITEM_UNIT_COST, ITEM_TOTAL_COST, ITEM_QUANTITY, ITEM_DATE_AQUISITION, ASSI_ORIGINATED}
            rowtblM4_INVENTORY_ITEMS1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_INVENTORY_ITEMS1Row)
            Return rowtblM4_INVENTORY_ITEMS1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByITEM_CODE(ByVal ITEM_CODE As String) As tblM4_INVENTORY_ITEMS1Row
            Return CType(Me.Rows.Find(New Object() {ITEM_CODE}),tblM4_INVENTORY_ITEMS1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_INVENTORY_ITEMS1DataTable = CType(MyBase.Clone,tblM4_INVENTORY_ITEMS1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_INVENTORY_ITEMS1DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnITEM_CODE = MyBase.Columns("ITEM_CODE")
            Me.columnITEM_SERIAL_NO = MyBase.Columns("ITEM_SERIAL_NO")
            Me.columnITEM_DESCRIPTION = MyBase.Columns("ITEM_DESCRIPTION")
            Me.columnITEM_UNIT = MyBase.Columns("ITEM_UNIT")
            Me.columnITEM_UNIT_COST = MyBase.Columns("ITEM_UNIT_COST")
            Me.columnITEM_TOTAL_COST = MyBase.Columns("ITEM_TOTAL_COST")
            Me.columnITEM_QUANTITY = MyBase.Columns("ITEM_QUANTITY")
            Me.columnITEM_DATE_AQUISITION = MyBase.Columns("ITEM_DATE_AQUISITION")
            Me.columnASSI_ORIGINATED = MyBase.Columns("ASSI_ORIGINATED")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnITEM_CODE = New Global.System.Data.DataColumn("ITEM_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_CODE)
            Me.columnITEM_SERIAL_NO = New Global.System.Data.DataColumn("ITEM_SERIAL_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_SERIAL_NO)
            Me.columnITEM_DESCRIPTION = New Global.System.Data.DataColumn("ITEM_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_DESCRIPTION)
            Me.columnITEM_UNIT = New Global.System.Data.DataColumn("ITEM_UNIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_UNIT)
            Me.columnITEM_UNIT_COST = New Global.System.Data.DataColumn("ITEM_UNIT_COST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_UNIT_COST)
            Me.columnITEM_TOTAL_COST = New Global.System.Data.DataColumn("ITEM_TOTAL_COST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_TOTAL_COST)
            Me.columnITEM_QUANTITY = New Global.System.Data.DataColumn("ITEM_QUANTITY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_QUANTITY)
            Me.columnITEM_DATE_AQUISITION = New Global.System.Data.DataColumn("ITEM_DATE_AQUISITION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_DATE_AQUISITION)
            Me.columnASSI_ORIGINATED = New Global.System.Data.DataColumn("ASSI_ORIGINATED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSI_ORIGINATED)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnITEM_CODE}, true))
            Me.columnITEM_CODE.AllowDBNull = false
            Me.columnITEM_CODE.Unique = true
            Me.columnITEM_CODE.MaxLength = 50
            Me.columnITEM_SERIAL_NO.MaxLength = 40
            Me.columnITEM_DESCRIPTION.AllowDBNull = false
            Me.columnITEM_DESCRIPTION.MaxLength = 100
            Me.columnITEM_UNIT.AllowDBNull = false
            Me.columnITEM_UNIT.MaxLength = 10
            Me.columnITEM_UNIT_COST.AllowDBNull = false
            Me.columnITEM_TOTAL_COST.AllowDBNull = false
            Me.columnITEM_QUANTITY.AllowDBNull = false
            Me.columnITEM_DATE_AQUISITION.AllowDBNull = false
            Me.columnASSI_ORIGINATED.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_INVENTORY_ITEMS1Row() As tblM4_INVENTORY_ITEMS1Row
            Return CType(Me.NewRow,tblM4_INVENTORY_ITEMS1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_INVENTORY_ITEMS1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_INVENTORY_ITEMS1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS1RowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS1RowChanged(Me, New tblM4_INVENTORY_ITEMS1RowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS1RowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS1RowChanging(Me, New tblM4_INVENTORY_ITEMS1RowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS1RowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS1RowDeleted(Me, New tblM4_INVENTORY_ITEMS1RowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS1RowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS1RowDeleting(Me, New tblM4_INVENTORY_ITEMS1RowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_INVENTORY_ITEMS1Row(ByVal row As tblM4_INVENTORY_ITEMS1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_INVENTORY_ITEMS1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_INVENTORY_ACQUISITION_ITEM_USAGEDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow)
        
        Private columnUSG_CODE As Global.System.Data.DataColumn
        
        Private columnUSG_NAME As Global.System.Data.DataColumn
        
        Private columnUSG_DESCRIPTION As Global.System.Data.DataColumn
        
        Private columnUSG_DATE_CREATED As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_INVENTORY_ACQUISITION_ITEM_USAGE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USG_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSG_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USG_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSG_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USG_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSG_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USG_DATE_CREATEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSG_DATE_CREATED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow
            Get
                Return CType(Me.Rows(index),tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChanging As tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChanged As tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowDeleting As tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowDeleted As tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_INVENTORY_ACQUISITION_ITEM_USAGERow(ByVal row As tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_INVENTORY_ACQUISITION_ITEM_USAGERow(ByVal USG_CODE As String, ByVal USG_NAME As String, ByVal USG_DESCRIPTION As String, ByVal USG_DATE_CREATED As Date) As tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow
            Dim rowtblM4_INVENTORY_ACQUISITION_ITEM_USAGERow As tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow = CType(Me.NewRow,tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow)
            Dim columnValuesArray() As Object = New Object() {USG_CODE, USG_NAME, USG_DESCRIPTION, USG_DATE_CREATED}
            rowtblM4_INVENTORY_ACQUISITION_ITEM_USAGERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_INVENTORY_ACQUISITION_ITEM_USAGERow)
            Return rowtblM4_INVENTORY_ACQUISITION_ITEM_USAGERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByUSG_CODE(ByVal USG_CODE As String) As tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow
            Return CType(Me.Rows.Find(New Object() {USG_CODE}),tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_INVENTORY_ACQUISITION_ITEM_USAGEDataTable = CType(MyBase.Clone,tblM4_INVENTORY_ACQUISITION_ITEM_USAGEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_INVENTORY_ACQUISITION_ITEM_USAGEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnUSG_CODE = MyBase.Columns("USG_CODE")
            Me.columnUSG_NAME = MyBase.Columns("USG_NAME")
            Me.columnUSG_DESCRIPTION = MyBase.Columns("USG_DESCRIPTION")
            Me.columnUSG_DATE_CREATED = MyBase.Columns("USG_DATE_CREATED")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnUSG_CODE = New Global.System.Data.DataColumn("USG_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSG_CODE)
            Me.columnUSG_NAME = New Global.System.Data.DataColumn("USG_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSG_NAME)
            Me.columnUSG_DESCRIPTION = New Global.System.Data.DataColumn("USG_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSG_DESCRIPTION)
            Me.columnUSG_DATE_CREATED = New Global.System.Data.DataColumn("USG_DATE_CREATED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSG_DATE_CREATED)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnUSG_CODE}, true))
            Me.columnUSG_CODE.AllowDBNull = false
            Me.columnUSG_CODE.Unique = true
            Me.columnUSG_CODE.MaxLength = 50
            Me.columnUSG_NAME.AllowDBNull = false
            Me.columnUSG_NAME.MaxLength = 100
            Me.columnUSG_DESCRIPTION.MaxLength = 300
            Me.columnUSG_DATE_CREATED.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_INVENTORY_ACQUISITION_ITEM_USAGERow() As tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow
            Return CType(Me.NewRow,tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChanged(Me, New tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChangeEvent(CType(e.Row,tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChanging(Me, New tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChangeEvent(CType(e.Row,tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowDeleted(Me, New tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChangeEvent(CType(e.Row,tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowDeleting(Me, New tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChangeEvent(CType(e.Row,tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_INVENTORY_ACQUISITION_ITEM_USAGERow(ByVal row As tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_INVENTORY_ACQUISITION_ITEM_USAGEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_INVENTORY_ACQUISITION_VALUEDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_INVENTORY_ACQUISITION_VALUERow)
        
        Private columnACQV_CODE As Global.System.Data.DataColumn
        
        Private columnACQV_TITLE As Global.System.Data.DataColumn
        
        Private columnACQV_DESCRIPTION As Global.System.Data.DataColumn
        
        Private columnACQV_DATE_CREATED As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_INVENTORY_ACQUISITION_VALUE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ACQV_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACQV_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ACQV_TITLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACQV_TITLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ACQV_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACQV_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ACQV_DATE_CREATEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACQV_DATE_CREATED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_INVENTORY_ACQUISITION_VALUERow
            Get
                Return CType(Me.Rows(index),tblM4_INVENTORY_ACQUISITION_VALUERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ACQUISITION_VALUERowChanging As tblM4_INVENTORY_ACQUISITION_VALUERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ACQUISITION_VALUERowChanged As tblM4_INVENTORY_ACQUISITION_VALUERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ACQUISITION_VALUERowDeleting As tblM4_INVENTORY_ACQUISITION_VALUERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ACQUISITION_VALUERowDeleted As tblM4_INVENTORY_ACQUISITION_VALUERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_INVENTORY_ACQUISITION_VALUERow(ByVal row As tblM4_INVENTORY_ACQUISITION_VALUERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_INVENTORY_ACQUISITION_VALUERow(ByVal ACQV_CODE As String, ByVal ACQV_TITLE As String, ByVal ACQV_DESCRIPTION As String, ByVal ACQV_DATE_CREATED As Date) As tblM4_INVENTORY_ACQUISITION_VALUERow
            Dim rowtblM4_INVENTORY_ACQUISITION_VALUERow As tblM4_INVENTORY_ACQUISITION_VALUERow = CType(Me.NewRow,tblM4_INVENTORY_ACQUISITION_VALUERow)
            Dim columnValuesArray() As Object = New Object() {ACQV_CODE, ACQV_TITLE, ACQV_DESCRIPTION, ACQV_DATE_CREATED}
            rowtblM4_INVENTORY_ACQUISITION_VALUERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_INVENTORY_ACQUISITION_VALUERow)
            Return rowtblM4_INVENTORY_ACQUISITION_VALUERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByACQV_CODE(ByVal ACQV_CODE As String) As tblM4_INVENTORY_ACQUISITION_VALUERow
            Return CType(Me.Rows.Find(New Object() {ACQV_CODE}),tblM4_INVENTORY_ACQUISITION_VALUERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_INVENTORY_ACQUISITION_VALUEDataTable = CType(MyBase.Clone,tblM4_INVENTORY_ACQUISITION_VALUEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_INVENTORY_ACQUISITION_VALUEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnACQV_CODE = MyBase.Columns("ACQV_CODE")
            Me.columnACQV_TITLE = MyBase.Columns("ACQV_TITLE")
            Me.columnACQV_DESCRIPTION = MyBase.Columns("ACQV_DESCRIPTION")
            Me.columnACQV_DATE_CREATED = MyBase.Columns("ACQV_DATE_CREATED")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnACQV_CODE = New Global.System.Data.DataColumn("ACQV_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACQV_CODE)
            Me.columnACQV_TITLE = New Global.System.Data.DataColumn("ACQV_TITLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACQV_TITLE)
            Me.columnACQV_DESCRIPTION = New Global.System.Data.DataColumn("ACQV_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACQV_DESCRIPTION)
            Me.columnACQV_DATE_CREATED = New Global.System.Data.DataColumn("ACQV_DATE_CREATED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACQV_DATE_CREATED)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnACQV_CODE}, true))
            Me.columnACQV_CODE.AllowDBNull = false
            Me.columnACQV_CODE.Unique = true
            Me.columnACQV_CODE.MaxLength = 50
            Me.columnACQV_TITLE.MaxLength = 50
            Me.columnACQV_DESCRIPTION.MaxLength = 200
            Me.columnACQV_DATE_CREATED.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_INVENTORY_ACQUISITION_VALUERow() As tblM4_INVENTORY_ACQUISITION_VALUERow
            Return CType(Me.NewRow,tblM4_INVENTORY_ACQUISITION_VALUERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_INVENTORY_ACQUISITION_VALUERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_INVENTORY_ACQUISITION_VALUERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_INVENTORY_ACQUISITION_VALUERowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ACQUISITION_VALUERowChanged(Me, New tblM4_INVENTORY_ACQUISITION_VALUERowChangeEvent(CType(e.Row,tblM4_INVENTORY_ACQUISITION_VALUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_INVENTORY_ACQUISITION_VALUERowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ACQUISITION_VALUERowChanging(Me, New tblM4_INVENTORY_ACQUISITION_VALUERowChangeEvent(CType(e.Row,tblM4_INVENTORY_ACQUISITION_VALUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_INVENTORY_ACQUISITION_VALUERowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ACQUISITION_VALUERowDeleted(Me, New tblM4_INVENTORY_ACQUISITION_VALUERowChangeEvent(CType(e.Row,tblM4_INVENTORY_ACQUISITION_VALUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_INVENTORY_ACQUISITION_VALUERowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ACQUISITION_VALUERowDeleting(Me, New tblM4_INVENTORY_ACQUISITION_VALUERowChangeEvent(CType(e.Row,tblM4_INVENTORY_ACQUISITION_VALUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_INVENTORY_ACQUISITION_VALUERow(ByVal row As tblM4_INVENTORY_ACQUISITION_VALUERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_INVENTORY_ACQUISITION_VALUEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblM4_INVENTORY_ITEMS_PROPERTYDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblM4_INVENTORY_ITEMS_PROPERTYRow)
        
        Private columnITEM_NO As Global.System.Data.DataColumn
        
        Private columnITEM_CODE As Global.System.Data.DataColumn
        
        Private columnPROP_DIVISION_UNIT As Global.System.Data.DataColumn
        
        Private columnPROP_CUSTODIAN As Global.System.Data.DataColumn
        
        Private columnPROP_PROPERTY_USER As Global.System.Data.DataColumn
        
        Private columnPROP_ENCODED_BY As Global.System.Data.DataColumn
        
        Private columnPROP_CREATED_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblM4_INVENTORY_ITEMS_PROPERTY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ITEM_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PROP_DIVISION_UNITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROP_DIVISION_UNIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PROP_CUSTODIANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROP_CUSTODIAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PROP_PROPERTY_USERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROP_PROPERTY_USER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PROP_ENCODED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROP_ENCODED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PROP_CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROP_CREATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblM4_INVENTORY_ITEMS_PROPERTYRow
            Get
                Return CType(Me.Rows(index),tblM4_INVENTORY_ITEMS_PROPERTYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS_PROPERTYRowChanging As tblM4_INVENTORY_ITEMS_PROPERTYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS_PROPERTYRowChanged As tblM4_INVENTORY_ITEMS_PROPERTYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS_PROPERTYRowDeleting As tblM4_INVENTORY_ITEMS_PROPERTYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblM4_INVENTORY_ITEMS_PROPERTYRowDeleted As tblM4_INVENTORY_ITEMS_PROPERTYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblM4_INVENTORY_ITEMS_PROPERTYRow(ByVal row As tblM4_INVENTORY_ITEMS_PROPERTYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblM4_INVENTORY_ITEMS_PROPERTYRow(ByVal ITEM_NO As Date, ByVal ITEM_CODE As String, ByVal PROP_DIVISION_UNIT As String, ByVal PROP_CUSTODIAN As String, ByVal PROP_PROPERTY_USER As String, ByVal PROP_ENCODED_BY As String, ByVal PROP_CREATED_DATE As Date) As tblM4_INVENTORY_ITEMS_PROPERTYRow
            Dim rowtblM4_INVENTORY_ITEMS_PROPERTYRow As tblM4_INVENTORY_ITEMS_PROPERTYRow = CType(Me.NewRow,tblM4_INVENTORY_ITEMS_PROPERTYRow)
            Dim columnValuesArray() As Object = New Object() {ITEM_NO, ITEM_CODE, PROP_DIVISION_UNIT, PROP_CUSTODIAN, PROP_PROPERTY_USER, PROP_ENCODED_BY, PROP_CREATED_DATE}
            rowtblM4_INVENTORY_ITEMS_PROPERTYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblM4_INVENTORY_ITEMS_PROPERTYRow)
            Return rowtblM4_INVENTORY_ITEMS_PROPERTYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByITEM_NOITEM_CODE(ByVal ITEM_NO As Date, ByVal ITEM_CODE As String) As tblM4_INVENTORY_ITEMS_PROPERTYRow
            Return CType(Me.Rows.Find(New Object() {ITEM_NO, ITEM_CODE}),tblM4_INVENTORY_ITEMS_PROPERTYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblM4_INVENTORY_ITEMS_PROPERTYDataTable = CType(MyBase.Clone,tblM4_INVENTORY_ITEMS_PROPERTYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblM4_INVENTORY_ITEMS_PROPERTYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnITEM_NO = MyBase.Columns("ITEM_NO")
            Me.columnITEM_CODE = MyBase.Columns("ITEM_CODE")
            Me.columnPROP_DIVISION_UNIT = MyBase.Columns("PROP_DIVISION_UNIT")
            Me.columnPROP_CUSTODIAN = MyBase.Columns("PROP_CUSTODIAN")
            Me.columnPROP_PROPERTY_USER = MyBase.Columns("PROP_PROPERTY_USER")
            Me.columnPROP_ENCODED_BY = MyBase.Columns("PROP_ENCODED_BY")
            Me.columnPROP_CREATED_DATE = MyBase.Columns("PROP_CREATED_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnITEM_NO = New Global.System.Data.DataColumn("ITEM_NO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_NO)
            Me.columnITEM_CODE = New Global.System.Data.DataColumn("ITEM_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_CODE)
            Me.columnPROP_DIVISION_UNIT = New Global.System.Data.DataColumn("PROP_DIVISION_UNIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROP_DIVISION_UNIT)
            Me.columnPROP_CUSTODIAN = New Global.System.Data.DataColumn("PROP_CUSTODIAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROP_CUSTODIAN)
            Me.columnPROP_PROPERTY_USER = New Global.System.Data.DataColumn("PROP_PROPERTY_USER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROP_PROPERTY_USER)
            Me.columnPROP_ENCODED_BY = New Global.System.Data.DataColumn("PROP_ENCODED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROP_ENCODED_BY)
            Me.columnPROP_CREATED_DATE = New Global.System.Data.DataColumn("PROP_CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROP_CREATED_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnITEM_NO, Me.columnITEM_CODE}, true))
            Me.columnITEM_NO.AllowDBNull = false
            Me.columnITEM_CODE.AllowDBNull = false
            Me.columnITEM_CODE.MaxLength = 50
            Me.columnPROP_DIVISION_UNIT.MaxLength = 100
            Me.columnPROP_CUSTODIAN.MaxLength = 100
            Me.columnPROP_PROPERTY_USER.MaxLength = 100
            Me.columnPROP_ENCODED_BY.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblM4_INVENTORY_ITEMS_PROPERTYRow() As tblM4_INVENTORY_ITEMS_PROPERTYRow
            Return CType(Me.NewRow,tblM4_INVENTORY_ITEMS_PROPERTYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblM4_INVENTORY_ITEMS_PROPERTYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblM4_INVENTORY_ITEMS_PROPERTYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS_PROPERTYRowChangedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS_PROPERTYRowChanged(Me, New tblM4_INVENTORY_ITEMS_PROPERTYRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS_PROPERTYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS_PROPERTYRowChangingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS_PROPERTYRowChanging(Me, New tblM4_INVENTORY_ITEMS_PROPERTYRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS_PROPERTYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS_PROPERTYRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS_PROPERTYRowDeleted(Me, New tblM4_INVENTORY_ITEMS_PROPERTYRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS_PROPERTYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblM4_INVENTORY_ITEMS_PROPERTYRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblM4_INVENTORY_ITEMS_PROPERTYRowDeleting(Me, New tblM4_INVENTORY_ITEMS_PROPERTYRowChangeEvent(CType(e.Row,tblM4_INVENTORY_ITEMS_PROPERTYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblM4_INVENTORY_ITEMS_PROPERTYRow(ByVal row As tblM4_INVENTORY_ITEMS_PROPERTYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblM4_INVENTORY_ITEMS_PROPERTYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PR_PARTICULARS_PREVIEWDataTable
        Inherits Global.System.Data.TypedTableBase(Of PR_PARTICULARS_PREVIEWRow)
        
        Private columnPR_DATEREQUESTED As Global.System.Data.DataColumn
        
        Private columnPR_APPCODE As Global.System.Data.DataColumn
        
        Private columnPR_PURPOSE As Global.System.Data.DataColumn
        
        Private columnPR_REQUESTEDBY As Global.System.Data.DataColumn
        
        Private columnPR_REQUESTEDBYPOSITION As Global.System.Data.DataColumn
        
        Private columnPR_APPROVEDBY As Global.System.Data.DataColumn
        
        Private columnPR_APPROVEDBYPOSITION As Global.System.Data.DataColumn
        
        Private columnPR_CERTIFIEDBY As Global.System.Data.DataColumn
        
        Private columnPR_CERTIFIEDBYPOSITION As Global.System.Data.DataColumn
        
        Private columnPR_NOTEDBY As Global.System.Data.DataColumn
        
        Private columnPR_NOTEDBYPOSITION As Global.System.Data.DataColumn
        
        Private columnPR_DEPARTMENT As Global.System.Data.DataColumn
        
        Private columnPR_DIVISION As Global.System.Data.DataColumn
        
        Private columnPRI_ITEM_DESCRIPTION As Global.System.Data.DataColumn
        
        Private columnPRI_QTY As Global.System.Data.DataColumn
        
        Private columnPRI_UNITOFISSUE As Global.System.Data.DataColumn
        
        Private columnPRI_STOCKNO As Global.System.Data.DataColumn
        
        Private columnPRI_ESTIMATEDUNITCOST As Global.System.Data.DataColumn
        
        Private columnPRI_ESTIMATEDCOST As Global.System.Data.DataColumn
        
        Private columnPRI_ISDOLLARS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PR_PARTICULARS_PREVIEW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_DATEREQUESTEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_DATEREQUESTED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_APPCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_APPCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_PURPOSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_PURPOSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_REQUESTEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_REQUESTEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_REQUESTEDBYPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_REQUESTEDBYPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_APPROVEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_APPROVEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_APPROVEDBYPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_APPROVEDBYPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_CERTIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_CERTIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_CERTIFIEDBYPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_CERTIFIEDBYPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_NOTEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_NOTEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_NOTEDBYPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_NOTEDBYPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_DEPARTMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_DEPARTMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PR_DIVISIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPR_DIVISION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRI_ITEM_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRI_ITEM_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRI_QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRI_QTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRI_UNITOFISSUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRI_UNITOFISSUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRI_STOCKNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRI_STOCKNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRI_ESTIMATEDUNITCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRI_ESTIMATEDUNITCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRI_ESTIMATEDCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRI_ESTIMATEDCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRI_ISDOLLARSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRI_ISDOLLARS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PR_PARTICULARS_PREVIEWRow
            Get
                Return CType(Me.Rows(index),PR_PARTICULARS_PREVIEWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event PR_PARTICULARS_PREVIEWRowChanging As PR_PARTICULARS_PREVIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event PR_PARTICULARS_PREVIEWRowChanged As PR_PARTICULARS_PREVIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event PR_PARTICULARS_PREVIEWRowDeleting As PR_PARTICULARS_PREVIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event PR_PARTICULARS_PREVIEWRowDeleted As PR_PARTICULARS_PREVIEWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddPR_PARTICULARS_PREVIEWRow(ByVal row As PR_PARTICULARS_PREVIEWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddPR_PARTICULARS_PREVIEWRow( _
                    ByVal PR_DATEREQUESTED As String,  _
                    ByVal PR_APPCODE As String,  _
                    ByVal PR_PURPOSE As String,  _
                    ByVal PR_REQUESTEDBY As String,  _
                    ByVal PR_REQUESTEDBYPOSITION As String,  _
                    ByVal PR_APPROVEDBY As String,  _
                    ByVal PR_APPROVEDBYPOSITION As String,  _
                    ByVal PR_CERTIFIEDBY As String,  _
                    ByVal PR_CERTIFIEDBYPOSITION As String,  _
                    ByVal PR_NOTEDBY As String,  _
                    ByVal PR_NOTEDBYPOSITION As String,  _
                    ByVal PR_DEPARTMENT As String,  _
                    ByVal PR_DIVISION As String,  _
                    ByVal PRI_ITEM_DESCRIPTION As String,  _
                    ByVal PRI_QTY As String,  _
                    ByVal PRI_UNITOFISSUE As String,  _
                    ByVal PRI_STOCKNO As String,  _
                    ByVal PRI_ESTIMATEDUNITCOST As Decimal,  _
                    ByVal PRI_ESTIMATEDCOST As Decimal,  _
                    ByVal PRI_ISDOLLARS As Boolean) As PR_PARTICULARS_PREVIEWRow
            Dim rowPR_PARTICULARS_PREVIEWRow As PR_PARTICULARS_PREVIEWRow = CType(Me.NewRow,PR_PARTICULARS_PREVIEWRow)
            Dim columnValuesArray() As Object = New Object() {PR_DATEREQUESTED, PR_APPCODE, PR_PURPOSE, PR_REQUESTEDBY, PR_REQUESTEDBYPOSITION, PR_APPROVEDBY, PR_APPROVEDBYPOSITION, PR_CERTIFIEDBY, PR_CERTIFIEDBYPOSITION, PR_NOTEDBY, PR_NOTEDBYPOSITION, PR_DEPARTMENT, PR_DIVISION, PRI_ITEM_DESCRIPTION, PRI_QTY, PRI_UNITOFISSUE, PRI_STOCKNO, PRI_ESTIMATEDUNITCOST, PRI_ESTIMATEDCOST, PRI_ISDOLLARS}
            rowPR_PARTICULARS_PREVIEWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPR_PARTICULARS_PREVIEWRow)
            Return rowPR_PARTICULARS_PREVIEWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PR_PARTICULARS_PREVIEWDataTable = CType(MyBase.Clone,PR_PARTICULARS_PREVIEWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PR_PARTICULARS_PREVIEWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPR_DATEREQUESTED = MyBase.Columns("PR_DATEREQUESTED")
            Me.columnPR_APPCODE = MyBase.Columns("PR_APPCODE")
            Me.columnPR_PURPOSE = MyBase.Columns("PR_PURPOSE")
            Me.columnPR_REQUESTEDBY = MyBase.Columns("PR_REQUESTEDBY")
            Me.columnPR_REQUESTEDBYPOSITION = MyBase.Columns("PR_REQUESTEDBYPOSITION")
            Me.columnPR_APPROVEDBY = MyBase.Columns("PR_APPROVEDBY")
            Me.columnPR_APPROVEDBYPOSITION = MyBase.Columns("PR_APPROVEDBYPOSITION")
            Me.columnPR_CERTIFIEDBY = MyBase.Columns("PR_CERTIFIEDBY")
            Me.columnPR_CERTIFIEDBYPOSITION = MyBase.Columns("PR_CERTIFIEDBYPOSITION")
            Me.columnPR_NOTEDBY = MyBase.Columns("PR_NOTEDBY")
            Me.columnPR_NOTEDBYPOSITION = MyBase.Columns("PR_NOTEDBYPOSITION")
            Me.columnPR_DEPARTMENT = MyBase.Columns("PR_DEPARTMENT")
            Me.columnPR_DIVISION = MyBase.Columns("PR_DIVISION")
            Me.columnPRI_ITEM_DESCRIPTION = MyBase.Columns("PRI_ITEM_DESCRIPTION")
            Me.columnPRI_QTY = MyBase.Columns("PRI_QTY")
            Me.columnPRI_UNITOFISSUE = MyBase.Columns("PRI_UNITOFISSUE")
            Me.columnPRI_STOCKNO = MyBase.Columns("PRI_STOCKNO")
            Me.columnPRI_ESTIMATEDUNITCOST = MyBase.Columns("PRI_ESTIMATEDUNITCOST")
            Me.columnPRI_ESTIMATEDCOST = MyBase.Columns("PRI_ESTIMATEDCOST")
            Me.columnPRI_ISDOLLARS = MyBase.Columns("PRI_ISDOLLARS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPR_DATEREQUESTED = New Global.System.Data.DataColumn("PR_DATEREQUESTED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_DATEREQUESTED)
            Me.columnPR_APPCODE = New Global.System.Data.DataColumn("PR_APPCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_APPCODE)
            Me.columnPR_PURPOSE = New Global.System.Data.DataColumn("PR_PURPOSE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_PURPOSE)
            Me.columnPR_REQUESTEDBY = New Global.System.Data.DataColumn("PR_REQUESTEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_REQUESTEDBY)
            Me.columnPR_REQUESTEDBYPOSITION = New Global.System.Data.DataColumn("PR_REQUESTEDBYPOSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_REQUESTEDBYPOSITION)
            Me.columnPR_APPROVEDBY = New Global.System.Data.DataColumn("PR_APPROVEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_APPROVEDBY)
            Me.columnPR_APPROVEDBYPOSITION = New Global.System.Data.DataColumn("PR_APPROVEDBYPOSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_APPROVEDBYPOSITION)
            Me.columnPR_CERTIFIEDBY = New Global.System.Data.DataColumn("PR_CERTIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_CERTIFIEDBY)
            Me.columnPR_CERTIFIEDBYPOSITION = New Global.System.Data.DataColumn("PR_CERTIFIEDBYPOSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_CERTIFIEDBYPOSITION)
            Me.columnPR_NOTEDBY = New Global.System.Data.DataColumn("PR_NOTEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_NOTEDBY)
            Me.columnPR_NOTEDBYPOSITION = New Global.System.Data.DataColumn("PR_NOTEDBYPOSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_NOTEDBYPOSITION)
            Me.columnPR_DEPARTMENT = New Global.System.Data.DataColumn("PR_DEPARTMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_DEPARTMENT)
            Me.columnPR_DIVISION = New Global.System.Data.DataColumn("PR_DIVISION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPR_DIVISION)
            Me.columnPRI_ITEM_DESCRIPTION = New Global.System.Data.DataColumn("PRI_ITEM_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRI_ITEM_DESCRIPTION)
            Me.columnPRI_QTY = New Global.System.Data.DataColumn("PRI_QTY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRI_QTY)
            Me.columnPRI_UNITOFISSUE = New Global.System.Data.DataColumn("PRI_UNITOFISSUE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRI_UNITOFISSUE)
            Me.columnPRI_STOCKNO = New Global.System.Data.DataColumn("PRI_STOCKNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRI_STOCKNO)
            Me.columnPRI_ESTIMATEDUNITCOST = New Global.System.Data.DataColumn("PRI_ESTIMATEDUNITCOST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRI_ESTIMATEDUNITCOST)
            Me.columnPRI_ESTIMATEDCOST = New Global.System.Data.DataColumn("PRI_ESTIMATEDCOST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRI_ESTIMATEDCOST)
            Me.columnPRI_ISDOLLARS = New Global.System.Data.DataColumn("PRI_ISDOLLARS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRI_ISDOLLARS)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewPR_PARTICULARS_PREVIEWRow() As PR_PARTICULARS_PREVIEWRow
            Return CType(Me.NewRow,PR_PARTICULARS_PREVIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PR_PARTICULARS_PREVIEWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PR_PARTICULARS_PREVIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PR_PARTICULARS_PREVIEWRowChangedEvent) Is Nothing) Then
                RaiseEvent PR_PARTICULARS_PREVIEWRowChanged(Me, New PR_PARTICULARS_PREVIEWRowChangeEvent(CType(e.Row,PR_PARTICULARS_PREVIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PR_PARTICULARS_PREVIEWRowChangingEvent) Is Nothing) Then
                RaiseEvent PR_PARTICULARS_PREVIEWRowChanging(Me, New PR_PARTICULARS_PREVIEWRowChangeEvent(CType(e.Row,PR_PARTICULARS_PREVIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PR_PARTICULARS_PREVIEWRowDeletedEvent) Is Nothing) Then
                RaiseEvent PR_PARTICULARS_PREVIEWRowDeleted(Me, New PR_PARTICULARS_PREVIEWRowChangeEvent(CType(e.Row,PR_PARTICULARS_PREVIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PR_PARTICULARS_PREVIEWRowDeletingEvent) Is Nothing) Then
                RaiseEvent PR_PARTICULARS_PREVIEWRowDeleting(Me, New PR_PARTICULARS_PREVIEWRowChangeEvent(CType(e.Row,PR_PARTICULARS_PREVIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovePR_PARTICULARS_PREVIEWRow(ByVal row As PR_PARTICULARS_PREVIEWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PR_PARTICULARS_PREVIEWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ItemsDataGridViewDataTable
        Inherits Global.System.Data.TypedTableBase(Of ItemsDataGridViewRow)
        
        Private columnItemCode As Global.System.Data.DataColumn
        
        Private columnSerialNo As Global.System.Data.DataColumn
        
        Private columnItemDescription As Global.System.Data.DataColumn
        
        Private columnUnitType As Global.System.Data.DataColumn
        
        Private columnUnitCost As Global.System.Data.DataColumn
        
        Private columnTotalCost As Global.System.Data.DataColumn
        
        Private columnQuantity As Global.System.Data.DataColumn
        
        Private columnDateAcquisition As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ItemsDataGridView"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ItemCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SerialNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerialNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ItemDescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UnitTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnitType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UnitCostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnitCost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TotalCostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalCost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property QuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DateAcquisitionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateAcquisition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ItemsDataGridViewRow
            Get
                Return CType(Me.Rows(index),ItemsDataGridViewRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ItemsDataGridViewRowChanging As ItemsDataGridViewRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ItemsDataGridViewRowChanged As ItemsDataGridViewRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ItemsDataGridViewRowDeleting As ItemsDataGridViewRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ItemsDataGridViewRowDeleted As ItemsDataGridViewRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddItemsDataGridViewRow(ByVal row As ItemsDataGridViewRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddItemsDataGridViewRow(ByVal ItemCode As String, ByVal SerialNo As String, ByVal ItemDescription As String, ByVal UnitType As String, ByVal UnitCost As String, ByVal TotalCost As String, ByVal Quantity As String, ByVal DateAcquisition As String) As ItemsDataGridViewRow
            Dim rowItemsDataGridViewRow As ItemsDataGridViewRow = CType(Me.NewRow,ItemsDataGridViewRow)
            Dim columnValuesArray() As Object = New Object() {ItemCode, SerialNo, ItemDescription, UnitType, UnitCost, TotalCost, Quantity, DateAcquisition}
            rowItemsDataGridViewRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowItemsDataGridViewRow)
            Return rowItemsDataGridViewRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ItemsDataGridViewDataTable = CType(MyBase.Clone,ItemsDataGridViewDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ItemsDataGridViewDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnItemCode = MyBase.Columns("ItemCode")
            Me.columnSerialNo = MyBase.Columns("SerialNo")
            Me.columnItemDescription = MyBase.Columns("ItemDescription")
            Me.columnUnitType = MyBase.Columns("UnitType")
            Me.columnUnitCost = MyBase.Columns("UnitCost")
            Me.columnTotalCost = MyBase.Columns("TotalCost")
            Me.columnQuantity = MyBase.Columns("Quantity")
            Me.columnDateAcquisition = MyBase.Columns("DateAcquisition")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnItemCode = New Global.System.Data.DataColumn("ItemCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemCode)
            Me.columnSerialNo = New Global.System.Data.DataColumn("SerialNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerialNo)
            Me.columnItemDescription = New Global.System.Data.DataColumn("ItemDescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemDescription)
            Me.columnUnitType = New Global.System.Data.DataColumn("UnitType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnitType)
            Me.columnUnitCost = New Global.System.Data.DataColumn("UnitCost", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnitCost)
            Me.columnTotalCost = New Global.System.Data.DataColumn("TotalCost", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalCost)
            Me.columnQuantity = New Global.System.Data.DataColumn("Quantity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuantity)
            Me.columnDateAcquisition = New Global.System.Data.DataColumn("DateAcquisition", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateAcquisition)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewItemsDataGridViewRow() As ItemsDataGridViewRow
            Return CType(Me.NewRow,ItemsDataGridViewRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ItemsDataGridViewRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ItemsDataGridViewRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ItemsDataGridViewRowChangedEvent) Is Nothing) Then
                RaiseEvent ItemsDataGridViewRowChanged(Me, New ItemsDataGridViewRowChangeEvent(CType(e.Row,ItemsDataGridViewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ItemsDataGridViewRowChangingEvent) Is Nothing) Then
                RaiseEvent ItemsDataGridViewRowChanging(Me, New ItemsDataGridViewRowChangeEvent(CType(e.Row,ItemsDataGridViewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ItemsDataGridViewRowDeletedEvent) Is Nothing) Then
                RaiseEvent ItemsDataGridViewRowDeleted(Me, New ItemsDataGridViewRowChangeEvent(CType(e.Row,ItemsDataGridViewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ItemsDataGridViewRowDeletingEvent) Is Nothing) Then
                RaiseEvent ItemsDataGridViewRowDeleting(Me, New ItemsDataGridViewRowChangeEvent(CType(e.Row,ItemsDataGridViewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveItemsDataGridViewRow(ByVal row As ItemsDataGridViewRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_PROPERTYDB = New DS_PROPERTYDB()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ItemsDataGridViewDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBLG3_COMPANY_INFORow
        Inherits Global.System.Data.DataRow
        
        Private tableTBLG3_COMPANY_INFO As TBLG3_COMPANY_INFODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBLG3_COMPANY_INFO = CType(Me.Table,TBLG3_COMPANY_INFODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_TIN_NUMBER() As String
            Get
                Return CType(Me(Me.tableTBLG3_COMPANY_INFO.COM_TIN_NUMBERColumn),String)
            End Get
            Set
                Me(Me.tableTBLG3_COMPANY_INFO.COM_TIN_NUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_COMPANY_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_COMPANY_INFO.COM_COMPANY_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_COMPANY_NAME' in table 'TBLG3_COMPANY_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_COMPANY_INFO.COM_COMPANY_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_ADDRESS() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_COMPANY_INFO.COM_ADDRESSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_ADDRESS' in table 'TBLG3_COMPANY_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_COMPANY_INFO.COM_ADDRESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_CONTACT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_COMPANY_INFO.COM_CONTACT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_CONTACT_NO' in table 'TBLG3_COMPANY_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_COMPANY_INFO.COM_CONTACT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_FAX_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_COMPANY_INFO.COM_FAX_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_FAX_NO' in table 'TBLG3_COMPANY_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_COMPANY_INFO.COM_FAX_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_COMPANY_INFO.COM_EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_EMAIL' in table 'TBLG3_COMPANY_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_COMPANY_INFO.COM_EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_DIRECTORY() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_COMPANY_INFO.COM_DIRECTORYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_DIRECTORY' in table 'TBLG3_COMPANY_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_COMPANY_INFO.COM_DIRECTORYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_COMPANY_INFO.COM_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_STATUS' in table 'TBLG3_COMPANY_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_COMPANY_INFO.COM_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_COMPANY_INFO.EMP_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_NO' in table 'TBLG3_COMPANY_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_COMPANY_INFO.EMP_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_COMPANY_NAMENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_COMPANY_INFO.COM_COMPANY_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_COMPANY_NAMENull()
            Me(Me.tableTBLG3_COMPANY_INFO.COM_COMPANY_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_ADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_COMPANY_INFO.COM_ADDRESSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_ADDRESSNull()
            Me(Me.tableTBLG3_COMPANY_INFO.COM_ADDRESSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_CONTACT_NONull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_COMPANY_INFO.COM_CONTACT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_CONTACT_NONull()
            Me(Me.tableTBLG3_COMPANY_INFO.COM_CONTACT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_FAX_NONull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_COMPANY_INFO.COM_FAX_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_FAX_NONull()
            Me(Me.tableTBLG3_COMPANY_INFO.COM_FAX_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_EMAILNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_COMPANY_INFO.COM_EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_EMAILNull()
            Me(Me.tableTBLG3_COMPANY_INFO.COM_EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_DIRECTORYNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_COMPANY_INFO.COM_DIRECTORYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_DIRECTORYNull()
            Me(Me.tableTBLG3_COMPANY_INFO.COM_DIRECTORYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_COMPANY_INFO.COM_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_STATUSNull()
            Me(Me.tableTBLG3_COMPANY_INFO.COM_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_NONull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_COMPANY_INFO.EMP_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_NONull()
            Me(Me.tableTBLG3_COMPANY_INFO.EMP_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetTBLG3_DELIVERY_RECEIPTRows() As TBLG3_DELIVERY_RECEIPTRow()
            If (Me.Table.ChildRelations("FK_TBLG3_DELIVERY_RECEIPT_TBLG3_COMPANY_INFO") Is Nothing) Then
                Return New TBLG3_DELIVERY_RECEIPTRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TBLG3_DELIVERY_RECEIPT_TBLG3_COMPANY_INFO")),TBLG3_DELIVERY_RECEIPTRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetTBLG3_INVOICERows() As TBLG3_INVOICERow()
            If (Me.Table.ChildRelations("FK_TBLG3_INVOICE_TBLG3_COMPANY_INFO") Is Nothing) Then
                Return New TBLG3_INVOICERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TBLG3_INVOICE_TBLG3_COMPANY_INFO")),TBLG3_INVOICERow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_PURCHASEREQUEST_ITEMRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_PURCHASEREQUEST_ITEM As tblM4_PURCHASEREQUEST_ITEMDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_PURCHASEREQUEST_ITEM = CType(Me.Table,tblM4_PURCHASEREQUEST_ITEMDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRI_ITEMNO() As Integer
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PRI_ITEMNOColumn),Integer)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PRI_ITEMNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_QUANTITY() As Integer
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_QUANTITYColumn),Integer)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_QUANTITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_UNITISSUE() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_UNITISSUEColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_UNITISSUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRI_ITEMDESCRIPTION() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PRI_ITEMDESCRIPTIONColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PRI_ITEMDESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_STOCKNO() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_STOCKNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_STOCKNO' in table 'tblM4_PURCHASEREQUEST_ITEM' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_STOCKNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_ESTIMATEDUNITCOST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_ESTIMATEDUNITCOSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_ESTIMATEDUNITCOST' in table 'tblM4_PURCHASEREQUEST_ITEM'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_ESTIMATEDUNITCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_ESTIMATEDCOST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_ESTIMATEDCOSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_ESTIMATEDCOST' in table 'tblM4_PURCHASEREQUEST_ITEM' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_ESTIMATEDCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_PRNO() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_PRNOColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_PRNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tblM4_PURCHASEREQUESTRow() As tblM4_PURCHASEREQUESTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tblM4_PURCHASEREQUEST_ITEM_tblM4_PURCHASEREQUEST")),tblM4_PURCHASEREQUESTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tblM4_PURCHASEREQUEST_ITEM_tblM4_PURCHASEREQUEST"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_STOCKNONull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_STOCKNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_STOCKNONull()
            Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_STOCKNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_ESTIMATEDUNITCOSTNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_ESTIMATEDUNITCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_ESTIMATEDUNITCOSTNull()
            Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_ESTIMATEDUNITCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_ESTIMATEDCOSTNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_ESTIMATEDCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_ESTIMATEDCOSTNull()
            Me(Me.tabletblM4_PURCHASEREQUEST_ITEM.PR_ESTIMATEDCOSTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBLG3_DELIVER_RECEIPT_DETAILSRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBLG3_DELIVER_RECEIPT_DETAILS As TBLG3_DELIVER_RECEIPT_DETAILSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBLG3_DELIVER_RECEIPT_DETAILS = CType(Me.Table,TBLG3_DELIVER_RECEIPT_DETAILSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DRD_ID() As Integer
            Get
                Return CType(Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DR_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DR_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DR_ID' in table 'TBLG3_DELIVER_RECEIPT_DETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DR_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UN_NO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.UN_NOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UN_NO' in table 'TBLG3_DELIVER_RECEIPT_DETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.UN_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DRD_QUANTITY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_QUANTITYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DRD_QUANTITY' in table 'TBLG3_DELIVER_RECEIPT_DETAILS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_QUANTITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DRD_DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DRD_DESCRIPTION' in table 'TBLG3_DELIVER_RECEIPT_DETAILS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DRD_WARANTY() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_WARANTYColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DRD_WARANTY' in table 'TBLG3_DELIVER_RECEIPT_DETAILS' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_WARANTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DRD_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DRD_STATUS' in table 'TBLG3_DELIVER_RECEIPT_DETAILS' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.HRIS_EMPNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPNO' in table 'TBLG3_DELIVER_RECEIPT_DETAILS' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.HRIS_EMPNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TBLG3_DELIVERY_RECEIPTRow() As TBLG3_DELIVERY_RECEIPTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_DELIVERY_RECEIPT")),TBLG3_DELIVERY_RECEIPTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_DELIVERY_RECEIPT"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TBLG3_UNITSRow() As TBLG3_UNITSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_UNITS")),TBLG3_UNITSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_UNITS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDR_IDNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DR_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDR_IDNull()
            Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DR_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUN_NONull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.UN_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUN_NONull()
            Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.UN_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDRD_QUANTITYNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_QUANTITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDRD_QUANTITYNull()
            Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_QUANTITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDRD_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDRD_DESCRIPTIONNull()
            Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDRD_WARANTYNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_WARANTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDRD_WARANTYNull()
            Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_WARANTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDRD_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDRD_STATUSNull()
            Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.DRD_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPNONull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.HRIS_EMPNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPNONull()
            Me(Me.tableTBLG3_DELIVER_RECEIPT_DETAILS.HRIS_EMPNOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBLG3_DELIVERY_RECEIPTRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBLG3_DELIVERY_RECEIPT As TBLG3_DELIVERY_RECEIPTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBLG3_DELIVERY_RECEIPT = CType(Me.Table,TBLG3_DELIVERY_RECEIPTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DR_ID() As String
            Get
                Return CType(Me(Me.tableTBLG3_DELIVERY_RECEIPT.DR_IDColumn),String)
            End Get
            Set
                Me(Me.tableTBLG3_DELIVERY_RECEIPT.DR_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DR_NO() As String
            Get
                Return CType(Me(Me.tableTBLG3_DELIVERY_RECEIPT.DR_NOColumn),String)
            End Get
            Set
                Me(Me.tableTBLG3_DELIVERY_RECEIPT.DR_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_TIN_NUMBER() As String
            Get
                Return CType(Me(Me.tableTBLG3_DELIVERY_RECEIPT.COM_TIN_NUMBERColumn),String)
            End Get
            Set
                Me(Me.tableTBLG3_DELIVERY_RECEIPT.COM_TIN_NUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INV_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_DELIVERY_RECEIPT.INV_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INV_ID' in table 'TBLG3_DELIVERY_RECEIPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_DELIVERY_RECEIPT.INV_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DR_DELIVER() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_DELIVERY_RECEIPT.DR_DELIVERColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DR_DELIVER' in table 'TBLG3_DELIVERY_RECEIPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_DELIVERY_RECEIPT.DR_DELIVERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DR_RECEIVED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_DELIVERY_RECEIPT.DR_RECEIVED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DR_RECEIVED_BY' in table 'TBLG3_DELIVERY_RECEIPT' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_DELIVERY_RECEIPT.DR_RECEIVED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DR_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_DELIVERY_RECEIPT.DR_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DR_STATUS' in table 'TBLG3_DELIVERY_RECEIPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_DELIVERY_RECEIPT.DR_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_DELIVERY_RECEIPT.HRIS_EMPNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPNO' in table 'TBLG3_DELIVERY_RECEIPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_DELIVERY_RECEIPT.HRIS_EMPNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TBLG3_COMPANY_INFORow() As TBLG3_COMPANY_INFORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TBLG3_DELIVERY_RECEIPT_TBLG3_COMPANY_INFO")),TBLG3_COMPANY_INFORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TBLG3_DELIVERY_RECEIPT_TBLG3_COMPANY_INFO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINV_IDNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_DELIVERY_RECEIPT.INV_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINV_IDNull()
            Me(Me.tableTBLG3_DELIVERY_RECEIPT.INV_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDR_DELIVERNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_DELIVERY_RECEIPT.DR_DELIVERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDR_DELIVERNull()
            Me(Me.tableTBLG3_DELIVERY_RECEIPT.DR_DELIVERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDR_RECEIVED_BYNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_DELIVERY_RECEIPT.DR_RECEIVED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDR_RECEIVED_BYNull()
            Me(Me.tableTBLG3_DELIVERY_RECEIPT.DR_RECEIVED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDR_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_DELIVERY_RECEIPT.DR_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDR_STATUSNull()
            Me(Me.tableTBLG3_DELIVERY_RECEIPT.DR_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPNONull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_DELIVERY_RECEIPT.HRIS_EMPNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPNONull()
            Me(Me.tableTBLG3_DELIVERY_RECEIPT.HRIS_EMPNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetTBLG3_DELIVER_RECEIPT_DETAILSRows() As TBLG3_DELIVER_RECEIPT_DETAILSRow()
            If (Me.Table.ChildRelations("FK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_DELIVERY_RECEIPT") Is Nothing) Then
                Return New TBLG3_DELIVER_RECEIPT_DETAILSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_DELIVERY_RECEIPT")),TBLG3_DELIVER_RECEIPT_DETAILSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBLG3_INVOICERow
        Inherits Global.System.Data.DataRow
        
        Private tableTBLG3_INVOICE As TBLG3_INVOICEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBLG3_INVOICE = CType(Me.Table,TBLG3_INVOICEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INV_ID() As String
            Get
                Return CType(Me(Me.tableTBLG3_INVOICE.INV_IDColumn),String)
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE.INV_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INV_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_INVOICE.INV_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INV_NO' in table 'TBLG3_INVOICE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE.INV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_TIN_NUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_INVOICE.COM_TIN_NUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_TIN_NUMBER' in table 'TBLG3_INVOICE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE.COM_TIN_NUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INV_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_INVOICE.INV_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INV_DATE' in table 'TBLG3_INVOICE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE.INV_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INV_DIRECTORY() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_INVOICE.INV_DIRECTORYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INV_DIRECTORY' in table 'TBLG3_INVOICE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE.INV_DIRECTORYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INV_TOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_INVOICE.INV_TOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INV_TOTAL' in table 'TBLG3_INVOICE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE.INV_TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INV_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_INVOICE.INV_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INV_STATUS' in table 'TBLG3_INVOICE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE.INV_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_INVOICE.HRIS_EMPNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPNO' in table 'TBLG3_INVOICE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE.HRIS_EMPNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TBLG3_COMPANY_INFORow() As TBLG3_COMPANY_INFORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TBLG3_INVOICE_TBLG3_COMPANY_INFO")),TBLG3_COMPANY_INFORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TBLG3_INVOICE_TBLG3_COMPANY_INFO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINV_NONull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_INVOICE.INV_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINV_NONull()
            Me(Me.tableTBLG3_INVOICE.INV_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_TIN_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_INVOICE.COM_TIN_NUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_TIN_NUMBERNull()
            Me(Me.tableTBLG3_INVOICE.COM_TIN_NUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINV_DATENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_INVOICE.INV_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINV_DATENull()
            Me(Me.tableTBLG3_INVOICE.INV_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINV_DIRECTORYNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_INVOICE.INV_DIRECTORYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINV_DIRECTORYNull()
            Me(Me.tableTBLG3_INVOICE.INV_DIRECTORYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINV_TOTALNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_INVOICE.INV_TOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINV_TOTALNull()
            Me(Me.tableTBLG3_INVOICE.INV_TOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINV_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_INVOICE.INV_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINV_STATUSNull()
            Me(Me.tableTBLG3_INVOICE.INV_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPNONull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_INVOICE.HRIS_EMPNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPNONull()
            Me(Me.tableTBLG3_INVOICE.HRIS_EMPNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetTBLG3_INVOICE_DETAILSRows() As TBLG3_INVOICE_DETAILSRow()
            If (Me.Table.ChildRelations("FK_TBLG3_INVOICE_DETAILS_TBLG3_INVOICE") Is Nothing) Then
                Return New TBLG3_INVOICE_DETAILSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TBLG3_INVOICE_DETAILS_TBLG3_INVOICE")),TBLG3_INVOICE_DETAILSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBLG3_INVOICE_DETAILSRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBLG3_INVOICE_DETAILS As TBLG3_INVOICE_DETAILSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBLG3_INVOICE_DETAILS = CType(Me.Table,TBLG3_INVOICE_DETAILSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INVD_ID() As Integer
            Get
                Return CType(Me(Me.tableTBLG3_INVOICE_DETAILS.INVD_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE_DETAILS.INVD_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INV_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_INVOICE_DETAILS.INV_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INV_ID' in table 'TBLG3_INVOICE_DETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE_DETAILS.INV_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UN_NO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_INVOICE_DETAILS.UN_NOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UN_NO' in table 'TBLG3_INVOICE_DETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE_DETAILS.UN_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INVD_QTY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_INVOICE_DETAILS.INVD_QTYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVD_QTY' in table 'TBLG3_INVOICE_DETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE_DETAILS.INVD_QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INVD_PRICE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_INVOICE_DETAILS.INVD_PRICEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVD_PRICE' in table 'TBLG3_INVOICE_DETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE_DETAILS.INVD_PRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INVD_DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_INVOICE_DETAILS.INVD_DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVD_DESCRIPTION' in table 'TBLG3_INVOICE_DETAILS' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE_DETAILS.INVD_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INVD_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_INVOICE_DETAILS.INVD_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVD_STATUS' in table 'TBLG3_INVOICE_DETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE_DETAILS.INVD_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_INVOICE_DETAILS.HRIS_EMPNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPNO' in table 'TBLG3_INVOICE_DETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_INVOICE_DETAILS.HRIS_EMPNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TBLG3_INVOICERow() As TBLG3_INVOICERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TBLG3_INVOICE_DETAILS_TBLG3_INVOICE")),TBLG3_INVOICERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TBLG3_INVOICE_DETAILS_TBLG3_INVOICE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINV_IDNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_INVOICE_DETAILS.INV_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINV_IDNull()
            Me(Me.tableTBLG3_INVOICE_DETAILS.INV_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUN_NONull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_INVOICE_DETAILS.UN_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUN_NONull()
            Me(Me.tableTBLG3_INVOICE_DETAILS.UN_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINVD_QTYNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_INVOICE_DETAILS.INVD_QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINVD_QTYNull()
            Me(Me.tableTBLG3_INVOICE_DETAILS.INVD_QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINVD_PRICENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_INVOICE_DETAILS.INVD_PRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINVD_PRICENull()
            Me(Me.tableTBLG3_INVOICE_DETAILS.INVD_PRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINVD_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_INVOICE_DETAILS.INVD_DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINVD_DESCRIPTIONNull()
            Me(Me.tableTBLG3_INVOICE_DETAILS.INVD_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINVD_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_INVOICE_DETAILS.INVD_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINVD_STATUSNull()
            Me(Me.tableTBLG3_INVOICE_DETAILS.INVD_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPNONull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_INVOICE_DETAILS.HRIS_EMPNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPNONull()
            Me(Me.tableTBLG3_INVOICE_DETAILS.HRIS_EMPNOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBLG3_PRIMARY_SIGNATORYRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBLG3_PRIMARY_SIGNATORY As TBLG3_PRIMARY_SIGNATORYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBLG3_PRIMARY_SIGNATORY = CType(Me.Table,TBLG3_PRIMARY_SIGNATORYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_TY_NO() As Integer
            Get
                Return CType(Me(Me.tableTBLG3_PRIMARY_SIGNATORY.SIG_TY_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableTBLG3_PRIMARY_SIGNATORY.SIG_TY_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO_USER() As String
            Get
                Return CType(Me(Me.tableTBLG3_PRIMARY_SIGNATORY.HRIS_EMPNO_USERColumn),String)
            End Get
            Set
                Me(Me.tableTBLG3_PRIMARY_SIGNATORY.HRIS_EMPNO_USERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO_SIG() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_PRIMARY_SIGNATORY.HRIS_EMPNO_SIGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPNO_SIG' in table 'TBLG3_PRIMARY_SIGNATORY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_PRIMARY_SIGNATORY.HRIS_EMPNO_SIGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPNO_SIGNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_PRIMARY_SIGNATORY.HRIS_EMPNO_SIGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPNO_SIGNull()
            Me(Me.tableTBLG3_PRIMARY_SIGNATORY.HRIS_EMPNO_SIGColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBLG3_REG_BUSRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBLG3_REG_BUS As TBLG3_REG_BUSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBLG3_REG_BUS = CType(Me.Table,TBLG3_REG_BUSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_NO_SYSTEM() As String
            Get
                Return CType(Me(Me.tableTBLG3_REG_BUS.BUS_NO_SYSTEMColumn),String)
            End Get
            Set
                Me(Me.tableTBLG3_REG_BUS.BUS_NO_SYSTEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDIVS_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_BUS.HDIVS_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HDIVS_CODE' in table 'TBLG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_BUS.HDIVS_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_BUS.EMP_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_NO' in table 'TBLG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_BUS.EMP_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_BUS.BUS_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_DATE' in table 'TBLG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_BUS.BUS_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_PAYEE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_BUS.BUS_PAYEEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_PAYEE' in table 'TBLG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_BUS.BUS_PAYEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_OFFICE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_BUS.BUS_OFFICEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_OFFICE' in table 'TBLG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_BUS.BUS_OFFICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_ADDRESS() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_BUS.BUS_ADDRESSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_ADDRESS' in table 'TBLG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_BUS.BUS_ADDRESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_NAME_A() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_BUS.BUS_NAME_AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_NAME_A' in table 'TBLG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_BUS.BUS_NAME_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_POSITION_A() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_BUS.BUS_POSITION_AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_POSITION_A' in table 'TBLG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_BUS.BUS_POSITION_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_NAME_B() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_BUS.BUS_NAME_BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_NAME_B' in table 'TBLG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_BUS.BUS_NAME_BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_POSITION_B() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_BUS.BUS_POSITION_BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_POSITION_B' in table 'TBLG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_BUS.BUS_POSITION_BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_QR_CODE() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_BUS.BUS_QR_CODEColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_QR_CODE' in table 'TBLG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_BUS.BUS_QR_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_BUS.BUS_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_STATUS' in table 'TBLG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_BUS.BUS_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHDIVS_CODENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_BUS.HDIVS_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHDIVS_CODENull()
            Me(Me.tableTBLG3_REG_BUS.HDIVS_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_NONull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_BUS.EMP_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_NONull()
            Me(Me.tableTBLG3_REG_BUS.EMP_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_DATENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_BUS.BUS_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_DATENull()
            Me(Me.tableTBLG3_REG_BUS.BUS_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_PAYEENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_BUS.BUS_PAYEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_PAYEENull()
            Me(Me.tableTBLG3_REG_BUS.BUS_PAYEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_OFFICENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_BUS.BUS_OFFICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_OFFICENull()
            Me(Me.tableTBLG3_REG_BUS.BUS_OFFICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_ADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_BUS.BUS_ADDRESSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_ADDRESSNull()
            Me(Me.tableTBLG3_REG_BUS.BUS_ADDRESSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_NAME_ANull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_BUS.BUS_NAME_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_NAME_ANull()
            Me(Me.tableTBLG3_REG_BUS.BUS_NAME_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_POSITION_ANull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_BUS.BUS_POSITION_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_POSITION_ANull()
            Me(Me.tableTBLG3_REG_BUS.BUS_POSITION_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_NAME_BNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_BUS.BUS_NAME_BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_NAME_BNull()
            Me(Me.tableTBLG3_REG_BUS.BUS_NAME_BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_POSITION_BNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_BUS.BUS_POSITION_BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_POSITION_BNull()
            Me(Me.tableTBLG3_REG_BUS.BUS_POSITION_BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_QR_CODENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_BUS.BUS_QR_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_QR_CODENull()
            Me(Me.tableTBLG3_REG_BUS.BUS_QR_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_BUS.BUS_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_STATUSNull()
            Me(Me.tableTBLG3_REG_BUS.BUS_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetTBLG3_REG_PARTICULARRows() As TBLG3_REG_PARTICULARRow()
            If (Me.Table.ChildRelations("FK_TBLG3_REG_PARTICULAR_TBLG3_REG_BUS") Is Nothing) Then
                Return New TBLG3_REG_PARTICULARRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TBLG3_REG_PARTICULAR_TBLG3_REG_BUS")),TBLG3_REG_PARTICULARRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBLG3_REG_DVRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBLG3_REG_DV As TBLG3_REG_DVDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBLG3_REG_DV = CType(Me.Table,TBLG3_REG_DVDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_NO_SYSTEM() As String
            Get
                Return CType(Me(Me.tableTBLG3_REG_DV.DV_NO_SYSTEMColumn),String)
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.DV_NO_SYSTEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDIVS_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_DV.HDIVS_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HDIVS_CODE' in table 'TBLG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.HDIVS_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_DV.EMP_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_NO' in table 'TBLG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.EMP_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_DV.DV_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_DATE' in table 'TBLG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.DV_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_PAYEE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_DV.DV_PAYEEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_PAYEE' in table 'TBLG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.DV_PAYEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_TIN_EMPLOYEE_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_DV.DV_TIN_EMPLOYEE_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_TIN_EMPLOYEE_NO' in table 'TBLG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.DV_TIN_EMPLOYEE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_ADDRESS() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_DV.DV_ADDRESSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_ADDRESS' in table 'TBLG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.DV_ADDRESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_A_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_DV.DV_A_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_A_NAME' in table 'TBLG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.DV_A_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_A_POSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_DV.DV_A_POSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_A_POSITION' in table 'TBLG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.DV_A_POSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_C_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_DV.DV_C_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_C_NAME' in table 'TBLG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.DV_C_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_C_POSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_DV.DV_C_POSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_C_POSITION' in table 'TBLG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.DV_C_POSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_D_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_DV.DV_D_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_D_NAME' in table 'TBLG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.DV_D_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_D_POSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_DV.DV_D_POSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_D_POSITION' in table 'TBLG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.DV_D_POSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_DV.DV_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_STATUS' in table 'TBLG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.DV_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_QR_CODE() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_DV.DV_QR_CODEColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_QR_CODE' in table 'TBLG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.DV_QR_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_DV.DV_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_TYPE' in table 'TBLG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_DV.DV_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHDIVS_CODENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_DV.HDIVS_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHDIVS_CODENull()
            Me(Me.tableTBLG3_REG_DV.HDIVS_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_NONull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_DV.EMP_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_NONull()
            Me(Me.tableTBLG3_REG_DV.EMP_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_DATENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_DV.DV_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_DATENull()
            Me(Me.tableTBLG3_REG_DV.DV_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_PAYEENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_DV.DV_PAYEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_PAYEENull()
            Me(Me.tableTBLG3_REG_DV.DV_PAYEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_TIN_EMPLOYEE_NONull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_DV.DV_TIN_EMPLOYEE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_TIN_EMPLOYEE_NONull()
            Me(Me.tableTBLG3_REG_DV.DV_TIN_EMPLOYEE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_ADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_DV.DV_ADDRESSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_ADDRESSNull()
            Me(Me.tableTBLG3_REG_DV.DV_ADDRESSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_A_NAMENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_DV.DV_A_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_A_NAMENull()
            Me(Me.tableTBLG3_REG_DV.DV_A_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_A_POSITIONNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_DV.DV_A_POSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_A_POSITIONNull()
            Me(Me.tableTBLG3_REG_DV.DV_A_POSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_C_NAMENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_DV.DV_C_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_C_NAMENull()
            Me(Me.tableTBLG3_REG_DV.DV_C_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_C_POSITIONNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_DV.DV_C_POSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_C_POSITIONNull()
            Me(Me.tableTBLG3_REG_DV.DV_C_POSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_D_NAMENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_DV.DV_D_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_D_NAMENull()
            Me(Me.tableTBLG3_REG_DV.DV_D_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_D_POSITIONNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_DV.DV_D_POSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_D_POSITIONNull()
            Me(Me.tableTBLG3_REG_DV.DV_D_POSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_DV.DV_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_STATUSNull()
            Me(Me.tableTBLG3_REG_DV.DV_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_QR_CODENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_DV.DV_QR_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_QR_CODENull()
            Me(Me.tableTBLG3_REG_DV.DV_QR_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_TYPENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_DV.DV_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_TYPENull()
            Me(Me.tableTBLG3_REG_DV.DV_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetTBLG3_REG_PARTICULARRows() As TBLG3_REG_PARTICULARRow()
            If (Me.Table.ChildRelations("FK_TBLG3_REG_PARTICULAR_TBLG3_REG_DV") Is Nothing) Then
                Return New TBLG3_REG_PARTICULARRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TBLG3_REG_PARTICULAR_TBLG3_REG_DV")),TBLG3_REG_PARTICULARRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBLG3_REG_PARTICULARRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBLG3_REG_PARTICULAR As TBLG3_REG_PARTICULARDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBLG3_REG_PARTICULAR = CType(Me.Table,TBLG3_REG_PARTICULARDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_NO() As Integer
            Get
                Return CType(Me(Me.tableTBLG3_REG_PARTICULAR.PAR_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableTBLG3_REG_PARTICULAR.PAR_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_NO_SYSTEM() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_PARTICULAR.BUS_NO_SYSTEMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_NO_SYSTEM' in table 'TBLG3_REG_PARTICULAR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_PARTICULAR.BUS_NO_SYSTEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_PARTICULAR() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_PARTICULAR.PAR_PARTICULARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_PARTICULAR' in table 'TBLG3_REG_PARTICULAR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_PARTICULAR.PAR_PARTICULARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_MFO_PAP() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_PARTICULAR.PAR_MFO_PAPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_MFO_PAP' in table 'TBLG3_REG_PARTICULAR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_PARTICULAR.PAR_MFO_PAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_UACS_OBJECT_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_PARTICULAR.PAR_UACS_OBJECT_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_UACS_OBJECT_CODE' in table 'TBLG3_REG_PARTICULAR' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_PARTICULAR.PAR_UACS_OBJECT_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_PARTICULAR.PAR_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_AMOUNT' in table 'TBLG3_REG_PARTICULAR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_PARTICULAR.PAR_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_ISDOLLAR() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_PARTICULAR.PAR_ISDOLLARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_ISDOLLAR' in table 'TBLG3_REG_PARTICULAR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_PARTICULAR.PAR_ISDOLLARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_REG_PARTICULAR.PAR_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_STATUS' in table 'TBLG3_REG_PARTICULAR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_REG_PARTICULAR.PAR_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TBLG3_REG_BUSRow() As TBLG3_REG_BUSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TBLG3_REG_PARTICULAR_TBLG3_REG_BUS")),TBLG3_REG_BUSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TBLG3_REG_PARTICULAR_TBLG3_REG_BUS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TBLG3_REG_DVRow() As TBLG3_REG_DVRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TBLG3_REG_PARTICULAR_TBLG3_REG_DV")),TBLG3_REG_DVRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TBLG3_REG_PARTICULAR_TBLG3_REG_DV"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_NO_SYSTEMNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_PARTICULAR.BUS_NO_SYSTEMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_NO_SYSTEMNull()
            Me(Me.tableTBLG3_REG_PARTICULAR.BUS_NO_SYSTEMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_PARTICULARNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_PARTICULAR.PAR_PARTICULARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_PARTICULARNull()
            Me(Me.tableTBLG3_REG_PARTICULAR.PAR_PARTICULARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_MFO_PAPNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_PARTICULAR.PAR_MFO_PAPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_MFO_PAPNull()
            Me(Me.tableTBLG3_REG_PARTICULAR.PAR_MFO_PAPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_UACS_OBJECT_CODENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_PARTICULAR.PAR_UACS_OBJECT_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_UACS_OBJECT_CODENull()
            Me(Me.tableTBLG3_REG_PARTICULAR.PAR_UACS_OBJECT_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_PARTICULAR.PAR_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_AMOUNTNull()
            Me(Me.tableTBLG3_REG_PARTICULAR.PAR_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_ISDOLLARNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_PARTICULAR.PAR_ISDOLLARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_ISDOLLARNull()
            Me(Me.tableTBLG3_REG_PARTICULAR.PAR_ISDOLLARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_REG_PARTICULAR.PAR_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_STATUSNull()
            Me(Me.tableTBLG3_REG_PARTICULAR.PAR_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBLG3_SIGNATORYRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBLG3_SIGNATORY As TBLG3_SIGNATORYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBLG3_SIGNATORY = CType(Me.Table,TBLG3_SIGNATORYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_NO() As Integer
            Get
                Return CType(Me(Me.tableTBLG3_SIGNATORY.SIG_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY.SIG_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_IMAGE() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_SIGNATORY.SIG_IMAGEColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_IMAGE' in table 'TBLG3_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY.SIG_IMAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_LNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_SIGNATORY.SIG_LNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_LNAME' in table 'TBLG3_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY.SIG_LNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_FNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_SIGNATORY.SIG_FNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_FNAME' in table 'TBLG3_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY.SIG_FNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_MNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_SIGNATORY.SIG_MNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_MNAME' in table 'TBLG3_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY.SIG_MNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_POSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_SIGNATORY.SIG_POSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_POSITION' in table 'TBLG3_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY.SIG_POSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_OFFICE_ORDER() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_SIGNATORY.SIG_OFFICE_ORDERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_OFFICE_ORDER' in table 'TBLG3_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY.SIG_OFFICE_ORDERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_POLICY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_SIGNATORY.SIG_POLICYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_POLICY' in table 'TBLG3_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY.SIG_POLICYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_SIGNATORY.SIG_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_AMOUNT' in table 'TBLG3_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY.SIG_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_SIGNATORY.SIG_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_STATUS' in table 'TBLG3_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY.SIG_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDIVS_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_SIGNATORY.HDIVS_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HDIVS_CODE' in table 'TBLG3_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY.HDIVS_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_IMAGENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_SIGNATORY.SIG_IMAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_IMAGENull()
            Me(Me.tableTBLG3_SIGNATORY.SIG_IMAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_LNAMENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_SIGNATORY.SIG_LNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_LNAMENull()
            Me(Me.tableTBLG3_SIGNATORY.SIG_LNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_FNAMENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_SIGNATORY.SIG_FNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_FNAMENull()
            Me(Me.tableTBLG3_SIGNATORY.SIG_FNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_MNAMENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_SIGNATORY.SIG_MNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_MNAMENull()
            Me(Me.tableTBLG3_SIGNATORY.SIG_MNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_POSITIONNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_SIGNATORY.SIG_POSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_POSITIONNull()
            Me(Me.tableTBLG3_SIGNATORY.SIG_POSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_OFFICE_ORDERNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_SIGNATORY.SIG_OFFICE_ORDERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_OFFICE_ORDERNull()
            Me(Me.tableTBLG3_SIGNATORY.SIG_OFFICE_ORDERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_POLICYNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_SIGNATORY.SIG_POLICYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_POLICYNull()
            Me(Me.tableTBLG3_SIGNATORY.SIG_POLICYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_SIGNATORY.SIG_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_AMOUNTNull()
            Me(Me.tableTBLG3_SIGNATORY.SIG_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_SIGNATORY.SIG_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_STATUSNull()
            Me(Me.tableTBLG3_SIGNATORY.SIG_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHDIVS_CODENull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_SIGNATORY.HDIVS_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHDIVS_CODENull()
            Me(Me.tableTBLG3_SIGNATORY.HDIVS_CODEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBLG3_SIGNATORY_TYPERow
        Inherits Global.System.Data.DataRow
        
        Private tableTBLG3_SIGNATORY_TYPE As TBLG3_SIGNATORY_TYPEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBLG3_SIGNATORY_TYPE = CType(Me.Table,TBLG3_SIGNATORY_TYPEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_TY_NO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_SIGNATORY_TYPE.SIG_TY_NOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_TY_NO' in table 'TBLG3_SIGNATORY_TYPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY_TYPE.SIG_TY_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_TY_DESCRIPTON() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_SIGNATORY_TYPE.SIG_TY_DESCRIPTONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_TY_DESCRIPTON' in table 'TBLG3_SIGNATORY_TYPE' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY_TYPE.SIG_TY_DESCRIPTONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_TY_FORM() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_SIGNATORY_TYPE.SIG_TY_FORMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_TY_FORM' in table 'TBLG3_SIGNATORY_TYPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY_TYPE.SIG_TY_FORMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_TY_NONull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_SIGNATORY_TYPE.SIG_TY_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_TY_NONull()
            Me(Me.tableTBLG3_SIGNATORY_TYPE.SIG_TY_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_TY_DESCRIPTONNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_SIGNATORY_TYPE.SIG_TY_DESCRIPTONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_TY_DESCRIPTONNull()
            Me(Me.tableTBLG3_SIGNATORY_TYPE.SIG_TY_DESCRIPTONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_TY_FORMNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_SIGNATORY_TYPE.SIG_TY_FORMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_TY_FORMNull()
            Me(Me.tableTBLG3_SIGNATORY_TYPE.SIG_TY_FORMColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBLG3_UNITSRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBLG3_UNITS As TBLG3_UNITSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBLG3_UNITS = CType(Me.Table,TBLG3_UNITSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UN_NO() As Integer
            Get
                Return CType(Me(Me.tableTBLG3_UNITS.UN_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableTBLG3_UNITS.UN_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UN_DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_UNITS.UN_DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UN_DESCRIPTION' in table 'TBLG3_UNITS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_UNITS.UN_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUN_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_UNITS.UN_DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUN_DESCRIPTIONNull()
            Me(Me.tableTBLG3_UNITS.UN_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetTBLG3_DELIVER_RECEIPT_DETAILSRows() As TBLG3_DELIVER_RECEIPT_DETAILSRow()
            If (Me.Table.ChildRelations("FK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_UNITS") Is Nothing) Then
                Return New TBLG3_DELIVER_RECEIPT_DETAILSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TBLG3_DELIVER_RECEIPT_DETAILS_TBLG3_UNITS")),TBLG3_DELIVER_RECEIPT_DETAILSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_PURCHASEREQUESTRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_PURCHASEREQUEST As tblM4_PURCHASEREQUESTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_PURCHASEREQUEST = CType(Me.Table,tblM4_PURCHASEREQUESTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_PRNO() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_PRNOColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_PRNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_DATEREQUESTED() As Date
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_DATEREQUESTEDColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_DATEREQUESTEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_APPCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_APPCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_APPCODE' in table 'tblM4_PURCHASEREQUEST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_APPCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_PURPOSE() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_PURPOSEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_PURPOSE' in table 'tblM4_PURCHASEREQUEST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_PURPOSEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_STATUS() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_STATUSColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_REQUESTEDBY() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_REQUESTEDBYColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_REQUESTEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_REQUESTEDBYPOSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_REQUESTEDBYPOSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_REQUESTEDBYPOSITION' in table 'tblM4_PURCHASEREQUEST' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_REQUESTEDBYPOSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_APPROVEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_APPROVEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_APPROVEDBY' in table 'tblM4_PURCHASEREQUEST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_APPROVEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_APPROVEDBYPOSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_APPROVEDBYPOSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_APPROVEDBYPOSITION' in table 'tblM4_PURCHASEREQUEST' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_APPROVEDBYPOSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_CERTIFIEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_CERTIFIEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_CERTIFIEDBY' in table 'tblM4_PURCHASEREQUEST' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_CERTIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_CERTIFIEDBYPOSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_CERTIFIEDBYPOSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_CERTIFIEDBYPOSITION' in table 'tblM4_PURCHASEREQUEST' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_CERTIFIEDBYPOSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_NOTEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_NOTEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_NOTEDBY' in table 'tblM4_PURCHASEREQUEST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_NOTEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_NOTEDBYPOSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_NOTEDBYPOSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_NOTEDBYPOSITION' in table 'tblM4_PURCHASEREQUEST' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_NOTEDBYPOSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_SUBMITTEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_SUBMITTEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_SUBMITTEDBY' in table 'tblM4_PURCHASEREQUEST' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_SUBMITTEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_DEPARTMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_DEPARTMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_DEPARTMENT' in table 'tblM4_PURCHASEREQUEST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_DEPARTMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_DIVISION() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_DIVISIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_DIVISION' in table 'tblM4_PURCHASEREQUEST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_DIVISIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CREATED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.CREATED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATED_DATE' in table 'tblM4_PURCHASEREQUEST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.CREATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_UPDATEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_UPDATEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_UPDATEDBY' in table 'tblM4_PURCHASEREQUEST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_UPDATEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_ISDOLLAR() As Boolean
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST.PR_ISDOLLARColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST.PR_ISDOLLARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_APPCODENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST.PR_APPCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_APPCODENull()
            Me(Me.tabletblM4_PURCHASEREQUEST.PR_APPCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_PURPOSENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST.PR_PURPOSEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_PURPOSENull()
            Me(Me.tabletblM4_PURCHASEREQUEST.PR_PURPOSEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_REQUESTEDBYPOSITIONNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST.PR_REQUESTEDBYPOSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_REQUESTEDBYPOSITIONNull()
            Me(Me.tabletblM4_PURCHASEREQUEST.PR_REQUESTEDBYPOSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_APPROVEDBYNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST.PR_APPROVEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_APPROVEDBYNull()
            Me(Me.tabletblM4_PURCHASEREQUEST.PR_APPROVEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_APPROVEDBYPOSITIONNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST.PR_APPROVEDBYPOSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_APPROVEDBYPOSITIONNull()
            Me(Me.tabletblM4_PURCHASEREQUEST.PR_APPROVEDBYPOSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_CERTIFIEDBYNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST.PR_CERTIFIEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_CERTIFIEDBYNull()
            Me(Me.tabletblM4_PURCHASEREQUEST.PR_CERTIFIEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_CERTIFIEDBYPOSITIONNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST.PR_CERTIFIEDBYPOSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_CERTIFIEDBYPOSITIONNull()
            Me(Me.tabletblM4_PURCHASEREQUEST.PR_CERTIFIEDBYPOSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_NOTEDBYNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST.PR_NOTEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_NOTEDBYNull()
            Me(Me.tabletblM4_PURCHASEREQUEST.PR_NOTEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_NOTEDBYPOSITIONNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST.PR_NOTEDBYPOSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_NOTEDBYPOSITIONNull()
            Me(Me.tabletblM4_PURCHASEREQUEST.PR_NOTEDBYPOSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_SUBMITTEDBYNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST.PR_SUBMITTEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_SUBMITTEDBYNull()
            Me(Me.tabletblM4_PURCHASEREQUEST.PR_SUBMITTEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_DEPARTMENTNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST.PR_DEPARTMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_DEPARTMENTNull()
            Me(Me.tabletblM4_PURCHASEREQUEST.PR_DEPARTMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_DIVISIONNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST.PR_DIVISIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_DIVISIONNull()
            Me(Me.tabletblM4_PURCHASEREQUEST.PR_DIVISIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCREATED_DATENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST.CREATED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCREATED_DATENull()
            Me(Me.tabletblM4_PURCHASEREQUEST.CREATED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_UPDATEDBYNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST.PR_UPDATEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_UPDATEDBYNull()
            Me(Me.tabletblM4_PURCHASEREQUEST.PR_UPDATEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GettblM4_PURCHASEREQUEST_ITEMRows() As tblM4_PURCHASEREQUEST_ITEMRow()
            If (Me.Table.ChildRelations("FK_tblM4_PURCHASEREQUEST_ITEM_tblM4_PURCHASEREQUEST") Is Nothing) Then
                Return New tblM4_PURCHASEREQUEST_ITEMRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tblM4_PURCHASEREQUEST_ITEM_tblM4_PURCHASEREQUEST")),tblM4_PURCHASEREQUEST_ITEMRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GettblM4_PURCHASEREQUEST_CANCELEDRows() As tblM4_PURCHASEREQUEST_CANCELEDRow()
            If (Me.Table.ChildRelations("FK_tblM4_PURCHASEREQUEST_CANCELED_tblM4_PURCHASEREQUEST") Is Nothing) Then
                Return New tblM4_PURCHASEREQUEST_CANCELEDRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tblM4_PURCHASEREQUEST_CANCELED_tblM4_PURCHASEREQUEST")),tblM4_PURCHASEREQUEST_CANCELEDRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GettblM4_PURCHASEREQUEST_REVISIONRows() As tblM4_PURCHASEREQUEST_REVISIONRow()
            If (Me.Table.ChildRelations("FK_tblM4_PURCHASEREQUEST_REVISION_tblM4_PURCHASEREQUEST") Is Nothing) Then
                Return New tblM4_PURCHASEREQUEST_REVISIONRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tblM4_PURCHASEREQUEST_REVISION_tblM4_PURCHASEREQUEST")),tblM4_PURCHASEREQUEST_REVISIONRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GettblM4_PURCHASEREQUEST_POSTEDRows() As tblM4_PURCHASEREQUEST_POSTEDRow()
            If (Me.Table.ChildRelations("FK_tblM4_PURCHASEREQUEST_POSTED_tblM4_PURCHASEREQUEST") Is Nothing) Then
                Return New tblM4_PURCHASEREQUEST_POSTEDRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tblM4_PURCHASEREQUEST_POSTED_tblM4_PURCHASEREQUEST")),tblM4_PURCHASEREQUEST_POSTEDRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GettblM4_PURCHASEREQUEST_ACCEPTEDRows() As tblM4_PURCHASEREQUEST_ACCEPTEDRow()
            If (Me.Table.ChildRelations("FK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST") Is Nothing) Then
                Return New tblM4_PURCHASEREQUEST_ACCEPTEDRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST")),tblM4_PURCHASEREQUEST_ACCEPTEDRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VWG3_DR_LISTRow
        Inherits Global.System.Data.DataRow
        
        Private tableVWG3_DR_LIST As VWG3_DR_LISTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVWG3_DR_LIST = CType(Me.Table,VWG3_DR_LISTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DR_ID() As String
            Get
                Return CType(Me(Me.tableVWG3_DR_LIST.DR_IDColumn),String)
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.DR_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DR_NO() As String
            Get
                Return CType(Me(Me.tableVWG3_DR_LIST.DR_NOColumn),String)
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.DR_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DR_DELIVER() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.DR_DELIVERColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DR_DELIVER' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.DR_DELIVERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DR_RECEIVED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.DR_RECEIVED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DR_RECEIVED_BY' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.DR_RECEIVED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DR_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.DR_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DR_STATUS' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.DR_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DRD_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.DRD_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DRD_ID' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.DRD_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DRD_QUANTITY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.DRD_QUANTITYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DRD_QUANTITY' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.DRD_QUANTITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DRD_DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.DRD_DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DRD_DESCRIPTION' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.DRD_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DRD_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.DRD_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DRD_STATUS' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.DRD_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_TIN_NUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.COM_TIN_NUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_TIN_NUMBER' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.COM_TIN_NUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_COMPANY_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.COM_COMPANY_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_COMPANY_NAME' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.COM_COMPANY_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_ADDRESS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.COM_ADDRESSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_ADDRESS' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.COM_ADDRESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_CONTACT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.COM_CONTACT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_CONTACT_NO' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.COM_CONTACT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_FAX_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.COM_FAX_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_FAX_NO' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.COM_FAX_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.COM_EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_EMAIL' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.COM_EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_DIRECTORY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.COM_DIRECTORYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_DIRECTORY' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.COM_DIRECTORYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.COM_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_STATUS' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.COM_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UN_NO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.UN_NOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UN_NO' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.UN_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UN_DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.UN_DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UN_DESCRIPTION' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.UN_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INV_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.INV_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INV_ID' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.INV_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DRD_WARANTY() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_DR_LIST.DRD_WARANTYColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DRD_WARANTY' in table 'VWG3_DR_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_DR_LIST.DRD_WARANTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDR_DELIVERNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.DR_DELIVERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDR_DELIVERNull()
            Me(Me.tableVWG3_DR_LIST.DR_DELIVERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDR_RECEIVED_BYNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.DR_RECEIVED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDR_RECEIVED_BYNull()
            Me(Me.tableVWG3_DR_LIST.DR_RECEIVED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDR_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.DR_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDR_STATUSNull()
            Me(Me.tableVWG3_DR_LIST.DR_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDRD_IDNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.DRD_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDRD_IDNull()
            Me(Me.tableVWG3_DR_LIST.DRD_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDRD_QUANTITYNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.DRD_QUANTITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDRD_QUANTITYNull()
            Me(Me.tableVWG3_DR_LIST.DRD_QUANTITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDRD_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.DRD_DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDRD_DESCRIPTIONNull()
            Me(Me.tableVWG3_DR_LIST.DRD_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDRD_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.DRD_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDRD_STATUSNull()
            Me(Me.tableVWG3_DR_LIST.DRD_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_TIN_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.COM_TIN_NUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_TIN_NUMBERNull()
            Me(Me.tableVWG3_DR_LIST.COM_TIN_NUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_COMPANY_NAMENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.COM_COMPANY_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_COMPANY_NAMENull()
            Me(Me.tableVWG3_DR_LIST.COM_COMPANY_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_ADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.COM_ADDRESSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_ADDRESSNull()
            Me(Me.tableVWG3_DR_LIST.COM_ADDRESSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_CONTACT_NONull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.COM_CONTACT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_CONTACT_NONull()
            Me(Me.tableVWG3_DR_LIST.COM_CONTACT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_FAX_NONull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.COM_FAX_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_FAX_NONull()
            Me(Me.tableVWG3_DR_LIST.COM_FAX_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_EMAILNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.COM_EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_EMAILNull()
            Me(Me.tableVWG3_DR_LIST.COM_EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_DIRECTORYNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.COM_DIRECTORYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_DIRECTORYNull()
            Me(Me.tableVWG3_DR_LIST.COM_DIRECTORYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.COM_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_STATUSNull()
            Me(Me.tableVWG3_DR_LIST.COM_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUN_NONull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.UN_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUN_NONull()
            Me(Me.tableVWG3_DR_LIST.UN_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUN_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.UN_DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUN_DESCRIPTIONNull()
            Me(Me.tableVWG3_DR_LIST.UN_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINV_IDNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.INV_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINV_IDNull()
            Me(Me.tableVWG3_DR_LIST.INV_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDRD_WARANTYNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_DR_LIST.DRD_WARANTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDRD_WARANTYNull()
            Me(Me.tableVWG3_DR_LIST.DRD_WARANTYColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VWG3_REG_DVRow
        Inherits Global.System.Data.DataRow
        
        Private tableVWG3_REG_DV As VWG3_REG_DVDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVWG3_REG_DV = CType(Me.Table,VWG3_REG_DVDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_NO_SYSTEM() As String
            Get
                Return CType(Me(Me.tableVWG3_REG_DV.DV_NO_SYSTEMColumn),String)
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.DV_NO_SYSTEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDIVS_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.HDIVS_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HDIVS_CODE' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.HDIVS_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.EMP_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_NO' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.EMP_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.DV_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_DATE' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.DV_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_PAYEE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.DV_PAYEEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_PAYEE' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.DV_PAYEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_TIN_EMPLOYEE_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.DV_TIN_EMPLOYEE_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_TIN_EMPLOYEE_NO' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.DV_TIN_EMPLOYEE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_ADDRESS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.DV_ADDRESSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_ADDRESS' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.DV_ADDRESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_A_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.DV_A_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_A_NAME' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.DV_A_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_A_POSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.DV_A_POSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_A_POSITION' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.DV_A_POSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_C_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.DV_C_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_C_NAME' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.DV_C_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_C_POSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.DV_C_POSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_C_POSITION' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.DV_C_POSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_D_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.DV_D_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_D_NAME' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.DV_D_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_D_POSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.DV_D_POSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_D_POSITION' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.DV_D_POSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.DV_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_STATUS' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.DV_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_QR_CODE() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.DV_QR_CODEColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_QR_CODE' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.DV_QR_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DV_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.DV_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DV_TYPE' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.DV_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_NO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.PAR_NOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_NO' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.PAR_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_PARTICULAR() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.PAR_PARTICULARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_PARTICULAR' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.PAR_PARTICULARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_MFO_PAP() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.PAR_MFO_PAPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_MFO_PAP' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.PAR_MFO_PAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_UACS_OBJECT_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.PAR_UACS_OBJECT_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_UACS_OBJECT_CODE' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.PAR_UACS_OBJECT_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.PAR_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_AMOUNT' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.PAR_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.PAR_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_STATUS' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.PAR_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CUR_SYMBOL() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.CUR_SYMBOLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUR_SYMBOL' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.CUR_SYMBOLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CUR_DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_DV.CUR_DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUR_DESCRIPTION' in table 'VWG3_REG_DV' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_DV.CUR_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHDIVS_CODENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.HDIVS_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHDIVS_CODENull()
            Me(Me.tableVWG3_REG_DV.HDIVS_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_NONull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.EMP_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_NONull()
            Me(Me.tableVWG3_REG_DV.EMP_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_DATENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.DV_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_DATENull()
            Me(Me.tableVWG3_REG_DV.DV_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_PAYEENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.DV_PAYEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_PAYEENull()
            Me(Me.tableVWG3_REG_DV.DV_PAYEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_TIN_EMPLOYEE_NONull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.DV_TIN_EMPLOYEE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_TIN_EMPLOYEE_NONull()
            Me(Me.tableVWG3_REG_DV.DV_TIN_EMPLOYEE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_ADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.DV_ADDRESSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_ADDRESSNull()
            Me(Me.tableVWG3_REG_DV.DV_ADDRESSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_A_NAMENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.DV_A_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_A_NAMENull()
            Me(Me.tableVWG3_REG_DV.DV_A_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_A_POSITIONNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.DV_A_POSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_A_POSITIONNull()
            Me(Me.tableVWG3_REG_DV.DV_A_POSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_C_NAMENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.DV_C_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_C_NAMENull()
            Me(Me.tableVWG3_REG_DV.DV_C_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_C_POSITIONNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.DV_C_POSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_C_POSITIONNull()
            Me(Me.tableVWG3_REG_DV.DV_C_POSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_D_NAMENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.DV_D_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_D_NAMENull()
            Me(Me.tableVWG3_REG_DV.DV_D_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_D_POSITIONNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.DV_D_POSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_D_POSITIONNull()
            Me(Me.tableVWG3_REG_DV.DV_D_POSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.DV_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_STATUSNull()
            Me(Me.tableVWG3_REG_DV.DV_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_QR_CODENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.DV_QR_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_QR_CODENull()
            Me(Me.tableVWG3_REG_DV.DV_QR_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDV_TYPENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.DV_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDV_TYPENull()
            Me(Me.tableVWG3_REG_DV.DV_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_NONull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.PAR_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_NONull()
            Me(Me.tableVWG3_REG_DV.PAR_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_PARTICULARNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.PAR_PARTICULARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_PARTICULARNull()
            Me(Me.tableVWG3_REG_DV.PAR_PARTICULARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_MFO_PAPNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.PAR_MFO_PAPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_MFO_PAPNull()
            Me(Me.tableVWG3_REG_DV.PAR_MFO_PAPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_UACS_OBJECT_CODENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.PAR_UACS_OBJECT_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_UACS_OBJECT_CODENull()
            Me(Me.tableVWG3_REG_DV.PAR_UACS_OBJECT_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.PAR_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_AMOUNTNull()
            Me(Me.tableVWG3_REG_DV.PAR_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.PAR_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_STATUSNull()
            Me(Me.tableVWG3_REG_DV.PAR_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCUR_SYMBOLNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.CUR_SYMBOLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCUR_SYMBOLNull()
            Me(Me.tableVWG3_REG_DV.CUR_SYMBOLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCUR_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_DV.CUR_DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCUR_DESCRIPTIONNull()
            Me(Me.tableVWG3_REG_DV.CUR_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VWG3_EMPLOYEE_LISTRow
        Inherits Global.System.Data.DataRow
        
        Private tableVWG3_EMPLOYEE_LIST As VWG3_EMPLOYEE_LISTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVWG3_EMPLOYEE_LIST = CType(Me.Table,VWG3_EMPLOYEE_LISTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO() As String
            Get
                Return CType(Me(Me.tableVWG3_EMPLOYEE_LIST.HRIS_EMPNOColumn),String)
            End Get
            Set
                Me(Me.tableVWG3_EMPLOYEE_LIST.HRIS_EMPNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FULLNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_EMPLOYEE_LIST.FULLNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FULLNAME' in table 'VWG3_EMPLOYEE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_EMPLOYEE_LIST.FULLNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDIVS_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_EMPLOYEE_LIST.HDIVS_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HDIVS_CODE' in table 'VWG3_EMPLOYEE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_EMPLOYEE_LIST.HDIVS_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFULLNAMENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_EMPLOYEE_LIST.FULLNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFULLNAMENull()
            Me(Me.tableVWG3_EMPLOYEE_LIST.FULLNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHDIVS_CODENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_EMPLOYEE_LIST.HDIVS_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHDIVS_CODENull()
            Me(Me.tableVWG3_EMPLOYEE_LIST.HDIVS_CODEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VWG3_INVOICE_LISTRow
        Inherits Global.System.Data.DataRow
        
        Private tableVWG3_INVOICE_LIST As VWG3_INVOICE_LISTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVWG3_INVOICE_LIST = CType(Me.Table,VWG3_INVOICE_LISTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INV_ID() As String
            Get
                Return CType(Me(Me.tableVWG3_INVOICE_LIST.INV_IDColumn),String)
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.INV_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INV_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.INV_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INV_NO' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.INV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INV_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.INV_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INV_DATE' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.INV_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INV_DIRECTORY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.INV_DIRECTORYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INV_DIRECTORY' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.INV_DIRECTORYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INV_TOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.INV_TOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INV_TOTAL' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.INV_TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INVD_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.INVD_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVD_ID' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.INVD_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INVD_QTY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.INVD_QTYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVD_QTY' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.INVD_QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INVD_PRICE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.INVD_PRICEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVD_PRICE' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.INVD_PRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INVD_DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.INVD_DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVD_DESCRIPTION' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.INVD_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UN_NO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.UN_NOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UN_NO' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.UN_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UN_DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.UN_DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UN_DESCRIPTION' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.UN_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_TIN_NUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.COM_TIN_NUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_TIN_NUMBER' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.COM_TIN_NUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_COMPANY_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.COM_COMPANY_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_COMPANY_NAME' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.COM_COMPANY_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_ADDRESS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.COM_ADDRESSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_ADDRESS' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.COM_ADDRESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_CONTACT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.COM_CONTACT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_CONTACT_NO' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.COM_CONTACT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_FAX_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.COM_FAX_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_FAX_NO' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.COM_FAX_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.COM_EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_EMAIL' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.COM_EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_DIRECTORY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.COM_DIRECTORYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_DIRECTORY' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.COM_DIRECTORYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COM_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.COM_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_STATUS' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.COM_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TOTAL_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_INVOICE_LIST.TOTAL_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTAL_AMOUNT' in table 'VWG3_INVOICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_INVOICE_LIST.TOTAL_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINV_NONull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.INV_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINV_NONull()
            Me(Me.tableVWG3_INVOICE_LIST.INV_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINV_DATENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.INV_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINV_DATENull()
            Me(Me.tableVWG3_INVOICE_LIST.INV_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINV_DIRECTORYNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.INV_DIRECTORYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINV_DIRECTORYNull()
            Me(Me.tableVWG3_INVOICE_LIST.INV_DIRECTORYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINV_TOTALNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.INV_TOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINV_TOTALNull()
            Me(Me.tableVWG3_INVOICE_LIST.INV_TOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINVD_IDNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.INVD_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINVD_IDNull()
            Me(Me.tableVWG3_INVOICE_LIST.INVD_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINVD_QTYNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.INVD_QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINVD_QTYNull()
            Me(Me.tableVWG3_INVOICE_LIST.INVD_QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINVD_PRICENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.INVD_PRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINVD_PRICENull()
            Me(Me.tableVWG3_INVOICE_LIST.INVD_PRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINVD_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.INVD_DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINVD_DESCRIPTIONNull()
            Me(Me.tableVWG3_INVOICE_LIST.INVD_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUN_NONull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.UN_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUN_NONull()
            Me(Me.tableVWG3_INVOICE_LIST.UN_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUN_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.UN_DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUN_DESCRIPTIONNull()
            Me(Me.tableVWG3_INVOICE_LIST.UN_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_TIN_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.COM_TIN_NUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_TIN_NUMBERNull()
            Me(Me.tableVWG3_INVOICE_LIST.COM_TIN_NUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_COMPANY_NAMENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.COM_COMPANY_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_COMPANY_NAMENull()
            Me(Me.tableVWG3_INVOICE_LIST.COM_COMPANY_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_ADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.COM_ADDRESSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_ADDRESSNull()
            Me(Me.tableVWG3_INVOICE_LIST.COM_ADDRESSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_CONTACT_NONull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.COM_CONTACT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_CONTACT_NONull()
            Me(Me.tableVWG3_INVOICE_LIST.COM_CONTACT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_FAX_NONull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.COM_FAX_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_FAX_NONull()
            Me(Me.tableVWG3_INVOICE_LIST.COM_FAX_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_EMAILNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.COM_EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_EMAILNull()
            Me(Me.tableVWG3_INVOICE_LIST.COM_EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_DIRECTORYNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.COM_DIRECTORYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_DIRECTORYNull()
            Me(Me.tableVWG3_INVOICE_LIST.COM_DIRECTORYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOM_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.COM_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOM_STATUSNull()
            Me(Me.tableVWG3_INVOICE_LIST.COM_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTOTAL_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_INVOICE_LIST.TOTAL_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTOTAL_AMOUNTNull()
            Me(Me.tableVWG3_INVOICE_LIST.TOTAL_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VWG3_PRIMARY_SIGNATORYRow
        Inherits Global.System.Data.DataRow
        
        Private tableVWG3_PRIMARY_SIGNATORY As VWG3_PRIMARY_SIGNATORYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVWG3_PRIMARY_SIGNATORY = CType(Me.Table,VWG3_PRIMARY_SIGNATORYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_OFFICE_ORDER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_OFFICE_ORDERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_OFFICE_ORDER' in table 'VWG3_PRIMARY_SIGNATORY' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_OFFICE_ORDERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_POLICY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_POLICYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_POLICY' in table 'VWG3_PRIMARY_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_POLICYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_AMOUNT' in table 'VWG3_PRIMARY_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_STATUS' in table 'VWG3_PRIMARY_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDIVS_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_PRIMARY_SIGNATORY.HDIVS_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HDIVS_CODE' in table 'VWG3_PRIMARY_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_PRIMARY_SIGNATORY.HDIVS_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_TY_NO() As Integer
            Get
                Return CType(Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_TY_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_TY_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO_USER() As String
            Get
                Return CType(Me(Me.tableVWG3_PRIMARY_SIGNATORY.HRIS_EMPNO_USERColumn),String)
            End Get
            Set
                Me(Me.tableVWG3_PRIMARY_SIGNATORY.HRIS_EMPNO_USERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO_SIG() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_PRIMARY_SIGNATORY.HRIS_EMPNO_SIGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPNO_SIG' in table 'VWG3_PRIMARY_SIGNATORY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_PRIMARY_SIGNATORY.HRIS_EMPNO_SIGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FULLNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_PRIMARY_SIGNATORY.FULLNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FULLNAME' in table 'VWG3_PRIMARY_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_PRIMARY_SIGNATORY.FULLNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_POSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_POSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_POSITION' in table 'VWG3_PRIMARY_SIGNATORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_POSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_OFFICE_ORDERNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_OFFICE_ORDERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_OFFICE_ORDERNull()
            Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_OFFICE_ORDERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_POLICYNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_POLICYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_POLICYNull()
            Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_POLICYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_AMOUNTNull()
            Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_STATUSNull()
            Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHDIVS_CODENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_PRIMARY_SIGNATORY.HDIVS_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHDIVS_CODENull()
            Me(Me.tableVWG3_PRIMARY_SIGNATORY.HDIVS_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPNO_SIGNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_PRIMARY_SIGNATORY.HRIS_EMPNO_SIGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPNO_SIGNull()
            Me(Me.tableVWG3_PRIMARY_SIGNATORY.HRIS_EMPNO_SIGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFULLNAMENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_PRIMARY_SIGNATORY.FULLNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFULLNAMENull()
            Me(Me.tableVWG3_PRIMARY_SIGNATORY.FULLNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_POSITIONNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_POSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_POSITIONNull()
            Me(Me.tableVWG3_PRIMARY_SIGNATORY.SIG_POSITIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VWG3_REG_BUSRow
        Inherits Global.System.Data.DataRow
        
        Private tableVWG3_REG_BUS As VWG3_REG_BUSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVWG3_REG_BUS = CType(Me.Table,VWG3_REG_BUSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_NO_SYSTEM() As String
            Get
                Return CType(Me(Me.tableVWG3_REG_BUS.BUS_NO_SYSTEMColumn),String)
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.BUS_NO_SYSTEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDIVS_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.HDIVS_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HDIVS_CODE' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.HDIVS_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.EMP_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_NO' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.EMP_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.BUS_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_DATE' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.BUS_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_PAYEE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.BUS_PAYEEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_PAYEE' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.BUS_PAYEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_OFFICE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.BUS_OFFICEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_OFFICE' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.BUS_OFFICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_ADDRESS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.BUS_ADDRESSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_ADDRESS' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.BUS_ADDRESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_NAME_A() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.BUS_NAME_AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_NAME_A' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.BUS_NAME_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_POSITION_A() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.BUS_POSITION_AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_POSITION_A' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.BUS_POSITION_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_NAME_B() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.BUS_NAME_BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_NAME_B' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.BUS_NAME_BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_POSITION_B() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.BUS_POSITION_BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_POSITION_B' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.BUS_POSITION_BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_QR_CODE() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.BUS_QR_CODEColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_QR_CODE' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.BUS_QR_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BUS_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.BUS_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_STATUS' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.BUS_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_NO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.PAR_NOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_NO' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.PAR_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_PARTICULAR() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.PAR_PARTICULARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_PARTICULAR' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.PAR_PARTICULARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_MFO_PAP() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.PAR_MFO_PAPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_MFO_PAP' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.PAR_MFO_PAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_UACS_OBJECT_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.PAR_UACS_OBJECT_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_UACS_OBJECT_CODE' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.PAR_UACS_OBJECT_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.PAR_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_AMOUNT' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.PAR_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_ISDOLLAR() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.PAR_ISDOLLARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_ISDOLLAR' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.PAR_ISDOLLARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAR_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.PAR_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_STATUS' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.PAR_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CUR_SYMBOL() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.CUR_SYMBOLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUR_SYMBOL' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.CUR_SYMBOLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CUR_DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWG3_REG_BUS.CUR_DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUR_DESCRIPTION' in table 'VWG3_REG_BUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWG3_REG_BUS.CUR_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHDIVS_CODENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.HDIVS_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHDIVS_CODENull()
            Me(Me.tableVWG3_REG_BUS.HDIVS_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_NONull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.EMP_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_NONull()
            Me(Me.tableVWG3_REG_BUS.EMP_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_DATENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.BUS_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_DATENull()
            Me(Me.tableVWG3_REG_BUS.BUS_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_PAYEENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.BUS_PAYEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_PAYEENull()
            Me(Me.tableVWG3_REG_BUS.BUS_PAYEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_OFFICENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.BUS_OFFICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_OFFICENull()
            Me(Me.tableVWG3_REG_BUS.BUS_OFFICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_ADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.BUS_ADDRESSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_ADDRESSNull()
            Me(Me.tableVWG3_REG_BUS.BUS_ADDRESSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_NAME_ANull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.BUS_NAME_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_NAME_ANull()
            Me(Me.tableVWG3_REG_BUS.BUS_NAME_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_POSITION_ANull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.BUS_POSITION_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_POSITION_ANull()
            Me(Me.tableVWG3_REG_BUS.BUS_POSITION_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_NAME_BNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.BUS_NAME_BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_NAME_BNull()
            Me(Me.tableVWG3_REG_BUS.BUS_NAME_BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_POSITION_BNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.BUS_POSITION_BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_POSITION_BNull()
            Me(Me.tableVWG3_REG_BUS.BUS_POSITION_BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_QR_CODENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.BUS_QR_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_QR_CODENull()
            Me(Me.tableVWG3_REG_BUS.BUS_QR_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBUS_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.BUS_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBUS_STATUSNull()
            Me(Me.tableVWG3_REG_BUS.BUS_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_NONull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.PAR_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_NONull()
            Me(Me.tableVWG3_REG_BUS.PAR_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_PARTICULARNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.PAR_PARTICULARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_PARTICULARNull()
            Me(Me.tableVWG3_REG_BUS.PAR_PARTICULARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_MFO_PAPNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.PAR_MFO_PAPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_MFO_PAPNull()
            Me(Me.tableVWG3_REG_BUS.PAR_MFO_PAPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_UACS_OBJECT_CODENull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.PAR_UACS_OBJECT_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_UACS_OBJECT_CODENull()
            Me(Me.tableVWG3_REG_BUS.PAR_UACS_OBJECT_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.PAR_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_AMOUNTNull()
            Me(Me.tableVWG3_REG_BUS.PAR_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_ISDOLLARNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.PAR_ISDOLLARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_ISDOLLARNull()
            Me(Me.tableVWG3_REG_BUS.PAR_ISDOLLARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAR_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.PAR_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAR_STATUSNull()
            Me(Me.tableVWG3_REG_BUS.PAR_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCUR_SYMBOLNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.CUR_SYMBOLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCUR_SYMBOLNull()
            Me(Me.tableVWG3_REG_BUS.CUR_SYMBOLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCUR_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableVWG3_REG_BUS.CUR_DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCUR_DESCRIPTIONNull()
            Me(Me.tableVWG3_REG_BUS.CUR_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SPM4_PRCODERow
        Inherits Global.System.Data.DataRow
        
        Private tableSPM4_PRCODE As SPM4_PRCODEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPM4_PRCODE = CType(Me.Table,SPM4_PRCODEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_No_() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PRCODE.PR_No_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR No_' in table 'SPM4_PRCODE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PRCODE.PR_No_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Column1() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PRCODE.Column1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column1' in table 'SPM4_PRCODE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PRCODE.Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_No_Null() As Boolean
            Return Me.IsNull(Me.tableSPM4_PRCODE.PR_No_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_No_Null()
            Me(Me.tableSPM4_PRCODE.PR_No_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsColumn1Null() As Boolean
            Return Me.IsNull(Me.tableSPM4_PRCODE.Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetColumn1Null()
            Me(Me.tableSPM4_PRCODE.Column1Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SPM4_CURRENTDATETIMERow
        Inherits Global.System.Data.DataRow
        
        Private tableSPM4_CURRENTDATETIME As SPM4_CURRENTDATETIMEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPM4_CURRENTDATETIME = CType(Me.Table,SPM4_CURRENTDATETIMEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Column1() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_CURRENTDATETIME.Column1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column1' in table 'SPM4_CURRENTDATETIME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_CURRENTDATETIME.Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property datenow() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_CURRENTDATETIME.datenowColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'datenow' in table 'SPM4_CURRENTDATETIME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_CURRENTDATETIME.datenowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsColumn1Null() As Boolean
            Return Me.IsNull(Me.tableSPM4_CURRENTDATETIME.Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetColumn1Null()
            Me(Me.tableSPM4_CURRENTDATETIME.Column1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsdatenowNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_CURRENTDATETIME.datenowColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetdatenowNull()
            Me(Me.tableSPM4_CURRENTDATETIME.datenowColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBLG3_SIGNATORY1Row
        Inherits Global.System.Data.DataRow
        
        Private tableTBLG3_SIGNATORY1 As TBLG3_SIGNATORY1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBLG3_SIGNATORY1 = CType(Me.Table,TBLG3_SIGNATORY1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property fullname() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_SIGNATORY1.fullnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fullname' in table 'TBLG3_SIGNATORY1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY1.fullnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_POSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBLG3_SIGNATORY1.SIG_POSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIG_POSITION' in table 'TBLG3_SIGNATORY1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY1.SIG_POSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SIG_NO() As Integer
            Get
                Return CType(Me(Me.tableTBLG3_SIGNATORY1.SIG_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableTBLG3_SIGNATORY1.SIG_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsfullnameNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_SIGNATORY1.fullnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetfullnameNull()
            Me(Me.tableTBLG3_SIGNATORY1.fullnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSIG_POSITIONNull() As Boolean
            Return Me.IsNull(Me.tableTBLG3_SIGNATORY1.SIG_POSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSIG_POSITIONNull()
            Me(Me.tableTBLG3_SIGNATORY1.SIG_POSITIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SPM4_GETPR_INFORow
        Inherits Global.System.Data.DataRow
        
        Private tableSPM4_GETPR_INFO As SPM4_GETPR_INFODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPM4_GETPR_INFO = CType(Me.Table,SPM4_GETPR_INFODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_PRNO() As String
            Get
                Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_PRNOColumn),String)
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_PRNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_DATEREQUESTED() As Date
            Get
                Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_DATEREQUESTEDColumn),Date)
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_DATEREQUESTEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_APPCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_APPCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_APPCODE' in table 'SPM4_GETPR_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_APPCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_PURPOSE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_PURPOSEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_PURPOSE' in table 'SPM4_GETPR_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_PURPOSEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_REQUESTEDBY() As String
            Get
                Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_REQUESTEDBYColumn),String)
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_REQUESTEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_REQUESTEDBYPOSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_REQUESTEDBYPOSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_REQUESTEDBYPOSITION' in table 'SPM4_GETPR_INFO' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_REQUESTEDBYPOSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_APPROVEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_APPROVEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_APPROVEDBY' in table 'SPM4_GETPR_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_APPROVEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_APPROVEDBYPOSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_APPROVEDBYPOSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_APPROVEDBYPOSITION' in table 'SPM4_GETPR_INFO' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_APPROVEDBYPOSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_CERTIFIEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_CERTIFIEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_CERTIFIEDBY' in table 'SPM4_GETPR_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_CERTIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_CERTIFIEDBYPOSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_CERTIFIEDBYPOSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_CERTIFIEDBYPOSITION' in table 'SPM4_GETPR_INFO' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_CERTIFIEDBYPOSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_NOTEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_NOTEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_NOTEDBY' in table 'SPM4_GETPR_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_NOTEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_NOTEDBYPOSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_NOTEDBYPOSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_NOTEDBYPOSITION' in table 'SPM4_GETPR_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_NOTEDBYPOSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_SUBMITTEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_SUBMITTEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_SUBMITTEDBY' in table 'SPM4_GETPR_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_SUBMITTEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_DEPARTMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_DEPARTMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_DEPARTMENT' in table 'SPM4_GETPR_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_DEPARTMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_DIVISION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_DIVISIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_DIVISION' in table 'SPM4_GETPR_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_DIVISIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_QUANTITY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_QUANTITYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_QUANTITY' in table 'SPM4_GETPR_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_QUANTITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_UNITISSUE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_UNITISSUEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_UNITISSUE' in table 'SPM4_GETPR_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_UNITISSUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRI_ITEMDESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PRI_ITEMDESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRI_ITEMDESCRIPTION' in table 'SPM4_GETPR_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PRI_ITEMDESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_STOCKNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_STOCKNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_STOCKNO' in table 'SPM4_GETPR_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_STOCKNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_ESTIMATEDUNITCOST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_ESTIMATEDUNITCOSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_ESTIMATEDUNITCOST' in table 'SPM4_GETPR_INFO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_ESTIMATEDUNITCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_ESTIMATEDCOST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_ESTIMATEDCOSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_ESTIMATEDCOST' in table 'SPM4_GETPR_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_ESTIMATEDCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property img() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_GETPR_INFO.imgColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'img' in table 'SPM4_GETPR_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.imgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_ISDOLLAR() As Boolean
            Get
                Return CType(Me(Me.tableSPM4_GETPR_INFO.PR_ISDOLLARColumn),Boolean)
            End Get
            Set
                Me(Me.tableSPM4_GETPR_INFO.PR_ISDOLLARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_APPCODENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_APPCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_APPCODENull()
            Me(Me.tableSPM4_GETPR_INFO.PR_APPCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_PURPOSENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_PURPOSEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_PURPOSENull()
            Me(Me.tableSPM4_GETPR_INFO.PR_PURPOSEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_REQUESTEDBYPOSITIONNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_REQUESTEDBYPOSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_REQUESTEDBYPOSITIONNull()
            Me(Me.tableSPM4_GETPR_INFO.PR_REQUESTEDBYPOSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_APPROVEDBYNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_APPROVEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_APPROVEDBYNull()
            Me(Me.tableSPM4_GETPR_INFO.PR_APPROVEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_APPROVEDBYPOSITIONNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_APPROVEDBYPOSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_APPROVEDBYPOSITIONNull()
            Me(Me.tableSPM4_GETPR_INFO.PR_APPROVEDBYPOSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_CERTIFIEDBYNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_CERTIFIEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_CERTIFIEDBYNull()
            Me(Me.tableSPM4_GETPR_INFO.PR_CERTIFIEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_CERTIFIEDBYPOSITIONNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_CERTIFIEDBYPOSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_CERTIFIEDBYPOSITIONNull()
            Me(Me.tableSPM4_GETPR_INFO.PR_CERTIFIEDBYPOSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_NOTEDBYNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_NOTEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_NOTEDBYNull()
            Me(Me.tableSPM4_GETPR_INFO.PR_NOTEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_NOTEDBYPOSITIONNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_NOTEDBYPOSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_NOTEDBYPOSITIONNull()
            Me(Me.tableSPM4_GETPR_INFO.PR_NOTEDBYPOSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_SUBMITTEDBYNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_SUBMITTEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_SUBMITTEDBYNull()
            Me(Me.tableSPM4_GETPR_INFO.PR_SUBMITTEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_DEPARTMENTNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_DEPARTMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_DEPARTMENTNull()
            Me(Me.tableSPM4_GETPR_INFO.PR_DEPARTMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_DIVISIONNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_DIVISIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_DIVISIONNull()
            Me(Me.tableSPM4_GETPR_INFO.PR_DIVISIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_QUANTITYNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_QUANTITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_QUANTITYNull()
            Me(Me.tableSPM4_GETPR_INFO.PR_QUANTITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_UNITISSUENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_UNITISSUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_UNITISSUENull()
            Me(Me.tableSPM4_GETPR_INFO.PR_UNITISSUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPRI_ITEMDESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PRI_ITEMDESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPRI_ITEMDESCRIPTIONNull()
            Me(Me.tableSPM4_GETPR_INFO.PRI_ITEMDESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_STOCKNONull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_STOCKNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_STOCKNONull()
            Me(Me.tableSPM4_GETPR_INFO.PR_STOCKNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_ESTIMATEDUNITCOSTNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_ESTIMATEDUNITCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_ESTIMATEDUNITCOSTNull()
            Me(Me.tableSPM4_GETPR_INFO.PR_ESTIMATEDUNITCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_ESTIMATEDCOSTNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.PR_ESTIMATEDCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_ESTIMATEDCOSTNull()
            Me(Me.tableSPM4_GETPR_INFO.PR_ESTIMATEDCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsimgNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_GETPR_INFO.imgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetimgNull()
            Me(Me.tableSPM4_GETPR_INFO.imgColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_CATEGORY1Row
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_CATEGORY1 As tblM4_CATEGORY1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_CATEGORY1 = CType(Me.Table,tblM4_CATEGORY1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Status() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_CATEGORY1.StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'tblM4_CATEGORY1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_CATEGORY1.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Category_Code() As String
            Get
                Return CType(Me(Me.tabletblM4_CATEGORY1.Category_CodeColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_CATEGORY1.Category_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Category_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_CATEGORY1.Category_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Category Name' in table 'tblM4_CATEGORY1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_CATEGORY1.Category_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_CATEGORY1.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tabletblM4_CATEGORY1.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCategory_NameNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_CATEGORY1.Category_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCategory_NameNull()
            Me(Me.tabletblM4_CATEGORY1.Category_NameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_ITEMBRAND1Row
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_ITEMBRAND1 As tblM4_ITEMBRAND1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_ITEMBRAND1 = CType(Me.Table,tblM4_ITEMBRAND1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Status() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_ITEMBRAND1.StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'tblM4_ITEMBRAND1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_ITEMBRAND1.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Item_Brand_No_() As Integer
            Get
                Return CType(Me(Me.tabletblM4_ITEMBRAND1.Item_Brand_No_Column),Integer)
            End Get
            Set
                Me(Me.tabletblM4_ITEMBRAND1.Item_Brand_No_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Brand_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_ITEMBRAND1.Brand_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Brand Name' in table 'tblM4_ITEMBRAND1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_ITEMBRAND1.Brand_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_ITEMBRAND1.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tabletblM4_ITEMBRAND1.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBrand_NameNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_ITEMBRAND1.Brand_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBrand_NameNull()
            Me(Me.tabletblM4_ITEMBRAND1.Brand_NameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_SUB_CATEGORY1Row
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_SUB_CATEGORY1 As tblM4_SUB_CATEGORY1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_SUB_CATEGORY1 = CType(Me.Table,tblM4_SUB_CATEGORY1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Status() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_SUB_CATEGORY1.StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'tblM4_SUB_CATEGORY1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_SUB_CATEGORY1.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SC_No_() As Integer
            Get
                Return CType(Me(Me.tabletblM4_SUB_CATEGORY1.SC_No_Column),Integer)
            End Get
            Set
                Me(Me.tabletblM4_SUB_CATEGORY1.SC_No_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Category_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_SUB_CATEGORY1.Category_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Category Name' in table 'tblM4_SUB_CATEGORY1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_SUB_CATEGORY1.Category_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Sub_Category_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_SUB_CATEGORY1._Sub_Category_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sub-Category Name' in table 'tblM4_SUB_CATEGORY1' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_SUB_CATEGORY1._Sub_Category_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_SUB_CATEGORY1.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tabletblM4_SUB_CATEGORY1.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCategory_NameNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_SUB_CATEGORY1.Category_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCategory_NameNull()
            Me(Me.tabletblM4_SUB_CATEGORY1.Category_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Sub_Category_NameNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_SUB_CATEGORY1._Sub_Category_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Sub_Category_NameNull()
            Me(Me.tabletblM4_SUB_CATEGORY1._Sub_Category_NameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SPM4_INVENTORY_REPORTRow
        Inherits Global.System.Data.DataRow
        
        Private tableSPM4_INVENTORY_REPORT As SPM4_INVENTORY_REPORTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPM4_INVENTORY_REPORT = CType(Me.Table,SPM4_INVENTORY_REPORTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Category() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_INVENTORY_REPORT.CategoryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Category' in table 'SPM4_INVENTORY_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_INVENTORY_REPORT.CategoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sub_Category() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_INVENTORY_REPORT.Sub_CategoryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sub Category' in table 'SPM4_INVENTORY_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_INVENTORY_REPORT.Sub_CategoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Brand_Provider() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_INVENTORY_REPORT._Brand_ProviderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Brand/Provider' in table 'SPM4_INVENTORY_REPORT' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_INVENTORY_REPORT._Brand_ProviderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Item_Description() As String
            Get
                Return CType(Me(Me.tableSPM4_INVENTORY_REPORT.Item_DescriptionColumn),String)
            End Get
            Set
                Me(Me.tableSPM4_INVENTORY_REPORT.Item_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Unit_Type() As String
            Get
                Return CType(Me(Me.tableSPM4_INVENTORY_REPORT.Unit_TypeColumn),String)
            End Get
            Set
                Me(Me.tableSPM4_INVENTORY_REPORT.Unit_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Unit_Cost() As Decimal
            Get
                Return CType(Me(Me.tableSPM4_INVENTORY_REPORT.Unit_CostColumn),Decimal)
            End Get
            Set
                Me(Me.tableSPM4_INVENTORY_REPORT.Unit_CostColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Total_Cost() As Decimal
            Get
                Return CType(Me(Me.tableSPM4_INVENTORY_REPORT.Total_CostColumn),Decimal)
            End Get
            Set
                Me(Me.tableSPM4_INVENTORY_REPORT.Total_CostColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Quantity() As Integer
            Get
                Return CType(Me(Me.tableSPM4_INVENTORY_REPORT.QuantityColumn),Integer)
            End Get
            Set
                Me(Me.tableSPM4_INVENTORY_REPORT.QuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Date_Encoded() As Date
            Get
                Return CType(Me(Me.tableSPM4_INVENTORY_REPORT.Date_EncodedColumn),Date)
            End Get
            Set
                Me(Me.tableSPM4_INVENTORY_REPORT.Date_EncodedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Property_No_() As String
            Get
                Return CType(Me(Me.tableSPM4_INVENTORY_REPORT.Property_No_Column),String)
            End Get
            Set
                Me(Me.tableSPM4_INVENTORY_REPORT.Property_No_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Serial_No_() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_INVENTORY_REPORT.Serial_No_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Serial No_' in table 'SPM4_INVENTORY_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_INVENTORY_REPORT.Serial_No_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCategoryNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_INVENTORY_REPORT.CategoryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCategoryNull()
            Me(Me.tableSPM4_INVENTORY_REPORT.CategoryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSub_CategoryNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_INVENTORY_REPORT.Sub_CategoryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSub_CategoryNull()
            Me(Me.tableSPM4_INVENTORY_REPORT.Sub_CategoryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Brand_ProviderNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_INVENTORY_REPORT._Brand_ProviderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Brand_ProviderNull()
            Me(Me.tableSPM4_INVENTORY_REPORT._Brand_ProviderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSerial_No_Null() As Boolean
            Return Me.IsNull(Me.tableSPM4_INVENTORY_REPORT.Serial_No_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSerial_No_Null()
            Me(Me.tableSPM4_INVENTORY_REPORT.Serial_No_Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SPM4_PROPERTY_NORow
        Inherits Global.System.Data.DataRow
        
        Private tableSPM4_PROPERTY_NO As SPM4_PROPERTY_NODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPM4_PROPERTY_NO = CType(Me.Table,SPM4_PROPERTY_NODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PROP_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PROPERTY_NO.PROP_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROP_NO' in table 'SPM4_PROPERTY_NO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PROPERTY_NO.PROP_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPROP_NONull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PROPERTY_NO.PROP_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPROP_NONull()
            Me(Me.tableSPM4_PROPERTY_NO.PROP_NOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_PURCHASEREQUEST_CATEGORYRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_PURCHASEREQUEST_CATEGORY As tblM4_PURCHASEREQUEST_CATEGORYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_PURCHASEREQUEST_CATEGORY = CType(Me.Table,tblM4_PURCHASEREQUEST_CATEGORYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRCAT_NO() As Integer
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_CATEGORY.PRCAT_NOColumn),Integer)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_CATEGORY.PRCAT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRCAT_CATEGORY_NAME() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_CATEGORY.PRCAT_CATEGORY_NAMEColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_CATEGORY.PRCAT_CATEGORY_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRCAT_ISACTIVE() As Boolean
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_CATEGORY.PRCAT_ISACTIVEColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_CATEGORY.PRCAT_ISACTIVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GettblM4_PURCHASEREQUEST_ACCEPTEDRows() As tblM4_PURCHASEREQUEST_ACCEPTEDRow()
            If (Me.Table.ChildRelations("FK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST_CATEGORY") Is Nothing) Then
                Return New tblM4_PURCHASEREQUEST_ACCEPTEDRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST_CATEGORY")),tblM4_PURCHASEREQUEST_ACCEPTEDRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SPM4_PURCHASELISTRow
        Inherits Global.System.Data.DataRow
        
        Private tableSPM4_PURCHASELIST As SPM4_PURCHASELISTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPM4_PURCHASELIST = CType(Me.Table,SPM4_PURCHASELISTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_PRNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PURCHASELIST.PR_PRNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_PRNO' in table 'SPM4_PURCHASELIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PURCHASELIST.PR_PRNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Remarks_Purpose() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PURCHASELIST._Remarks_PurposeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks/Purpose' in table 'SPM4_PURCHASELIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PURCHASELIST._Remarks_PurposeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Status_of_Ongoing_PR() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PURCHASELIST.Status_of_Ongoing_PRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status of Ongoing PR' in table 'SPM4_PURCHASELIST' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PURCHASELIST.Status_of_Ongoing_PRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PURCHASELIST.PR_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_STATUS' in table 'SPM4_PURCHASELIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PURCHASELIST.PR_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CREATED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PURCHASELIST.CREATED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATED_DATE' in table 'SPM4_PURCHASELIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PURCHASELIST.CREATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_PRNO1() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PURCHASELIST.PR_PRNO1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_PRNO1' in table 'SPM4_PURCHASELIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PURCHASELIST.PR_PRNO1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MAXDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PURCHASELIST.MAXDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAXDATE' in table 'SPM4_PURCHASELIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PURCHASELIST.MAXDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DateCreated() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PURCHASELIST.DateCreatedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateCreated' in table 'SPM4_PURCHASELIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PURCHASELIST.DateCreatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MAXDATE1() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PURCHASELIST.MAXDATE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAXDATE1' in table 'SPM4_PURCHASELIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PURCHASELIST.MAXDATE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_PRNONull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PURCHASELIST.PR_PRNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_PRNONull()
            Me(Me.tableSPM4_PURCHASELIST.PR_PRNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Remarks_PurposeNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PURCHASELIST._Remarks_PurposeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Remarks_PurposeNull()
            Me(Me.tableSPM4_PURCHASELIST._Remarks_PurposeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStatus_of_Ongoing_PRNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PURCHASELIST.Status_of_Ongoing_PRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStatus_of_Ongoing_PRNull()
            Me(Me.tableSPM4_PURCHASELIST.Status_of_Ongoing_PRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PURCHASELIST.PR_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_STATUSNull()
            Me(Me.tableSPM4_PURCHASELIST.PR_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCREATED_DATENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PURCHASELIST.CREATED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCREATED_DATENull()
            Me(Me.tableSPM4_PURCHASELIST.CREATED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_PRNO1Null() As Boolean
            Return Me.IsNull(Me.tableSPM4_PURCHASELIST.PR_PRNO1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_PRNO1Null()
            Me(Me.tableSPM4_PURCHASELIST.PR_PRNO1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMAXDATENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PURCHASELIST.MAXDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMAXDATENull()
            Me(Me.tableSPM4_PURCHASELIST.MAXDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDateCreatedNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PURCHASELIST.DateCreatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDateCreatedNull()
            Me(Me.tableSPM4_PURCHASELIST.DateCreatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMAXDATE1Null() As Boolean
            Return Me.IsNull(Me.tableSPM4_PURCHASELIST.MAXDATE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMAXDATE1Null()
            Me(Me.tableSPM4_PURCHASELIST.MAXDATE1Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SPM4_PURCHASEREQUEST_STATUSRow
        Inherits Global.System.Data.DataRow
        
        Private tableSPM4_PURCHASEREQUEST_STATUS As SPM4_PURCHASEREQUEST_STATUSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPM4_PURCHASEREQUEST_STATUS = CType(Me.Table,SPM4_PURCHASEREQUEST_STATUSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property status() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PURCHASEREQUEST_STATUS.statusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'status' in table 'SPM4_PURCHASEREQUEST_STATUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PURCHASEREQUEST_STATUS.statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Date() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PURCHASEREQUEST_STATUS.DateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date' in table 'SPM4_PURCHASEREQUEST_STATUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PURCHASEREQUEST_STATUS.DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Time() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PURCHASEREQUEST_STATUS.TimeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Time' in table 'SPM4_PURCHASEREQUEST_STATUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PURCHASEREQUEST_STATUS.TimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsstatusNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PURCHASEREQUEST_STATUS.statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetstatusNull()
            Me(Me.tableSPM4_PURCHASEREQUEST_STATUS.statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_DateNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PURCHASEREQUEST_STATUS.DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_DateNull()
            Me(Me.tableSPM4_PURCHASEREQUEST_STATUS.DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTimeNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PURCHASEREQUEST_STATUS.TimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTimeNull()
            Me(Me.tableSPM4_PURCHASEREQUEST_STATUS.TimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_PURCHASEREQUEST_CANCELEDRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_PURCHASEREQUEST_CANCELED As tblM4_PURCHASEREQUEST_CANCELEDDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_PURCHASEREQUEST_CANCELED = CType(Me.Table,tblM4_PURCHASEREQUEST_CANCELEDDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_PRNO() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_CANCELED.PR_PRNOColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_CANCELED.PR_PRNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CAPR_REMARKS() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_CANCELED.CAPR_REMARKSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAPR_REMARKS' in table 'tblM4_PURCHASEREQUEST_CANCELED' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_CANCELED.CAPR_REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CAPR_CREATED_BY() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_CANCELED.CAPR_CREATED_BYColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_CANCELED.CAPR_CREATED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CAPR_DATE_CREATED() As Date
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_CANCELED.CAPR_DATE_CREATEDColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_CANCELED.CAPR_DATE_CREATEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tblM4_PURCHASEREQUESTRow() As tblM4_PURCHASEREQUESTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tblM4_PURCHASEREQUEST_CANCELED_tblM4_PURCHASEREQUEST")),tblM4_PURCHASEREQUESTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tblM4_PURCHASEREQUEST_CANCELED_tblM4_PURCHASEREQUEST"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCAPR_REMARKSNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST_CANCELED.CAPR_REMARKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCAPR_REMARKSNull()
            Me(Me.tabletblM4_PURCHASEREQUEST_CANCELED.CAPR_REMARKSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_PURCHASEREQUEST_REVISIONRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_PURCHASEREQUEST_REVISION As tblM4_PURCHASEREQUEST_REVISIONDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_PURCHASEREQUEST_REVISION = CType(Me.Table,tblM4_PURCHASEREQUEST_REVISIONDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_PRNO() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.PR_PRNOColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.PR_PRNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property REPR_QUANTITY_REMARKS() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_QUANTITY_REMARKSColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_QUANTITY_REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property REPR_UNITISSUE_REMARKS() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_UNITISSUE_REMARKSColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_UNITISSUE_REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property REPR_ITEMDESCRIPTION_REMARKS() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_ITEMDESCRIPTION_REMARKSColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_ITEMDESCRIPTION_REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property REPR_ESTIMATEDUNITCOST_REMARKS() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_ESTIMATEDUNITCOST_REMARKSColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_ESTIMATEDUNITCOST_REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property REPR_ESTIMATEDCOST_REMARKS() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_ESTIMATEDCOST_REMARKSColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_ESTIMATEDCOST_REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property REPR_CREATED_DATE() As Date
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_CREATED_DATEColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_CREATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property REPR_CREATED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_CREATED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REPR_CREATED_BY' in table 'tblM4_PURCHASEREQUEST_REVISION' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_CREATED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tblM4_PURCHASEREQUESTRow() As tblM4_PURCHASEREQUESTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tblM4_PURCHASEREQUEST_REVISION_tblM4_PURCHASEREQUEST")),tblM4_PURCHASEREQUESTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tblM4_PURCHASEREQUEST_REVISION_tblM4_PURCHASEREQUEST"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsREPR_CREATED_BYNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_CREATED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetREPR_CREATED_BYNull()
            Me(Me.tabletblM4_PURCHASEREQUEST_REVISION.REPR_CREATED_BYColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_PURCHASEREQUEST_POSTEDRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_PURCHASEREQUEST_POSTED As tblM4_PURCHASEREQUEST_POSTEDDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_PURCHASEREQUEST_POSTED = CType(Me.Table,tblM4_PURCHASEREQUEST_POSTEDDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_PRNO() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_POSTED.PR_PRNOColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_POSTED.PR_PRNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRP_REMARKS() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_POSTED.PRP_REMARKSColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_POSTED.PRP_REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRP_URL() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_POSTED.PRP_URLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRP_URL' in table 'tblM4_PURCHASEREQUEST_POSTED' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_POSTED.PRP_URLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRP_CREATED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_POSTED.PRP_CREATED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRP_CREATED_DATE' in table 'tblM4_PURCHASEREQUEST_POSTED' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_POSTED.PRP_CREATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tblM4_PURCHASEREQUESTRow() As tblM4_PURCHASEREQUESTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tblM4_PURCHASEREQUEST_POSTED_tblM4_PURCHASEREQUEST")),tblM4_PURCHASEREQUESTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tblM4_PURCHASEREQUEST_POSTED_tblM4_PURCHASEREQUEST"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPRP_URLNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST_POSTED.PRP_URLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPRP_URLNull()
            Me(Me.tabletblM4_PURCHASEREQUEST_POSTED.PRP_URLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPRP_CREATED_DATENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_PURCHASEREQUEST_POSTED.PRP_CREATED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPRP_CREATED_DATENull()
            Me(Me.tabletblM4_PURCHASEREQUEST_POSTED.PRP_CREATED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_PURCHASEREQUEST_ACCEPTEDRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_PURCHASEREQUEST_ACCEPTED As tblM4_PURCHASEREQUEST_ACCEPTEDDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_PURCHASEREQUEST_ACCEPTED = CType(Me.Table,tblM4_PURCHASEREQUEST_ACCEPTEDDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_PRNO() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_ACCEPTED.PR_PRNOColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_ACCEPTED.PR_PRNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRAC_ACCEPTEDBY() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_ACCEPTED.PRAC_ACCEPTEDBYColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_ACCEPTED.PRAC_ACCEPTEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRAC_DATECREATED() As Date
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_ACCEPTED.PRAC_DATECREATEDColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_ACCEPTED.PRAC_DATECREATEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRCAT_NO() As Integer
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_ACCEPTED.PRCAT_NOColumn),Integer)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_ACCEPTED.PRCAT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tblM4_PURCHASEREQUESTRow() As tblM4_PURCHASEREQUESTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST")),tblM4_PURCHASEREQUESTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tblM4_PURCHASEREQUEST_CATEGORYRow() As tblM4_PURCHASEREQUEST_CATEGORYRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST_CATEGORY")),tblM4_PURCHASEREQUEST_CATEGORYRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tblM4_PURCHASEREQUEST_STATUS_tblM4_PURCHASEREQUEST_CATEGORY"))
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_PURCHASEREQUEST_PROVIDERRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_PURCHASEREQUEST_PROVIDER As tblM4_PURCHASEREQUEST_PROVIDERDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_PURCHASEREQUEST_PROVIDER = CType(Me.Table,tblM4_PURCHASEREQUEST_PROVIDERDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRPR_NO() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_NOColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRAB_REF_NO() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRAB_REF_NOColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRAB_REF_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRPR_CONTACTNO() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_CONTACTNOColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_CONTACTNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRPR_NAME() As String
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_NAMEColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRPR_BIDPRICE() As Decimal
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_BIDPRICEColumn),Decimal)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_BIDPRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRPR_QUANTITY() As Integer
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_QUANTITYColumn),Integer)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_QUANTITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRPR_CREATED_DATE() As Date
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_CREATED_DATEColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_CREATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRPR_TOTALBIDPRICE() As Decimal
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_TOTALBIDPRICEColumn),Decimal)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_TOTALBIDPRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRPR_IS_LOWEST() As Boolean
            Get
                Return CType(Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_IS_LOWESTColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblM4_PURCHASEREQUEST_PROVIDER.PRPR_IS_LOWESTColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_INVENTORY_ITEMS_LOCATIONRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_INVENTORY_ITEMS_LOCATION As tblM4_INVENTORY_ITEMS_LOCATIONDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_INVENTORY_ITEMS_LOCATION = CType(Me.Table,tblM4_INVENTORY_ITEMS_LOCATIONDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LOC_ITEM_CODE() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS_LOCATION.LOC_ITEM_CODEColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS_LOCATION.LOC_ITEM_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LOC_LOCATION_ID() As Integer
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS_LOCATION.LOC_LOCATION_IDColumn),Integer)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS_LOCATION.LOC_LOCATION_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LOC_CREATED_DATE() As Date
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS_LOCATION.LOC_CREATED_DATEColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS_LOCATION.LOC_CREATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LOC_UPDATED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS_LOCATION.LOC_UPDATED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOC_UPDATED_DATE' in table 'tblM4_INVENTORY_ITEMS_LOCATION'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS_LOCATION.LOC_UPDATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLOC_UPDATED_DATENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMS_LOCATION.LOC_UPDATED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLOC_UPDATED_DATENull()
            Me(Me.tabletblM4_INVENTORY_ITEMS_LOCATION.LOC_UPDATED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_INVENTORY_ITEMS_DEFLOCATIONRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_INVENTORY_ITEMS_DEFLOCATION As tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION = CType(Me.Table,tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LOC_LOCATION_ID() As Integer
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION.LOC_LOCATION_IDColumn),Integer)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION.LOC_LOCATION_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LOC_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION.LOC_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOC_NAME' in table 'tblM4_INVENTORY_ITEMS_DEFLOCATION' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION.LOC_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LOC_ISACTIVE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION.LOC_ISACTIVEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOC_ISACTIVE' in table 'tblM4_INVENTORY_ITEMS_DEFLOCATION' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION.LOC_ISACTIVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LOC_CREATED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION.LOC_CREATED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOC_CREATED_DATE' in table 'tblM4_INVENTORY_ITEMS_DEFLOCATI"& _ 
                            "ON' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION.LOC_CREATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLOC_NAMENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION.LOC_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLOC_NAMENull()
            Me(Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION.LOC_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLOC_ISACTIVENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION.LOC_ISACTIVEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLOC_ISACTIVENull()
            Me(Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION.LOC_ISACTIVEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLOC_CREATED_DATENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION.LOC_CREATED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLOC_CREATED_DATENull()
            Me(Me.tabletblM4_INVENTORY_ITEMS_DEFLOCATION.LOC_CREATED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SPM4_INVENTORYDGVLISTRow
        Inherits Global.System.Data.DataRow
        
        Private tableSPM4_INVENTORYDGVLIST As SPM4_INVENTORYDGVLISTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPM4_INVENTORYDGVLIST = CType(Me.Table,SPM4_INVENTORYDGVLISTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_CODE() As String
            Get
                Return CType(Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_CODEColumn),String)
            End Get
            Set
                Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SC_NO() As String
            Get
                Return CType(Me(Me.tableSPM4_INVENTORYDGVLIST.SC_NOColumn),String)
            End Get
            Set
                Me(Me.tableSPM4_INVENTORYDGVLIST.SC_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITBR_NO() As String
            Get
                Return CType(Me(Me.tableSPM4_INVENTORYDGVLIST.ITBR_NOColumn),String)
            End Get
            Set
                Me(Me.tableSPM4_INVENTORYDGVLIST.ITBR_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_SERIAL_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_SERIAL_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEM_SERIAL_NO' in table 'SPM4_INVENTORYDGVLIST' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_SERIAL_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_DESCRIPTION() As String
            Get
                Return CType(Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_DESCRIPTIONColumn),String)
            End Get
            Set
                Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_UNIT() As String
            Get
                Return CType(Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_UNITColumn),String)
            End Get
            Set
                Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_UNITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_UNIT_COST() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_UNIT_COSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEM_UNIT_COST' in table 'SPM4_INVENTORYDGVLIST' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_UNIT_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_TOTAL_COST() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_TOTAL_COSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEM_TOTAL_COST' in table 'SPM4_INVENTORYDGVLIST' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_TOTAL_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_QUANTITY() As Integer
            Get
                Return CType(Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_QUANTITYColumn),Integer)
            End Get
            Set
                Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_QUANTITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_DATE_AQUISITION() As Date
            Get
                Return CType(Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_DATE_AQUISITIONColumn),Date)
            End Get
            Set
                Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_DATE_AQUISITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_CREATED_DATE() As Date
            Get
                Return CType(Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_CREATED_DATEColumn),Date)
            End Get
            Set
                Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_CREATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_UPDATED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_UPDATED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEM_UPDATED_DATE' in table 'SPM4_INVENTORYDGVLIST' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_UPDATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CAT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_INVENTORYDGVLIST.CAT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAT_NAME' in table 'SPM4_INVENTORYDGVLIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_INVENTORYDGVLIST.CAT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SC_SUBCATEGORY_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_INVENTORYDGVLIST.SC_SUBCATEGORY_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SC_SUBCATEGORY_NAME' in table 'SPM4_INVENTORYDGVLIST' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_INVENTORYDGVLIST.SC_SUBCATEGORY_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITBR_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_INVENTORYDGVLIST.ITBR_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITBR_NAME' in table 'SPM4_INVENTORYDGVLIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_INVENTORYDGVLIST.ITBR_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsITEM_SERIAL_NONull() As Boolean
            Return Me.IsNull(Me.tableSPM4_INVENTORYDGVLIST.ITEM_SERIAL_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetITEM_SERIAL_NONull()
            Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_SERIAL_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsITEM_UNIT_COSTNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_INVENTORYDGVLIST.ITEM_UNIT_COSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetITEM_UNIT_COSTNull()
            Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_UNIT_COSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsITEM_TOTAL_COSTNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_INVENTORYDGVLIST.ITEM_TOTAL_COSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetITEM_TOTAL_COSTNull()
            Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_TOTAL_COSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsITEM_UPDATED_DATENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_INVENTORYDGVLIST.ITEM_UPDATED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetITEM_UPDATED_DATENull()
            Me(Me.tableSPM4_INVENTORYDGVLIST.ITEM_UPDATED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCAT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_INVENTORYDGVLIST.CAT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCAT_NAMENull()
            Me(Me.tableSPM4_INVENTORYDGVLIST.CAT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSC_SUBCATEGORY_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_INVENTORYDGVLIST.SC_SUBCATEGORY_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSC_SUBCATEGORY_NAMENull()
            Me(Me.tableSPM4_INVENTORYDGVLIST.SC_SUBCATEGORY_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsITBR_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_INVENTORYDGVLIST.ITBR_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetITBR_NAMENull()
            Me(Me.tableSPM4_INVENTORYDGVLIST.ITBR_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_INVENTORY_CATEGORYRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_INVENTORY_CATEGORY As tblM4_INVENTORY_CATEGORYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_INVENTORY_CATEGORY = CType(Me.Table,tblM4_INVENTORY_CATEGORYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CAT_CODE() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_CATEGORY.CAT_CODEColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_CATEGORY.CAT_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CAT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_CATEGORY.CAT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAT_NAME' in table 'tblM4_INVENTORY_CATEGORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_CATEGORY.CAT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CAT_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_CATEGORY.CAT_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAT_STATUS' in table 'tblM4_INVENTORY_CATEGORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_CATEGORY.CAT_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_CATEGORY.HRIS_EMPNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPNO' in table 'tblM4_INVENTORY_CATEGORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_CATEGORY.HRIS_EMPNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CAT_CREATED_DATE() As Date
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_CATEGORY.CAT_CREATED_DATEColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_CATEGORY.CAT_CREATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CAT_UPDATED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_CATEGORY.CAT_UPDATED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAT_UPDATED_DATE' in table 'tblM4_INVENTORY_CATEGORY' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_CATEGORY.CAT_UPDATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCAT_NAMENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_CATEGORY.CAT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCAT_NAMENull()
            Me(Me.tabletblM4_INVENTORY_CATEGORY.CAT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCAT_STATUSNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_CATEGORY.CAT_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCAT_STATUSNull()
            Me(Me.tabletblM4_INVENTORY_CATEGORY.CAT_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPNONull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_CATEGORY.HRIS_EMPNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPNONull()
            Me(Me.tabletblM4_INVENTORY_CATEGORY.HRIS_EMPNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCAT_UPDATED_DATENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_CATEGORY.CAT_UPDATED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCAT_UPDATED_DATENull()
            Me(Me.tabletblM4_INVENTORY_CATEGORY.CAT_UPDATED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GettblM4_INVENTORY_SUB_CATEGORYRows() As tblM4_INVENTORY_SUB_CATEGORYRow()
            If (Me.Table.ChildRelations("FK_tblM4_SUB_CATEGORY_tblM4_CATEGORY") Is Nothing) Then
                Return New tblM4_INVENTORY_SUB_CATEGORYRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tblM4_SUB_CATEGORY_tblM4_CATEGORY")),tblM4_INVENTORY_SUB_CATEGORYRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_INVENTORY_ITEMBRANDRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_INVENTORY_ITEMBRAND As tblM4_INVENTORY_ITEMBRANDDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_INVENTORY_ITEMBRAND = CType(Me.Table,tblM4_INVENTORY_ITEMBRANDDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITBR_NO() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_NOColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITBR_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITBR_NAME' in table 'tblM4_INVENTORY_ITEMBRAND' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITBR_CREATED_DATE() As Date
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_CREATED_DATEColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_CREATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITBR_UPDATED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_UPDATED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITBR_UPDATED_DATE' in table 'tblM4_INVENTORY_ITEMBRAND' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_UPDATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMBRAND.HRIS_EMPNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPNO' in table 'tblM4_INVENTORY_ITEMBRAND' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMBRAND.HRIS_EMPNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITBR_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITBR_STATUS' in table 'tblM4_INVENTORY_ITEMBRAND' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsITBR_NAMENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetITBR_NAMENull()
            Me(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsITBR_UPDATED_DATENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_UPDATED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetITBR_UPDATED_DATENull()
            Me(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_UPDATED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPNONull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMBRAND.HRIS_EMPNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPNONull()
            Me(Me.tabletblM4_INVENTORY_ITEMBRAND.HRIS_EMPNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsITBR_STATUSNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetITBR_STATUSNull()
            Me(Me.tabletblM4_INVENTORY_ITEMBRAND.ITBR_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GettblM4_INVENTORY_ITEMSRows() As tblM4_INVENTORY_ITEMSRow()
            If (Me.Table.ChildRelations("FK_tblM4_ITEMS_tblM4_ITEMBRAND") Is Nothing) Then
                Return New tblM4_INVENTORY_ITEMSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tblM4_ITEMS_tblM4_ITEMBRAND")),tblM4_INVENTORY_ITEMSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_INVENTORY_ITEMSRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_INVENTORY_ITEMS As tblM4_INVENTORY_ITEMSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_INVENTORY_ITEMS = CType(Me.Table,tblM4_INVENTORY_ITEMSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_CODE() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_CODEColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SC_NO() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS.SC_NOColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS.SC_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITBR_NO() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS.ITBR_NOColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS.ITBR_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_SERIAL_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_SERIAL_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEM_SERIAL_NO' in table 'tblM4_INVENTORY_ITEMS' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_SERIAL_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_DESCRIPTION() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_DESCRIPTIONColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_UNIT() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_UNITColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_UNITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_UNIT_COST() As Decimal
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_UNIT_COSTColumn),Decimal)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_UNIT_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_TOTAL_COST() As Decimal
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_TOTAL_COSTColumn),Decimal)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_TOTAL_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_QUANTITY() As Integer
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_QUANTITYColumn),Integer)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_QUANTITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_DATE_AQUISITION() As Date
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_DATE_AQUISITIONColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_DATE_AQUISITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_CREATED_DATE() As Date
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_CREATED_DATEColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_CREATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_UPDATED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_UPDATED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEM_UPDATED_DATE' in table 'tblM4_INVENTORY_ITEMS' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_UPDATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tblM4_INVENTORY_ITEMBRANDRow() As tblM4_INVENTORY_ITEMBRANDRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tblM4_ITEMS_tblM4_ITEMBRAND")),tblM4_INVENTORY_ITEMBRANDRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tblM4_ITEMS_tblM4_ITEMBRAND"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tblM4_INVENTORY_SUB_CATEGORYRow() As tblM4_INVENTORY_SUB_CATEGORYRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tblM4_INVENTORY_ITEMS_tblM4_INVENTORY_ITEMS")),tblM4_INVENTORY_SUB_CATEGORYRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tblM4_INVENTORY_ITEMS_tblM4_INVENTORY_ITEMS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsITEM_SERIAL_NONull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMS.ITEM_SERIAL_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetITEM_SERIAL_NONull()
            Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_SERIAL_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsITEM_UPDATED_DATENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMS.ITEM_UPDATED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetITEM_UPDATED_DATENull()
            Me(Me.tabletblM4_INVENTORY_ITEMS.ITEM_UPDATED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_INVENTORY_SUB_CATEGORYRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_INVENTORY_SUB_CATEGORY As tblM4_INVENTORY_SUB_CATEGORYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_INVENTORY_SUB_CATEGORY = CType(Me.Table,tblM4_INVENTORY_SUB_CATEGORYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SC_NO() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_NOColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CAT_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.CAT_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAT_CODE' in table 'tblM4_INVENTORY_SUB_CATEGORY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.CAT_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SC_SUBCATEGORY_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_SUBCATEGORY_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SC_SUBCATEGORY_NAME' in table 'tblM4_INVENTORY_SUB_CATEGORY"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_SUBCATEGORY_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SC_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SC_STATUS' in table 'tblM4_INVENTORY_SUB_CATEGORY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.HRIS_EMPNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPNO' in table 'tblM4_INVENTORY_SUB_CATEGORY' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.HRIS_EMPNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SC_CREATED_DATE() As Date
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_CREATED_DATEColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_CREATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SC_UPDATED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_UPDATED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SC_UPDATED_DATE' in table 'tblM4_INVENTORY_SUB_CATEGORY' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_UPDATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tblM4_INVENTORY_CATEGORYRow() As tblM4_INVENTORY_CATEGORYRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_tblM4_SUB_CATEGORY_tblM4_CATEGORY")),tblM4_INVENTORY_CATEGORYRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_tblM4_SUB_CATEGORY_tblM4_CATEGORY"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCAT_CODENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_SUB_CATEGORY.CAT_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCAT_CODENull()
            Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.CAT_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSC_SUBCATEGORY_NAMENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_SUBCATEGORY_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSC_SUBCATEGORY_NAMENull()
            Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_SUBCATEGORY_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSC_STATUSNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSC_STATUSNull()
            Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPNONull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_SUB_CATEGORY.HRIS_EMPNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPNONull()
            Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.HRIS_EMPNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSC_UPDATED_DATENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_UPDATED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSC_UPDATED_DATENull()
            Me(Me.tabletblM4_INVENTORY_SUB_CATEGORY.SC_UPDATED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GettblM4_INVENTORY_ITEMSRows() As tblM4_INVENTORY_ITEMSRow()
            If (Me.Table.ChildRelations("FK_tblM4_INVENTORY_ITEMS_tblM4_INVENTORY_ITEMS") Is Nothing) Then
                Return New tblM4_INVENTORY_ITEMSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_tblM4_INVENTORY_ITEMS_tblM4_INVENTORY_ITEMS")),tblM4_INVENTORY_ITEMSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_INVENTORY_CATEGORY1Row
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_INVENTORY_CATEGORY1 As tblM4_INVENTORY_CATEGORY1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_INVENTORY_CATEGORY1 = CType(Me.Table,tblM4_INVENTORY_CATEGORY1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Category_Code() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_CATEGORY1.Category_CodeColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_CATEGORY1.Category_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Category_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_CATEGORY1.Category_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Category Name' in table 'tblM4_INVENTORY_CATEGORY1' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_CATEGORY1.Category_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Created_Date() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_CATEGORY1.Created_DateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Created Date' in table 'tblM4_INVENTORY_CATEGORY1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_CATEGORY1.Created_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Status() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_CATEGORY1.StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'tblM4_INVENTORY_CATEGORY1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_CATEGORY1.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCategory_NameNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_CATEGORY1.Category_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCategory_NameNull()
            Me(Me.tabletblM4_INVENTORY_CATEGORY1.Category_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCreated_DateNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_CATEGORY1.Created_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCreated_DateNull()
            Me(Me.tabletblM4_INVENTORY_CATEGORY1.Created_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_CATEGORY1.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tabletblM4_INVENTORY_CATEGORY1.StatusColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_INVENTORY_ITEMBRAND1Row
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_INVENTORY_ITEMBRAND1 As tblM4_INVENTORY_ITEMBRAND1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_INVENTORY_ITEMBRAND1 = CType(Me.Table,tblM4_INVENTORY_ITEMBRAND1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Brand_Code() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMBRAND1.Brand_CodeColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMBRAND1.Brand_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Brand_Provider_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMBRAND1._Brand_Provider_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Brand/Provider Name' in table 'tblM4_INVENTORY_ITEMBRAND1' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMBRAND1._Brand_Provider_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Date_Created() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMBRAND1.Date_CreatedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date Created' in table 'tblM4_INVENTORY_ITEMBRAND1' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMBRAND1.Date_CreatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Status() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMBRAND1.StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'tblM4_INVENTORY_ITEMBRAND1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMBRAND1.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Brand_Provider_NameNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMBRAND1._Brand_Provider_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Brand_Provider_NameNull()
            Me(Me.tabletblM4_INVENTORY_ITEMBRAND1._Brand_Provider_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDate_CreatedNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMBRAND1.Date_CreatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDate_CreatedNull()
            Me(Me.tabletblM4_INVENTORY_ITEMBRAND1.Date_CreatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMBRAND1.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tabletblM4_INVENTORY_ITEMBRAND1.StatusColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_CATEGORY_AND_SUBRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_CATEGORY_AND_SUB As tblM4_CATEGORY_AND_SUBDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_CATEGORY_AND_SUB = CType(Me.Table,tblM4_CATEGORY_AND_SUBDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Sub_Category_Code() As String
            Get
                Return CType(Me(Me.tabletblM4_CATEGORY_AND_SUB._Sub_Category_CodeColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_CATEGORY_AND_SUB._Sub_Category_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Category_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_CATEGORY_AND_SUB.Category_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Category Name' in table 'tblM4_CATEGORY_AND_SUB' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_CATEGORY_AND_SUB.Category_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Sub_Category_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_CATEGORY_AND_SUB._Sub_Category_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sub-Category Name' in table 'tblM4_CATEGORY_AND_SUB' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_CATEGORY_AND_SUB._Sub_Category_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Created_Date() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_CATEGORY_AND_SUB.Created_DateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Created Date' in table 'tblM4_CATEGORY_AND_SUB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_CATEGORY_AND_SUB.Created_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Status() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_CATEGORY_AND_SUB.StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'tblM4_CATEGORY_AND_SUB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_CATEGORY_AND_SUB.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCategory_NameNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_CATEGORY_AND_SUB.Category_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCategory_NameNull()
            Me(Me.tabletblM4_CATEGORY_AND_SUB.Category_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Sub_Category_NameNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_CATEGORY_AND_SUB._Sub_Category_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Sub_Category_NameNull()
            Me(Me.tabletblM4_CATEGORY_AND_SUB._Sub_Category_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCreated_DateNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_CATEGORY_AND_SUB.Created_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCreated_DateNull()
            Me(Me.tabletblM4_CATEGORY_AND_SUB.Created_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_CATEGORY_AND_SUB.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tabletblM4_CATEGORY_AND_SUB.StatusColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_INVENTORY_ASSIGN_PERSONRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_INVENTORY_ASSIGN_PERSON As tblM4_INVENTORY_ASSIGN_PERSONDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_INVENTORY_ASSIGN_PERSON = CType(Me.Table,tblM4_INVENTORY_ASSIGN_PERSONDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ASSI_NO() As Date
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.ASSI_NOColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.ASSI_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_CODE() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.ITEM_CODEColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.ITEM_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_NO() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.EMP_NOColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.EMP_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ASSI_ORIGINATED() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.ASSI_ORIGINATEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASSI_ORIGINATED' in table 'tblM4_INVENTORY_ASSIGN_PERSON' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.ASSI_ORIGINATEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property REMARKS() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.REMARKSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REMARKS' in table 'tblM4_INVENTORY_ASSIGN_PERSON' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ASSI_ASSIGNED_BY() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.ASSI_ASSIGNED_BYColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.ASSI_ASSIGNED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DATE_ASSIGNED() As Date
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.DATE_ASSIGNEDColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.DATE_ASSIGNEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DATE_CREATED() As Date
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.DATE_CREATEDColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.DATE_CREATEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsASSI_ORIGINATEDNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.ASSI_ORIGINATEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetASSI_ORIGINATEDNull()
            Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.ASSI_ORIGINATEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsREMARKSNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.REMARKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetREMARKSNull()
            Me(Me.tabletblM4_INVENTORY_ASSIGN_PERSON.REMARKSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_INVENTORY_ITEMS1Row
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_INVENTORY_ITEMS1 As tblM4_INVENTORY_ITEMS1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_INVENTORY_ITEMS1 = CType(Me.Table,tblM4_INVENTORY_ITEMS1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_CODE() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_CODEColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_SERIAL_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_SERIAL_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEM_SERIAL_NO' in table 'tblM4_INVENTORY_ITEMS1' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_SERIAL_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_DESCRIPTION() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_DESCRIPTIONColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_UNIT() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_UNITColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_UNITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_UNIT_COST() As Decimal
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_UNIT_COSTColumn),Decimal)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_UNIT_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_TOTAL_COST() As Decimal
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_TOTAL_COSTColumn),Decimal)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_TOTAL_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_QUANTITY() As Integer
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_QUANTITYColumn),Integer)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_QUANTITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_DATE_AQUISITION() As Date
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_DATE_AQUISITIONColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_DATE_AQUISITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ASSI_ORIGINATED() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS1.ASSI_ORIGINATEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASSI_ORIGINATED' in table 'tblM4_INVENTORY_ITEMS1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS1.ASSI_ORIGINATEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsITEM_SERIAL_NONull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_SERIAL_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetITEM_SERIAL_NONull()
            Me(Me.tabletblM4_INVENTORY_ITEMS1.ITEM_SERIAL_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsASSI_ORIGINATEDNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMS1.ASSI_ORIGINATEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetASSI_ORIGINATEDNull()
            Me(Me.tabletblM4_INVENTORY_ITEMS1.ASSI_ORIGINATEDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE As tblM4_INVENTORY_ACQUISITION_ITEM_USAGEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE = CType(Me.Table,tblM4_INVENTORY_ACQUISITION_ITEM_USAGEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USG_CODE() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE.USG_CODEColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE.USG_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USG_NAME() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE.USG_NAMEColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE.USG_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USG_DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE.USG_DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USG_DESCRIPTION' in table 'tblM4_INVENTORY_ACQUISITION_ITEM"& _ 
                            "_USAGE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE.USG_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USG_DATE_CREATED() As Date
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE.USG_DATE_CREATEDColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE.USG_DATE_CREATEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUSG_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE.USG_DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUSG_DESCRIPTIONNull()
            Me(Me.tabletblM4_INVENTORY_ACQUISITION_ITEM_USAGE.USG_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_INVENTORY_ACQUISITION_VALUERow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_INVENTORY_ACQUISITION_VALUE As tblM4_INVENTORY_ACQUISITION_VALUEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_INVENTORY_ACQUISITION_VALUE = CType(Me.Table,tblM4_INVENTORY_ACQUISITION_VALUEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ACQV_CODE() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ACQUISITION_VALUE.ACQV_CODEColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ACQUISITION_VALUE.ACQV_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ACQV_TITLE() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ACQUISITION_VALUE.ACQV_TITLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACQV_TITLE' in table 'tblM4_INVENTORY_ACQUISITION_VALUE' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ACQUISITION_VALUE.ACQV_TITLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ACQV_DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ACQUISITION_VALUE.ACQV_DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACQV_DESCRIPTION' in table 'tblM4_INVENTORY_ACQUISITION_VAL"& _ 
                            "UE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ACQUISITION_VALUE.ACQV_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ACQV_DATE_CREATED() As Date
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ACQUISITION_VALUE.ACQV_DATE_CREATEDColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ACQUISITION_VALUE.ACQV_DATE_CREATEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsACQV_TITLENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ACQUISITION_VALUE.ACQV_TITLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetACQV_TITLENull()
            Me(Me.tabletblM4_INVENTORY_ACQUISITION_VALUE.ACQV_TITLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsACQV_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ACQUISITION_VALUE.ACQV_DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetACQV_DESCRIPTIONNull()
            Me(Me.tabletblM4_INVENTORY_ACQUISITION_VALUE.ACQV_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblM4_INVENTORY_ITEMS_PROPERTYRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblM4_INVENTORY_ITEMS_PROPERTY As tblM4_INVENTORY_ITEMS_PROPERTYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblM4_INVENTORY_ITEMS_PROPERTY = CType(Me.Table,tblM4_INVENTORY_ITEMS_PROPERTYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_NO() As Date
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.ITEM_NOColumn),Date)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.ITEM_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ITEM_CODE() As String
            Get
                Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.ITEM_CODEColumn),String)
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.ITEM_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PROP_DIVISION_UNIT() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_DIVISION_UNITColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROP_DIVISION_UNIT' in table 'tblM4_INVENTORY_ITEMS_PROPERT"& _ 
                            "Y' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_DIVISION_UNITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PROP_CUSTODIAN() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_CUSTODIANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROP_CUSTODIAN' in table 'tblM4_INVENTORY_ITEMS_PROPERTY' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_CUSTODIANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PROP_PROPERTY_USER() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_PROPERTY_USERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROP_PROPERTY_USER' in table 'tblM4_INVENTORY_ITEMS_PROPERT"& _ 
                            "Y' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_PROPERTY_USERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PROP_ENCODED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_ENCODED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROP_ENCODED_BY' in table 'tblM4_INVENTORY_ITEMS_PROPERTY' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_ENCODED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PROP_CREATED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_CREATED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROP_CREATED_DATE' in table 'tblM4_INVENTORY_ITEMS_PROPERTY"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_CREATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPROP_DIVISION_UNITNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_DIVISION_UNITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPROP_DIVISION_UNITNull()
            Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_DIVISION_UNITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPROP_CUSTODIANNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_CUSTODIANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPROP_CUSTODIANNull()
            Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_CUSTODIANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPROP_PROPERTY_USERNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_PROPERTY_USERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPROP_PROPERTY_USERNull()
            Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_PROPERTY_USERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPROP_ENCODED_BYNull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_ENCODED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPROP_ENCODED_BYNull()
            Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_ENCODED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPROP_CREATED_DATENull() As Boolean
            Return Me.IsNull(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_CREATED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPROP_CREATED_DATENull()
            Me(Me.tabletblM4_INVENTORY_ITEMS_PROPERTY.PROP_CREATED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PR_PARTICULARS_PREVIEWRow
        Inherits Global.System.Data.DataRow
        
        Private tablePR_PARTICULARS_PREVIEW As PR_PARTICULARS_PREVIEWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePR_PARTICULARS_PREVIEW = CType(Me.Table,PR_PARTICULARS_PREVIEWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_DATEREQUESTED() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PR_DATEREQUESTEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_DATEREQUESTED' in table 'PR_PARTICULARS_PREVIEW' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PR_DATEREQUESTEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_APPCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PR_APPCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_APPCODE' in table 'PR_PARTICULARS_PREVIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PR_APPCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_PURPOSE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PR_PURPOSEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_PURPOSE' in table 'PR_PARTICULARS_PREVIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PR_PURPOSEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_REQUESTEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PR_REQUESTEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_REQUESTEDBY' in table 'PR_PARTICULARS_PREVIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PR_REQUESTEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_REQUESTEDBYPOSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PR_REQUESTEDBYPOSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_REQUESTEDBYPOSITION' in table 'PR_PARTICULARS_PREVIEW' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PR_REQUESTEDBYPOSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_APPROVEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PR_APPROVEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_APPROVEDBY' in table 'PR_PARTICULARS_PREVIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PR_APPROVEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_APPROVEDBYPOSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PR_APPROVEDBYPOSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_APPROVEDBYPOSITION' in table 'PR_PARTICULARS_PREVIEW' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PR_APPROVEDBYPOSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_CERTIFIEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PR_CERTIFIEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_CERTIFIEDBY' in table 'PR_PARTICULARS_PREVIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PR_CERTIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_CERTIFIEDBYPOSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PR_CERTIFIEDBYPOSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_CERTIFIEDBYPOSITION' in table 'PR_PARTICULARS_PREVIEW' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PR_CERTIFIEDBYPOSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_NOTEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PR_NOTEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_NOTEDBY' in table 'PR_PARTICULARS_PREVIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PR_NOTEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_NOTEDBYPOSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PR_NOTEDBYPOSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_NOTEDBYPOSITION' in table 'PR_PARTICULARS_PREVIEW' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PR_NOTEDBYPOSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_DEPARTMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PR_DEPARTMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_DEPARTMENT' in table 'PR_PARTICULARS_PREVIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PR_DEPARTMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PR_DIVISION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PR_DIVISIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PR_DIVISION' in table 'PR_PARTICULARS_PREVIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PR_DIVISIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRI_ITEM_DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_ITEM_DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRI_ITEM_DESCRIPTION' in table 'PR_PARTICULARS_PREVIEW' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_ITEM_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRI_QTY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_QTYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRI_QTY' in table 'PR_PARTICULARS_PREVIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRI_UNITOFISSUE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_UNITOFISSUEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRI_UNITOFISSUE' in table 'PR_PARTICULARS_PREVIEW' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_UNITOFISSUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRI_STOCKNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_STOCKNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRI_STOCKNO' in table 'PR_PARTICULARS_PREVIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_STOCKNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRI_ESTIMATEDUNITCOST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_ESTIMATEDUNITCOSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRI_ESTIMATEDUNITCOST' in table 'PR_PARTICULARS_PREVIEW' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_ESTIMATEDUNITCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRI_ESTIMATEDCOST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_ESTIMATEDCOSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRI_ESTIMATEDCOST' in table 'PR_PARTICULARS_PREVIEW' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_ESTIMATEDCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRI_ISDOLLARS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_ISDOLLARSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRI_ISDOLLARS' in table 'PR_PARTICULARS_PREVIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_ISDOLLARSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_DATEREQUESTEDNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PR_DATEREQUESTEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_DATEREQUESTEDNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PR_DATEREQUESTEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_APPCODENull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PR_APPCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_APPCODENull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PR_APPCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_PURPOSENull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PR_PURPOSEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_PURPOSENull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PR_PURPOSEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_REQUESTEDBYNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PR_REQUESTEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_REQUESTEDBYNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PR_REQUESTEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_REQUESTEDBYPOSITIONNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PR_REQUESTEDBYPOSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_REQUESTEDBYPOSITIONNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PR_REQUESTEDBYPOSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_APPROVEDBYNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PR_APPROVEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_APPROVEDBYNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PR_APPROVEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_APPROVEDBYPOSITIONNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PR_APPROVEDBYPOSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_APPROVEDBYPOSITIONNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PR_APPROVEDBYPOSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_CERTIFIEDBYNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PR_CERTIFIEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_CERTIFIEDBYNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PR_CERTIFIEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_CERTIFIEDBYPOSITIONNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PR_CERTIFIEDBYPOSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_CERTIFIEDBYPOSITIONNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PR_CERTIFIEDBYPOSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_NOTEDBYNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PR_NOTEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_NOTEDBYNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PR_NOTEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_NOTEDBYPOSITIONNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PR_NOTEDBYPOSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_NOTEDBYPOSITIONNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PR_NOTEDBYPOSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_DEPARTMENTNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PR_DEPARTMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_DEPARTMENTNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PR_DEPARTMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPR_DIVISIONNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PR_DIVISIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPR_DIVISIONNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PR_DIVISIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPRI_ITEM_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PRI_ITEM_DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPRI_ITEM_DESCRIPTIONNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_ITEM_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPRI_QTYNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PRI_QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPRI_QTYNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPRI_UNITOFISSUENull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PRI_UNITOFISSUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPRI_UNITOFISSUENull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_UNITOFISSUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPRI_STOCKNONull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PRI_STOCKNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPRI_STOCKNONull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_STOCKNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPRI_ESTIMATEDUNITCOSTNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PRI_ESTIMATEDUNITCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPRI_ESTIMATEDUNITCOSTNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_ESTIMATEDUNITCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPRI_ESTIMATEDCOSTNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PRI_ESTIMATEDCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPRI_ESTIMATEDCOSTNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_ESTIMATEDCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPRI_ISDOLLARSNull() As Boolean
            Return Me.IsNull(Me.tablePR_PARTICULARS_PREVIEW.PRI_ISDOLLARSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPRI_ISDOLLARSNull()
            Me(Me.tablePR_PARTICULARS_PREVIEW.PRI_ISDOLLARSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ItemsDataGridViewRow
        Inherits Global.System.Data.DataRow
        
        Private tableItemsDataGridView As ItemsDataGridViewDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableItemsDataGridView = CType(Me.Table,ItemsDataGridViewDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ItemCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableItemsDataGridView.ItemCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemCode' in table 'ItemsDataGridView' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemsDataGridView.ItemCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SerialNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableItemsDataGridView.SerialNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SerialNo' in table 'ItemsDataGridView' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemsDataGridView.SerialNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ItemDescription() As String
            Get
                Try 
                    Return CType(Me(Me.tableItemsDataGridView.ItemDescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemDescription' in table 'ItemsDataGridView' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemsDataGridView.ItemDescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UnitType() As String
            Get
                Try 
                    Return CType(Me(Me.tableItemsDataGridView.UnitTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UnitType' in table 'ItemsDataGridView' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemsDataGridView.UnitTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UnitCost() As String
            Get
                Try 
                    Return CType(Me(Me.tableItemsDataGridView.UnitCostColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UnitCost' in table 'ItemsDataGridView' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemsDataGridView.UnitCostColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TotalCost() As String
            Get
                Try 
                    Return CType(Me(Me.tableItemsDataGridView.TotalCostColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalCost' in table 'ItemsDataGridView' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemsDataGridView.TotalCostColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Quantity() As String
            Get
                Try 
                    Return CType(Me(Me.tableItemsDataGridView.QuantityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Quantity' in table 'ItemsDataGridView' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemsDataGridView.QuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DateAcquisition() As String
            Get
                Try 
                    Return CType(Me(Me.tableItemsDataGridView.DateAcquisitionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateAcquisition' in table 'ItemsDataGridView' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemsDataGridView.DateAcquisitionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsItemCodeNull() As Boolean
            Return Me.IsNull(Me.tableItemsDataGridView.ItemCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetItemCodeNull()
            Me(Me.tableItemsDataGridView.ItemCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSerialNoNull() As Boolean
            Return Me.IsNull(Me.tableItemsDataGridView.SerialNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSerialNoNull()
            Me(Me.tableItemsDataGridView.SerialNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsItemDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableItemsDataGridView.ItemDescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetItemDescriptionNull()
            Me(Me.tableItemsDataGridView.ItemDescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUnitTypeNull() As Boolean
            Return Me.IsNull(Me.tableItemsDataGridView.UnitTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUnitTypeNull()
            Me(Me.tableItemsDataGridView.UnitTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUnitCostNull() As Boolean
            Return Me.IsNull(Me.tableItemsDataGridView.UnitCostColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUnitCostNull()
            Me(Me.tableItemsDataGridView.UnitCostColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTotalCostNull() As Boolean
            Return Me.IsNull(Me.tableItemsDataGridView.TotalCostColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTotalCostNull()
            Me(Me.tableItemsDataGridView.TotalCostColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsQuantityNull() As Boolean
            Return Me.IsNull(Me.tableItemsDataGridView.QuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetQuantityNull()
            Me(Me.tableItemsDataGridView.QuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDateAcquisitionNull() As Boolean
            Return Me.IsNull(Me.tableItemsDataGridView.DateAcquisitionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDateAcquisitionNull()
            Me(Me.tableItemsDataGridView.DateAcquisitionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TBLG3_COMPANY_INFORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBLG3_COMPANY_INFORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TBLG3_COMPANY_INFORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TBLG3_COMPANY_INFORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_PURCHASEREQUEST_ITEMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_PURCHASEREQUEST_ITEMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_PURCHASEREQUEST_ITEMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_PURCHASEREQUEST_ITEMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TBLG3_DELIVER_RECEIPT_DETAILSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBLG3_DELIVER_RECEIPT_DETAILSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TBLG3_DELIVER_RECEIPT_DETAILSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TBLG3_DELIVER_RECEIPT_DETAILSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TBLG3_DELIVERY_RECEIPTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBLG3_DELIVERY_RECEIPTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TBLG3_DELIVERY_RECEIPTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TBLG3_DELIVERY_RECEIPTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TBLG3_INVOICERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBLG3_INVOICERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TBLG3_INVOICERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TBLG3_INVOICERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TBLG3_INVOICE_DETAILSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBLG3_INVOICE_DETAILSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TBLG3_INVOICE_DETAILSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TBLG3_INVOICE_DETAILSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TBLG3_PRIMARY_SIGNATORYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBLG3_PRIMARY_SIGNATORYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TBLG3_PRIMARY_SIGNATORYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TBLG3_PRIMARY_SIGNATORYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TBLG3_REG_BUSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBLG3_REG_BUSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TBLG3_REG_BUSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TBLG3_REG_BUSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TBLG3_REG_DVRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBLG3_REG_DVRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TBLG3_REG_DVRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TBLG3_REG_DVRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TBLG3_REG_PARTICULARRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBLG3_REG_PARTICULARRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TBLG3_REG_PARTICULARRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TBLG3_REG_PARTICULARRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TBLG3_SIGNATORYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBLG3_SIGNATORYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TBLG3_SIGNATORYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TBLG3_SIGNATORYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TBLG3_SIGNATORY_TYPERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBLG3_SIGNATORY_TYPERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TBLG3_SIGNATORY_TYPERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TBLG3_SIGNATORY_TYPERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TBLG3_UNITSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBLG3_UNITSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TBLG3_UNITSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TBLG3_UNITSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_PURCHASEREQUESTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_PURCHASEREQUESTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_PURCHASEREQUESTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_PURCHASEREQUESTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class VWG3_DR_LISTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VWG3_DR_LISTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As VWG3_DR_LISTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As VWG3_DR_LISTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class VWG3_REG_DVRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VWG3_REG_DVRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As VWG3_REG_DVRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As VWG3_REG_DVRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class VWG3_EMPLOYEE_LISTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VWG3_EMPLOYEE_LISTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As VWG3_EMPLOYEE_LISTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As VWG3_EMPLOYEE_LISTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class VWG3_INVOICE_LISTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VWG3_INVOICE_LISTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As VWG3_INVOICE_LISTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As VWG3_INVOICE_LISTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class VWG3_PRIMARY_SIGNATORYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VWG3_PRIMARY_SIGNATORYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As VWG3_PRIMARY_SIGNATORYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As VWG3_PRIMARY_SIGNATORYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class VWG3_REG_BUSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VWG3_REG_BUSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As VWG3_REG_BUSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As VWG3_REG_BUSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class SPM4_PRCODERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SPM4_PRCODERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As SPM4_PRCODERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As SPM4_PRCODERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class SPM4_CURRENTDATETIMERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SPM4_CURRENTDATETIMERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As SPM4_CURRENTDATETIMERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As SPM4_CURRENTDATETIMERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TBLG3_SIGNATORY1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBLG3_SIGNATORY1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TBLG3_SIGNATORY1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TBLG3_SIGNATORY1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class SPM4_GETPR_INFORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SPM4_GETPR_INFORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As SPM4_GETPR_INFORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As SPM4_GETPR_INFORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_CATEGORY1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_CATEGORY1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_CATEGORY1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_CATEGORY1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_ITEMBRAND1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_ITEMBRAND1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_ITEMBRAND1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_ITEMBRAND1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_SUB_CATEGORY1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_SUB_CATEGORY1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_SUB_CATEGORY1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_SUB_CATEGORY1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class SPM4_INVENTORY_REPORTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SPM4_INVENTORY_REPORTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As SPM4_INVENTORY_REPORTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As SPM4_INVENTORY_REPORTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class SPM4_PROPERTY_NORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SPM4_PROPERTY_NORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As SPM4_PROPERTY_NORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As SPM4_PROPERTY_NORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_PURCHASEREQUEST_CATEGORYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_PURCHASEREQUEST_CATEGORYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_PURCHASEREQUEST_CATEGORYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_PURCHASEREQUEST_CATEGORYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class SPM4_PURCHASELISTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SPM4_PURCHASELISTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As SPM4_PURCHASELISTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As SPM4_PURCHASELISTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class SPM4_PURCHASEREQUEST_STATUSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SPM4_PURCHASEREQUEST_STATUSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As SPM4_PURCHASEREQUEST_STATUSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As SPM4_PURCHASEREQUEST_STATUSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_PURCHASEREQUEST_CANCELEDRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_PURCHASEREQUEST_CANCELEDRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_PURCHASEREQUEST_CANCELEDRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_PURCHASEREQUEST_CANCELEDRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_PURCHASEREQUEST_REVISIONRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_PURCHASEREQUEST_REVISIONRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_PURCHASEREQUEST_REVISIONRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_PURCHASEREQUEST_REVISIONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_PURCHASEREQUEST_POSTEDRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_PURCHASEREQUEST_POSTEDRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_PURCHASEREQUEST_POSTEDRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_PURCHASEREQUEST_POSTEDRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_PURCHASEREQUEST_ACCEPTEDRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_PURCHASEREQUEST_ACCEPTEDRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_PURCHASEREQUEST_ACCEPTEDRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_PURCHASEREQUEST_ACCEPTEDRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_PURCHASEREQUEST_PROVIDERRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_PURCHASEREQUEST_PROVIDERRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_PURCHASEREQUEST_PROVIDERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_PURCHASEREQUEST_PROVIDERRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_INVENTORY_ITEMS_LOCATIONRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_INVENTORY_ITEMS_LOCATIONRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_INVENTORY_ITEMS_LOCATIONRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_INVENTORY_ITEMS_LOCATIONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_INVENTORY_ITEMS_DEFLOCATIONRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_INVENTORY_ITEMS_DEFLOCATIONRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_INVENTORY_ITEMS_DEFLOCATIONRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_INVENTORY_ITEMS_DEFLOCATIONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class SPM4_INVENTORYDGVLISTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SPM4_INVENTORYDGVLISTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As SPM4_INVENTORYDGVLISTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As SPM4_INVENTORYDGVLISTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_INVENTORY_CATEGORYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_INVENTORY_CATEGORYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_INVENTORY_CATEGORYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_INVENTORY_CATEGORYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_INVENTORY_ITEMBRANDRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_INVENTORY_ITEMBRANDRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_INVENTORY_ITEMBRANDRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_INVENTORY_ITEMBRANDRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_INVENTORY_ITEMSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_INVENTORY_ITEMSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_INVENTORY_ITEMSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_INVENTORY_ITEMSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_INVENTORY_SUB_CATEGORYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_INVENTORY_SUB_CATEGORYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_INVENTORY_SUB_CATEGORYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_INVENTORY_SUB_CATEGORYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_INVENTORY_CATEGORY1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_INVENTORY_CATEGORY1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_INVENTORY_CATEGORY1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_INVENTORY_CATEGORY1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_INVENTORY_ITEMBRAND1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_INVENTORY_ITEMBRAND1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_INVENTORY_ITEMBRAND1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_INVENTORY_ITEMBRAND1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_CATEGORY_AND_SUBRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_CATEGORY_AND_SUBRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_CATEGORY_AND_SUBRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_CATEGORY_AND_SUBRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_INVENTORY_ASSIGN_PERSONRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_INVENTORY_ASSIGN_PERSONRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_INVENTORY_ASSIGN_PERSONRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_INVENTORY_ASSIGN_PERSONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_INVENTORY_ITEMS1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_INVENTORY_ITEMS1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_INVENTORY_ITEMS1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_INVENTORY_ITEMS1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_INVENTORY_ACQUISITION_ITEM_USAGERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_INVENTORY_ACQUISITION_ITEM_USAGERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_INVENTORY_ACQUISITION_VALUERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_INVENTORY_ACQUISITION_VALUERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_INVENTORY_ACQUISITION_VALUERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_INVENTORY_ACQUISITION_VALUERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblM4_INVENTORY_ITEMS_PROPERTYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblM4_INVENTORY_ITEMS_PROPERTYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblM4_INVENTORY_ITEMS_PROPERTYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblM4_INVENTORY_ITEMS_PROPERTYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class PR_PARTICULARS_PREVIEWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PR_PARTICULARS_PREVIEWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As PR_PARTICULARS_PREVIEWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As PR_PARTICULARS_PREVIEWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ItemsDataGridViewRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ItemsDataGridViewRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ItemsDataGridViewRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ItemsDataGridViewRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DS_PROPERTYDBTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBLG3_COMPANY_INFOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBLG3_COMPANY_INFO"
            tableMapping.ColumnMappings.Add("COM_TIN_NUMBER", "COM_TIN_NUMBER")
            tableMapping.ColumnMappings.Add("COM_COMPANY_NAME", "COM_COMPANY_NAME")
            tableMapping.ColumnMappings.Add("COM_ADDRESS", "COM_ADDRESS")
            tableMapping.ColumnMappings.Add("COM_CONTACT_NO", "COM_CONTACT_NO")
            tableMapping.ColumnMappings.Add("COM_FAX_NO", "COM_FAX_NO")
            tableMapping.ColumnMappings.Add("COM_EMAIL", "COM_EMAIL")
            tableMapping.ColumnMappings.Add("COM_DIRECTORY", "COM_DIRECTORY")
            tableMapping.ColumnMappings.Add("COM_STATUS", "COM_STATUS")
            tableMapping.ColumnMappings.Add("EMP_NO", "EMP_NO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBLG3_COMPANY_INFO] WHERE (([COM_TIN_NUMBER] = @Original_COM_T"& _ 
                "IN_NUMBER) AND ((@IsNull_COM_CONTACT_NO = 1 AND [COM_CONTACT_NO] IS NULL) OR ([C"& _ 
                "OM_CONTACT_NO] = @Original_COM_CONTACT_NO)) AND ((@IsNull_COM_FAX_NO = 1 AND [CO"& _ 
                "M_FAX_NO] IS NULL) OR ([COM_FAX_NO] = @Original_COM_FAX_NO)) AND ((@IsNull_COM_E"& _ 
                "MAIL = 1 AND [COM_EMAIL] IS NULL) OR ([COM_EMAIL] = @Original_COM_EMAIL)) AND (("& _ 
                "@IsNull_COM_DIRECTORY = 1 AND [COM_DIRECTORY] IS NULL) OR ([COM_DIRECTORY] = @Or"& _ 
                "iginal_COM_DIRECTORY)) AND ((@IsNull_COM_STATUS = 1 AND [COM_STATUS] IS NULL) OR"& _ 
                " ([COM_STATUS] = @Original_COM_STATUS)) AND ((@IsNull_EMP_NO = 1 AND [EMP_NO] IS"& _ 
                " NULL) OR ([EMP_NO] = @Original_EMP_NO)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_TIN_NUMBER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_TIN_NUMBER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COM_CONTACT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_CONTACT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_CONTACT_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_CONTACT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COM_FAX_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_FAX_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_FAX_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_FAX_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COM_EMAIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_EMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COM_DIRECTORY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_DIRECTORY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_DIRECTORY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_DIRECTORY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COM_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMP_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBLG3_COMPANY_INFO] ([COM_TIN_NUMBER], [COM_COMPANY_NAME], [CO"& _ 
                "M_ADDRESS], [COM_CONTACT_NO], [COM_FAX_NO], [COM_EMAIL], [COM_DIRECTORY], [COM_S"& _ 
                "TATUS], [EMP_NO]) VALUES (@COM_TIN_NUMBER, @COM_COMPANY_NAME, @COM_ADDRESS, @COM"& _ 
                "_CONTACT_NO, @COM_FAX_NO, @COM_EMAIL, @COM_DIRECTORY, @COM_STATUS, @EMP_NO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SE"& _ 
                "LECT COM_TIN_NUMBER, COM_COMPANY_NAME, COM_ADDRESS, COM_CONTACT_NO, COM_FAX_NO, "& _ 
                "COM_EMAIL, COM_DIRECTORY, COM_STATUS, EMP_NO FROM TBLG3_COMPANY_INFO WHERE (COM_"& _ 
                "TIN_NUMBER = @COM_TIN_NUMBER)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_TIN_NUMBER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_TIN_NUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_COMPANY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_COMPANY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_ADDRESS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_ADDRESS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_CONTACT_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_CONTACT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_FAX_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_FAX_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_EMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_DIRECTORY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_DIRECTORY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBLG3_COMPANY_INFO] SET [COM_TIN_NUMBER] = @COM_TIN_NUMBER, [COM_CO"& _ 
                "MPANY_NAME] = @COM_COMPANY_NAME, [COM_ADDRESS] = @COM_ADDRESS, [COM_CONTACT_NO] "& _ 
                "= @COM_CONTACT_NO, [COM_FAX_NO] = @COM_FAX_NO, [COM_EMAIL] = @COM_EMAIL, [COM_DI"& _ 
                "RECTORY] = @COM_DIRECTORY, [COM_STATUS] = @COM_STATUS, [EMP_NO] = @EMP_NO WHERE "& _ 
                "(([COM_TIN_NUMBER] = @Original_COM_TIN_NUMBER) AND ((@IsNull_COM_CONTACT_NO = 1 "& _ 
                "AND [COM_CONTACT_NO] IS NULL) OR ([COM_CONTACT_NO] = @Original_COM_CONTACT_NO)) "& _ 
                "AND ((@IsNull_COM_FAX_NO = 1 AND [COM_FAX_NO] IS NULL) OR ([COM_FAX_NO] = @Origi"& _ 
                "nal_COM_FAX_NO)) AND ((@IsNull_COM_EMAIL = 1 AND [COM_EMAIL] IS NULL) OR ([COM_E"& _ 
                "MAIL] = @Original_COM_EMAIL)) AND ((@IsNull_COM_DIRECTORY = 1 AND [COM_DIRECTORY"& _ 
                "] IS NULL) OR ([COM_DIRECTORY] = @Original_COM_DIRECTORY)) AND ((@IsNull_COM_STA"& _ 
                "TUS = 1 AND [COM_STATUS] IS NULL) OR ([COM_STATUS] = @Original_COM_STATUS)) AND "& _ 
                "((@IsNull_EMP_NO = 1 AND [EMP_NO] IS NULL) OR ([EMP_NO] = @Original_EMP_NO)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "SELECT COM_TIN_NUMBER, COM_COMPANY_NAME, COM_ADDRESS, COM_CONTACT_NO, COM_FAX_NO"& _ 
                ", COM_EMAIL, COM_DIRECTORY, COM_STATUS, EMP_NO FROM TBLG3_COMPANY_INFO WHERE (CO"& _ 
                "M_TIN_NUMBER = @COM_TIN_NUMBER)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_TIN_NUMBER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_TIN_NUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_COMPANY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_COMPANY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_ADDRESS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_ADDRESS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_CONTACT_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_CONTACT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_FAX_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_FAX_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_EMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_DIRECTORY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_DIRECTORY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_TIN_NUMBER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_TIN_NUMBER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COM_CONTACT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_CONTACT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_CONTACT_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_CONTACT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COM_FAX_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_FAX_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_FAX_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_FAX_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COM_EMAIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_EMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COM_DIRECTORY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_DIRECTORY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_DIRECTORY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_DIRECTORY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COM_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMP_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT COM_TIN_NUMBER, COM_COMPANY_NAME, COM_ADDRESS, COM_CONTACT_NO, COM_FAX_NO,"& _ 
                " COM_EMAIL, COM_DIRECTORY, COM_STATUS, EMP_NO FROM dbo.TBLG3_COMPANY_INFO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.TBLG3_COMPANY_INFODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.TBLG3_COMPANY_INFODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.TBLG3_COMPANY_INFODataTable = New DS_PROPERTYDB.TBLG3_COMPANY_INFODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.TBLG3_COMPANY_INFODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "TBLG3_COMPANY_INFO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_COM_TIN_NUMBER As String, ByVal Original_COM_CONTACT_NO As String, ByVal Original_COM_FAX_NO As String, ByVal Original_COM_EMAIL As String, ByVal Original_COM_DIRECTORY As String, ByVal Original_COM_STATUS As Global.System.Nullable(Of Integer), ByVal Original_EMP_NO As String) As Integer
            If (Original_COM_TIN_NUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_COM_TIN_NUMBER")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_COM_TIN_NUMBER,String)
            End If
            If (Original_COM_CONTACT_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_COM_CONTACT_NO,String)
            End If
            If (Original_COM_FAX_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_COM_FAX_NO,String)
            End If
            If (Original_COM_EMAIL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_COM_EMAIL,String)
            End If
            If (Original_COM_DIRECTORY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_COM_DIRECTORY,String)
            End If
            If (Original_COM_STATUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_COM_STATUS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_EMP_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_EMP_NO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal COM_TIN_NUMBER As String, ByVal COM_COMPANY_NAME As String, ByVal COM_ADDRESS As String, ByVal COM_CONTACT_NO As String, ByVal COM_FAX_NO As String, ByVal COM_EMAIL As String, ByVal COM_DIRECTORY As String, ByVal COM_STATUS As Global.System.Nullable(Of Integer), ByVal EMP_NO As String) As Integer
            If (COM_TIN_NUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("COM_TIN_NUMBER")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(COM_TIN_NUMBER,String)
            End If
            If (COM_COMPANY_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(COM_COMPANY_NAME,String)
            End If
            If (COM_ADDRESS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(COM_ADDRESS,String)
            End If
            If (COM_CONTACT_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(COM_CONTACT_NO,String)
            End If
            If (COM_FAX_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(COM_FAX_NO,String)
            End If
            If (COM_EMAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(COM_EMAIL,String)
            End If
            If (COM_DIRECTORY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(COM_DIRECTORY,String)
            End If
            If (COM_STATUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(COM_STATUS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (EMP_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(EMP_NO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal COM_TIN_NUMBER As String,  _
                    ByVal COM_COMPANY_NAME As String,  _
                    ByVal COM_ADDRESS As String,  _
                    ByVal COM_CONTACT_NO As String,  _
                    ByVal COM_FAX_NO As String,  _
                    ByVal COM_EMAIL As String,  _
                    ByVal COM_DIRECTORY As String,  _
                    ByVal COM_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal EMP_NO As String,  _
                    ByVal Original_COM_TIN_NUMBER As String,  _
                    ByVal Original_COM_CONTACT_NO As String,  _
                    ByVal Original_COM_FAX_NO As String,  _
                    ByVal Original_COM_EMAIL As String,  _
                    ByVal Original_COM_DIRECTORY As String,  _
                    ByVal Original_COM_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EMP_NO As String) As Integer
            If (COM_TIN_NUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("COM_TIN_NUMBER")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(COM_TIN_NUMBER,String)
            End If
            If (COM_COMPANY_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(COM_COMPANY_NAME,String)
            End If
            If (COM_ADDRESS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(COM_ADDRESS,String)
            End If
            If (COM_CONTACT_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(COM_CONTACT_NO,String)
            End If
            If (COM_FAX_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(COM_FAX_NO,String)
            End If
            If (COM_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(COM_EMAIL,String)
            End If
            If (COM_DIRECTORY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(COM_DIRECTORY,String)
            End If
            If (COM_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(COM_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (EMP_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(EMP_NO,String)
            End If
            If (Original_COM_TIN_NUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_COM_TIN_NUMBER")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_COM_TIN_NUMBER,String)
            End If
            If (Original_COM_CONTACT_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_COM_CONTACT_NO,String)
            End If
            If (Original_COM_FAX_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_COM_FAX_NO,String)
            End If
            If (Original_COM_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_COM_EMAIL,String)
            End If
            If (Original_COM_DIRECTORY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_COM_DIRECTORY,String)
            End If
            If (Original_COM_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_COM_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_EMP_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_EMP_NO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal COM_COMPANY_NAME As String, ByVal COM_ADDRESS As String, ByVal COM_CONTACT_NO As String, ByVal COM_FAX_NO As String, ByVal COM_EMAIL As String, ByVal COM_DIRECTORY As String, ByVal COM_STATUS As Global.System.Nullable(Of Integer), ByVal EMP_NO As String, ByVal Original_COM_TIN_NUMBER As String, ByVal Original_COM_CONTACT_NO As String, ByVal Original_COM_FAX_NO As String, ByVal Original_COM_EMAIL As String, ByVal Original_COM_DIRECTORY As String, ByVal Original_COM_STATUS As Global.System.Nullable(Of Integer), ByVal Original_EMP_NO As String) As Integer
            Return Me.Update(Original_COM_TIN_NUMBER, COM_COMPANY_NAME, COM_ADDRESS, COM_CONTACT_NO, COM_FAX_NO, COM_EMAIL, COM_DIRECTORY, COM_STATUS, EMP_NO, Original_COM_TIN_NUMBER, Original_COM_CONTACT_NO, Original_COM_FAX_NO, Original_COM_EMAIL, Original_COM_DIRECTORY, Original_COM_STATUS, Original_EMP_NO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_PURCHASEREQUEST_ITEMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_PURCHASEREQUEST_ITEM"
            tableMapping.ColumnMappings.Add("PRI_ITEMNO", "PRI_ITEMNO")
            tableMapping.ColumnMappings.Add("PR_QUANTITY", "PR_QUANTITY")
            tableMapping.ColumnMappings.Add("PR_UNITISSUE", "PR_UNITISSUE")
            tableMapping.ColumnMappings.Add("PRI_ITEMDESCRIPTION", "PRI_ITEMDESCRIPTION")
            tableMapping.ColumnMappings.Add("PR_STOCKNO", "PR_STOCKNO")
            tableMapping.ColumnMappings.Add("PR_ESTIMATEDUNITCOST", "PR_ESTIMATEDUNITCOST")
            tableMapping.ColumnMappings.Add("PR_ESTIMATEDCOST", "PR_ESTIMATEDCOST")
            tableMapping.ColumnMappings.Add("PR_PRNO", "PR_PRNO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_PURCHASEREQUEST_ITEM] WHERE (([PRI_ITEMNO] = @Original_PRI_ITE"& _ 
                "MNO) AND ([PR_QUANTITY] = @Original_PR_QUANTITY) AND ([PR_UNITISSUE] = @Original"& _ 
                "_PR_UNITISSUE) AND ([PRI_ITEMDESCRIPTION] = @Original_PRI_ITEMDESCRIPTION) AND ("& _ 
                "(@IsNull_PR_STOCKNO = 1 AND [PR_STOCKNO] IS NULL) OR ([PR_STOCKNO] = @Original_P"& _ 
                "R_STOCKNO)) AND ((@IsNull_PR_ESTIMATEDUNITCOST = 1 AND [PR_ESTIMATEDUNITCOST] IS"& _ 
                " NULL) OR ([PR_ESTIMATEDUNITCOST] = @Original_PR_ESTIMATEDUNITCOST)) AND ((@IsNu"& _ 
                "ll_PR_ESTIMATEDCOST = 1 AND [PR_ESTIMATEDCOST] IS NULL) OR ([PR_ESTIMATEDCOST] ="& _ 
                " @Original_PR_ESTIMATEDCOST)) AND ([PR_PRNO] = @Original_PR_PRNO))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRI_ITEMNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRI_ITEMNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_QUANTITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_UNITISSUE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_UNITISSUE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRI_ITEMDESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRI_ITEMDESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_STOCKNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_STOCKNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_STOCKNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_STOCKNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_ESTIMATEDUNITCOST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_ESTIMATEDUNITCOST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_ESTIMATEDUNITCOST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "PR_ESTIMATEDUNITCOST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_ESTIMATEDCOST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_ESTIMATEDCOST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_ESTIMATEDCOST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "PR_ESTIMATEDCOST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_PURCHASEREQUEST_ITEM] ([PR_QUANTITY], [PR_UNITISSUE], [PRI_ITE"& _ 
                "MDESCRIPTION], [PR_STOCKNO], [PR_ESTIMATEDUNITCOST], [PR_ESTIMATEDCOST], [PR_PRN"& _ 
                "O]) VALUES (@PR_QUANTITY, @PR_UNITISSUE, @PRI_ITEMDESCRIPTION, @PR_STOCKNO, @PR_"& _ 
                "ESTIMATEDUNITCOST, @PR_ESTIMATEDCOST, @PR_PRNO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PRI_ITEMNO, PR_QUANTITY"& _ 
                ", PR_UNITISSUE, PRI_ITEMDESCRIPTION, PR_STOCKNO, PR_ESTIMATEDUNITCOST, PR_ESTIMA"& _ 
                "TEDCOST, PR_PRNO FROM tblM4_PURCHASEREQUEST_ITEM WHERE (PRI_ITEMNO = SCOPE_IDENT"& _ 
                "ITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_QUANTITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_UNITISSUE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_UNITISSUE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRI_ITEMDESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRI_ITEMDESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_STOCKNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_STOCKNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_ESTIMATEDUNITCOST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "PR_ESTIMATEDUNITCOST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_ESTIMATEDCOST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "PR_ESTIMATEDCOST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_PURCHASEREQUEST_ITEM] SET [PR_QUANTITY] = @PR_QUANTITY, [PR_UNITISS"& _ 
                "UE] = @PR_UNITISSUE, [PRI_ITEMDESCRIPTION] = @PRI_ITEMDESCRIPTION, [PR_STOCKNO] "& _ 
                "= @PR_STOCKNO, [PR_ESTIMATEDUNITCOST] = @PR_ESTIMATEDUNITCOST, [PR_ESTIMATEDCOST"& _ 
                "] = @PR_ESTIMATEDCOST, [PR_PRNO] = @PR_PRNO WHERE (([PRI_ITEMNO] = @Original_PRI"& _ 
                "_ITEMNO) AND ([PR_QUANTITY] = @Original_PR_QUANTITY) AND ([PR_UNITISSUE] = @Orig"& _ 
                "inal_PR_UNITISSUE) AND ([PRI_ITEMDESCRIPTION] = @Original_PRI_ITEMDESCRIPTION) A"& _ 
                "ND ((@IsNull_PR_STOCKNO = 1 AND [PR_STOCKNO] IS NULL) OR ([PR_STOCKNO] = @Origin"& _ 
                "al_PR_STOCKNO)) AND ((@IsNull_PR_ESTIMATEDUNITCOST = 1 AND [PR_ESTIMATEDUNITCOST"& _ 
                "] IS NULL) OR ([PR_ESTIMATEDUNITCOST] = @Original_PR_ESTIMATEDUNITCOST)) AND ((@"& _ 
                "IsNull_PR_ESTIMATEDCOST = 1 AND [PR_ESTIMATEDCOST] IS NULL) OR ([PR_ESTIMATEDCOS"& _ 
                "T] = @Original_PR_ESTIMATEDCOST)) AND ([PR_PRNO] = @Original_PR_PRNO));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT "& _ 
                "PRI_ITEMNO, PR_QUANTITY, PR_UNITISSUE, PRI_ITEMDESCRIPTION, PR_STOCKNO, PR_ESTIM"& _ 
                "ATEDUNITCOST, PR_ESTIMATEDCOST, PR_PRNO FROM tblM4_PURCHASEREQUEST_ITEM WHERE (P"& _ 
                "RI_ITEMNO = @PRI_ITEMNO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_QUANTITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_UNITISSUE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_UNITISSUE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRI_ITEMDESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRI_ITEMDESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_STOCKNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_STOCKNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_ESTIMATEDUNITCOST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "PR_ESTIMATEDUNITCOST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_ESTIMATEDCOST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "PR_ESTIMATEDCOST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRI_ITEMNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRI_ITEMNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_QUANTITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_UNITISSUE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_UNITISSUE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRI_ITEMDESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRI_ITEMDESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_STOCKNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_STOCKNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_STOCKNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_STOCKNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_ESTIMATEDUNITCOST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_ESTIMATEDUNITCOST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_ESTIMATEDUNITCOST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "PR_ESTIMATEDUNITCOST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_ESTIMATEDCOST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_ESTIMATEDCOST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_ESTIMATEDCOST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "PR_ESTIMATEDCOST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRI_ITEMNO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "PRI_ITEMNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        PRI_ITEMNO, PR_QUANTITY, PR_UNITISSUE, PRI_ITEMDESCRIPTION, PR_STOC"& _ 
                "KNO, PR_ESTIMATEDUNITCOST, PR_ESTIMATEDCOST, PR_PRNO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_PURC"& _ 
                "HASEREQUEST_ITEM"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT PRI_ITEMDESCRIPTION, PRI_ITEMNO, PR_ESTIMATEDCOST, PR_ESTIMATEDUNITCOST, P"& _ 
                "R_PRNO, PR_QUANTITY, PR_STOCKNO, PR_UNITISSUE FROM tblM4_PURCHASEREQUEST_ITEM WH"& _ 
                "ERE (PR_TRANS_CODE = @PR_TRANS_CODE)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_TRANS_CODE", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_TRANS_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        PRI_ITEMDESCRIPTION, PRI_ITEMNO, FORMAT(PR_ESTIMATEDCOST, 'N') AS P"& _ 
                "R_ESTIMATEDCOST, FORMAT(PR_ESTIMATEDUNITCOST, 'N') AS PR_ESTIMATEDUNITCOST, PR_P"& _ 
                "RNO, PR_QUANTITY, PR_STOCKNO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PR_UNITISSUE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "       tblM4_PURCHASEREQUEST_ITEM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PR_PRNO = @PR_PRNO)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "INSERT INTO tblM4_PURCHASEREQUEST_ITEM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (PR_PRNO, PR_QUA"& _ 
                "NTITY, PR_UNITISSUE, PRI_ITEMDESCRIPTION, PR_STOCKNO, PR_ESTIMATEDUNITCOST, PR_E"& _ 
                "STIMATEDCOST)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@PR_PRNO,@PR_QUANTITY,@PR_UNITISSUE,@PRI_ITEMDESCR"& _ 
                "IPTION,@PR_STOCKNO,@PR_ESTIMATEDUNITCOST,@PR_ESTIMATEDCOST)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_QUANTITY", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_QUANTITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_UNITISSUE", Global.System.Data.SqlDbType.NVarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_UNITISSUE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRI_ITEMDESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 2000, Global.System.Data.ParameterDirection.Input, 0, 0, "PRI_ITEMDESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_STOCKNO", Global.System.Data.SqlDbType.NVarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_STOCKNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_ESTIMATEDUNITCOST", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 13, 2, "PR_ESTIMATEDUNITCOST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_ESTIMATEDCOST", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 13, 2, "PR_ESTIMATEDCOST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ITEMDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ITEMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ITEMDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ITEMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ITEMDataTable, ByVal PR_TRANS_CODE As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (PR_TRANS_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_TRANS_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PR_TRANS_CODE,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByPR_NO(ByVal PR_TRANS_CODE As String) As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ITEMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (PR_TRANS_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_TRANS_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PR_TRANS_CODE,String)
            End If
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ITEMDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ITEMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTRANSCODE(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ITEMDataTable, ByVal PR_PRNO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTRANSCODE(ByVal PR_PRNO As String) As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ITEMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ITEMDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ITEMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ITEMDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_PURCHASEREQUEST_ITEM")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_PRI_ITEMNO As Integer, ByVal Original_PR_QUANTITY As Integer, ByVal Original_PR_UNITISSUE As String, ByVal Original_PRI_ITEMDESCRIPTION As String, ByVal Original_PR_STOCKNO As String, ByVal Original_PR_ESTIMATEDUNITCOST As Global.System.Nullable(Of Decimal), ByVal Original_PR_ESTIMATEDCOST As Global.System.Nullable(Of Decimal), ByVal Original_PR_PRNO As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PRI_ITEMNO,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_PR_QUANTITY,Integer)
            If (Original_PR_UNITISSUE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PR_UNITISSUE")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_PR_UNITISSUE,String)
            End If
            If (Original_PRI_ITEMDESCRIPTION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRI_ITEMDESCRIPTION")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_PRI_ITEMDESCRIPTION,String)
            End If
            If (Original_PR_STOCKNO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_PR_STOCKNO,String)
            End If
            If (Original_PR_ESTIMATEDUNITCOST.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_PR_ESTIMATEDUNITCOST.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_PR_ESTIMATEDCOST.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_PR_ESTIMATEDCOST.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PR_PRNO")
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PR_PRNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal PR_QUANTITY As Integer, ByVal PR_UNITISSUE As String, ByVal PRI_ITEMDESCRIPTION As String, ByVal PR_STOCKNO As String, ByVal PR_ESTIMATEDUNITCOST As Global.System.Nullable(Of Decimal), ByVal PR_ESTIMATEDCOST As Global.System.Nullable(Of Decimal), ByVal PR_PRNO As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(PR_QUANTITY,Integer)
            If (PR_UNITISSUE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_UNITISSUE")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PR_UNITISSUE,String)
            End If
            If (PRI_ITEMDESCRIPTION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRI_ITEMDESCRIPTION")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PRI_ITEMDESCRIPTION,String)
            End If
            If (PR_STOCKNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PR_STOCKNO,String)
            End If
            If (PR_ESTIMATEDUNITCOST.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PR_ESTIMATEDUNITCOST.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PR_ESTIMATEDCOST.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PR_ESTIMATEDCOST.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PR_PRNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PR_QUANTITY As Integer,  _
                    ByVal PR_UNITISSUE As String,  _
                    ByVal PRI_ITEMDESCRIPTION As String,  _
                    ByVal PR_STOCKNO As String,  _
                    ByVal PR_ESTIMATEDUNITCOST As Global.System.Nullable(Of Decimal),  _
                    ByVal PR_ESTIMATEDCOST As Global.System.Nullable(Of Decimal),  _
                    ByVal PR_PRNO As String,  _
                    ByVal Original_PRI_ITEMNO As Integer,  _
                    ByVal Original_PR_QUANTITY As Integer,  _
                    ByVal Original_PR_UNITISSUE As String,  _
                    ByVal Original_PRI_ITEMDESCRIPTION As String,  _
                    ByVal Original_PR_STOCKNO As String,  _
                    ByVal Original_PR_ESTIMATEDUNITCOST As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PR_ESTIMATEDCOST As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PR_PRNO As String,  _
                    ByVal PRI_ITEMNO As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PR_QUANTITY,Integer)
            If (PR_UNITISSUE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_UNITISSUE")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PR_UNITISSUE,String)
            End If
            If (PRI_ITEMDESCRIPTION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRI_ITEMDESCRIPTION")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PRI_ITEMDESCRIPTION,String)
            End If
            If (PR_STOCKNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PR_STOCKNO,String)
            End If
            If (PR_ESTIMATEDUNITCOST.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PR_ESTIMATEDUNITCOST.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PR_ESTIMATEDCOST.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PR_ESTIMATEDCOST.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PR_PRNO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_PRI_ITEMNO,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_PR_QUANTITY,Integer)
            If (Original_PR_UNITISSUE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PR_UNITISSUE")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_PR_UNITISSUE,String)
            End If
            If (Original_PRI_ITEMDESCRIPTION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRI_ITEMDESCRIPTION")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_PRI_ITEMDESCRIPTION,String)
            End If
            If (Original_PR_STOCKNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_PR_STOCKNO,String)
            End If
            If (Original_PR_ESTIMATEDUNITCOST.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_PR_ESTIMATEDUNITCOST.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_PR_ESTIMATEDCOST.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_PR_ESTIMATEDCOST.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PR_PRNO")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_PR_PRNO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(PRI_ITEMNO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal PR_QUANTITY As Integer, ByVal PR_UNITISSUE As String, ByVal PRI_ITEMDESCRIPTION As String, ByVal PR_STOCKNO As String, ByVal PR_ESTIMATEDUNITCOST As Global.System.Nullable(Of Decimal), ByVal PR_ESTIMATEDCOST As Global.System.Nullable(Of Decimal), ByVal PR_PRNO As String, ByVal Original_PRI_ITEMNO As Integer, ByVal Original_PR_QUANTITY As Integer, ByVal Original_PR_UNITISSUE As String, ByVal Original_PRI_ITEMDESCRIPTION As String, ByVal Original_PR_STOCKNO As String, ByVal Original_PR_ESTIMATEDUNITCOST As Global.System.Nullable(Of Decimal), ByVal Original_PR_ESTIMATEDCOST As Global.System.Nullable(Of Decimal), ByVal Original_PR_PRNO As String) As Integer
            Return Me.Update(PR_QUANTITY, PR_UNITISSUE, PRI_ITEMDESCRIPTION, PR_STOCKNO, PR_ESTIMATEDUNITCOST, PR_ESTIMATEDCOST, PR_PRNO, Original_PRI_ITEMNO, Original_PR_QUANTITY, Original_PR_UNITISSUE, Original_PRI_ITEMDESCRIPTION, Original_PR_STOCKNO, Original_PR_ESTIMATEDUNITCOST, Original_PR_ESTIMATEDCOST, Original_PR_PRNO, Original_PRI_ITEMNO)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function IQ_PR_ITEMS(ByVal PR_PRNO As String, ByVal PR_QUANTITY As Integer, ByVal PR_UNITISSUE As String, ByVal PRI_ITEMDESCRIPTION As String, ByVal PR_STOCKNO As String, ByVal PR_ESTIMATEDUNITCOST As Global.System.Nullable(Of Decimal), ByVal PR_ESTIMATEDCOST As Global.System.Nullable(Of Decimal)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                command.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            command.Parameters(1).Value = CType(PR_QUANTITY,Integer)
            If (PR_UNITISSUE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_UNITISSUE")
            Else
                command.Parameters(2).Value = CType(PR_UNITISSUE,String)
            End If
            If (PRI_ITEMDESCRIPTION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRI_ITEMDESCRIPTION")
            Else
                command.Parameters(3).Value = CType(PRI_ITEMDESCRIPTION,String)
            End If
            If (PR_STOCKNO Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(PR_STOCKNO,String)
            End If
            If (PR_ESTIMATEDUNITCOST.HasValue = true) Then
                command.Parameters(5).Value = CType(PR_ESTIMATEDUNITCOST.Value,Decimal)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PR_ESTIMATEDCOST.HasValue = true) Then
                command.Parameters(6).Value = CType(PR_ESTIMATEDCOST.Value,Decimal)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBLG3_DELIVER_RECEIPT_DETAILSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBLG3_DELIVER_RECEIPT_DETAILS"
            tableMapping.ColumnMappings.Add("DRD_ID", "DRD_ID")
            tableMapping.ColumnMappings.Add("DR_ID", "DR_ID")
            tableMapping.ColumnMappings.Add("UN_NO", "UN_NO")
            tableMapping.ColumnMappings.Add("DRD_QUANTITY", "DRD_QUANTITY")
            tableMapping.ColumnMappings.Add("DRD_DESCRIPTION", "DRD_DESCRIPTION")
            tableMapping.ColumnMappings.Add("DRD_WARANTY", "DRD_WARANTY")
            tableMapping.ColumnMappings.Add("DRD_STATUS", "DRD_STATUS")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO", "HRIS_EMPNO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBLG3_DELIVER_RECEIPT_DETAILS] WHERE (([DRD_ID] = @Original_DR"& _ 
                "D_ID) AND ((@IsNull_DR_ID = 1 AND [DR_ID] IS NULL) OR ([DR_ID] = @Original_DR_ID"& _ 
                ")) AND ((@IsNull_UN_NO = 1 AND [UN_NO] IS NULL) OR ([UN_NO] = @Original_UN_NO)) "& _ 
                "AND ((@IsNull_DRD_QUANTITY = 1 AND [DRD_QUANTITY] IS NULL) OR ([DRD_QUANTITY] = "& _ 
                "@Original_DRD_QUANTITY)) AND ((@IsNull_DRD_WARANTY = 1 AND [DRD_WARANTY] IS NULL"& _ 
                ") OR ([DRD_WARANTY] = @Original_DRD_WARANTY)) AND ((@IsNull_DRD_STATUS = 1 AND ["& _ 
                "DRD_STATUS] IS NULL) OR ([DRD_STATUS] = @Original_DRD_STATUS)) AND ((@IsNull_HRI"& _ 
                "S_EMPNO = 1 AND [HRIS_EMPNO] IS NULL) OR ([HRIS_EMPNO] = @Original_HRIS_EMPNO)))"& _ 
                ""
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DRD_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DR_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DR_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UN_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UN_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DRD_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_QUANTITY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DRD_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_QUANTITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DRD_WARANTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_WARANTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DRD_WARANTY", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_WARANTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DRD_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DRD_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBLG3_DELIVER_RECEIPT_DETAILS] ([DR_ID], [UN_NO], [DRD_QUANTIT"& _ 
                "Y], [DRD_DESCRIPTION], [DRD_WARANTY], [DRD_STATUS], [HRIS_EMPNO]) VALUES (@DR_ID"& _ 
                ", @UN_NO, @DRD_QUANTITY, @DRD_DESCRIPTION, @DRD_WARANTY, @DRD_STATUS, @HRIS_EMPN"& _ 
                "O);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DRD_ID, DR_ID, UN_NO, DRD_QUANTITY, DRD_DESCRIPTION, DRD_WARANTY, DR"& _ 
                "D_STATUS, HRIS_EMPNO FROM TBLG3_DELIVER_RECEIPT_DETAILS WHERE (DRD_ID = SCOPE_ID"& _ 
                "ENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DR_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UN_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DRD_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_QUANTITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DRD_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DRD_WARANTY", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_WARANTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DRD_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBLG3_DELIVER_RECEIPT_DETAILS] SET [DR_ID] = @DR_ID, [UN_NO] = @UN_"& _ 
                "NO, [DRD_QUANTITY] = @DRD_QUANTITY, [DRD_DESCRIPTION] = @DRD_DESCRIPTION, [DRD_W"& _ 
                "ARANTY] = @DRD_WARANTY, [DRD_STATUS] = @DRD_STATUS, [HRIS_EMPNO] = @HRIS_EMPNO W"& _ 
                "HERE (([DRD_ID] = @Original_DRD_ID) AND ((@IsNull_DR_ID = 1 AND [DR_ID] IS NULL)"& _ 
                " OR ([DR_ID] = @Original_DR_ID)) AND ((@IsNull_UN_NO = 1 AND [UN_NO] IS NULL) OR"& _ 
                " ([UN_NO] = @Original_UN_NO)) AND ((@IsNull_DRD_QUANTITY = 1 AND [DRD_QUANTITY] "& _ 
                "IS NULL) OR ([DRD_QUANTITY] = @Original_DRD_QUANTITY)) AND ((@IsNull_DRD_WARANTY"& _ 
                " = 1 AND [DRD_WARANTY] IS NULL) OR ([DRD_WARANTY] = @Original_DRD_WARANTY)) AND "& _ 
                "((@IsNull_DRD_STATUS = 1 AND [DRD_STATUS] IS NULL) OR ([DRD_STATUS] = @Original_"& _ 
                "DRD_STATUS)) AND ((@IsNull_HRIS_EMPNO = 1 AND [HRIS_EMPNO] IS NULL) OR ([HRIS_EM"& _ 
                "PNO] = @Original_HRIS_EMPNO)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DRD_ID, DR_ID, UN_NO, DRD_QUANTITY, DRD_"& _ 
                "DESCRIPTION, DRD_WARANTY, DRD_STATUS, HRIS_EMPNO FROM TBLG3_DELIVER_RECEIPT_DETA"& _ 
                "ILS WHERE (DRD_ID = @DRD_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DR_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UN_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DRD_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_QUANTITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DRD_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DRD_WARANTY", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_WARANTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DRD_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DRD_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DR_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DR_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UN_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UN_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DRD_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_QUANTITY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DRD_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_QUANTITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DRD_WARANTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_WARANTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DRD_WARANTY", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_WARANTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DRD_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DRD_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DRD_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "DRD_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DRD_ID, DR_ID, UN_NO, DRD_QUANTITY, DRD_DESCRIPTION, DRD_WARANTY, DRD_STAT"& _ 
                "US, HRIS_EMPNO FROM dbo.TBLG3_DELIVER_RECEIPT_DETAILS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.TBLG3_DELIVER_RECEIPT_DETAILSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.TBLG3_DELIVER_RECEIPT_DETAILSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.TBLG3_DELIVER_RECEIPT_DETAILSDataTable = New DS_PROPERTYDB.TBLG3_DELIVER_RECEIPT_DETAILSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.TBLG3_DELIVER_RECEIPT_DETAILSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "TBLG3_DELIVER_RECEIPT_DETAILS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_DRD_ID As Integer, ByVal Original_DR_ID As String, ByVal Original_UN_NO As Global.System.Nullable(Of Integer), ByVal Original_DRD_QUANTITY As Global.System.Nullable(Of Integer), ByVal Original_DRD_WARANTY As Global.System.Nullable(Of Date), ByVal Original_DRD_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_DRD_ID,Integer)
            If (Original_DR_ID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_DR_ID,String)
            End If
            If (Original_UN_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_UN_NO.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_DRD_QUANTITY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DRD_QUANTITY.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_DRD_WARANTY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DRD_WARANTY.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_DRD_STATUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_DRD_STATUS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_HRIS_EMPNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DR_ID As String, ByVal UN_NO As Global.System.Nullable(Of Integer), ByVal DRD_QUANTITY As Global.System.Nullable(Of Integer), ByVal DRD_DESCRIPTION As String, ByVal DRD_WARANTY As Global.System.Nullable(Of Date), ByVal DRD_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String) As Integer
            If (DR_ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DR_ID,String)
            End If
            If (UN_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(UN_NO.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DRD_QUANTITY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DRD_QUANTITY.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DRD_DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DRD_DESCRIPTION,String)
            End If
            If (DRD_WARANTY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DRD_WARANTY.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (DRD_STATUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DRD_STATUS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(HRIS_EMPNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DR_ID As String, ByVal UN_NO As Global.System.Nullable(Of Integer), ByVal DRD_QUANTITY As Global.System.Nullable(Of Integer), ByVal DRD_DESCRIPTION As String, ByVal DRD_WARANTY As Global.System.Nullable(Of Date), ByVal DRD_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String, ByVal Original_DRD_ID As Integer, ByVal Original_DR_ID As String, ByVal Original_UN_NO As Global.System.Nullable(Of Integer), ByVal Original_DRD_QUANTITY As Global.System.Nullable(Of Integer), ByVal Original_DRD_WARANTY As Global.System.Nullable(Of Date), ByVal Original_DRD_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String, ByVal DRD_ID As Integer) As Integer
            If (DR_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DR_ID,String)
            End If
            If (UN_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(UN_NO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DRD_QUANTITY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DRD_QUANTITY.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DRD_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DRD_DESCRIPTION,String)
            End If
            If (DRD_WARANTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DRD_WARANTY.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (DRD_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DRD_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(HRIS_EMPNO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_DRD_ID,Integer)
            If (Original_DR_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_DR_ID,String)
            End If
            If (Original_UN_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_UN_NO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_DRD_QUANTITY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_DRD_QUANTITY.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_DRD_WARANTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_DRD_WARANTY.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_DRD_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_DRD_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_HRIS_EMPNO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(DRD_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DR_ID As String, ByVal UN_NO As Global.System.Nullable(Of Integer), ByVal DRD_QUANTITY As Global.System.Nullable(Of Integer), ByVal DRD_DESCRIPTION As String, ByVal DRD_WARANTY As Global.System.Nullable(Of Date), ByVal DRD_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String, ByVal Original_DRD_ID As Integer, ByVal Original_DR_ID As String, ByVal Original_UN_NO As Global.System.Nullable(Of Integer), ByVal Original_DRD_QUANTITY As Global.System.Nullable(Of Integer), ByVal Original_DRD_WARANTY As Global.System.Nullable(Of Date), ByVal Original_DRD_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String) As Integer
            Return Me.Update(DR_ID, UN_NO, DRD_QUANTITY, DRD_DESCRIPTION, DRD_WARANTY, DRD_STATUS, HRIS_EMPNO, Original_DRD_ID, Original_DR_ID, Original_UN_NO, Original_DRD_QUANTITY, Original_DRD_WARANTY, Original_DRD_STATUS, Original_HRIS_EMPNO, Original_DRD_ID)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBLG3_DELIVERY_RECEIPTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBLG3_DELIVERY_RECEIPT"
            tableMapping.ColumnMappings.Add("DR_ID", "DR_ID")
            tableMapping.ColumnMappings.Add("DR_NO", "DR_NO")
            tableMapping.ColumnMappings.Add("COM_TIN_NUMBER", "COM_TIN_NUMBER")
            tableMapping.ColumnMappings.Add("INV_ID", "INV_ID")
            tableMapping.ColumnMappings.Add("DR_DELIVER", "DR_DELIVER")
            tableMapping.ColumnMappings.Add("DR_RECEIVED_BY", "DR_RECEIVED_BY")
            tableMapping.ColumnMappings.Add("DR_STATUS", "DR_STATUS")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO", "HRIS_EMPNO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBLG3_DELIVERY_RECEIPT] WHERE (([DR_ID] = @Original_DR_ID) AND"& _ 
                " ([DR_NO] = @Original_DR_NO) AND ([COM_TIN_NUMBER] = @Original_COM_TIN_NUMBER) A"& _ 
                "ND ((@IsNull_INV_ID = 1 AND [INV_ID] IS NULL) OR ([INV_ID] = @Original_INV_ID)) "& _ 
                "AND ((@IsNull_DR_DELIVER = 1 AND [DR_DELIVER] IS NULL) OR ([DR_DELIVER] = @Origi"& _ 
                "nal_DR_DELIVER)) AND ((@IsNull_DR_RECEIVED_BY = 1 AND [DR_RECEIVED_BY] IS NULL) "& _ 
                "OR ([DR_RECEIVED_BY] = @Original_DR_RECEIVED_BY)) AND ((@IsNull_DR_STATUS = 1 AN"& _ 
                "D [DR_STATUS] IS NULL) OR ([DR_STATUS] = @Original_DR_STATUS)) AND ((@IsNull_HRI"& _ 
                "S_EMPNO = 1 AND [HRIS_EMPNO] IS NULL) OR ([HRIS_EMPNO] = @Original_HRIS_EMPNO)))"& _ 
                ""
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DR_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_TIN_NUMBER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_TIN_NUMBER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INV_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INV_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DR_DELIVER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_DELIVER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DR_DELIVER", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_DELIVER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DR_RECEIVED_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_RECEIVED_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DR_RECEIVED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_RECEIVED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBLG3_DELIVERY_RECEIPT] ([DR_ID], [DR_NO], [COM_TIN_NUMBER], ["& _ 
                "INV_ID], [DR_DELIVER], [DR_RECEIVED_BY], [DR_STATUS], [HRIS_EMPNO]) VALUES (@DR_"& _ 
                "ID, @DR_NO, @COM_TIN_NUMBER, @INV_ID, @DR_DELIVER, @DR_RECEIVED_BY, @DR_STATUS, "& _ 
                "@HRIS_EMPNO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DR_ID, DR_NO, COM_TIN_NUMBER, INV_ID, DR_DELIVER, DR_RECEI"& _ 
                "VED_BY, DR_STATUS, HRIS_EMPNO FROM TBLG3_DELIVERY_RECEIPT WHERE (DR_ID = @DR_ID)"& _ 
                ""
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DR_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_TIN_NUMBER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_TIN_NUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DR_DELIVER", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_DELIVER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DR_RECEIVED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_RECEIVED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBLG3_DELIVERY_RECEIPT] SET [DR_ID] = @DR_ID, [DR_NO] = @DR_NO, [CO"& _ 
                "M_TIN_NUMBER] = @COM_TIN_NUMBER, [INV_ID] = @INV_ID, [DR_DELIVER] = @DR_DELIVER,"& _ 
                " [DR_RECEIVED_BY] = @DR_RECEIVED_BY, [DR_STATUS] = @DR_STATUS, [HRIS_EMPNO] = @H"& _ 
                "RIS_EMPNO WHERE (([DR_ID] = @Original_DR_ID) AND ([DR_NO] = @Original_DR_NO) AND"& _ 
                " ([COM_TIN_NUMBER] = @Original_COM_TIN_NUMBER) AND ((@IsNull_INV_ID = 1 AND [INV"& _ 
                "_ID] IS NULL) OR ([INV_ID] = @Original_INV_ID)) AND ((@IsNull_DR_DELIVER = 1 AND"& _ 
                " [DR_DELIVER] IS NULL) OR ([DR_DELIVER] = @Original_DR_DELIVER)) AND ((@IsNull_D"& _ 
                "R_RECEIVED_BY = 1 AND [DR_RECEIVED_BY] IS NULL) OR ([DR_RECEIVED_BY] = @Original"& _ 
                "_DR_RECEIVED_BY)) AND ((@IsNull_DR_STATUS = 1 AND [DR_STATUS] IS NULL) OR ([DR_S"& _ 
                "TATUS] = @Original_DR_STATUS)) AND ((@IsNull_HRIS_EMPNO = 1 AND [HRIS_EMPNO] IS "& _ 
                "NULL) OR ([HRIS_EMPNO] = @Original_HRIS_EMPNO)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DR_ID, DR_NO, COM_TIN_"& _ 
                "NUMBER, INV_ID, DR_DELIVER, DR_RECEIVED_BY, DR_STATUS, HRIS_EMPNO FROM TBLG3_DEL"& _ 
                "IVERY_RECEIPT WHERE (DR_ID = @DR_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DR_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_TIN_NUMBER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_TIN_NUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DR_DELIVER", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_DELIVER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DR_RECEIVED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_RECEIVED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DR_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_TIN_NUMBER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_TIN_NUMBER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INV_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INV_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DR_DELIVER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_DELIVER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DR_DELIVER", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_DELIVER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DR_RECEIVED_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_RECEIVED_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DR_RECEIVED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_RECEIVED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DR_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DR_ID, DR_NO, COM_TIN_NUMBER, INV_ID, DR_DELIVER, DR_RECEIVED_BY, DR_STATU"& _ 
                "S, HRIS_EMPNO FROM dbo.TBLG3_DELIVERY_RECEIPT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.TBLG3_DELIVERY_RECEIPTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.TBLG3_DELIVERY_RECEIPTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.TBLG3_DELIVERY_RECEIPTDataTable = New DS_PROPERTYDB.TBLG3_DELIVERY_RECEIPTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.TBLG3_DELIVERY_RECEIPTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "TBLG3_DELIVERY_RECEIPT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_DR_ID As String, ByVal Original_DR_NO As String, ByVal Original_COM_TIN_NUMBER As String, ByVal Original_INV_ID As String, ByVal Original_DR_DELIVER As Global.System.Nullable(Of Date), ByVal Original_DR_RECEIVED_BY As String, ByVal Original_DR_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String) As Integer
            If (Original_DR_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DR_ID")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_DR_ID,String)
            End If
            If (Original_DR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DR_NO")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_DR_NO,String)
            End If
            If (Original_COM_TIN_NUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_COM_TIN_NUMBER")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_COM_TIN_NUMBER,String)
            End If
            If (Original_INV_ID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_INV_ID,String)
            End If
            If (Original_DR_DELIVER.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DR_DELIVER.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_DR_RECEIVED_BY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DR_RECEIVED_BY,String)
            End If
            If (Original_DR_STATUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_DR_STATUS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_HRIS_EMPNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DR_ID As String, ByVal DR_NO As String, ByVal COM_TIN_NUMBER As String, ByVal INV_ID As String, ByVal DR_DELIVER As Global.System.Nullable(Of Date), ByVal DR_RECEIVED_BY As String, ByVal DR_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String) As Integer
            If (DR_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DR_ID")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DR_ID,String)
            End If
            If (DR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DR_NO")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DR_NO,String)
            End If
            If (COM_TIN_NUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("COM_TIN_NUMBER")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(COM_TIN_NUMBER,String)
            End If
            If (INV_ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(INV_ID,String)
            End If
            If (DR_DELIVER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DR_DELIVER.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (DR_RECEIVED_BY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DR_RECEIVED_BY,String)
            End If
            If (DR_STATUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(DR_STATUS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(HRIS_EMPNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal DR_ID As String,  _
                    ByVal DR_NO As String,  _
                    ByVal COM_TIN_NUMBER As String,  _
                    ByVal INV_ID As String,  _
                    ByVal DR_DELIVER As Global.System.Nullable(Of Date),  _
                    ByVal DR_RECEIVED_BY As String,  _
                    ByVal DR_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal HRIS_EMPNO As String,  _
                    ByVal Original_DR_ID As String,  _
                    ByVal Original_DR_NO As String,  _
                    ByVal Original_COM_TIN_NUMBER As String,  _
                    ByVal Original_INV_ID As String,  _
                    ByVal Original_DR_DELIVER As Global.System.Nullable(Of Date),  _
                    ByVal Original_DR_RECEIVED_BY As String,  _
                    ByVal Original_DR_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HRIS_EMPNO As String) As Integer
            If (DR_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DR_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DR_ID,String)
            End If
            If (DR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DR_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DR_NO,String)
            End If
            If (COM_TIN_NUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("COM_TIN_NUMBER")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(COM_TIN_NUMBER,String)
            End If
            If (INV_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(INV_ID,String)
            End If
            If (DR_DELIVER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DR_DELIVER.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (DR_RECEIVED_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DR_RECEIVED_BY,String)
            End If
            If (DR_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(DR_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(HRIS_EMPNO,String)
            End If
            If (Original_DR_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DR_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_DR_ID,String)
            End If
            If (Original_DR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DR_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_DR_NO,String)
            End If
            If (Original_COM_TIN_NUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_COM_TIN_NUMBER")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_COM_TIN_NUMBER,String)
            End If
            If (Original_INV_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_INV_ID,String)
            End If
            If (Original_DR_DELIVER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_DR_DELIVER.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_DR_RECEIVED_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_DR_RECEIVED_BY,String)
            End If
            If (Original_DR_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_DR_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_HRIS_EMPNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DR_NO As String, ByVal COM_TIN_NUMBER As String, ByVal INV_ID As String, ByVal DR_DELIVER As Global.System.Nullable(Of Date), ByVal DR_RECEIVED_BY As String, ByVal DR_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String, ByVal Original_DR_ID As String, ByVal Original_DR_NO As String, ByVal Original_COM_TIN_NUMBER As String, ByVal Original_INV_ID As String, ByVal Original_DR_DELIVER As Global.System.Nullable(Of Date), ByVal Original_DR_RECEIVED_BY As String, ByVal Original_DR_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String) As Integer
            Return Me.Update(Original_DR_ID, DR_NO, COM_TIN_NUMBER, INV_ID, DR_DELIVER, DR_RECEIVED_BY, DR_STATUS, HRIS_EMPNO, Original_DR_ID, Original_DR_NO, Original_COM_TIN_NUMBER, Original_INV_ID, Original_DR_DELIVER, Original_DR_RECEIVED_BY, Original_DR_STATUS, Original_HRIS_EMPNO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBLG3_INVOICETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBLG3_INVOICE"
            tableMapping.ColumnMappings.Add("INV_ID", "INV_ID")
            tableMapping.ColumnMappings.Add("INV_NO", "INV_NO")
            tableMapping.ColumnMappings.Add("COM_TIN_NUMBER", "COM_TIN_NUMBER")
            tableMapping.ColumnMappings.Add("INV_DATE", "INV_DATE")
            tableMapping.ColumnMappings.Add("INV_DIRECTORY", "INV_DIRECTORY")
            tableMapping.ColumnMappings.Add("INV_TOTAL", "INV_TOTAL")
            tableMapping.ColumnMappings.Add("INV_STATUS", "INV_STATUS")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO", "HRIS_EMPNO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBLG3_INVOICE] WHERE (([INV_ID] = @Original_INV_ID) AND ((@IsN"& _ 
                "ull_INV_NO = 1 AND [INV_NO] IS NULL) OR ([INV_NO] = @Original_INV_NO)) AND ((@Is"& _ 
                "Null_COM_TIN_NUMBER = 1 AND [COM_TIN_NUMBER] IS NULL) OR ([COM_TIN_NUMBER] = @Or"& _ 
                "iginal_COM_TIN_NUMBER)) AND ((@IsNull_INV_DATE = 1 AND [INV_DATE] IS NULL) OR (["& _ 
                "INV_DATE] = @Original_INV_DATE)) AND ((@IsNull_INV_TOTAL = 1 AND [INV_TOTAL] IS "& _ 
                "NULL) OR ([INV_TOTAL] = @Original_INV_TOTAL)) AND ((@IsNull_INV_STATUS = 1 AND ["& _ 
                "INV_STATUS] IS NULL) OR ([INV_STATUS] = @Original_INV_STATUS)) AND ((@IsNull_HRI"& _ 
                "S_EMPNO = 1 AND [HRIS_EMPNO] IS NULL) OR ([HRIS_EMPNO] = @Original_HRIS_EMPNO)))"& _ 
                ""
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INV_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INV_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COM_TIN_NUMBER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_TIN_NUMBER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_TIN_NUMBER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_TIN_NUMBER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INV_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INV_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INV_TOTAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_TOTAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INV_TOTAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "INV_TOTAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INV_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INV_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBLG3_INVOICE] ([INV_ID], [INV_NO], [COM_TIN_NUMBER], [INV_DAT"& _ 
                "E], [INV_DIRECTORY], [INV_TOTAL], [INV_STATUS], [HRIS_EMPNO]) VALUES (@INV_ID, @"& _ 
                "INV_NO, @COM_TIN_NUMBER, @INV_DATE, @INV_DIRECTORY, @INV_TOTAL, @INV_STATUS, @HR"& _ 
                "IS_EMPNO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT INV_ID, INV_NO, COM_TIN_NUMBER, INV_DATE, INV_DIRECTORY, INV_"& _ 
                "TOTAL, INV_STATUS, HRIS_EMPNO FROM TBLG3_INVOICE WHERE (INV_ID = @INV_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_TIN_NUMBER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_TIN_NUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_DIRECTORY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_DIRECTORY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_TOTAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "INV_TOTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBLG3_INVOICE] SET [INV_ID] = @INV_ID, [INV_NO] = @INV_NO, [COM_TIN"& _ 
                "_NUMBER] = @COM_TIN_NUMBER, [INV_DATE] = @INV_DATE, [INV_DIRECTORY] = @INV_DIREC"& _ 
                "TORY, [INV_TOTAL] = @INV_TOTAL, [INV_STATUS] = @INV_STATUS, [HRIS_EMPNO] = @HRIS"& _ 
                "_EMPNO WHERE (([INV_ID] = @Original_INV_ID) AND ((@IsNull_INV_NO = 1 AND [INV_NO"& _ 
                "] IS NULL) OR ([INV_NO] = @Original_INV_NO)) AND ((@IsNull_COM_TIN_NUMBER = 1 AN"& _ 
                "D [COM_TIN_NUMBER] IS NULL) OR ([COM_TIN_NUMBER] = @Original_COM_TIN_NUMBER)) AN"& _ 
                "D ((@IsNull_INV_DATE = 1 AND [INV_DATE] IS NULL) OR ([INV_DATE] = @Original_INV_"& _ 
                "DATE)) AND ((@IsNull_INV_TOTAL = 1 AND [INV_TOTAL] IS NULL) OR ([INV_TOTAL] = @O"& _ 
                "riginal_INV_TOTAL)) AND ((@IsNull_INV_STATUS = 1 AND [INV_STATUS] IS NULL) OR (["& _ 
                "INV_STATUS] = @Original_INV_STATUS)) AND ((@IsNull_HRIS_EMPNO = 1 AND [HRIS_EMPN"& _ 
                "O] IS NULL) OR ([HRIS_EMPNO] = @Original_HRIS_EMPNO)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT INV_ID, INV_NO, "& _ 
                "COM_TIN_NUMBER, INV_DATE, INV_DIRECTORY, INV_TOTAL, INV_STATUS, HRIS_EMPNO FROM "& _ 
                "TBLG3_INVOICE WHERE (INV_ID = @INV_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COM_TIN_NUMBER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_TIN_NUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_DIRECTORY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_DIRECTORY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_TOTAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "INV_TOTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INV_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INV_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COM_TIN_NUMBER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_TIN_NUMBER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COM_TIN_NUMBER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COM_TIN_NUMBER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INV_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INV_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INV_TOTAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_TOTAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INV_TOTAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "INV_TOTAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INV_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INV_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT INV_ID, INV_NO, COM_TIN_NUMBER, INV_DATE, INV_DIRECTORY, INV_TOTAL, INV_ST"& _ 
                "ATUS, HRIS_EMPNO FROM dbo.TBLG3_INVOICE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.TBLG3_INVOICEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.TBLG3_INVOICEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.TBLG3_INVOICEDataTable = New DS_PROPERTYDB.TBLG3_INVOICEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.TBLG3_INVOICEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "TBLG3_INVOICE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_INV_ID As String, ByVal Original_INV_NO As String, ByVal Original_COM_TIN_NUMBER As String, ByVal Original_INV_DATE As Global.System.Nullable(Of Date), ByVal Original_INV_TOTAL As Global.System.Nullable(Of Decimal), ByVal Original_INV_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String) As Integer
            If (Original_INV_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INV_ID")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_INV_ID,String)
            End If
            If (Original_INV_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_INV_NO,String)
            End If
            If (Original_COM_TIN_NUMBER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_COM_TIN_NUMBER,String)
            End If
            If (Original_INV_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_INV_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_INV_TOTAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_INV_TOTAL.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_INV_STATUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_INV_STATUS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_HRIS_EMPNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal INV_ID As String, ByVal INV_NO As String, ByVal COM_TIN_NUMBER As String, ByVal INV_DATE As Global.System.Nullable(Of Date), ByVal INV_DIRECTORY As String, ByVal INV_TOTAL As Global.System.Nullable(Of Decimal), ByVal INV_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String) As Integer
            If (INV_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INV_ID")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(INV_ID,String)
            End If
            If (INV_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(INV_NO,String)
            End If
            If (COM_TIN_NUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(COM_TIN_NUMBER,String)
            End If
            If (INV_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(INV_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (INV_DIRECTORY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(INV_DIRECTORY,String)
            End If
            If (INV_TOTAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(INV_TOTAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (INV_STATUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(INV_STATUS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(HRIS_EMPNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal INV_ID As String, ByVal INV_NO As String, ByVal COM_TIN_NUMBER As String, ByVal INV_DATE As Global.System.Nullable(Of Date), ByVal INV_DIRECTORY As String, ByVal INV_TOTAL As Global.System.Nullable(Of Decimal), ByVal INV_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String, ByVal Original_INV_ID As String, ByVal Original_INV_NO As String, ByVal Original_COM_TIN_NUMBER As String, ByVal Original_INV_DATE As Global.System.Nullable(Of Date), ByVal Original_INV_TOTAL As Global.System.Nullable(Of Decimal), ByVal Original_INV_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String) As Integer
            If (INV_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INV_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(INV_ID,String)
            End If
            If (INV_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(INV_NO,String)
            End If
            If (COM_TIN_NUMBER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(COM_TIN_NUMBER,String)
            End If
            If (INV_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(INV_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (INV_DIRECTORY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(INV_DIRECTORY,String)
            End If
            If (INV_TOTAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(INV_TOTAL.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (INV_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(INV_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(HRIS_EMPNO,String)
            End If
            If (Original_INV_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INV_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_INV_ID,String)
            End If
            If (Original_INV_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_INV_NO,String)
            End If
            If (Original_COM_TIN_NUMBER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_COM_TIN_NUMBER,String)
            End If
            If (Original_INV_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_INV_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_INV_TOTAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_INV_TOTAL.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_INV_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_INV_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_HRIS_EMPNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal INV_NO As String, ByVal COM_TIN_NUMBER As String, ByVal INV_DATE As Global.System.Nullable(Of Date), ByVal INV_DIRECTORY As String, ByVal INV_TOTAL As Global.System.Nullable(Of Decimal), ByVal INV_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String, ByVal Original_INV_ID As String, ByVal Original_INV_NO As String, ByVal Original_COM_TIN_NUMBER As String, ByVal Original_INV_DATE As Global.System.Nullable(Of Date), ByVal Original_INV_TOTAL As Global.System.Nullable(Of Decimal), ByVal Original_INV_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String) As Integer
            Return Me.Update(Original_INV_ID, INV_NO, COM_TIN_NUMBER, INV_DATE, INV_DIRECTORY, INV_TOTAL, INV_STATUS, HRIS_EMPNO, Original_INV_ID, Original_INV_NO, Original_COM_TIN_NUMBER, Original_INV_DATE, Original_INV_TOTAL, Original_INV_STATUS, Original_HRIS_EMPNO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBLG3_INVOICE_DETAILSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBLG3_INVOICE_DETAILS"
            tableMapping.ColumnMappings.Add("INVD_ID", "INVD_ID")
            tableMapping.ColumnMappings.Add("INV_ID", "INV_ID")
            tableMapping.ColumnMappings.Add("UN_NO", "UN_NO")
            tableMapping.ColumnMappings.Add("INVD_QTY", "INVD_QTY")
            tableMapping.ColumnMappings.Add("INVD_PRICE", "INVD_PRICE")
            tableMapping.ColumnMappings.Add("INVD_DESCRIPTION", "INVD_DESCRIPTION")
            tableMapping.ColumnMappings.Add("INVD_STATUS", "INVD_STATUS")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO", "HRIS_EMPNO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBLG3_INVOICE_DETAILS] WHERE (([INVD_ID] = @Original_INVD_ID) "& _ 
                "AND ((@IsNull_INV_ID = 1 AND [INV_ID] IS NULL) OR ([INV_ID] = @Original_INV_ID))"& _ 
                " AND ((@IsNull_UN_NO = 1 AND [UN_NO] IS NULL) OR ([UN_NO] = @Original_UN_NO)) AN"& _ 
                "D ((@IsNull_INVD_QTY = 1 AND [INVD_QTY] IS NULL) OR ([INVD_QTY] = @Original_INVD"& _ 
                "_QTY)) AND ((@IsNull_INVD_PRICE = 1 AND [INVD_PRICE] IS NULL) OR ([INVD_PRICE] ="& _ 
                " @Original_INVD_PRICE)) AND ((@IsNull_INVD_STATUS = 1 AND [INVD_STATUS] IS NULL)"& _ 
                " OR ([INVD_STATUS] = @Original_INVD_STATUS)) AND ((@IsNull_HRIS_EMPNO = 1 AND [H"& _ 
                "RIS_EMPNO] IS NULL) OR ([HRIS_EMPNO] = @Original_HRIS_EMPNO)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INVD_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INV_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INV_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UN_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UN_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INVD_QTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_QTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INVD_QTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_QTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INVD_PRICE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_PRICE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INVD_PRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "INVD_PRICE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INVD_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INVD_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBLG3_INVOICE_DETAILS] ([INV_ID], [UN_NO], [INVD_QTY], [INVD_P"& _ 
                "RICE], [INVD_DESCRIPTION], [INVD_STATUS], [HRIS_EMPNO]) VALUES (@INV_ID, @UN_NO,"& _ 
                " @INVD_QTY, @INVD_PRICE, @INVD_DESCRIPTION, @INVD_STATUS, @HRIS_EMPNO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT "& _ 
                "INVD_ID, INV_ID, UN_NO, INVD_QTY, INVD_PRICE, INVD_DESCRIPTION, INVD_STATUS, HRI"& _ 
                "S_EMPNO FROM TBLG3_INVOICE_DETAILS WHERE (INVD_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UN_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INVD_QTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_QTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INVD_PRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "INVD_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INVD_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INVD_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBLG3_INVOICE_DETAILS] SET [INV_ID] = @INV_ID, [UN_NO] = @UN_NO, [I"& _ 
                "NVD_QTY] = @INVD_QTY, [INVD_PRICE] = @INVD_PRICE, [INVD_DESCRIPTION] = @INVD_DES"& _ 
                "CRIPTION, [INVD_STATUS] = @INVD_STATUS, [HRIS_EMPNO] = @HRIS_EMPNO WHERE (([INVD"& _ 
                "_ID] = @Original_INVD_ID) AND ((@IsNull_INV_ID = 1 AND [INV_ID] IS NULL) OR ([IN"& _ 
                "V_ID] = @Original_INV_ID)) AND ((@IsNull_UN_NO = 1 AND [UN_NO] IS NULL) OR ([UN_"& _ 
                "NO] = @Original_UN_NO)) AND ((@IsNull_INVD_QTY = 1 AND [INVD_QTY] IS NULL) OR (["& _ 
                "INVD_QTY] = @Original_INVD_QTY)) AND ((@IsNull_INVD_PRICE = 1 AND [INVD_PRICE] I"& _ 
                "S NULL) OR ([INVD_PRICE] = @Original_INVD_PRICE)) AND ((@IsNull_INVD_STATUS = 1 "& _ 
                "AND [INVD_STATUS] IS NULL) OR ([INVD_STATUS] = @Original_INVD_STATUS)) AND ((@Is"& _ 
                "Null_HRIS_EMPNO = 1 AND [HRIS_EMPNO] IS NULL) OR ([HRIS_EMPNO] = @Original_HRIS_"& _ 
                "EMPNO)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT INVD_ID, INV_ID, UN_NO, INVD_QTY, INVD_PRICE, INVD_DESCRIPTION"& _ 
                ", INVD_STATUS, HRIS_EMPNO FROM TBLG3_INVOICE_DETAILS WHERE (INVD_ID = @INVD_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INV_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UN_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INVD_QTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_QTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INVD_PRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "INVD_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INVD_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INVD_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INVD_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INV_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INV_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INV_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UN_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UN_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INVD_QTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_QTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INVD_QTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_QTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INVD_PRICE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_PRICE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INVD_PRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "INVD_PRICE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INVD_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INVD_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INVD_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "INVD_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT INVD_ID, INV_ID, UN_NO, INVD_QTY, INVD_PRICE, INVD_DESCRIPTION, INVD_STATU"& _ 
                "S, HRIS_EMPNO FROM dbo.TBLG3_INVOICE_DETAILS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.TBLG3_INVOICE_DETAILSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.TBLG3_INVOICE_DETAILSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.TBLG3_INVOICE_DETAILSDataTable = New DS_PROPERTYDB.TBLG3_INVOICE_DETAILSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.TBLG3_INVOICE_DETAILSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "TBLG3_INVOICE_DETAILS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_INVD_ID As Integer, ByVal Original_INV_ID As String, ByVal Original_UN_NO As Global.System.Nullable(Of Integer), ByVal Original_INVD_QTY As Global.System.Nullable(Of Integer), ByVal Original_INVD_PRICE As Global.System.Nullable(Of Decimal), ByVal Original_INVD_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_INVD_ID,Integer)
            If (Original_INV_ID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_INV_ID,String)
            End If
            If (Original_UN_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_UN_NO.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_INVD_QTY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_INVD_QTY.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_INVD_PRICE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_INVD_PRICE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_INVD_STATUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_INVD_STATUS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_HRIS_EMPNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal INV_ID As String, ByVal UN_NO As Global.System.Nullable(Of Integer), ByVal INVD_QTY As Global.System.Nullable(Of Integer), ByVal INVD_PRICE As Global.System.Nullable(Of Decimal), ByVal INVD_DESCRIPTION As String, ByVal INVD_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String) As Integer
            If (INV_ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(INV_ID,String)
            End If
            If (UN_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(UN_NO.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (INVD_QTY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(INVD_QTY.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (INVD_PRICE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(INVD_PRICE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (INVD_DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(INVD_DESCRIPTION,String)
            End If
            If (INVD_STATUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(INVD_STATUS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(HRIS_EMPNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal INV_ID As String, ByVal UN_NO As Global.System.Nullable(Of Integer), ByVal INVD_QTY As Global.System.Nullable(Of Integer), ByVal INVD_PRICE As Global.System.Nullable(Of Decimal), ByVal INVD_DESCRIPTION As String, ByVal INVD_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String, ByVal Original_INVD_ID As Integer, ByVal Original_INV_ID As String, ByVal Original_UN_NO As Global.System.Nullable(Of Integer), ByVal Original_INVD_QTY As Global.System.Nullable(Of Integer), ByVal Original_INVD_PRICE As Global.System.Nullable(Of Decimal), ByVal Original_INVD_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String, ByVal INVD_ID As Integer) As Integer
            If (INV_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(INV_ID,String)
            End If
            If (UN_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(UN_NO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (INVD_QTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(INVD_QTY.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (INVD_PRICE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(INVD_PRICE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (INVD_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(INVD_DESCRIPTION,String)
            End If
            If (INVD_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(INVD_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(HRIS_EMPNO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_INVD_ID,Integer)
            If (Original_INV_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_INV_ID,String)
            End If
            If (Original_UN_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_UN_NO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_INVD_QTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_INVD_QTY.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_INVD_PRICE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_INVD_PRICE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_INVD_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_INVD_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_HRIS_EMPNO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(INVD_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal INV_ID As String, ByVal UN_NO As Global.System.Nullable(Of Integer), ByVal INVD_QTY As Global.System.Nullable(Of Integer), ByVal INVD_PRICE As Global.System.Nullable(Of Decimal), ByVal INVD_DESCRIPTION As String, ByVal INVD_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String, ByVal Original_INVD_ID As Integer, ByVal Original_INV_ID As String, ByVal Original_UN_NO As Global.System.Nullable(Of Integer), ByVal Original_INVD_QTY As Global.System.Nullable(Of Integer), ByVal Original_INVD_PRICE As Global.System.Nullable(Of Decimal), ByVal Original_INVD_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String) As Integer
            Return Me.Update(INV_ID, UN_NO, INVD_QTY, INVD_PRICE, INVD_DESCRIPTION, INVD_STATUS, HRIS_EMPNO, Original_INVD_ID, Original_INV_ID, Original_UN_NO, Original_INVD_QTY, Original_INVD_PRICE, Original_INVD_STATUS, Original_HRIS_EMPNO, Original_INVD_ID)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBLG3_PRIMARY_SIGNATORYTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBLG3_PRIMARY_SIGNATORY"
            tableMapping.ColumnMappings.Add("SIG_TY_NO", "SIG_TY_NO")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO_USER", "HRIS_EMPNO_USER")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO_SIG", "HRIS_EMPNO_SIG")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBLG3_PRIMARY_SIGNATORY] WHERE (([SIG_TY_NO] = @Original_SIG_T"& _ 
                "Y_NO) AND ([HRIS_EMPNO_USER] = @Original_HRIS_EMPNO_USER) AND ((@IsNull_HRIS_EMP"& _ 
                "NO_SIG = 1 AND [HRIS_EMPNO_SIG] IS NULL) OR ([HRIS_EMPNO_SIG] = @Original_HRIS_E"& _ 
                "MPNO_SIG)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_TY_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_TY_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO_USER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_USER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO_SIG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_SIG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO_SIG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_SIG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBLG3_PRIMARY_SIGNATORY] ([SIG_TY_NO], [HRIS_EMPNO_USER], [HRI"& _ 
                "S_EMPNO_SIG]) VALUES (@SIG_TY_NO, @HRIS_EMPNO_USER, @HRIS_EMPNO_SIG);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SI"& _ 
                "G_TY_NO, HRIS_EMPNO_USER, HRIS_EMPNO_SIG FROM TBLG3_PRIMARY_SIGNATORY WHERE (HRI"& _ 
                "S_EMPNO_USER = @HRIS_EMPNO_USER) AND (SIG_TY_NO = @SIG_TY_NO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_TY_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_TY_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO_USER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO_SIG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_SIG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBLG3_PRIMARY_SIGNATORY] SET [SIG_TY_NO] = @SIG_TY_NO, [HRIS_EMPNO_"& _ 
                "USER] = @HRIS_EMPNO_USER, [HRIS_EMPNO_SIG] = @HRIS_EMPNO_SIG WHERE (([SIG_TY_NO]"& _ 
                " = @Original_SIG_TY_NO) AND ([HRIS_EMPNO_USER] = @Original_HRIS_EMPNO_USER) AND "& _ 
                "((@IsNull_HRIS_EMPNO_SIG = 1 AND [HRIS_EMPNO_SIG] IS NULL) OR ([HRIS_EMPNO_SIG] "& _ 
                "= @Original_HRIS_EMPNO_SIG)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SIG_TY_NO, HRIS_EMPNO_USER, HRIS_EMPNO_SI"& _ 
                "G FROM TBLG3_PRIMARY_SIGNATORY WHERE (HRIS_EMPNO_USER = @HRIS_EMPNO_USER) AND (S"& _ 
                "IG_TY_NO = @SIG_TY_NO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_TY_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_TY_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO_USER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO_SIG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_SIG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_TY_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_TY_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO_USER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_USER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO_SIG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_SIG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO_SIG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_SIG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SIG_TY_NO, HRIS_EMPNO_USER, HRIS_EMPNO_SIG FROM dbo.TBLG3_PRIMARY_SIGNATOR"& _ 
                "Y"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "INSERT INTO [dbo].[TBLG3_PRIMARY_SIGNATORY] ([SIG_TY_NO], [HRIS_EMPNO_USER], [HRI"& _ 
                "S_EMPNO_SIG]) VALUES (@SIG_TY_NO, @HRIS_EMPNO_USER, @HRIS_EMPNO_SIG);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SI"& _ 
                "G_TY_NO, HRIS_EMPNO_USER, HRIS_EMPNO_SIG FROM TBLG3_PRIMARY_SIGNATORY WHERE (HRI"& _ 
                "S_EMPNO_USER = @HRIS_EMPNO_USER) AND (SIG_TY_NO = @SIG_TY_NO)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_TY_NO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_TY_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO_USER", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO_SIG", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_SIG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        COUNT(SIG_TY_NO) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            TBLG3_PRIMARY_SIGNATORY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (HRIS_EMPNO_USER = @HRIS_EMPNO_USER)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO_USER", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE       TBLG3_PRIMARY_SIGNATORY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                SIG_TY_NO = @SIG_TY_NO, "& _ 
                "HRIS_EMPNO_USER = @HRIS_EMPNO_USER, HRIS_EMPNO_SIG = @HRIS_EMPNO_SIG"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     "& _ 
                "   (SIG_TY_NO = @TY_NO) AND (HRIS_EMPNO_USER = @EMPNO); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SIG_TY_NO, HRIS"& _ 
                "_EMPNO_USER, HRIS_EMPNO_SIG FROM TBLG3_PRIMARY_SIGNATORY WHERE (HRIS_EMPNO_USER "& _ 
                "= @HRIS_EMPNO_USER) AND (SIG_TY_NO = @SIG_TY_NO)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_TY_NO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_TY_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO_USER", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO_SIG", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_SIG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TY_NO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_TY_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMPNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_USER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.TBLG3_PRIMARY_SIGNATORYDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.TBLG3_PRIMARY_SIGNATORYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.TBLG3_PRIMARY_SIGNATORYDataTable = New DS_PROPERTYDB.TBLG3_PRIMARY_SIGNATORYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.TBLG3_PRIMARY_SIGNATORYDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "TBLG3_PRIMARY_SIGNATORY")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SIG_TY_NO As Integer, ByVal Original_HRIS_EMPNO_USER As String, ByVal Original_HRIS_EMPNO_SIG As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SIG_TY_NO,Integer)
            If (Original_HRIS_EMPNO_USER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_HRIS_EMPNO_USER")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_HRIS_EMPNO_USER,String)
            End If
            If (Original_HRIS_EMPNO_SIG Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_HRIS_EMPNO_SIG,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SIG_TY_NO As Integer, ByVal HRIS_EMPNO_USER As String, ByVal HRIS_EMPNO_SIG As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(SIG_TY_NO,Integer)
            If (HRIS_EMPNO_USER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HRIS_EMPNO_USER")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(HRIS_EMPNO_USER,String)
            End If
            If (HRIS_EMPNO_SIG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(HRIS_EMPNO_SIG,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SIG_TY_NO As Integer, ByVal HRIS_EMPNO_USER As String, ByVal HRIS_EMPNO_SIG As String, ByVal Original_SIG_TY_NO As Integer, ByVal Original_HRIS_EMPNO_USER As String, ByVal Original_HRIS_EMPNO_SIG As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SIG_TY_NO,Integer)
            If (HRIS_EMPNO_USER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HRIS_EMPNO_USER")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(HRIS_EMPNO_USER,String)
            End If
            If (HRIS_EMPNO_SIG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(HRIS_EMPNO_SIG,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_SIG_TY_NO,Integer)
            If (Original_HRIS_EMPNO_USER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_HRIS_EMPNO_USER")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_HRIS_EMPNO_USER,String)
            End If
            If (Original_HRIS_EMPNO_SIG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_HRIS_EMPNO_SIG,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal HRIS_EMPNO_SIG As String, ByVal Original_SIG_TY_NO As Integer, ByVal Original_HRIS_EMPNO_USER As String, ByVal Original_HRIS_EMPNO_SIG As String) As Integer
            Return Me.Update(Original_SIG_TY_NO, Original_HRIS_EMPNO_USER, HRIS_EMPNO_SIG, Original_SIG_TY_NO, Original_HRIS_EMPNO_USER, Original_HRIS_EMPNO_SIG)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function IQ_PRIMARY_SIGNATORY_PURCHASE_REQUEST(ByVal SIG_TY_NO As Integer, ByVal HRIS_EMPNO_USER As String, ByVal HRIS_EMPNO_SIG As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(SIG_TY_NO,Integer)
            If (HRIS_EMPNO_USER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HRIS_EMPNO_USER")
            Else
                command.Parameters(1).Value = CType(HRIS_EMPNO_USER,String)
            End If
            If (HRIS_EMPNO_SIG Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(HRIS_EMPNO_SIG,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_IFUSERHASDEFAULTSIGNATORY(ByVal HRIS_EMPNO_USER As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (HRIS_EMPNO_USER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HRIS_EMPNO_USER")
            Else
                command.Parameters(0).Value = CType(HRIS_EMPNO_USER,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UQ_PRIMARY_SIGNATORY_PURCHASE_REQUEST(ByVal SIG_TY_NO As Integer, ByVal HRIS_EMPNO_USER As String, ByVal HRIS_EMPNO_SIG As String, ByVal TY_NO As Integer, ByVal EMPNO As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            command.Parameters(0).Value = CType(SIG_TY_NO,Integer)
            If (HRIS_EMPNO_USER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HRIS_EMPNO_USER")
            Else
                command.Parameters(1).Value = CType(HRIS_EMPNO_USER,String)
            End If
            If (HRIS_EMPNO_SIG Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(HRIS_EMPNO_SIG,String)
            End If
            command.Parameters(3).Value = CType(TY_NO,Integer)
            If (EMPNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EMPNO")
            Else
                command.Parameters(4).Value = CType(EMPNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBLG3_REG_BUSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBLG3_REG_BUS"
            tableMapping.ColumnMappings.Add("BUS_NO_SYSTEM", "BUS_NO_SYSTEM")
            tableMapping.ColumnMappings.Add("HDIVS_CODE", "HDIVS_CODE")
            tableMapping.ColumnMappings.Add("EMP_NO", "EMP_NO")
            tableMapping.ColumnMappings.Add("BUS_DATE", "BUS_DATE")
            tableMapping.ColumnMappings.Add("BUS_PAYEE", "BUS_PAYEE")
            tableMapping.ColumnMappings.Add("BUS_OFFICE", "BUS_OFFICE")
            tableMapping.ColumnMappings.Add("BUS_ADDRESS", "BUS_ADDRESS")
            tableMapping.ColumnMappings.Add("BUS_NAME_A", "BUS_NAME_A")
            tableMapping.ColumnMappings.Add("BUS_POSITION_A", "BUS_POSITION_A")
            tableMapping.ColumnMappings.Add("BUS_NAME_B", "BUS_NAME_B")
            tableMapping.ColumnMappings.Add("BUS_POSITION_B", "BUS_POSITION_B")
            tableMapping.ColumnMappings.Add("BUS_QR_CODE", "BUS_QR_CODE")
            tableMapping.ColumnMappings.Add("BUS_STATUS", "BUS_STATUS")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBLG3_REG_BUS] WHERE (([BUS_NO_SYSTEM] = @Original_BUS_NO_SYST"& _ 
                "EM) AND ((@IsNull_HDIVS_CODE = 1 AND [HDIVS_CODE] IS NULL) OR ([HDIVS_CODE] = @O"& _ 
                "riginal_HDIVS_CODE)) AND ((@IsNull_EMP_NO = 1 AND [EMP_NO] IS NULL) OR ([EMP_NO]"& _ 
                " = @Original_EMP_NO)) AND ((@IsNull_BUS_DATE = 1 AND [BUS_DATE] IS NULL) OR ([BU"& _ 
                "S_DATE] = @Original_BUS_DATE)) AND ((@IsNull_BUS_NAME_A = 1 AND [BUS_NAME_A] IS "& _ 
                "NULL) OR ([BUS_NAME_A] = @Original_BUS_NAME_A)) AND ((@IsNull_BUS_POSITION_A = 1"& _ 
                " AND [BUS_POSITION_A] IS NULL) OR ([BUS_POSITION_A] = @Original_BUS_POSITION_A))"& _ 
                " AND ((@IsNull_BUS_NAME_B = 1 AND [BUS_NAME_B] IS NULL) OR ([BUS_NAME_B] = @Orig"& _ 
                "inal_BUS_NAME_B)) AND ((@IsNull_BUS_POSITION_B = 1 AND [BUS_POSITION_B] IS NULL)"& _ 
                " OR ([BUS_POSITION_B] = @Original_BUS_POSITION_B)) AND ((@IsNull_BUS_STATUS = 1 "& _ 
                "AND [BUS_STATUS] IS NULL) OR ([BUS_STATUS] = @Original_BUS_STATUS)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_NO_SYSTEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NO_SYSTEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HDIVS_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMP_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BUS_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BUS_NAME_A", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NAME_A", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_NAME_A", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NAME_A", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BUS_POSITION_A", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_POSITION_A", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_POSITION_A", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_POSITION_A", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BUS_NAME_B", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NAME_B", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_NAME_B", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NAME_B", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BUS_POSITION_B", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_POSITION_B", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_POSITION_B", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_POSITION_B", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BUS_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBLG3_REG_BUS] ([BUS_NO_SYSTEM], [HDIVS_CODE], [EMP_NO], [BUS_"& _ 
                "DATE], [BUS_PAYEE], [BUS_OFFICE], [BUS_ADDRESS], [BUS_NAME_A], [BUS_POSITION_A],"& _ 
                " [BUS_NAME_B], [BUS_POSITION_B], [BUS_QR_CODE], [BUS_STATUS]) VALUES (@BUS_NO_SY"& _ 
                "STEM, @HDIVS_CODE, @EMP_NO, @BUS_DATE, @BUS_PAYEE, @BUS_OFFICE, @BUS_ADDRESS, @B"& _ 
                "US_NAME_A, @BUS_POSITION_A, @BUS_NAME_B, @BUS_POSITION_B, @BUS_QR_CODE, @BUS_STA"& _ 
                "TUS);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT BUS_NO_SYSTEM, HDIVS_CODE, EMP_NO, BUS_DATE, BUS_PAYEE, BUS_OFFICE"& _ 
                ", BUS_ADDRESS, BUS_NAME_A, BUS_POSITION_A, BUS_NAME_B, BUS_POSITION_B, BUS_QR_CO"& _ 
                "DE, BUS_STATUS FROM TBLG3_REG_BUS WHERE (BUS_NO_SYSTEM = @BUS_NO_SYSTEM)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_NO_SYSTEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NO_SYSTEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_PAYEE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_PAYEE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_OFFICE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_OFFICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_ADDRESS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_ADDRESS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_NAME_A", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NAME_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_POSITION_A", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_POSITION_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_NAME_B", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NAME_B", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_POSITION_B", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_POSITION_B", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_QR_CODE", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_QR_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBLG3_REG_BUS] SET [BUS_NO_SYSTEM] = @BUS_NO_SYSTEM, [HDIVS_CODE] ="& _ 
                " @HDIVS_CODE, [EMP_NO] = @EMP_NO, [BUS_DATE] = @BUS_DATE, [BUS_PAYEE] = @BUS_PAY"& _ 
                "EE, [BUS_OFFICE] = @BUS_OFFICE, [BUS_ADDRESS] = @BUS_ADDRESS, [BUS_NAME_A] = @BU"& _ 
                "S_NAME_A, [BUS_POSITION_A] = @BUS_POSITION_A, [BUS_NAME_B] = @BUS_NAME_B, [BUS_P"& _ 
                "OSITION_B] = @BUS_POSITION_B, [BUS_QR_CODE] = @BUS_QR_CODE, [BUS_STATUS] = @BUS_"& _ 
                "STATUS WHERE (([BUS_NO_SYSTEM] = @Original_BUS_NO_SYSTEM) AND ((@IsNull_HDIVS_CO"& _ 
                "DE = 1 AND [HDIVS_CODE] IS NULL) OR ([HDIVS_CODE] = @Original_HDIVS_CODE)) AND ("& _ 
                "(@IsNull_EMP_NO = 1 AND [EMP_NO] IS NULL) OR ([EMP_NO] = @Original_EMP_NO)) AND "& _ 
                "((@IsNull_BUS_DATE = 1 AND [BUS_DATE] IS NULL) OR ([BUS_DATE] = @Original_BUS_DA"& _ 
                "TE)) AND ((@IsNull_BUS_NAME_A = 1 AND [BUS_NAME_A] IS NULL) OR ([BUS_NAME_A] = @"& _ 
                "Original_BUS_NAME_A)) AND ((@IsNull_BUS_POSITION_A = 1 AND [BUS_POSITION_A] IS N"& _ 
                "ULL) OR ([BUS_POSITION_A] = @Original_BUS_POSITION_A)) AND ((@IsNull_BUS_NAME_B "& _ 
                "= 1 AND [BUS_NAME_B] IS NULL) OR ([BUS_NAME_B] = @Original_BUS_NAME_B)) AND ((@I"& _ 
                "sNull_BUS_POSITION_B = 1 AND [BUS_POSITION_B] IS NULL) OR ([BUS_POSITION_B] = @O"& _ 
                "riginal_BUS_POSITION_B)) AND ((@IsNull_BUS_STATUS = 1 AND [BUS_STATUS] IS NULL) "& _ 
                "OR ([BUS_STATUS] = @Original_BUS_STATUS)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT BUS_NO_SYSTEM, HDIVS_CODE, E"& _ 
                "MP_NO, BUS_DATE, BUS_PAYEE, BUS_OFFICE, BUS_ADDRESS, BUS_NAME_A, BUS_POSITION_A,"& _ 
                " BUS_NAME_B, BUS_POSITION_B, BUS_QR_CODE, BUS_STATUS FROM TBLG3_REG_BUS WHERE (B"& _ 
                "US_NO_SYSTEM = @BUS_NO_SYSTEM)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_NO_SYSTEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NO_SYSTEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_PAYEE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_PAYEE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_OFFICE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_OFFICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_ADDRESS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_ADDRESS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_NAME_A", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NAME_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_POSITION_A", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_POSITION_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_NAME_B", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NAME_B", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_POSITION_B", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_POSITION_B", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_QR_CODE", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_QR_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_NO_SYSTEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NO_SYSTEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HDIVS_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMP_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BUS_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BUS_NAME_A", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NAME_A", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_NAME_A", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NAME_A", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BUS_POSITION_A", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_POSITION_A", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_POSITION_A", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_POSITION_A", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BUS_NAME_B", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NAME_B", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_NAME_B", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NAME_B", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BUS_POSITION_B", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_POSITION_B", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_POSITION_B", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_POSITION_B", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BUS_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT BUS_NO_SYSTEM, HDIVS_CODE, EMP_NO, BUS_DATE, BUS_PAYEE, BUS_OFFICE, BUS_AD"& _ 
                "DRESS, BUS_NAME_A, BUS_POSITION_A, BUS_NAME_B, BUS_POSITION_B, BUS_QR_CODE, BUS_"& _ 
                "STATUS FROM dbo.TBLG3_REG_BUS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.TBLG3_REG_BUSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.TBLG3_REG_BUSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.TBLG3_REG_BUSDataTable = New DS_PROPERTYDB.TBLG3_REG_BUSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.TBLG3_REG_BUSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "TBLG3_REG_BUS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_BUS_NO_SYSTEM As String, ByVal Original_HDIVS_CODE As String, ByVal Original_EMP_NO As String, ByVal Original_BUS_DATE As Global.System.Nullable(Of Date), ByVal Original_BUS_NAME_A As String, ByVal Original_BUS_POSITION_A As String, ByVal Original_BUS_NAME_B As String, ByVal Original_BUS_POSITION_B As String, ByVal Original_BUS_STATUS As Global.System.Nullable(Of Integer)) As Integer
            If (Original_BUS_NO_SYSTEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_BUS_NO_SYSTEM")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_BUS_NO_SYSTEM,String)
            End If
            If (Original_HDIVS_CODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_HDIVS_CODE,String)
            End If
            If (Original_EMP_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_EMP_NO,String)
            End If
            If (Original_BUS_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_BUS_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_BUS_NAME_A Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_BUS_NAME_A,String)
            End If
            If (Original_BUS_POSITION_A Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_BUS_POSITION_A,String)
            End If
            If (Original_BUS_NAME_B Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_BUS_NAME_B,String)
            End If
            If (Original_BUS_POSITION_B Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_BUS_POSITION_B,String)
            End If
            If (Original_BUS_STATUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_BUS_STATUS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal BUS_NO_SYSTEM As String, ByVal HDIVS_CODE As String, ByVal EMP_NO As String, ByVal BUS_DATE As Global.System.Nullable(Of Date), ByVal BUS_PAYEE As String, ByVal BUS_OFFICE As String, ByVal BUS_ADDRESS As String, ByVal BUS_NAME_A As String, ByVal BUS_POSITION_A As String, ByVal BUS_NAME_B As String, ByVal BUS_POSITION_B As String, ByVal BUS_QR_CODE() As Byte, ByVal BUS_STATUS As Global.System.Nullable(Of Integer)) As Integer
            If (BUS_NO_SYSTEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("BUS_NO_SYSTEM")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(BUS_NO_SYSTEM,String)
            End If
            If (HDIVS_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(HDIVS_CODE,String)
            End If
            If (EMP_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(EMP_NO,String)
            End If
            If (BUS_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(BUS_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (BUS_PAYEE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(BUS_PAYEE,String)
            End If
            If (BUS_OFFICE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(BUS_OFFICE,String)
            End If
            If (BUS_ADDRESS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(BUS_ADDRESS,String)
            End If
            If (BUS_NAME_A Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(BUS_NAME_A,String)
            End If
            If (BUS_POSITION_A Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(BUS_POSITION_A,String)
            End If
            If (BUS_NAME_B Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(BUS_NAME_B,String)
            End If
            If (BUS_POSITION_B Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(BUS_POSITION_B,String)
            End If
            If (BUS_QR_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(BUS_QR_CODE,Byte())
            End If
            If (BUS_STATUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(BUS_STATUS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal BUS_NO_SYSTEM As String,  _
                    ByVal HDIVS_CODE As String,  _
                    ByVal EMP_NO As String,  _
                    ByVal BUS_DATE As Global.System.Nullable(Of Date),  _
                    ByVal BUS_PAYEE As String,  _
                    ByVal BUS_OFFICE As String,  _
                    ByVal BUS_ADDRESS As String,  _
                    ByVal BUS_NAME_A As String,  _
                    ByVal BUS_POSITION_A As String,  _
                    ByVal BUS_NAME_B As String,  _
                    ByVal BUS_POSITION_B As String,  _
                    ByVal BUS_QR_CODE() As Byte,  _
                    ByVal BUS_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BUS_NO_SYSTEM As String,  _
                    ByVal Original_HDIVS_CODE As String,  _
                    ByVal Original_EMP_NO As String,  _
                    ByVal Original_BUS_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_BUS_NAME_A As String,  _
                    ByVal Original_BUS_POSITION_A As String,  _
                    ByVal Original_BUS_NAME_B As String,  _
                    ByVal Original_BUS_POSITION_B As String,  _
                    ByVal Original_BUS_STATUS As Global.System.Nullable(Of Integer)) As Integer
            If (BUS_NO_SYSTEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("BUS_NO_SYSTEM")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(BUS_NO_SYSTEM,String)
            End If
            If (HDIVS_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(HDIVS_CODE,String)
            End If
            If (EMP_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(EMP_NO,String)
            End If
            If (BUS_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(BUS_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (BUS_PAYEE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(BUS_PAYEE,String)
            End If
            If (BUS_OFFICE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(BUS_OFFICE,String)
            End If
            If (BUS_ADDRESS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(BUS_ADDRESS,String)
            End If
            If (BUS_NAME_A Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(BUS_NAME_A,String)
            End If
            If (BUS_POSITION_A Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(BUS_POSITION_A,String)
            End If
            If (BUS_NAME_B Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(BUS_NAME_B,String)
            End If
            If (BUS_POSITION_B Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(BUS_POSITION_B,String)
            End If
            If (BUS_QR_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(BUS_QR_CODE,Byte())
            End If
            If (BUS_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(BUS_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_BUS_NO_SYSTEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_BUS_NO_SYSTEM")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_BUS_NO_SYSTEM,String)
            End If
            If (Original_HDIVS_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_HDIVS_CODE,String)
            End If
            If (Original_EMP_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_EMP_NO,String)
            End If
            If (Original_BUS_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_BUS_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_BUS_NAME_A Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_BUS_NAME_A,String)
            End If
            If (Original_BUS_POSITION_A Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_BUS_POSITION_A,String)
            End If
            If (Original_BUS_NAME_B Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_BUS_NAME_B,String)
            End If
            If (Original_BUS_POSITION_B Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_BUS_POSITION_B,String)
            End If
            If (Original_BUS_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_BUS_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal HDIVS_CODE As String,  _
                    ByVal EMP_NO As String,  _
                    ByVal BUS_DATE As Global.System.Nullable(Of Date),  _
                    ByVal BUS_PAYEE As String,  _
                    ByVal BUS_OFFICE As String,  _
                    ByVal BUS_ADDRESS As String,  _
                    ByVal BUS_NAME_A As String,  _
                    ByVal BUS_POSITION_A As String,  _
                    ByVal BUS_NAME_B As String,  _
                    ByVal BUS_POSITION_B As String,  _
                    ByVal BUS_QR_CODE() As Byte,  _
                    ByVal BUS_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BUS_NO_SYSTEM As String,  _
                    ByVal Original_HDIVS_CODE As String,  _
                    ByVal Original_EMP_NO As String,  _
                    ByVal Original_BUS_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_BUS_NAME_A As String,  _
                    ByVal Original_BUS_POSITION_A As String,  _
                    ByVal Original_BUS_NAME_B As String,  _
                    ByVal Original_BUS_POSITION_B As String,  _
                    ByVal Original_BUS_STATUS As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(Original_BUS_NO_SYSTEM, HDIVS_CODE, EMP_NO, BUS_DATE, BUS_PAYEE, BUS_OFFICE, BUS_ADDRESS, BUS_NAME_A, BUS_POSITION_A, BUS_NAME_B, BUS_POSITION_B, BUS_QR_CODE, BUS_STATUS, Original_BUS_NO_SYSTEM, Original_HDIVS_CODE, Original_EMP_NO, Original_BUS_DATE, Original_BUS_NAME_A, Original_BUS_POSITION_A, Original_BUS_NAME_B, Original_BUS_POSITION_B, Original_BUS_STATUS)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBLG3_REG_DVTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBLG3_REG_DV"
            tableMapping.ColumnMappings.Add("DV_NO_SYSTEM", "DV_NO_SYSTEM")
            tableMapping.ColumnMappings.Add("HDIVS_CODE", "HDIVS_CODE")
            tableMapping.ColumnMappings.Add("EMP_NO", "EMP_NO")
            tableMapping.ColumnMappings.Add("DV_DATE", "DV_DATE")
            tableMapping.ColumnMappings.Add("DV_PAYEE", "DV_PAYEE")
            tableMapping.ColumnMappings.Add("DV_TIN_EMPLOYEE_NO", "DV_TIN_EMPLOYEE_NO")
            tableMapping.ColumnMappings.Add("DV_ADDRESS", "DV_ADDRESS")
            tableMapping.ColumnMappings.Add("DV_A_NAME", "DV_A_NAME")
            tableMapping.ColumnMappings.Add("DV_A_POSITION", "DV_A_POSITION")
            tableMapping.ColumnMappings.Add("DV_C_NAME", "DV_C_NAME")
            tableMapping.ColumnMappings.Add("DV_C_POSITION", "DV_C_POSITION")
            tableMapping.ColumnMappings.Add("DV_D_NAME", "DV_D_NAME")
            tableMapping.ColumnMappings.Add("DV_D_POSITION", "DV_D_POSITION")
            tableMapping.ColumnMappings.Add("DV_STATUS", "DV_STATUS")
            tableMapping.ColumnMappings.Add("DV_QR_CODE", "DV_QR_CODE")
            tableMapping.ColumnMappings.Add("DV_TYPE", "DV_TYPE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBLG3_REG_DV] WHERE (([DV_NO_SYSTEM] = @Original_DV_NO_SYSTEM)"& _ 
                " AND ((@IsNull_HDIVS_CODE = 1 AND [HDIVS_CODE] IS NULL) OR ([HDIVS_CODE] = @Orig"& _ 
                "inal_HDIVS_CODE)) AND ((@IsNull_EMP_NO = 1 AND [EMP_NO] IS NULL) OR ([EMP_NO] = "& _ 
                "@Original_EMP_NO)) AND ((@IsNull_DV_DATE = 1 AND [DV_DATE] IS NULL) OR ([DV_DATE"& _ 
                "] = @Original_DV_DATE)) AND ((@IsNull_DV_TIN_EMPLOYEE_NO = 1 AND [DV_TIN_EMPLOYE"& _ 
                "E_NO] IS NULL) OR ([DV_TIN_EMPLOYEE_NO] = @Original_DV_TIN_EMPLOYEE_NO)) AND ((@"& _ 
                "IsNull_DV_A_NAME = 1 AND [DV_A_NAME] IS NULL) OR ([DV_A_NAME] = @Original_DV_A_N"& _ 
                "AME)) AND ((@IsNull_DV_A_POSITION = 1 AND [DV_A_POSITION] IS NULL) OR ([DV_A_POS"& _ 
                "ITION] = @Original_DV_A_POSITION)) AND ((@IsNull_DV_C_NAME = 1 AND [DV_C_NAME] I"& _ 
                "S NULL) OR ([DV_C_NAME] = @Original_DV_C_NAME)) AND ((@IsNull_DV_C_POSITION = 1 "& _ 
                "AND [DV_C_POSITION] IS NULL) OR ([DV_C_POSITION] = @Original_DV_C_POSITION)) AND"& _ 
                " ((@IsNull_DV_D_NAME = 1 AND [DV_D_NAME] IS NULL) OR ([DV_D_NAME] = @Original_DV"& _ 
                "_D_NAME)) AND ((@IsNull_DV_D_POSITION = 1 AND [DV_D_POSITION] IS NULL) OR ([DV_D"& _ 
                "_POSITION] = @Original_DV_D_POSITION)) AND ((@IsNull_DV_STATUS = 1 AND [DV_STATU"& _ 
                "S] IS NULL) OR ([DV_STATUS] = @Original_DV_STATUS)) AND ((@IsNull_DV_TYPE = 1 AN"& _ 
                "D [DV_TYPE] IS NULL) OR ([DV_TYPE] = @Original_DV_TYPE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_NO_SYSTEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_NO_SYSTEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HDIVS_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMP_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_TIN_EMPLOYEE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_TIN_EMPLOYEE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_TIN_EMPLOYEE_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_TIN_EMPLOYEE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_A_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_A_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_A_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_A_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_A_POSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_A_POSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_A_POSITION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_A_POSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_C_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_C_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_C_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_C_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_C_POSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_C_POSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_C_POSITION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_C_POSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_D_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_D_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_D_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_D_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_D_POSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_D_POSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_D_POSITION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_D_POSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_TYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_TYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_TYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBLG3_REG_DV] ([DV_NO_SYSTEM], [HDIVS_CODE], [EMP_NO], [DV_DAT"& _ 
                "E], [DV_PAYEE], [DV_TIN_EMPLOYEE_NO], [DV_ADDRESS], [DV_A_NAME], [DV_A_POSITION]"& _ 
                ", [DV_C_NAME], [DV_C_POSITION], [DV_D_NAME], [DV_D_POSITION], [DV_STATUS], [DV_Q"& _ 
                "R_CODE], [DV_TYPE]) VALUES (@DV_NO_SYSTEM, @HDIVS_CODE, @EMP_NO, @DV_DATE, @DV_P"& _ 
                "AYEE, @DV_TIN_EMPLOYEE_NO, @DV_ADDRESS, @DV_A_NAME, @DV_A_POSITION, @DV_C_NAME, "& _ 
                "@DV_C_POSITION, @DV_D_NAME, @DV_D_POSITION, @DV_STATUS, @DV_QR_CODE, @DV_TYPE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DV_NO_SYSTEM, HDIVS_CODE, EMP_NO, DV_DATE, DV_PAYEE, DV_TIN_EMPLOYEE_NO,"& _ 
                " DV_ADDRESS, DV_A_NAME, DV_A_POSITION, DV_C_NAME, DV_C_POSITION, DV_D_NAME, DV_D"& _ 
                "_POSITION, DV_STATUS, DV_QR_CODE, DV_TYPE FROM TBLG3_REG_DV WHERE (DV_NO_SYSTEM "& _ 
                "= @DV_NO_SYSTEM)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_NO_SYSTEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_NO_SYSTEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_PAYEE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_PAYEE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_TIN_EMPLOYEE_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_TIN_EMPLOYEE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_ADDRESS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_ADDRESS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_A_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_A_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_A_POSITION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_A_POSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_C_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_C_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_C_POSITION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_C_POSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_D_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_D_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_D_POSITION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_D_POSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_QR_CODE", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_QR_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_TYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBLG3_REG_DV] SET [DV_NO_SYSTEM] = @DV_NO_SYSTEM, [HDIVS_CODE] = @H"& _ 
                "DIVS_CODE, [EMP_NO] = @EMP_NO, [DV_DATE] = @DV_DATE, [DV_PAYEE] = @DV_PAYEE, [DV"& _ 
                "_TIN_EMPLOYEE_NO] = @DV_TIN_EMPLOYEE_NO, [DV_ADDRESS] = @DV_ADDRESS, [DV_A_NAME]"& _ 
                " = @DV_A_NAME, [DV_A_POSITION] = @DV_A_POSITION, [DV_C_NAME] = @DV_C_NAME, [DV_C"& _ 
                "_POSITION] = @DV_C_POSITION, [DV_D_NAME] = @DV_D_NAME, [DV_D_POSITION] = @DV_D_P"& _ 
                "OSITION, [DV_STATUS] = @DV_STATUS, [DV_QR_CODE] = @DV_QR_CODE, [DV_TYPE] = @DV_T"& _ 
                "YPE WHERE (([DV_NO_SYSTEM] = @Original_DV_NO_SYSTEM) AND ((@IsNull_HDIVS_CODE = "& _ 
                "1 AND [HDIVS_CODE] IS NULL) OR ([HDIVS_CODE] = @Original_HDIVS_CODE)) AND ((@IsN"& _ 
                "ull_EMP_NO = 1 AND [EMP_NO] IS NULL) OR ([EMP_NO] = @Original_EMP_NO)) AND ((@Is"& _ 
                "Null_DV_DATE = 1 AND [DV_DATE] IS NULL) OR ([DV_DATE] = @Original_DV_DATE)) AND "& _ 
                "((@IsNull_DV_TIN_EMPLOYEE_NO = 1 AND [DV_TIN_EMPLOYEE_NO] IS NULL) OR ([DV_TIN_E"& _ 
                "MPLOYEE_NO] = @Original_DV_TIN_EMPLOYEE_NO)) AND ((@IsNull_DV_A_NAME = 1 AND [DV"& _ 
                "_A_NAME] IS NULL) OR ([DV_A_NAME] = @Original_DV_A_NAME)) AND ((@IsNull_DV_A_POS"& _ 
                "ITION = 1 AND [DV_A_POSITION] IS NULL) OR ([DV_A_POSITION] = @Original_DV_A_POSI"& _ 
                "TION)) AND ((@IsNull_DV_C_NAME = 1 AND [DV_C_NAME] IS NULL) OR ([DV_C_NAME] = @O"& _ 
                "riginal_DV_C_NAME)) AND ((@IsNull_DV_C_POSITION = 1 AND [DV_C_POSITION] IS NULL)"& _ 
                " OR ([DV_C_POSITION] = @Original_DV_C_POSITION)) AND ((@IsNull_DV_D_NAME = 1 AND"& _ 
                " [DV_D_NAME] IS NULL) OR ([DV_D_NAME] = @Original_DV_D_NAME)) AND ((@IsNull_DV_D"& _ 
                "_POSITION = 1 AND [DV_D_POSITION] IS NULL) OR ([DV_D_POSITION] = @Original_DV_D_"& _ 
                "POSITION)) AND ((@IsNull_DV_STATUS = 1 AND [DV_STATUS] IS NULL) OR ([DV_STATUS] "& _ 
                "= @Original_DV_STATUS)) AND ((@IsNull_DV_TYPE = 1 AND [DV_TYPE] IS NULL) OR ([DV"& _ 
                "_TYPE] = @Original_DV_TYPE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DV_NO_SYSTEM, HDIVS_CODE, EMP_NO, DV_DATE"& _ 
                ", DV_PAYEE, DV_TIN_EMPLOYEE_NO, DV_ADDRESS, DV_A_NAME, DV_A_POSITION, DV_C_NAME,"& _ 
                " DV_C_POSITION, DV_D_NAME, DV_D_POSITION, DV_STATUS, DV_QR_CODE, DV_TYPE FROM TB"& _ 
                "LG3_REG_DV WHERE (DV_NO_SYSTEM = @DV_NO_SYSTEM)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_NO_SYSTEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_NO_SYSTEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_PAYEE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_PAYEE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_TIN_EMPLOYEE_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_TIN_EMPLOYEE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_ADDRESS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_ADDRESS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_A_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_A_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_A_POSITION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_A_POSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_C_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_C_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_C_POSITION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_C_POSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_D_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_D_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_D_POSITION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_D_POSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_QR_CODE", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_QR_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DV_TYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_NO_SYSTEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_NO_SYSTEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HDIVS_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMP_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_TIN_EMPLOYEE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_TIN_EMPLOYEE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_TIN_EMPLOYEE_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_TIN_EMPLOYEE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_A_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_A_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_A_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_A_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_A_POSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_A_POSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_A_POSITION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_A_POSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_C_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_C_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_C_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_C_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_C_POSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_C_POSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_C_POSITION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_C_POSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_D_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_D_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_D_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_D_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_D_POSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_D_POSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_D_POSITION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_D_POSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DV_TYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_TYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DV_TYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DV_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DV_NO_SYSTEM, HDIVS_CODE, EMP_NO, DV_DATE, DV_PAYEE, DV_TIN_EMPLOYEE_NO, D"& _ 
                "V_ADDRESS, DV_A_NAME, DV_A_POSITION, DV_C_NAME, DV_C_POSITION, DV_D_NAME, DV_D_P"& _ 
                "OSITION, DV_STATUS, DV_QR_CODE, DV_TYPE FROM dbo.TBLG3_REG_DV"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.TBLG3_REG_DVDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.TBLG3_REG_DVDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.TBLG3_REG_DVDataTable = New DS_PROPERTYDB.TBLG3_REG_DVDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.TBLG3_REG_DVDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "TBLG3_REG_DV")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_DV_NO_SYSTEM As String, ByVal Original_HDIVS_CODE As String, ByVal Original_EMP_NO As String, ByVal Original_DV_DATE As Global.System.Nullable(Of Date), ByVal Original_DV_TIN_EMPLOYEE_NO As String, ByVal Original_DV_A_NAME As String, ByVal Original_DV_A_POSITION As String, ByVal Original_DV_C_NAME As String, ByVal Original_DV_C_POSITION As String, ByVal Original_DV_D_NAME As String, ByVal Original_DV_D_POSITION As String, ByVal Original_DV_STATUS As Global.System.Nullable(Of Integer), ByVal Original_DV_TYPE As String) As Integer
            If (Original_DV_NO_SYSTEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DV_NO_SYSTEM")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_DV_NO_SYSTEM,String)
            End If
            If (Original_HDIVS_CODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_HDIVS_CODE,String)
            End If
            If (Original_EMP_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_EMP_NO,String)
            End If
            If (Original_DV_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DV_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_DV_TIN_EMPLOYEE_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DV_TIN_EMPLOYEE_NO,String)
            End If
            If (Original_DV_A_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_DV_A_NAME,String)
            End If
            If (Original_DV_A_POSITION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_DV_A_POSITION,String)
            End If
            If (Original_DV_C_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_DV_C_NAME,String)
            End If
            If (Original_DV_C_POSITION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_DV_C_POSITION,String)
            End If
            If (Original_DV_D_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_DV_D_NAME,String)
            End If
            If (Original_DV_D_POSITION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_DV_D_POSITION,String)
            End If
            If (Original_DV_STATUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_DV_STATUS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_DV_TYPE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_DV_TYPE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal DV_NO_SYSTEM As String,  _
                    ByVal HDIVS_CODE As String,  _
                    ByVal EMP_NO As String,  _
                    ByVal DV_DATE As Global.System.Nullable(Of Date),  _
                    ByVal DV_PAYEE As String,  _
                    ByVal DV_TIN_EMPLOYEE_NO As String,  _
                    ByVal DV_ADDRESS As String,  _
                    ByVal DV_A_NAME As String,  _
                    ByVal DV_A_POSITION As String,  _
                    ByVal DV_C_NAME As String,  _
                    ByVal DV_C_POSITION As String,  _
                    ByVal DV_D_NAME As String,  _
                    ByVal DV_D_POSITION As String,  _
                    ByVal DV_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal DV_QR_CODE() As Byte,  _
                    ByVal DV_TYPE As String) As Integer
            If (DV_NO_SYSTEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DV_NO_SYSTEM")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DV_NO_SYSTEM,String)
            End If
            If (HDIVS_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(HDIVS_CODE,String)
            End If
            If (EMP_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(EMP_NO,String)
            End If
            If (DV_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DV_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (DV_PAYEE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DV_PAYEE,String)
            End If
            If (DV_TIN_EMPLOYEE_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DV_TIN_EMPLOYEE_NO,String)
            End If
            If (DV_ADDRESS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(DV_ADDRESS,String)
            End If
            If (DV_A_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(DV_A_NAME,String)
            End If
            If (DV_A_POSITION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DV_A_POSITION,String)
            End If
            If (DV_C_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(DV_C_NAME,String)
            End If
            If (DV_C_POSITION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(DV_C_POSITION,String)
            End If
            If (DV_D_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(DV_D_NAME,String)
            End If
            If (DV_D_POSITION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(DV_D_POSITION,String)
            End If
            If (DV_STATUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(DV_STATUS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (DV_QR_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(DV_QR_CODE,Byte())
            End If
            If (DV_TYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(DV_TYPE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal DV_NO_SYSTEM As String,  _
                    ByVal HDIVS_CODE As String,  _
                    ByVal EMP_NO As String,  _
                    ByVal DV_DATE As Global.System.Nullable(Of Date),  _
                    ByVal DV_PAYEE As String,  _
                    ByVal DV_TIN_EMPLOYEE_NO As String,  _
                    ByVal DV_ADDRESS As String,  _
                    ByVal DV_A_NAME As String,  _
                    ByVal DV_A_POSITION As String,  _
                    ByVal DV_C_NAME As String,  _
                    ByVal DV_C_POSITION As String,  _
                    ByVal DV_D_NAME As String,  _
                    ByVal DV_D_POSITION As String,  _
                    ByVal DV_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal DV_QR_CODE() As Byte,  _
                    ByVal DV_TYPE As String,  _
                    ByVal Original_DV_NO_SYSTEM As String,  _
                    ByVal Original_HDIVS_CODE As String,  _
                    ByVal Original_EMP_NO As String,  _
                    ByVal Original_DV_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_DV_TIN_EMPLOYEE_NO As String,  _
                    ByVal Original_DV_A_NAME As String,  _
                    ByVal Original_DV_A_POSITION As String,  _
                    ByVal Original_DV_C_NAME As String,  _
                    ByVal Original_DV_C_POSITION As String,  _
                    ByVal Original_DV_D_NAME As String,  _
                    ByVal Original_DV_D_POSITION As String,  _
                    ByVal Original_DV_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DV_TYPE As String) As Integer
            If (DV_NO_SYSTEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DV_NO_SYSTEM")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DV_NO_SYSTEM,String)
            End If
            If (HDIVS_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(HDIVS_CODE,String)
            End If
            If (EMP_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(EMP_NO,String)
            End If
            If (DV_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DV_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (DV_PAYEE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DV_PAYEE,String)
            End If
            If (DV_TIN_EMPLOYEE_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DV_TIN_EMPLOYEE_NO,String)
            End If
            If (DV_ADDRESS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(DV_ADDRESS,String)
            End If
            If (DV_A_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(DV_A_NAME,String)
            End If
            If (DV_A_POSITION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(DV_A_POSITION,String)
            End If
            If (DV_C_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(DV_C_NAME,String)
            End If
            If (DV_C_POSITION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(DV_C_POSITION,String)
            End If
            If (DV_D_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(DV_D_NAME,String)
            End If
            If (DV_D_POSITION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(DV_D_POSITION,String)
            End If
            If (DV_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(DV_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (DV_QR_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(DV_QR_CODE,Byte())
            End If
            If (DV_TYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(DV_TYPE,String)
            End If
            If (Original_DV_NO_SYSTEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DV_NO_SYSTEM")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_DV_NO_SYSTEM,String)
            End If
            If (Original_HDIVS_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_HDIVS_CODE,String)
            End If
            If (Original_EMP_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_EMP_NO,String)
            End If
            If (Original_DV_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_DV_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_DV_TIN_EMPLOYEE_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_DV_TIN_EMPLOYEE_NO,String)
            End If
            If (Original_DV_A_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_DV_A_NAME,String)
            End If
            If (Original_DV_A_POSITION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_DV_A_POSITION,String)
            End If
            If (Original_DV_C_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_DV_C_NAME,String)
            End If
            If (Original_DV_C_POSITION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_DV_C_POSITION,String)
            End If
            If (Original_DV_D_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_DV_D_NAME,String)
            End If
            If (Original_DV_D_POSITION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_DV_D_POSITION,String)
            End If
            If (Original_DV_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_DV_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_DV_TYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_DV_TYPE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal HDIVS_CODE As String,  _
                    ByVal EMP_NO As String,  _
                    ByVal DV_DATE As Global.System.Nullable(Of Date),  _
                    ByVal DV_PAYEE As String,  _
                    ByVal DV_TIN_EMPLOYEE_NO As String,  _
                    ByVal DV_ADDRESS As String,  _
                    ByVal DV_A_NAME As String,  _
                    ByVal DV_A_POSITION As String,  _
                    ByVal DV_C_NAME As String,  _
                    ByVal DV_C_POSITION As String,  _
                    ByVal DV_D_NAME As String,  _
                    ByVal DV_D_POSITION As String,  _
                    ByVal DV_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal DV_QR_CODE() As Byte,  _
                    ByVal DV_TYPE As String,  _
                    ByVal Original_DV_NO_SYSTEM As String,  _
                    ByVal Original_HDIVS_CODE As String,  _
                    ByVal Original_EMP_NO As String,  _
                    ByVal Original_DV_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_DV_TIN_EMPLOYEE_NO As String,  _
                    ByVal Original_DV_A_NAME As String,  _
                    ByVal Original_DV_A_POSITION As String,  _
                    ByVal Original_DV_C_NAME As String,  _
                    ByVal Original_DV_C_POSITION As String,  _
                    ByVal Original_DV_D_NAME As String,  _
                    ByVal Original_DV_D_POSITION As String,  _
                    ByVal Original_DV_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DV_TYPE As String) As Integer
            Return Me.Update(Original_DV_NO_SYSTEM, HDIVS_CODE, EMP_NO, DV_DATE, DV_PAYEE, DV_TIN_EMPLOYEE_NO, DV_ADDRESS, DV_A_NAME, DV_A_POSITION, DV_C_NAME, DV_C_POSITION, DV_D_NAME, DV_D_POSITION, DV_STATUS, DV_QR_CODE, DV_TYPE, Original_DV_NO_SYSTEM, Original_HDIVS_CODE, Original_EMP_NO, Original_DV_DATE, Original_DV_TIN_EMPLOYEE_NO, Original_DV_A_NAME, Original_DV_A_POSITION, Original_DV_C_NAME, Original_DV_C_POSITION, Original_DV_D_NAME, Original_DV_D_POSITION, Original_DV_STATUS, Original_DV_TYPE)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBLG3_REG_PARTICULARTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBLG3_REG_PARTICULAR"
            tableMapping.ColumnMappings.Add("PAR_NO", "PAR_NO")
            tableMapping.ColumnMappings.Add("BUS_NO_SYSTEM", "BUS_NO_SYSTEM")
            tableMapping.ColumnMappings.Add("PAR_PARTICULAR", "PAR_PARTICULAR")
            tableMapping.ColumnMappings.Add("PAR_MFO_PAP", "PAR_MFO_PAP")
            tableMapping.ColumnMappings.Add("PAR_UACS_OBJECT_CODE", "PAR_UACS_OBJECT_CODE")
            tableMapping.ColumnMappings.Add("PAR_AMOUNT", "PAR_AMOUNT")
            tableMapping.ColumnMappings.Add("PAR_ISDOLLAR", "PAR_ISDOLLAR")
            tableMapping.ColumnMappings.Add("PAR_STATUS", "PAR_STATUS")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBLG3_REG_PARTICULAR] WHERE (([PAR_NO] = @Original_PAR_NO) AND"& _ 
                " ((@IsNull_BUS_NO_SYSTEM = 1 AND [BUS_NO_SYSTEM] IS NULL) OR ([BUS_NO_SYSTEM] = "& _ 
                "@Original_BUS_NO_SYSTEM)) AND ((@IsNull_PAR_MFO_PAP = 1 AND [PAR_MFO_PAP] IS NUL"& _ 
                "L) OR ([PAR_MFO_PAP] = @Original_PAR_MFO_PAP)) AND ((@IsNull_PAR_UACS_OBJECT_COD"& _ 
                "E = 1 AND [PAR_UACS_OBJECT_CODE] IS NULL) OR ([PAR_UACS_OBJECT_CODE] = @Original"& _ 
                "_PAR_UACS_OBJECT_CODE)) AND ((@IsNull_PAR_AMOUNT = 1 AND [PAR_AMOUNT] IS NULL) O"& _ 
                "R ([PAR_AMOUNT] = @Original_PAR_AMOUNT)) AND ((@IsNull_PAR_ISDOLLAR = 1 AND [PAR"& _ 
                "_ISDOLLAR] IS NULL) OR ([PAR_ISDOLLAR] = @Original_PAR_ISDOLLAR)) AND ((@IsNull_"& _ 
                "PAR_STATUS = 1 AND [PAR_STATUS] IS NULL) OR ([PAR_STATUS] = @Original_PAR_STATUS"& _ 
                ")))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BUS_NO_SYSTEM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NO_SYSTEM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_NO_SYSTEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NO_SYSTEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_MFO_PAP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_MFO_PAP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_MFO_PAP", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_MFO_PAP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_UACS_OBJECT_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_UACS_OBJECT_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_UACS_OBJECT_CODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_UACS_OBJECT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_AMOUNT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_AMOUNT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_AMOUNT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PAR_AMOUNT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_ISDOLLAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ISDOLLAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_ISDOLLAR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ISDOLLAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBLG3_REG_PARTICULAR] ([BUS_NO_SYSTEM], [PAR_PARTICULAR], [PAR"& _ 
                "_MFO_PAP], [PAR_UACS_OBJECT_CODE], [PAR_AMOUNT], [PAR_ISDOLLAR], [PAR_STATUS]) V"& _ 
                "ALUES (@BUS_NO_SYSTEM, @PAR_PARTICULAR, @PAR_MFO_PAP, @PAR_UACS_OBJECT_CODE, @PA"& _ 
                "R_AMOUNT, @PAR_ISDOLLAR, @PAR_STATUS);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PAR_NO, BUS_NO_SYSTEM, PAR_PARTIC"& _ 
                "ULAR, PAR_MFO_PAP, PAR_UACS_OBJECT_CODE, PAR_AMOUNT, PAR_ISDOLLAR, PAR_STATUS FR"& _ 
                "OM TBLG3_REG_PARTICULAR WHERE (PAR_NO = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_NO_SYSTEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NO_SYSTEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_PARTICULAR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_PARTICULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_MFO_PAP", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_MFO_PAP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_UACS_OBJECT_CODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_UACS_OBJECT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_AMOUNT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PAR_AMOUNT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_ISDOLLAR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ISDOLLAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBLG3_REG_PARTICULAR] SET [BUS_NO_SYSTEM] = @BUS_NO_SYSTEM, [PAR_PA"& _ 
                "RTICULAR] = @PAR_PARTICULAR, [PAR_MFO_PAP] = @PAR_MFO_PAP, [PAR_UACS_OBJECT_CODE"& _ 
                "] = @PAR_UACS_OBJECT_CODE, [PAR_AMOUNT] = @PAR_AMOUNT, [PAR_ISDOLLAR] = @PAR_ISD"& _ 
                "OLLAR, [PAR_STATUS] = @PAR_STATUS WHERE (([PAR_NO] = @Original_PAR_NO) AND ((@Is"& _ 
                "Null_BUS_NO_SYSTEM = 1 AND [BUS_NO_SYSTEM] IS NULL) OR ([BUS_NO_SYSTEM] = @Origi"& _ 
                "nal_BUS_NO_SYSTEM)) AND ((@IsNull_PAR_MFO_PAP = 1 AND [PAR_MFO_PAP] IS NULL) OR "& _ 
                "([PAR_MFO_PAP] = @Original_PAR_MFO_PAP)) AND ((@IsNull_PAR_UACS_OBJECT_CODE = 1 "& _ 
                "AND [PAR_UACS_OBJECT_CODE] IS NULL) OR ([PAR_UACS_OBJECT_CODE] = @Original_PAR_U"& _ 
                "ACS_OBJECT_CODE)) AND ((@IsNull_PAR_AMOUNT = 1 AND [PAR_AMOUNT] IS NULL) OR ([PA"& _ 
                "R_AMOUNT] = @Original_PAR_AMOUNT)) AND ((@IsNull_PAR_ISDOLLAR = 1 AND [PAR_ISDOL"& _ 
                "LAR] IS NULL) OR ([PAR_ISDOLLAR] = @Original_PAR_ISDOLLAR)) AND ((@IsNull_PAR_ST"& _ 
                "ATUS = 1 AND [PAR_STATUS] IS NULL) OR ([PAR_STATUS] = @Original_PAR_STATUS)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "SELECT PAR_NO, BUS_NO_SYSTEM, PAR_PARTICULAR, PAR_MFO_PAP, PAR_UACS_OBJECT_CODE,"& _ 
                " PAR_AMOUNT, PAR_ISDOLLAR, PAR_STATUS FROM TBLG3_REG_PARTICULAR WHERE (PAR_NO = "& _ 
                "@PAR_NO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_NO_SYSTEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NO_SYSTEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_PARTICULAR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_PARTICULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_MFO_PAP", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_MFO_PAP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_UACS_OBJECT_CODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_UACS_OBJECT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_AMOUNT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PAR_AMOUNT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_ISDOLLAR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ISDOLLAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BUS_NO_SYSTEM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NO_SYSTEM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUS_NO_SYSTEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_NO_SYSTEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_MFO_PAP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_MFO_PAP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_MFO_PAP", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_MFO_PAP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_UACS_OBJECT_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_UACS_OBJECT_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_UACS_OBJECT_CODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_UACS_OBJECT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_AMOUNT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_AMOUNT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_AMOUNT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PAR_AMOUNT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_ISDOLLAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ISDOLLAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_ISDOLLAR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ISDOLLAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_NO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PAR_NO, BUS_NO_SYSTEM, PAR_PARTICULAR, PAR_MFO_PAP, PAR_UACS_OBJECT_CODE, "& _ 
                "PAR_AMOUNT, PAR_ISDOLLAR, PAR_STATUS FROM dbo.TBLG3_REG_PARTICULAR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.TBLG3_REG_PARTICULARDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.TBLG3_REG_PARTICULARDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.TBLG3_REG_PARTICULARDataTable = New DS_PROPERTYDB.TBLG3_REG_PARTICULARDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.TBLG3_REG_PARTICULARDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "TBLG3_REG_PARTICULAR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_PAR_NO As Integer, ByVal Original_BUS_NO_SYSTEM As String, ByVal Original_PAR_MFO_PAP As String, ByVal Original_PAR_UACS_OBJECT_CODE As String, ByVal Original_PAR_AMOUNT As Global.System.Nullable(Of Decimal), ByVal Original_PAR_ISDOLLAR As String, ByVal Original_PAR_STATUS As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PAR_NO,Integer)
            If (Original_BUS_NO_SYSTEM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_BUS_NO_SYSTEM,String)
            End If
            If (Original_PAR_MFO_PAP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_PAR_MFO_PAP,String)
            End If
            If (Original_PAR_UACS_OBJECT_CODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_PAR_UACS_OBJECT_CODE,String)
            End If
            If (Original_PAR_AMOUNT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_PAR_AMOUNT.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_ISDOLLAR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PAR_ISDOLLAR,String)
            End If
            If (Original_PAR_STATUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_PAR_STATUS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal BUS_NO_SYSTEM As String, ByVal PAR_PARTICULAR As String, ByVal PAR_MFO_PAP As String, ByVal PAR_UACS_OBJECT_CODE As String, ByVal PAR_AMOUNT As Global.System.Nullable(Of Decimal), ByVal PAR_ISDOLLAR As String, ByVal PAR_STATUS As Global.System.Nullable(Of Integer)) As Integer
            If (BUS_NO_SYSTEM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(BUS_NO_SYSTEM,String)
            End If
            If (PAR_PARTICULAR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PAR_PARTICULAR,String)
            End If
            If (PAR_MFO_PAP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PAR_MFO_PAP,String)
            End If
            If (PAR_UACS_OBJECT_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PAR_UACS_OBJECT_CODE,String)
            End If
            If (PAR_AMOUNT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PAR_AMOUNT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PAR_ISDOLLAR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PAR_ISDOLLAR,String)
            End If
            If (PAR_STATUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PAR_STATUS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal BUS_NO_SYSTEM As String, ByVal PAR_PARTICULAR As String, ByVal PAR_MFO_PAP As String, ByVal PAR_UACS_OBJECT_CODE As String, ByVal PAR_AMOUNT As Global.System.Nullable(Of Decimal), ByVal PAR_ISDOLLAR As String, ByVal PAR_STATUS As Global.System.Nullable(Of Integer), ByVal Original_PAR_NO As Integer, ByVal Original_BUS_NO_SYSTEM As String, ByVal Original_PAR_MFO_PAP As String, ByVal Original_PAR_UACS_OBJECT_CODE As String, ByVal Original_PAR_AMOUNT As Global.System.Nullable(Of Decimal), ByVal Original_PAR_ISDOLLAR As String, ByVal Original_PAR_STATUS As Global.System.Nullable(Of Integer), ByVal PAR_NO As Integer) As Integer
            If (BUS_NO_SYSTEM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(BUS_NO_SYSTEM,String)
            End If
            If (PAR_PARTICULAR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PAR_PARTICULAR,String)
            End If
            If (PAR_MFO_PAP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PAR_MFO_PAP,String)
            End If
            If (PAR_UACS_OBJECT_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PAR_UACS_OBJECT_CODE,String)
            End If
            If (PAR_AMOUNT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PAR_AMOUNT.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PAR_ISDOLLAR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PAR_ISDOLLAR,String)
            End If
            If (PAR_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PAR_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_PAR_NO,Integer)
            If (Original_BUS_NO_SYSTEM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_BUS_NO_SYSTEM,String)
            End If
            If (Original_PAR_MFO_PAP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_PAR_MFO_PAP,String)
            End If
            If (Original_PAR_UACS_OBJECT_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_PAR_UACS_OBJECT_CODE,String)
            End If
            If (Original_PAR_AMOUNT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_PAR_AMOUNT.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_ISDOLLAR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_PAR_ISDOLLAR,String)
            End If
            If (Original_PAR_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_PAR_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(PAR_NO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal BUS_NO_SYSTEM As String, ByVal PAR_PARTICULAR As String, ByVal PAR_MFO_PAP As String, ByVal PAR_UACS_OBJECT_CODE As String, ByVal PAR_AMOUNT As Global.System.Nullable(Of Decimal), ByVal PAR_ISDOLLAR As String, ByVal PAR_STATUS As Global.System.Nullable(Of Integer), ByVal Original_PAR_NO As Integer, ByVal Original_BUS_NO_SYSTEM As String, ByVal Original_PAR_MFO_PAP As String, ByVal Original_PAR_UACS_OBJECT_CODE As String, ByVal Original_PAR_AMOUNT As Global.System.Nullable(Of Decimal), ByVal Original_PAR_ISDOLLAR As String, ByVal Original_PAR_STATUS As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(BUS_NO_SYSTEM, PAR_PARTICULAR, PAR_MFO_PAP, PAR_UACS_OBJECT_CODE, PAR_AMOUNT, PAR_ISDOLLAR, PAR_STATUS, Original_PAR_NO, Original_BUS_NO_SYSTEM, Original_PAR_MFO_PAP, Original_PAR_UACS_OBJECT_CODE, Original_PAR_AMOUNT, Original_PAR_ISDOLLAR, Original_PAR_STATUS, Original_PAR_NO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBLG3_SIGNATORYTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBLG3_SIGNATORY"
            tableMapping.ColumnMappings.Add("SIG_NO", "SIG_NO")
            tableMapping.ColumnMappings.Add("SIG_IMAGE", "SIG_IMAGE")
            tableMapping.ColumnMappings.Add("SIG_LNAME", "SIG_LNAME")
            tableMapping.ColumnMappings.Add("SIG_FNAME", "SIG_FNAME")
            tableMapping.ColumnMappings.Add("SIG_MNAME", "SIG_MNAME")
            tableMapping.ColumnMappings.Add("SIG_POSITION", "SIG_POSITION")
            tableMapping.ColumnMappings.Add("SIG_OFFICE_ORDER", "SIG_OFFICE_ORDER")
            tableMapping.ColumnMappings.Add("SIG_POLICY", "SIG_POLICY")
            tableMapping.ColumnMappings.Add("SIG_AMOUNT", "SIG_AMOUNT")
            tableMapping.ColumnMappings.Add("SIG_STATUS", "SIG_STATUS")
            tableMapping.ColumnMappings.Add("HDIVS_CODE", "HDIVS_CODE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBLG3_SIGNATORY] WHERE (([SIG_NO] = @Original_SIG_NO) AND ((@I"& _ 
                "sNull_SIG_LNAME = 1 AND [SIG_LNAME] IS NULL) OR ([SIG_LNAME] = @Original_SIG_LNA"& _ 
                "ME)) AND ((@IsNull_SIG_FNAME = 1 AND [SIG_FNAME] IS NULL) OR ([SIG_FNAME] = @Ori"& _ 
                "ginal_SIG_FNAME)) AND ((@IsNull_SIG_MNAME = 1 AND [SIG_MNAME] IS NULL) OR ([SIG_"& _ 
                "MNAME] = @Original_SIG_MNAME)) AND ((@IsNull_SIG_POSITION = 1 AND [SIG_POSITION]"& _ 
                " IS NULL) OR ([SIG_POSITION] = @Original_SIG_POSITION)) AND ((@IsNull_SIG_OFFICE"& _ 
                "_ORDER = 1 AND [SIG_OFFICE_ORDER] IS NULL) OR ([SIG_OFFICE_ORDER] = @Original_SI"& _ 
                "G_OFFICE_ORDER)) AND ((@IsNull_SIG_POLICY = 1 AND [SIG_POLICY] IS NULL) OR ([SIG"& _ 
                "_POLICY] = @Original_SIG_POLICY)) AND ((@IsNull_SIG_AMOUNT = 1 AND [SIG_AMOUNT] "& _ 
                "IS NULL) OR ([SIG_AMOUNT] = @Original_SIG_AMOUNT)) AND ((@IsNull_SIG_STATUS = 1 "& _ 
                "AND [SIG_STATUS] IS NULL) OR ([SIG_STATUS] = @Original_SIG_STATUS)) AND ((@IsNul"& _ 
                "l_HDIVS_CODE = 1 AND [HDIVS_CODE] IS NULL) OR ([HDIVS_CODE] = @Original_HDIVS_CO"& _ 
                "DE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_LNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_LNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_LNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_LNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_FNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_FNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_FNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_FNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_MNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_MNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_MNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_MNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_POSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_POSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_OFFICE_ORDER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_OFFICE_ORDER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_OFFICE_ORDER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_OFFICE_ORDER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_POLICY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POLICY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_POLICY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POLICY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_AMOUNT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_AMOUNT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_AMOUNT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SIG_AMOUNT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HDIVS_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBLG3_SIGNATORY] ([SIG_IMAGE], [SIG_LNAME], [SIG_FNAME], [SIG_"& _ 
                "MNAME], [SIG_POSITION], [SIG_OFFICE_ORDER], [SIG_POLICY], [SIG_AMOUNT], [SIG_STA"& _ 
                "TUS], [HDIVS_CODE]) VALUES (@SIG_IMAGE, @SIG_LNAME, @SIG_FNAME, @SIG_MNAME, @SIG"& _ 
                "_POSITION, @SIG_OFFICE_ORDER, @SIG_POLICY, @SIG_AMOUNT, @SIG_STATUS, @HDIVS_CODE"& _ 
                ");"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SIG_NO, SIG_IMAGE, SIG_LNAME, SIG_FNAME, SIG_MNAME, SIG_POSITION, SIG"& _ 
                "_OFFICE_ORDER, SIG_POLICY, SIG_AMOUNT, SIG_STATUS, HDIVS_CODE FROM TBLG3_SIGNATO"& _ 
                "RY WHERE (SIG_NO = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_IMAGE", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_IMAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_LNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_LNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_FNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_FNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_MNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_MNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_POSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_OFFICE_ORDER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_OFFICE_ORDER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_POLICY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POLICY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_AMOUNT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SIG_AMOUNT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBLG3_SIGNATORY] SET [SIG_IMAGE] = @SIG_IMAGE, [SIG_LNAME] = @SIG_L"& _ 
                "NAME, [SIG_FNAME] = @SIG_FNAME, [SIG_MNAME] = @SIG_MNAME, [SIG_POSITION] = @SIG_"& _ 
                "POSITION, [SIG_OFFICE_ORDER] = @SIG_OFFICE_ORDER, [SIG_POLICY] = @SIG_POLICY, [S"& _ 
                "IG_AMOUNT] = @SIG_AMOUNT, [SIG_STATUS] = @SIG_STATUS, [HDIVS_CODE] = @HDIVS_CODE"& _ 
                " WHERE (([SIG_NO] = @Original_SIG_NO) AND ((@IsNull_SIG_LNAME = 1 AND [SIG_LNAME"& _ 
                "] IS NULL) OR ([SIG_LNAME] = @Original_SIG_LNAME)) AND ((@IsNull_SIG_FNAME = 1 A"& _ 
                "ND [SIG_FNAME] IS NULL) OR ([SIG_FNAME] = @Original_SIG_FNAME)) AND ((@IsNull_SI"& _ 
                "G_MNAME = 1 AND [SIG_MNAME] IS NULL) OR ([SIG_MNAME] = @Original_SIG_MNAME)) AND"& _ 
                " ((@IsNull_SIG_POSITION = 1 AND [SIG_POSITION] IS NULL) OR ([SIG_POSITION] = @Or"& _ 
                "iginal_SIG_POSITION)) AND ((@IsNull_SIG_OFFICE_ORDER = 1 AND [SIG_OFFICE_ORDER] "& _ 
                "IS NULL) OR ([SIG_OFFICE_ORDER] = @Original_SIG_OFFICE_ORDER)) AND ((@IsNull_SIG"& _ 
                "_POLICY = 1 AND [SIG_POLICY] IS NULL) OR ([SIG_POLICY] = @Original_SIG_POLICY)) "& _ 
                "AND ((@IsNull_SIG_AMOUNT = 1 AND [SIG_AMOUNT] IS NULL) OR ([SIG_AMOUNT] = @Origi"& _ 
                "nal_SIG_AMOUNT)) AND ((@IsNull_SIG_STATUS = 1 AND [SIG_STATUS] IS NULL) OR ([SIG"& _ 
                "_STATUS] = @Original_SIG_STATUS)) AND ((@IsNull_HDIVS_CODE = 1 AND [HDIVS_CODE] "& _ 
                "IS NULL) OR ([HDIVS_CODE] = @Original_HDIVS_CODE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SIG_NO, SIG_IMAGE, "& _ 
                "SIG_LNAME, SIG_FNAME, SIG_MNAME, SIG_POSITION, SIG_OFFICE_ORDER, SIG_POLICY, SIG"& _ 
                "_AMOUNT, SIG_STATUS, HDIVS_CODE FROM TBLG3_SIGNATORY WHERE (SIG_NO = @SIG_NO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_IMAGE", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_IMAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_LNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_LNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_FNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_FNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_MNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_MNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_POSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_OFFICE_ORDER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_OFFICE_ORDER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_POLICY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POLICY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_AMOUNT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SIG_AMOUNT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_LNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_LNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_LNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_LNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_FNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_FNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_FNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_FNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_MNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_MNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_MNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_MNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_POSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_POSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_OFFICE_ORDER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_OFFICE_ORDER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_OFFICE_ORDER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_OFFICE_ORDER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_POLICY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POLICY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_POLICY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POLICY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_AMOUNT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_AMOUNT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_AMOUNT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SIG_AMOUNT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HDIVS_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDIVS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDIVS_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_NO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SIG_NO, SIG_IMAGE, SIG_LNAME, SIG_FNAME, SIG_MNAME, SIG_POSITION, SIG_OFFI"& _ 
                "CE_ORDER, SIG_POLICY, SIG_AMOUNT, SIG_STATUS, HDIVS_CODE FROM dbo.TBLG3_SIGNATOR"& _ 
                "Y"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        SIG_NO, SIG_IMAGE, SIG_LNAME, SIG_FNAME, SIG_MNAME, SIG_POSITION, S"& _ 
                "IG_OFFICE_ORDER, SIG_POLICY, SIG_AMOUNT, SIG_STATUS, HDIVS_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM           "& _ 
                " TBLG3_SIGNATORY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (SIG_FNAME LIKE '%' + @fullname + '%') OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                   (SIG_MNAME LIKE '%' + @fullname + '%') OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       (SIG_LNAME LIKE '%' + @fullname + '%')"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fullname", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_FNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.TBLG3_SIGNATORYDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.TBLG3_SIGNATORYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.TBLG3_SIGNATORYDataTable = New DS_PROPERTYDB.TBLG3_SIGNATORYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DS_PROPERTYDB.TBLG3_SIGNATORYDataTable, ByVal fullname As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (fullname Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fullname,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataFullName(ByVal fullname As String) As DS_PROPERTYDB.TBLG3_SIGNATORYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (fullname Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fullname,String)
            End If
            Dim dataTable As DS_PROPERTYDB.TBLG3_SIGNATORYDataTable = New DS_PROPERTYDB.TBLG3_SIGNATORYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.TBLG3_SIGNATORYDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "TBLG3_SIGNATORY")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SIG_NO As Integer, ByVal Original_SIG_LNAME As String, ByVal Original_SIG_FNAME As String, ByVal Original_SIG_MNAME As String, ByVal Original_SIG_POSITION As String, ByVal Original_SIG_OFFICE_ORDER As String, ByVal Original_SIG_POLICY As Global.System.Nullable(Of Integer), ByVal Original_SIG_AMOUNT As Global.System.Nullable(Of Decimal), ByVal Original_SIG_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HDIVS_CODE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SIG_NO,Integer)
            If (Original_SIG_LNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_SIG_LNAME,String)
            End If
            If (Original_SIG_FNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SIG_FNAME,String)
            End If
            If (Original_SIG_MNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_SIG_MNAME,String)
            End If
            If (Original_SIG_POSITION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_SIG_POSITION,String)
            End If
            If (Original_SIG_OFFICE_ORDER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_SIG_OFFICE_ORDER,String)
            End If
            If (Original_SIG_POLICY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_SIG_POLICY.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_SIG_AMOUNT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_SIG_AMOUNT.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_SIG_STATUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_SIG_STATUS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_HDIVS_CODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_HDIVS_CODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SIG_IMAGE() As Byte, ByVal SIG_LNAME As String, ByVal SIG_FNAME As String, ByVal SIG_MNAME As String, ByVal SIG_POSITION As String, ByVal SIG_OFFICE_ORDER As String, ByVal SIG_POLICY As Global.System.Nullable(Of Integer), ByVal SIG_AMOUNT As Global.System.Nullable(Of Decimal), ByVal SIG_STATUS As Global.System.Nullable(Of Integer), ByVal HDIVS_CODE As String) As Integer
            If (SIG_IMAGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SIG_IMAGE,Byte())
            End If
            If (SIG_LNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SIG_LNAME,String)
            End If
            If (SIG_FNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SIG_FNAME,String)
            End If
            If (SIG_MNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SIG_MNAME,String)
            End If
            If (SIG_POSITION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(SIG_POSITION,String)
            End If
            If (SIG_OFFICE_ORDER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(SIG_OFFICE_ORDER,String)
            End If
            If (SIG_POLICY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(SIG_POLICY.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (SIG_AMOUNT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SIG_AMOUNT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (SIG_STATUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SIG_STATUS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (HDIVS_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(HDIVS_CODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SIG_IMAGE() As Byte,  _
                    ByVal SIG_LNAME As String,  _
                    ByVal SIG_FNAME As String,  _
                    ByVal SIG_MNAME As String,  _
                    ByVal SIG_POSITION As String,  _
                    ByVal SIG_OFFICE_ORDER As String,  _
                    ByVal SIG_POLICY As Global.System.Nullable(Of Integer),  _
                    ByVal SIG_AMOUNT As Global.System.Nullable(Of Decimal),  _
                    ByVal SIG_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal HDIVS_CODE As String,  _
                    ByVal Original_SIG_NO As Integer,  _
                    ByVal Original_SIG_LNAME As String,  _
                    ByVal Original_SIG_FNAME As String,  _
                    ByVal Original_SIG_MNAME As String,  _
                    ByVal Original_SIG_POSITION As String,  _
                    ByVal Original_SIG_OFFICE_ORDER As String,  _
                    ByVal Original_SIG_POLICY As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SIG_AMOUNT As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SIG_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HDIVS_CODE As String,  _
                    ByVal SIG_NO As Integer) As Integer
            If (SIG_IMAGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SIG_IMAGE,Byte())
            End If
            If (SIG_LNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SIG_LNAME,String)
            End If
            If (SIG_FNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SIG_FNAME,String)
            End If
            If (SIG_MNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SIG_MNAME,String)
            End If
            If (SIG_POSITION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(SIG_POSITION,String)
            End If
            If (SIG_OFFICE_ORDER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SIG_OFFICE_ORDER,String)
            End If
            If (SIG_POLICY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(SIG_POLICY.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (SIG_AMOUNT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SIG_AMOUNT.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (SIG_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(SIG_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (HDIVS_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(HDIVS_CODE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_SIG_NO,Integer)
            If (Original_SIG_LNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_SIG_LNAME,String)
            End If
            If (Original_SIG_FNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_SIG_FNAME,String)
            End If
            If (Original_SIG_MNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_SIG_MNAME,String)
            End If
            If (Original_SIG_POSITION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_SIG_POSITION,String)
            End If
            If (Original_SIG_OFFICE_ORDER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_SIG_OFFICE_ORDER,String)
            End If
            If (Original_SIG_POLICY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_SIG_POLICY.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_SIG_AMOUNT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_SIG_AMOUNT.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_SIG_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_SIG_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_HDIVS_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_HDIVS_CODE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(SIG_NO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SIG_IMAGE() As Byte,  _
                    ByVal SIG_LNAME As String,  _
                    ByVal SIG_FNAME As String,  _
                    ByVal SIG_MNAME As String,  _
                    ByVal SIG_POSITION As String,  _
                    ByVal SIG_OFFICE_ORDER As String,  _
                    ByVal SIG_POLICY As Global.System.Nullable(Of Integer),  _
                    ByVal SIG_AMOUNT As Global.System.Nullable(Of Decimal),  _
                    ByVal SIG_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal HDIVS_CODE As String,  _
                    ByVal Original_SIG_NO As Integer,  _
                    ByVal Original_SIG_LNAME As String,  _
                    ByVal Original_SIG_FNAME As String,  _
                    ByVal Original_SIG_MNAME As String,  _
                    ByVal Original_SIG_POSITION As String,  _
                    ByVal Original_SIG_OFFICE_ORDER As String,  _
                    ByVal Original_SIG_POLICY As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SIG_AMOUNT As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SIG_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HDIVS_CODE As String) As Integer
            Return Me.Update(SIG_IMAGE, SIG_LNAME, SIG_FNAME, SIG_MNAME, SIG_POSITION, SIG_OFFICE_ORDER, SIG_POLICY, SIG_AMOUNT, SIG_STATUS, HDIVS_CODE, Original_SIG_NO, Original_SIG_LNAME, Original_SIG_FNAME, Original_SIG_MNAME, Original_SIG_POSITION, Original_SIG_OFFICE_ORDER, Original_SIG_POLICY, Original_SIG_AMOUNT, Original_SIG_STATUS, Original_HDIVS_CODE, Original_SIG_NO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBLG3_SIGNATORY_TYPETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBLG3_SIGNATORY_TYPE"
            tableMapping.ColumnMappings.Add("SIG_TY_NO", "SIG_TY_NO")
            tableMapping.ColumnMappings.Add("SIG_TY_DESCRIPTON", "SIG_TY_DESCRIPTON")
            tableMapping.ColumnMappings.Add("SIG_TY_FORM", "SIG_TY_FORM")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBLG3_SIGNATORY_TYPE] ([SIG_TY_NO], [SIG_TY_DESCRIPTON], [SIG_"& _ 
                "TY_FORM]) VALUES (@SIG_TY_NO, @SIG_TY_DESCRIPTON, @SIG_TY_FORM)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_TY_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_TY_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_TY_DESCRIPTON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_TY_DESCRIPTON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_TY_FORM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_TY_FORM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SIG_TY_NO, SIG_TY_DESCRIPTON, SIG_TY_FORM FROM dbo.TBLG3_SIGNATORY_TYPE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.TBLG3_SIGNATORY_TYPEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.TBLG3_SIGNATORY_TYPEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.TBLG3_SIGNATORY_TYPEDataTable = New DS_PROPERTYDB.TBLG3_SIGNATORY_TYPEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.TBLG3_SIGNATORY_TYPEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "TBLG3_SIGNATORY_TYPE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SIG_TY_NO As Global.System.Nullable(Of Integer), ByVal SIG_TY_DESCRIPTON As String, ByVal SIG_TY_FORM As String) As Integer
            If (SIG_TY_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SIG_TY_NO.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SIG_TY_DESCRIPTON Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SIG_TY_DESCRIPTON,String)
            End If
            If (SIG_TY_FORM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SIG_TY_FORM,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBLG3_UNITSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBLG3_UNITS"
            tableMapping.ColumnMappings.Add("UN_NO", "UN_NO")
            tableMapping.ColumnMappings.Add("UN_DESCRIPTION", "UN_DESCRIPTION")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBLG3_UNITS] WHERE (([UN_NO] = @Original_UN_NO) AND ((@IsNull_"& _ 
                "UN_DESCRIPTION = 1 AND [UN_DESCRIPTION] IS NULL) OR ([UN_DESCRIPTION] = @Origina"& _ 
                "l_UN_DESCRIPTION)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UN_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UN_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UN_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBLG3_UNITS] ([UN_DESCRIPTION]) VALUES (@UN_DESCRIPTION);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SEL"& _ 
                "ECT UN_NO, UN_DESCRIPTION FROM TBLG3_UNITS WHERE (UN_NO = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UN_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBLG3_UNITS] SET [UN_DESCRIPTION] = @UN_DESCRIPTION WHERE (([UN_NO]"& _ 
                " = @Original_UN_NO) AND ((@IsNull_UN_DESCRIPTION = 1 AND [UN_DESCRIPTION] IS NUL"& _ 
                "L) OR ([UN_DESCRIPTION] = @Original_UN_DESCRIPTION)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT UN_NO, UN_DESCRIP"& _ 
                "TION FROM TBLG3_UNITS WHERE (UN_NO = @UN_NO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UN_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UN_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UN_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UN_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UN_NO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "UN_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT UN_NO, UN_DESCRIPTION FROM dbo.TBLG3_UNITS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.TBLG3_UNITSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.TBLG3_UNITSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.TBLG3_UNITSDataTable = New DS_PROPERTYDB.TBLG3_UNITSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.TBLG3_UNITSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "TBLG3_UNITS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_UN_NO As Integer, ByVal Original_UN_DESCRIPTION As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_UN_NO,Integer)
            If (Original_UN_DESCRIPTION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_UN_DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal UN_DESCRIPTION As String) As Integer
            If (UN_DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(UN_DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal UN_DESCRIPTION As String, ByVal Original_UN_NO As Integer, ByVal Original_UN_DESCRIPTION As String, ByVal UN_NO As Integer) As Integer
            If (UN_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(UN_DESCRIPTION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_UN_NO,Integer)
            If (Original_UN_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_UN_DESCRIPTION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(UN_NO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal UN_DESCRIPTION As String, ByVal Original_UN_NO As Integer, ByVal Original_UN_DESCRIPTION As String) As Integer
            Return Me.Update(UN_DESCRIPTION, Original_UN_NO, Original_UN_DESCRIPTION, Original_UN_NO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_PURCHASEREQUESTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_PURCHASEREQUEST"
            tableMapping.ColumnMappings.Add("PR_PRNO", "PR_PRNO")
            tableMapping.ColumnMappings.Add("PR_DATEREQUESTED", "PR_DATEREQUESTED")
            tableMapping.ColumnMappings.Add("PR_APPCODE", "PR_APPCODE")
            tableMapping.ColumnMappings.Add("PR_PURPOSE", "PR_PURPOSE")
            tableMapping.ColumnMappings.Add("PR_STATUS", "PR_STATUS")
            tableMapping.ColumnMappings.Add("PR_REQUESTEDBY", "PR_REQUESTEDBY")
            tableMapping.ColumnMappings.Add("PR_REQUESTEDBYPOSITION", "PR_REQUESTEDBYPOSITION")
            tableMapping.ColumnMappings.Add("PR_APPROVEDBY", "PR_APPROVEDBY")
            tableMapping.ColumnMappings.Add("PR_APPROVEDBYPOSITION", "PR_APPROVEDBYPOSITION")
            tableMapping.ColumnMappings.Add("PR_CERTIFIEDBY", "PR_CERTIFIEDBY")
            tableMapping.ColumnMappings.Add("PR_CERTIFIEDBYPOSITION", "PR_CERTIFIEDBYPOSITION")
            tableMapping.ColumnMappings.Add("PR_NOTEDBY", "PR_NOTEDBY")
            tableMapping.ColumnMappings.Add("PR_NOTEDBYPOSITION", "PR_NOTEDBYPOSITION")
            tableMapping.ColumnMappings.Add("PR_SUBMITTEDBY", "PR_SUBMITTEDBY")
            tableMapping.ColumnMappings.Add("PR_DEPARTMENT", "PR_DEPARTMENT")
            tableMapping.ColumnMappings.Add("PR_DIVISION", "PR_DIVISION")
            tableMapping.ColumnMappings.Add("CREATED_DATE", "CREATED_DATE")
            tableMapping.ColumnMappings.Add("PR_UPDATEDBY", "PR_UPDATEDBY")
            tableMapping.ColumnMappings.Add("PR_ISDOLLAR", "PR_ISDOLLAR")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_PURCHASEREQUEST] WHERE (([PR_DATEREQUESTED] = @Original_PR_DAT"& _ 
                "EREQUESTED) AND ((@IsNull_PR_APPCODE = 1 AND [PR_APPCODE] IS NULL) OR ([PR_APPCO"& _ 
                "DE] = @Original_PR_APPCODE)) AND ((@IsNull_PR_PURPOSE = 1 AND [PR_PURPOSE] IS NU"& _ 
                "LL) OR ([PR_PURPOSE] = @Original_PR_PURPOSE)) AND ([PR_STATUS] = @Original_PR_ST"& _ 
                "ATUS) AND ([PR_REQUESTEDBY] = @Original_PR_REQUESTEDBY) AND ((@IsNull_PR_REQUEST"& _ 
                "EDBYPOSITION = 1 AND [PR_REQUESTEDBYPOSITION] IS NULL) OR ([PR_REQUESTEDBYPOSITI"& _ 
                "ON] = @Original_PR_REQUESTEDBYPOSITION)) AND ((@IsNull_PR_APPROVEDBY = 1 AND [PR"& _ 
                "_APPROVEDBY] IS NULL) OR ([PR_APPROVEDBY] = @Original_PR_APPROVEDBY)) AND ((@IsN"& _ 
                "ull_PR_APPROVEDBYPOSITION = 1 AND [PR_APPROVEDBYPOSITION] IS NULL) OR ([PR_APPRO"& _ 
                "VEDBYPOSITION] = @Original_PR_APPROVEDBYPOSITION)) AND ((@IsNull_PR_CERTIFIEDBY "& _ 
                "= 1 AND [PR_CERTIFIEDBY] IS NULL) OR ([PR_CERTIFIEDBY] = @Original_PR_CERTIFIEDB"& _ 
                "Y)) AND ((@IsNull_PR_CERTIFIEDBYPOSITION = 1 AND [PR_CERTIFIEDBYPOSITION] IS NUL"& _ 
                "L) OR ([PR_CERTIFIEDBYPOSITION] = @Original_PR_CERTIFIEDBYPOSITION)) AND ((@IsNu"& _ 
                "ll_PR_NOTEDBY = 1 AND [PR_NOTEDBY] IS NULL) OR ([PR_NOTEDBY] = @Original_PR_NOTE"& _ 
                "DBY)) AND ((@IsNull_PR_NOTEDBYPOSITION = 1 AND [PR_NOTEDBYPOSITION] IS NULL) OR "& _ 
                "([PR_NOTEDBYPOSITION] = @Original_PR_NOTEDBYPOSITION)) AND ((@IsNull_PR_SUBMITTE"& _ 
                "DBY = 1 AND [PR_SUBMITTEDBY] IS NULL) OR ([PR_SUBMITTEDBY] = @Original_PR_SUBMIT"& _ 
                "TEDBY)) AND ((@IsNull_PR_DEPARTMENT = 1 AND [PR_DEPARTMENT] IS NULL) OR ([PR_DEP"& _ 
                "ARTMENT] = @Original_PR_DEPARTMENT)) AND ((@IsNull_PR_DIVISION = 1 AND [PR_DIVIS"& _ 
                "ION] IS NULL) OR ([PR_DIVISION] = @Original_PR_DIVISION)) AND ((@IsNull_CREATED_"& _ 
                "DATE = 1 AND [CREATED_DATE] IS NULL) OR ([CREATED_DATE] = @Original_CREATED_DATE"& _ 
                ")) AND ([PR_PRNO] = @Original_PR_PRNO) AND ((@IsNull_PR_UPDATEDBY = 1 AND [PR_UP"& _ 
                "DATEDBY] IS NULL) OR ([PR_UPDATEDBY] = @Original_PR_UPDATEDBY)) AND ([PR_ISDOLLA"& _ 
                "R] = @Original_PR_ISDOLLAR))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_DATEREQUESTED", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DATEREQUESTED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_APPCODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPCODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_APPCODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPCODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_PURPOSE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PURPOSE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PURPOSE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_STATUS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_REQUESTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_REQUESTEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_REQUESTEDBYPOSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_REQUESTEDBYPOSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_REQUESTEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_REQUESTEDBYPOSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_APPROVEDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPROVEDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_APPROVEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPROVEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_APPROVEDBYPOSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPROVEDBYPOSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_APPROVEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPROVEDBYPOSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_CERTIFIEDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_CERTIFIEDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_CERTIFIEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_CERTIFIEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_CERTIFIEDBYPOSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_CERTIFIEDBYPOSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_CERTIFIEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_CERTIFIEDBYPOSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_NOTEDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_NOTEDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_NOTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_NOTEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_NOTEDBYPOSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_NOTEDBYPOSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_NOTEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_NOTEDBYPOSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_SUBMITTEDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_SUBMITTEDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_SUBMITTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_SUBMITTEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_DEPARTMENT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DEPARTMENT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_DEPARTMENT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DEPARTMENT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_DIVISION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DIVISION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_DIVISION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DIVISION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_UPDATEDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_UPDATEDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_UPDATEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_UPDATEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_ISDOLLAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_ISDOLLAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_PURCHASEREQUEST] ([PR_DATEREQUESTED], [PR_APPCODE], [PR_PURPOS"& _ 
                "E], [PR_STATUS], [PR_REQUESTEDBY], [PR_REQUESTEDBYPOSITION], [PR_APPROVEDBY], [P"& _ 
                "R_APPROVEDBYPOSITION], [PR_CERTIFIEDBY], [PR_CERTIFIEDBYPOSITION], [PR_NOTEDBY],"& _ 
                " [PR_NOTEDBYPOSITION], [PR_SUBMITTEDBY], [PR_DEPARTMENT], [PR_DIVISION], [CREATE"& _ 
                "D_DATE], [PR_PRNO], [PR_UPDATEDBY], [PR_ISDOLLAR]) VALUES (@PR_DATEREQUESTED, @P"& _ 
                "R_APPCODE, @PR_PURPOSE, @PR_STATUS, @PR_REQUESTEDBY, @PR_REQUESTEDBYPOSITION, @P"& _ 
                "R_APPROVEDBY, @PR_APPROVEDBYPOSITION, @PR_CERTIFIEDBY, @PR_CERTIFIEDBYPOSITION, "& _ 
                "@PR_NOTEDBY, @PR_NOTEDBYPOSITION, @PR_SUBMITTEDBY, @PR_DEPARTMENT, @PR_DIVISION,"& _ 
                " @CREATED_DATE, @PR_PRNO, @PR_UPDATEDBY, @PR_ISDOLLAR);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PR_DATEREQUESTED"& _ 
                ", PR_APPCODE, PR_PURPOSE, PR_STATUS, PR_REQUESTEDBY, PR_REQUESTEDBYPOSITION, PR_"& _ 
                "APPROVEDBY, PR_APPROVEDBYPOSITION, PR_CERTIFIEDBY, PR_CERTIFIEDBYPOSITION, PR_NO"& _ 
                "TEDBY, PR_NOTEDBYPOSITION, PR_SUBMITTEDBY, PR_DEPARTMENT, PR_DIVISION, CREATED_D"& _ 
                "ATE, PR_PRNO, PR_UPDATEDBY, PR_ISDOLLAR FROM tblM4_PURCHASEREQUEST WHERE (PR_PRN"& _ 
                "O = @PR_PRNO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_DATEREQUESTED", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DATEREQUESTED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_APPCODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PURPOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_STATUS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_REQUESTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_REQUESTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_REQUESTEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_REQUESTEDBYPOSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_APPROVEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPROVEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_APPROVEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPROVEDBYPOSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_CERTIFIEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_CERTIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_CERTIFIEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_CERTIFIEDBYPOSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_NOTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_NOTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_NOTEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_NOTEDBYPOSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_SUBMITTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_SUBMITTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_DEPARTMENT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DEPARTMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_DIVISION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DIVISION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_UPDATEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_UPDATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_ISDOLLAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_ISDOLLAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_PURCHASEREQUEST] SET [PR_DATEREQUESTED] = @PR_DATEREQUESTED, [PR_AP"& _ 
                "PCODE] = @PR_APPCODE, [PR_PURPOSE] = @PR_PURPOSE, [PR_STATUS] = @PR_STATUS, [PR_"& _ 
                "REQUESTEDBY] = @PR_REQUESTEDBY, [PR_REQUESTEDBYPOSITION] = @PR_REQUESTEDBYPOSITI"& _ 
                "ON, [PR_APPROVEDBY] = @PR_APPROVEDBY, [PR_APPROVEDBYPOSITION] = @PR_APPROVEDBYPO"& _ 
                "SITION, [PR_CERTIFIEDBY] = @PR_CERTIFIEDBY, [PR_CERTIFIEDBYPOSITION] = @PR_CERTI"& _ 
                "FIEDBYPOSITION, [PR_NOTEDBY] = @PR_NOTEDBY, [PR_NOTEDBYPOSITION] = @PR_NOTEDBYPO"& _ 
                "SITION, [PR_SUBMITTEDBY] = @PR_SUBMITTEDBY, [PR_DEPARTMENT] = @PR_DEPARTMENT, [P"& _ 
                "R_DIVISION] = @PR_DIVISION, [CREATED_DATE] = @CREATED_DATE, [PR_PRNO] = @PR_PRNO"& _ 
                ", [PR_UPDATEDBY] = @PR_UPDATEDBY, [PR_ISDOLLAR] = @PR_ISDOLLAR WHERE (([PR_DATER"& _ 
                "EQUESTED] = @Original_PR_DATEREQUESTED) AND ((@IsNull_PR_APPCODE = 1 AND [PR_APP"& _ 
                "CODE] IS NULL) OR ([PR_APPCODE] = @Original_PR_APPCODE)) AND ((@IsNull_PR_PURPOS"& _ 
                "E = 1 AND [PR_PURPOSE] IS NULL) OR ([PR_PURPOSE] = @Original_PR_PURPOSE)) AND (["& _ 
                "PR_STATUS] = @Original_PR_STATUS) AND ([PR_REQUESTEDBY] = @Original_PR_REQUESTED"& _ 
                "BY) AND ((@IsNull_PR_REQUESTEDBYPOSITION = 1 AND [PR_REQUESTEDBYPOSITION] IS NUL"& _ 
                "L) OR ([PR_REQUESTEDBYPOSITION] = @Original_PR_REQUESTEDBYPOSITION)) AND ((@IsNu"& _ 
                "ll_PR_APPROVEDBY = 1 AND [PR_APPROVEDBY] IS NULL) OR ([PR_APPROVEDBY] = @Origina"& _ 
                "l_PR_APPROVEDBY)) AND ((@IsNull_PR_APPROVEDBYPOSITION = 1 AND [PR_APPROVEDBYPOSI"& _ 
                "TION] IS NULL) OR ([PR_APPROVEDBYPOSITION] = @Original_PR_APPROVEDBYPOSITION)) A"& _ 
                "ND ((@IsNull_PR_CERTIFIEDBY = 1 AND [PR_CERTIFIEDBY] IS NULL) OR ([PR_CERTIFIEDB"& _ 
                "Y] = @Original_PR_CERTIFIEDBY)) AND ((@IsNull_PR_CERTIFIEDBYPOSITION = 1 AND [PR"& _ 
                "_CERTIFIEDBYPOSITION] IS NULL) OR ([PR_CERTIFIEDBYPOSITION] = @Original_PR_CERTI"& _ 
                "FIEDBYPOSITION)) AND ((@IsNull_PR_NOTEDBY = 1 AND [PR_NOTEDBY] IS NULL) OR ([PR_"& _ 
                "NOTEDBY] = @Original_PR_NOTEDBY)) AND ((@IsNull_PR_NOTEDBYPOSITION = 1 AND [PR_N"& _ 
                "OTEDBYPOSITION] IS NULL) OR ([PR_NOTEDBYPOSITION] = @Original_PR_NOTEDBYPOSITION"& _ 
                ")) AND ((@IsNull_PR_SUBMITTEDBY = 1 AND [PR_SUBMITTEDBY] IS NULL) OR ([PR_SUBMIT"& _ 
                "TEDBY] = @Original_PR_SUBMITTEDBY)) AND ((@IsNull_PR_DEPARTMENT = 1 AND [PR_DEPA"& _ 
                "RTMENT] IS NULL) OR ([PR_DEPARTMENT] = @Original_PR_DEPARTMENT)) AND ((@IsNull_P"& _ 
                "R_DIVISION = 1 AND [PR_DIVISION] IS NULL) OR ([PR_DIVISION] = @Original_PR_DIVIS"& _ 
                "ION)) AND ((@IsNull_CREATED_DATE = 1 AND [CREATED_DATE] IS NULL) OR ([CREATED_DA"& _ 
                "TE] = @Original_CREATED_DATE)) AND ([PR_PRNO] = @Original_PR_PRNO) AND ((@IsNull"& _ 
                "_PR_UPDATEDBY = 1 AND [PR_UPDATEDBY] IS NULL) OR ([PR_UPDATEDBY] = @Original_PR_"& _ 
                "UPDATEDBY)) AND ([PR_ISDOLLAR] = @Original_PR_ISDOLLAR));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PR_DATEREQUEST"& _ 
                "ED, PR_APPCODE, PR_PURPOSE, PR_STATUS, PR_REQUESTEDBY, PR_REQUESTEDBYPOSITION, P"& _ 
                "R_APPROVEDBY, PR_APPROVEDBYPOSITION, PR_CERTIFIEDBY, PR_CERTIFIEDBYPOSITION, PR_"& _ 
                "NOTEDBY, PR_NOTEDBYPOSITION, PR_SUBMITTEDBY, PR_DEPARTMENT, PR_DIVISION, CREATED"& _ 
                "_DATE, PR_PRNO, PR_UPDATEDBY, PR_ISDOLLAR FROM tblM4_PURCHASEREQUEST WHERE (PR_P"& _ 
                "RNO = @PR_PRNO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_DATEREQUESTED", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DATEREQUESTED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_APPCODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PURPOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_STATUS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_REQUESTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_REQUESTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_REQUESTEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_REQUESTEDBYPOSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_APPROVEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPROVEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_APPROVEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPROVEDBYPOSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_CERTIFIEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_CERTIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_CERTIFIEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_CERTIFIEDBYPOSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_NOTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_NOTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_NOTEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_NOTEDBYPOSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_SUBMITTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_SUBMITTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_DEPARTMENT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DEPARTMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_DIVISION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DIVISION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_UPDATEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_UPDATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_ISDOLLAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_ISDOLLAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_DATEREQUESTED", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DATEREQUESTED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_APPCODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPCODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_APPCODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPCODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_PURPOSE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PURPOSE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PURPOSE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_STATUS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_REQUESTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_REQUESTEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_REQUESTEDBYPOSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_REQUESTEDBYPOSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_REQUESTEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_REQUESTEDBYPOSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_APPROVEDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPROVEDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_APPROVEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPROVEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_APPROVEDBYPOSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPROVEDBYPOSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_APPROVEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPROVEDBYPOSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_CERTIFIEDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_CERTIFIEDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_CERTIFIEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_CERTIFIEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_CERTIFIEDBYPOSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_CERTIFIEDBYPOSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_CERTIFIEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_CERTIFIEDBYPOSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_NOTEDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_NOTEDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_NOTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_NOTEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_NOTEDBYPOSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_NOTEDBYPOSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_NOTEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_NOTEDBYPOSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_SUBMITTEDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_SUBMITTEDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_SUBMITTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_SUBMITTEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_DEPARTMENT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DEPARTMENT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_DEPARTMENT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DEPARTMENT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_DIVISION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DIVISION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_DIVISION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DIVISION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PR_UPDATEDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_UPDATEDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_UPDATEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_UPDATEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_ISDOLLAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_ISDOLLAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(7) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        PR_DATEREQUESTED, PR_APPCODE, PR_PURPOSE, PR_STATUS, PR_REQUESTEDBY"& _ 
                ", PR_REQUESTEDBYPOSITION, PR_APPROVEDBY, PR_APPROVEDBYPOSITION, PR_CERTIFIEDBY, "& _ 
                "PR_CERTIFIEDBYPOSITION, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PR_NOTEDBY, PR_NOTEDBYPOSITIO"& _ 
                "N, PR_SUBMITTEDBY, PR_DEPARTMENT, PR_DIVISION, CREATED_DATE, PR_PRNO, PR_UPDATED"& _ 
                "BY, PR_ISDOLLAR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_PURCHASEREQUEST"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        CREATED_DATE, PR_APPCODE, PR_APPROVEDBY, PR_APPROVEDBYPOSITION, PR_"& _ 
                "CERTIFIEDBY, PR_CERTIFIEDBYPOSITION, PR_DATEREQUESTED, PR_DEPARTMENT, PR_DIVISIO"& _ 
                "N, PR_ISDOLLAR, PR_NOTEDBY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PR_NOTEDBYPOSITION, PR_PR"& _ 
                "NO, PR_PURPOSE, PR_REQUESTEDBY, PR_REQUESTEDBYPOSITION, PR_STATUS, PR_SUBMITTEDB"& _ 
                "Y, PR_UPDATEDBY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_PURCHASEREQUEST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PR_SUBMITT"& _ 
                "EDBY = @PR_SUBMITTEDBY) AND (PR_PRNO LIKE '%' + @PR_PRNO + '%')"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_SUBMITTEDBY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_SUBMITTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        CREATED_DATE, PR_APPCODE, PR_APPROVEDBY, PR_APPROVEDBYPOSITION, PR_"& _ 
                "CERTIFIEDBY, PR_CERTIFIEDBYPOSITION, PR_DATEREQUESTED, PR_DEPARTMENT, PR_DIVISIO"& _ 
                "N, PR_ISDOLLAR, PR_NOTEDBY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PR_NOTEDBYPOSITION, PR_PR"& _ 
                "NO, PR_PURPOSE, PR_REQUESTEDBY, PR_REQUESTEDBYPOSITION, PR_STATUS, PR_SUBMITTEDB"& _ 
                "Y, PR_UPDATEDBY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_PURCHASEREQUEST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PR_PRNO = "& _ 
                "@PR_PRNO)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        CREATED_DATE, PR_APPCODE, PR_APPROVEDBY, PR_APPROVEDBYPOSITION, PR_"& _ 
                "CERTIFIEDBY, PR_CERTIFIEDBYPOSITION, PR_DATEREQUESTED, PR_DEPARTMENT, PR_DIVISIO"& _ 
                "N, PR_ISDOLLAR, PR_NOTEDBY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PR_NOTEDBYPOSITION, PR_PR"& _ 
                "NO, PR_PURPOSE, PR_REQUESTEDBY, PR_REQUESTEDBYPOSITION, PR_STATUS, PR_SUBMITTEDB"& _ 
                "Y, PR_UPDATEDBY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_PURCHASEREQUEST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PR_STATUS "& _ 
                "= @PR_STATUS) AND (PR_PRNO LIKE '%' + @PR_PRNO + '%')"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_STATUS", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT        CREATED_DATE, PR_APPCODE, PR_APPROVEDBY, PR_APPROVEDBYPOSITION, PR_"& _ 
                "CERTIFIEDBY, PR_CERTIFIEDBYPOSITION, PR_DATEREQUESTED, PR_DEPARTMENT, PR_DIVISIO"& _ 
                "N, PR_ISDOLLAR, PR_NOTEDBY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PR_NOTEDBYPOSITION, PR_PR"& _ 
                "NO, PR_PURPOSE, PR_REQUESTEDBY, PR_REQUESTEDBYPOSITION, PR_STATUS, PR_SUBMITTEDB"& _ 
                "Y, PR_UPDATEDBY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_PURCHASEREQUEST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PR_SUBMITT"& _ 
                "EDBY = @PR_SUBMITTEDBY) AND (PR_STATUS = @PR_STATUS) AND (PR_PRNO LIKE '%' + @PR"& _ 
                "_PRNO + '%')"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_SUBMITTEDBY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_SUBMITTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_STATUS", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        CREATED_DATE, PR_APPCODE, PR_APPROVEDBY, PR_APPROVEDBYPOSITION, PR_"& _ 
                "CERTIFIEDBY, PR_CERTIFIEDBYPOSITION, PR_DATEREQUESTED, PR_DEPARTMENT, PR_DIVISIO"& _ 
                "N, PR_ISDOLLAR, PR_NOTEDBY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PR_NOTEDBYPOSITION, PR_PR"& _ 
                "NO, PR_PURPOSE, PR_REQUESTEDBY, PR_REQUESTEDBYPOSITION, PR_STATUS, PR_SUBMITTEDB"& _ 
                "Y, PR_UPDATEDBY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_PURCHASEREQUEST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PR_SUBMITT"& _ 
                "EDBY = @PR_SUBMITTEDBY)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY PR_DATEREQUESTED DESC"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_SUBMITTEDBY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_SUBMITTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "INSERT INTO tblM4_PURCHASEREQUEST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (PR_PRNO, PR_DATEREQU"& _ 
                "ESTED, PR_APPCODE, PR_PURPOSE, PR_STATUS, PR_REQUESTEDBY, PR_REQUESTEDBYPOSITION"& _ 
                ", PR_APPROVEDBY, PR_APPROVEDBYPOSITION, PR_CERTIFIEDBY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   PR_CERTIFIEDBYPOSITION, PR_NOTEDBY, PR_NOTEDBYPOSITION, PR_SUBMITTEDBY, PR_DE"& _ 
                "PARTMENT, PR_DIVISION, PR_ISDOLLAR)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@PR_PRNO,@PR_DATEREQUESTED,@"& _ 
                "PR_APPCODE,@PR_PURPOSE,@PR_STATUS,@PR_REQUESTEDBY,@PR_REQUESTEDBYPOSITION,@PR_AP"& _ 
                "PROVEDBY,@PR_APPROVEDBYPOSITION,@PR_CERTIFIEDBY,@PR_CERTIFIEDBYPOSITION,@PR_NOTE"& _ 
                "DBY,@PR_NOTEDBYPOSITION,@PR_SUBMITTEDBY,@PR_DEPARTMENT,@PR_DIVISION,@PR_ISDOLLAR"& _ 
                ");      "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_DATEREQUESTED", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DATEREQUESTED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_APPCODE", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PURPOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_STATUS", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_REQUESTEDBY", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_REQUESTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_REQUESTEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_REQUESTEDBYPOSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_APPROVEDBY", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPROVEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_APPROVEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_APPROVEDBYPOSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_CERTIFIEDBY", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_CERTIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_CERTIFIEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_CERTIFIEDBYPOSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_NOTEDBY", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_NOTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_NOTEDBYPOSITION", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_NOTEDBYPOSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_SUBMITTEDBY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_SUBMITTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_DEPARTMENT", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DEPARTMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_DIVISION", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DIVISION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_ISDOLLAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_ISDOLLAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "UPDATE       tblM4_PURCHASEREQUEST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                PR_STATUS = @PR_STATUS, PR"& _ 
                "_UPDATEDBY = @PR_UPDATEDBY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PR_PRNO = @PR_PRNO);   "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_STATUS", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_UPDATEDBY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_UPDATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByALLSTATUS(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable, ByVal PR_SUBMITTEDBY As String, ByVal PR_PRNO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (PR_SUBMITTEDBY Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PR_SUBMITTEDBY,String)
            End If
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PR_PRNO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByALLSTATUS(ByVal PR_SUBMITTEDBY As String, ByVal PR_PRNO As String) As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (PR_SUBMITTEDBY Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PR_SUBMITTEDBY,String)
            End If
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PR_PRNO,String)
            End If
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPRNO(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable, ByVal PR_PRNO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByPRNO(ByVal PR_PRNO As String) As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPROCUREMENTDATA(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable, ByVal PR_STATUS As String, ByVal PR_PRNO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (PR_STATUS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_STATUS")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PR_STATUS,String)
            End If
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PR_PRNO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByPROCUREMENTDATA(ByVal PR_STATUS As String, ByVal PR_PRNO As String) As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (PR_STATUS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_STATUS")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PR_STATUS,String)
            End If
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PR_PRNO,String)
            End If
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySubmittedAndPRNOStatus(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable, ByVal PR_SUBMITTEDBY As String, ByVal PR_STATUS As String, ByVal PR_PRNO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (PR_SUBMITTEDBY Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PR_SUBMITTEDBY,String)
            End If
            If (PR_STATUS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_STATUS")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PR_STATUS,String)
            End If
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(PR_PRNO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBySubmittedAndPRNOStatus(ByVal PR_SUBMITTEDBY As String, ByVal PR_STATUS As String, ByVal PR_PRNO As String) As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (PR_SUBMITTEDBY Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PR_SUBMITTEDBY,String)
            End If
            If (PR_STATUS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_STATUS")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PR_STATUS,String)
            End If
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(PR_PRNO,String)
            End If
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySubmittedUser(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable, ByVal PR_SUBMITTEDBY As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (PR_SUBMITTEDBY Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PR_SUBMITTEDBY,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBySubmittedUser(ByVal PR_SUBMITTEDBY As String) As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (PR_SUBMITTEDBY Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PR_SUBMITTEDBY,String)
            End If
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUESTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_PURCHASEREQUEST")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function IQ_PURCHASE_REQUEST( _
                    ByVal PR_PRNO As String,  _
                    ByVal PR_DATEREQUESTED As String,  _
                    ByVal PR_APPCODE As String,  _
                    ByVal PR_PURPOSE As String,  _
                    ByVal PR_STATUS As String,  _
                    ByVal PR_REQUESTEDBY As String,  _
                    ByVal PR_REQUESTEDBYPOSITION As String,  _
                    ByVal PR_APPROVEDBY As String,  _
                    ByVal PR_APPROVEDBYPOSITION As String,  _
                    ByVal PR_CERTIFIEDBY As String,  _
                    ByVal PR_CERTIFIEDBYPOSITION As String,  _
                    ByVal PR_NOTEDBY As String,  _
                    ByVal PR_NOTEDBYPOSITION As String,  _
                    ByVal PR_SUBMITTEDBY As String,  _
                    ByVal PR_DEPARTMENT As String,  _
                    ByVal PR_DIVISION As String,  _
                    ByVal PR_ISDOLLAR As Boolean) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(6)
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                command.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            If (PR_DATEREQUESTED Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_DATEREQUESTED")
            Else
                command.Parameters(1).Value = CType(PR_DATEREQUESTED,String)
            End If
            If (PR_APPCODE Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(PR_APPCODE,String)
            End If
            If (PR_PURPOSE Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(PR_PURPOSE,String)
            End If
            If (PR_STATUS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_STATUS")
            Else
                command.Parameters(4).Value = CType(PR_STATUS,String)
            End If
            If (PR_REQUESTEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_REQUESTEDBY")
            Else
                command.Parameters(5).Value = CType(PR_REQUESTEDBY,String)
            End If
            If (PR_REQUESTEDBYPOSITION Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(PR_REQUESTEDBYPOSITION,String)
            End If
            If (PR_APPROVEDBY Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(PR_APPROVEDBY,String)
            End If
            If (PR_APPROVEDBYPOSITION Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(PR_APPROVEDBYPOSITION,String)
            End If
            If (PR_CERTIFIEDBY Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(PR_CERTIFIEDBY,String)
            End If
            If (PR_CERTIFIEDBYPOSITION Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(PR_CERTIFIEDBYPOSITION,String)
            End If
            If (PR_NOTEDBY Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(PR_NOTEDBY,String)
            End If
            If (PR_NOTEDBYPOSITION Is Nothing) Then
                command.Parameters(12).Value = Global.System.DBNull.Value
            Else
                command.Parameters(12).Value = CType(PR_NOTEDBYPOSITION,String)
            End If
            If (PR_SUBMITTEDBY Is Nothing) Then
                command.Parameters(13).Value = Global.System.DBNull.Value
            Else
                command.Parameters(13).Value = CType(PR_SUBMITTEDBY,String)
            End If
            If (PR_DEPARTMENT Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(PR_DEPARTMENT,String)
            End If
            If (PR_DIVISION Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(PR_DIVISION,String)
            End If
            command.Parameters(16).Value = CType(PR_ISDOLLAR,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UQ_UPDATEPRSTATUS(ByVal PR_STATUS As String, ByVal PR_UPDATEDBY As String, ByVal PR_PRNO As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(7)
            If (PR_STATUS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_STATUS")
            Else
                command.Parameters(0).Value = CType(PR_STATUS,String)
            End If
            If (PR_UPDATEDBY Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(PR_UPDATEDBY,String)
            End If
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                command.Parameters(2).Value = CType(PR_PRNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VWG3_DR_LISTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VWG3_DR_LIST"
            tableMapping.ColumnMappings.Add("DR_ID", "DR_ID")
            tableMapping.ColumnMappings.Add("DR_NO", "DR_NO")
            tableMapping.ColumnMappings.Add("DR_DELIVER", "DR_DELIVER")
            tableMapping.ColumnMappings.Add("DR_RECEIVED_BY", "DR_RECEIVED_BY")
            tableMapping.ColumnMappings.Add("DR_STATUS", "DR_STATUS")
            tableMapping.ColumnMappings.Add("DRD_ID", "DRD_ID")
            tableMapping.ColumnMappings.Add("DRD_QUANTITY", "DRD_QUANTITY")
            tableMapping.ColumnMappings.Add("DRD_DESCRIPTION", "DRD_DESCRIPTION")
            tableMapping.ColumnMappings.Add("DRD_STATUS", "DRD_STATUS")
            tableMapping.ColumnMappings.Add("COM_TIN_NUMBER", "COM_TIN_NUMBER")
            tableMapping.ColumnMappings.Add("COM_COMPANY_NAME", "COM_COMPANY_NAME")
            tableMapping.ColumnMappings.Add("COM_ADDRESS", "COM_ADDRESS")
            tableMapping.ColumnMappings.Add("COM_CONTACT_NO", "COM_CONTACT_NO")
            tableMapping.ColumnMappings.Add("COM_FAX_NO", "COM_FAX_NO")
            tableMapping.ColumnMappings.Add("COM_EMAIL", "COM_EMAIL")
            tableMapping.ColumnMappings.Add("COM_DIRECTORY", "COM_DIRECTORY")
            tableMapping.ColumnMappings.Add("COM_STATUS", "COM_STATUS")
            tableMapping.ColumnMappings.Add("UN_NO", "UN_NO")
            tableMapping.ColumnMappings.Add("UN_DESCRIPTION", "UN_DESCRIPTION")
            tableMapping.ColumnMappings.Add("INV_ID", "INV_ID")
            tableMapping.ColumnMappings.Add("DRD_WARANTY", "DRD_WARANTY")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DR_ID, DR_NO, DR_DELIVER, DR_RECEIVED_BY, DR_STATUS, DRD_ID, DRD_QUANTITY,"& _ 
                " DRD_DESCRIPTION, DRD_STATUS, COM_TIN_NUMBER, COM_COMPANY_NAME, COM_ADDRESS, COM"& _ 
                "_CONTACT_NO, COM_FAX_NO, COM_EMAIL, COM_DIRECTORY, COM_STATUS, UN_NO, UN_DESCRIP"& _ 
                "TION, INV_ID, DRD_WARANTY FROM dbo.VWG3_DR_LIST"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.VWG3_DR_LISTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.VWG3_DR_LISTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.VWG3_DR_LISTDataTable = New DS_PROPERTYDB.VWG3_DR_LISTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VWG3_REG_DVTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VWG3_REG_DV"
            tableMapping.ColumnMappings.Add("DV_NO_SYSTEM", "DV_NO_SYSTEM")
            tableMapping.ColumnMappings.Add("HDIVS_CODE", "HDIVS_CODE")
            tableMapping.ColumnMappings.Add("EMP_NO", "EMP_NO")
            tableMapping.ColumnMappings.Add("DV_DATE", "DV_DATE")
            tableMapping.ColumnMappings.Add("DV_PAYEE", "DV_PAYEE")
            tableMapping.ColumnMappings.Add("DV_TIN_EMPLOYEE_NO", "DV_TIN_EMPLOYEE_NO")
            tableMapping.ColumnMappings.Add("DV_ADDRESS", "DV_ADDRESS")
            tableMapping.ColumnMappings.Add("DV_A_NAME", "DV_A_NAME")
            tableMapping.ColumnMappings.Add("DV_A_POSITION", "DV_A_POSITION")
            tableMapping.ColumnMappings.Add("DV_C_NAME", "DV_C_NAME")
            tableMapping.ColumnMappings.Add("DV_C_POSITION", "DV_C_POSITION")
            tableMapping.ColumnMappings.Add("DV_D_NAME", "DV_D_NAME")
            tableMapping.ColumnMappings.Add("DV_D_POSITION", "DV_D_POSITION")
            tableMapping.ColumnMappings.Add("DV_STATUS", "DV_STATUS")
            tableMapping.ColumnMappings.Add("DV_QR_CODE", "DV_QR_CODE")
            tableMapping.ColumnMappings.Add("DV_TYPE", "DV_TYPE")
            tableMapping.ColumnMappings.Add("PAR_NO", "PAR_NO")
            tableMapping.ColumnMappings.Add("PAR_PARTICULAR", "PAR_PARTICULAR")
            tableMapping.ColumnMappings.Add("PAR_MFO_PAP", "PAR_MFO_PAP")
            tableMapping.ColumnMappings.Add("PAR_UACS_OBJECT_CODE", "PAR_UACS_OBJECT_CODE")
            tableMapping.ColumnMappings.Add("PAR_AMOUNT", "PAR_AMOUNT")
            tableMapping.ColumnMappings.Add("PAR_STATUS", "PAR_STATUS")
            tableMapping.ColumnMappings.Add("CUR_SYMBOL", "CUR_SYMBOL")
            tableMapping.ColumnMappings.Add("CUR_DESCRIPTION", "CUR_DESCRIPTION")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DV_NO_SYSTEM, HDIVS_CODE, EMP_NO, DV_DATE, DV_PAYEE, DV_TIN_EMPLOYEE_NO, D"& _ 
                "V_ADDRESS, DV_A_NAME, DV_A_POSITION, DV_C_NAME, DV_C_POSITION, DV_D_NAME, DV_D_P"& _ 
                "OSITION, DV_STATUS, DV_QR_CODE, DV_TYPE, PAR_NO, PAR_PARTICULAR, PAR_MFO_PAP, PA"& _ 
                "R_UACS_OBJECT_CODE, PAR_AMOUNT, PAR_STATUS, CUR_SYMBOL, CUR_DESCRIPTION FROM dbo"& _ 
                ".VWG3_REG_DV"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.VWG3_REG_DVDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.VWG3_REG_DVDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.VWG3_REG_DVDataTable = New DS_PROPERTYDB.VWG3_REG_DVDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VWG3_EMPLOYEE_LISTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VWG3_EMPLOYEE_LIST"
            tableMapping.ColumnMappings.Add("HRIS_EMPNO", "HRIS_EMPNO")
            tableMapping.ColumnMappings.Add("FULLNAME", "FULLNAME")
            tableMapping.ColumnMappings.Add("HDIVS_CODE", "HDIVS_CODE")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT HRIS_EMPNO, FULLNAME, HDIVS_CODE FROM dbo.VWG3_EMPLOYEE_LIST"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.VWG3_EMPLOYEE_LISTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.VWG3_EMPLOYEE_LISTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.VWG3_EMPLOYEE_LISTDataTable = New DS_PROPERTYDB.VWG3_EMPLOYEE_LISTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VWG3_INVOICE_LISTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VWG3_INVOICE_LIST"
            tableMapping.ColumnMappings.Add("INV_ID", "INV_ID")
            tableMapping.ColumnMappings.Add("INV_NO", "INV_NO")
            tableMapping.ColumnMappings.Add("INV_DATE", "INV_DATE")
            tableMapping.ColumnMappings.Add("INV_DIRECTORY", "INV_DIRECTORY")
            tableMapping.ColumnMappings.Add("INV_TOTAL", "INV_TOTAL")
            tableMapping.ColumnMappings.Add("INVD_ID", "INVD_ID")
            tableMapping.ColumnMappings.Add("INVD_QTY", "INVD_QTY")
            tableMapping.ColumnMappings.Add("INVD_PRICE", "INVD_PRICE")
            tableMapping.ColumnMappings.Add("INVD_DESCRIPTION", "INVD_DESCRIPTION")
            tableMapping.ColumnMappings.Add("UN_NO", "UN_NO")
            tableMapping.ColumnMappings.Add("UN_DESCRIPTION", "UN_DESCRIPTION")
            tableMapping.ColumnMappings.Add("COM_TIN_NUMBER", "COM_TIN_NUMBER")
            tableMapping.ColumnMappings.Add("COM_COMPANY_NAME", "COM_COMPANY_NAME")
            tableMapping.ColumnMappings.Add("COM_ADDRESS", "COM_ADDRESS")
            tableMapping.ColumnMappings.Add("COM_CONTACT_NO", "COM_CONTACT_NO")
            tableMapping.ColumnMappings.Add("COM_FAX_NO", "COM_FAX_NO")
            tableMapping.ColumnMappings.Add("COM_EMAIL", "COM_EMAIL")
            tableMapping.ColumnMappings.Add("COM_DIRECTORY", "COM_DIRECTORY")
            tableMapping.ColumnMappings.Add("COM_STATUS", "COM_STATUS")
            tableMapping.ColumnMappings.Add("TOTAL_AMOUNT", "TOTAL_AMOUNT")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT INV_ID, INV_NO, INV_DATE, INV_DIRECTORY, INV_TOTAL, INVD_ID, INVD_QTY, INV"& _ 
                "D_PRICE, INVD_DESCRIPTION, UN_NO, UN_DESCRIPTION, COM_TIN_NUMBER, COM_COMPANY_NA"& _ 
                "ME, COM_ADDRESS, COM_CONTACT_NO, COM_FAX_NO, COM_EMAIL, COM_DIRECTORY, COM_STATU"& _ 
                "S, TOTAL_AMOUNT FROM dbo.VWG3_INVOICE_LIST"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.VWG3_INVOICE_LISTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.VWG3_INVOICE_LISTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.VWG3_INVOICE_LISTDataTable = New DS_PROPERTYDB.VWG3_INVOICE_LISTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VWG3_PRIMARY_SIGNATORYTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VWG3_PRIMARY_SIGNATORY"
            tableMapping.ColumnMappings.Add("SIG_OFFICE_ORDER", "SIG_OFFICE_ORDER")
            tableMapping.ColumnMappings.Add("SIG_POLICY", "SIG_POLICY")
            tableMapping.ColumnMappings.Add("SIG_AMOUNT", "SIG_AMOUNT")
            tableMapping.ColumnMappings.Add("SIG_STATUS", "SIG_STATUS")
            tableMapping.ColumnMappings.Add("HDIVS_CODE", "HDIVS_CODE")
            tableMapping.ColumnMappings.Add("SIG_TY_NO", "SIG_TY_NO")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO_USER", "HRIS_EMPNO_USER")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO_SIG", "HRIS_EMPNO_SIG")
            tableMapping.ColumnMappings.Add("FULLNAME", "FULLNAME")
            tableMapping.ColumnMappings.Add("SIG_POSITION", "SIG_POSITION")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CAST(ISNULL(SIG_FNAME, '') + ' ' + ISNULL(SIG_MNAME, '') + ' ' + ISNULL(SI"& _ 
                "G_LNAME, '') AS VARCHAR(MAX)) AS FULLNAME, HDIVS_CODE, HRIS_EMPNO_SIG, HRIS_EMPN"& _ 
                "O_USER, SIG_AMOUNT, SIG_OFFICE_ORDER, SIG_POLICY, SIG_POSITION, SIG_STATUS, SIG_"& _ 
                "TY_NO FROM VWG3_PRIMARY_SIGNATORY"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CAST(ISNULL(SIG_FNAME, '') + ' ' + ISNULL(SIG_MNAME, '') + ' ' + ISNULL(SI"& _ 
                "G_LNAME, '') AS VARCHAR(MAX)) AS FULLNAME, HDIVS_CODE, HRIS_EMPNO_SIG, HRIS_EMPN"& _ 
                "O_USER, SIG_AMOUNT, SIG_OFFICE_ORDER, SIG_POLICY, SIG_POSITION, SIG_STATUS, SIG_"& _ 
                "TY_NO FROM VWG3_PRIMARY_SIGNATORY WHERE (HRIS_EMPNO_USER = @HRIS_EMPNO_USER) ORD"& _ 
                "ER BY SIG_TY_NO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO_USER", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.VWG3_PRIMARY_SIGNATORYDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy_HRIS_EMPNO_USER(ByVal dataTable As DS_PROPERTYDB.VWG3_PRIMARY_SIGNATORYDataTable, ByVal HRIS_EMPNO_USER As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (HRIS_EMPNO_USER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HRIS_EMPNO_USER")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(HRIS_EMPNO_USER,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VWG3_REG_BUSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VWG3_REG_BUS"
            tableMapping.ColumnMappings.Add("BUS_NO_SYSTEM", "BUS_NO_SYSTEM")
            tableMapping.ColumnMappings.Add("HDIVS_CODE", "HDIVS_CODE")
            tableMapping.ColumnMappings.Add("EMP_NO", "EMP_NO")
            tableMapping.ColumnMappings.Add("BUS_DATE", "BUS_DATE")
            tableMapping.ColumnMappings.Add("BUS_PAYEE", "BUS_PAYEE")
            tableMapping.ColumnMappings.Add("BUS_OFFICE", "BUS_OFFICE")
            tableMapping.ColumnMappings.Add("BUS_ADDRESS", "BUS_ADDRESS")
            tableMapping.ColumnMappings.Add("BUS_NAME_A", "BUS_NAME_A")
            tableMapping.ColumnMappings.Add("BUS_POSITION_A", "BUS_POSITION_A")
            tableMapping.ColumnMappings.Add("BUS_NAME_B", "BUS_NAME_B")
            tableMapping.ColumnMappings.Add("BUS_POSITION_B", "BUS_POSITION_B")
            tableMapping.ColumnMappings.Add("BUS_QR_CODE", "BUS_QR_CODE")
            tableMapping.ColumnMappings.Add("BUS_STATUS", "BUS_STATUS")
            tableMapping.ColumnMappings.Add("PAR_NO", "PAR_NO")
            tableMapping.ColumnMappings.Add("PAR_PARTICULAR", "PAR_PARTICULAR")
            tableMapping.ColumnMappings.Add("PAR_MFO_PAP", "PAR_MFO_PAP")
            tableMapping.ColumnMappings.Add("PAR_UACS_OBJECT_CODE", "PAR_UACS_OBJECT_CODE")
            tableMapping.ColumnMappings.Add("PAR_AMOUNT", "PAR_AMOUNT")
            tableMapping.ColumnMappings.Add("PAR_ISDOLLAR", "PAR_ISDOLLAR")
            tableMapping.ColumnMappings.Add("PAR_STATUS", "PAR_STATUS")
            tableMapping.ColumnMappings.Add("CUR_SYMBOL", "CUR_SYMBOL")
            tableMapping.ColumnMappings.Add("CUR_DESCRIPTION", "CUR_DESCRIPTION")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT BUS_NO_SYSTEM, HDIVS_CODE, EMP_NO, BUS_DATE, BUS_PAYEE, BUS_OFFICE, BUS_AD"& _ 
                "DRESS, BUS_NAME_A, BUS_POSITION_A, BUS_NAME_B, BUS_POSITION_B, BUS_QR_CODE, BUS_"& _ 
                "STATUS, PAR_NO, PAR_PARTICULAR, PAR_MFO_PAP, PAR_UACS_OBJECT_CODE, PAR_AMOUNT, P"& _ 
                "AR_ISDOLLAR, PAR_STATUS, CUR_SYMBOL, CUR_DESCRIPTION FROM dbo.VWG3_REG_BUS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.VWG3_REG_BUSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.VWG3_REG_BUSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.VWG3_REG_BUSDataTable = New DS_PROPERTYDB.VWG3_REG_BUSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPM4_PRCODETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPM4_PRCODE"
            tableMapping.ColumnMappings.Add("PR No.", "PR No_")
            tableMapping.ColumnMappings.Add("Column1", "Column1")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SPM4_PRCODE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVISION_CODE", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.SPM4_PRCODE"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVISION_CODE", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.SPM4_PRCODEDataTable, ByVal DIVISION_CODE As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (DIVISION_CODE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DIVISION_CODE,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal DIVISION_CODE As String) As DS_PROPERTYDB.SPM4_PRCODEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (DIVISION_CODE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DIVISION_CODE,String)
            End If
            Dim dataTable As DS_PROPERTYDB.SPM4_PRCODEDataTable = New DS_PROPERTYDB.SPM4_PRCODEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SPM4_SQ_PRCODE(ByVal DIVISION_CODE As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (DIVISION_CODE Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(DIVISION_CODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPM4_CURRENTDATETIMETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPM4_CURRENTDATETIME"
            tableMapping.ColumnMappings.Add("Column1", "Column1")
            tableMapping.ColumnMappings.Add("datenow", "datenow")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SPM4_CURRENTDATETIME"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.SPM4_CURRENTDATETIMEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBLG3_SIGNATORY1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBLG3_SIGNATORY1"
            tableMapping.ColumnMappings.Add("fullname", "fullname")
            tableMapping.ColumnMappings.Add("SIG_POSITION", "SIG_POSITION")
            tableMapping.ColumnMappings.Add("SIG_NO", "SIG_NO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [TBLG3_SIGNATORY] WHERE (((@IsNull_SIG_POSITION = 1 AND [SIG_POSITION"& _ 
                "] IS NULL) OR ([SIG_POSITION] = @Original_SIG_POSITION)) AND ([SIG_NO] = @Origin"& _ 
                "al_SIG_NO))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_POSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_POSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [TBLG3_SIGNATORY] ([SIG_POSITION]) VALUES (@SIG_POSITION)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_POSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [TBLG3_SIGNATORY] SET [SIG_POSITION] = @SIG_POSITION WHERE (((@IsNull_SIG_"& _ 
                "POSITION = 1 AND [SIG_POSITION] IS NULL) OR ([SIG_POSITION] = @Original_SIG_POSI"& _ 
                "TION)) AND ([SIG_NO] = @Original_SIG_NO))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIG_POSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POSITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIG_POSITION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POSITION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_POSITION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_POSITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIG_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SIG_FNAME + ' ' + SIG_MNAME + ' ' + SIG_LNAME AS fullname, SIG_POSI"& _ 
                "TION, SIG_NO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            TBLG3_SIGNATORY"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        SIG_FNAME + ' ' + SIG_MNAME + ' ' + SIG_LNAME AS fullname, SIG_POSI"& _ 
                "TION, SIG_NO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            TBLG3_SIGNATORY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (SIG_FNAME LIKE '%' "& _ 
                "+ @fullname + '%') OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (SIG_MNAME LIKE '%' + @fullname "& _ 
                "+ '%') OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (SIG_LNAME LIKE '%' + @fullname + '%')"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fullname", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SIG_FNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.TBLG3_SIGNATORY1DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.TBLG3_SIGNATORY1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.TBLG3_SIGNATORY1DataTable = New DS_PROPERTYDB.TBLG3_SIGNATORY1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DS_PROPERTYDB.TBLG3_SIGNATORY1DataTable, ByVal fullname As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (fullname Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fullname,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByFullname(ByVal fullname As String) As DS_PROPERTYDB.TBLG3_SIGNATORY1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (fullname Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fullname,String)
            End If
            Dim dataTable As DS_PROPERTYDB.TBLG3_SIGNATORY1DataTable = New DS_PROPERTYDB.TBLG3_SIGNATORY1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.TBLG3_SIGNATORY1DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "TBLG3_SIGNATORY1")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPM4_GETPR_INFOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPM4_GETPR_INFO"
            tableMapping.ColumnMappings.Add("PR_PRNO", "PR_PRNO")
            tableMapping.ColumnMappings.Add("PR_DATEREQUESTED", "PR_DATEREQUESTED")
            tableMapping.ColumnMappings.Add("PR_APPCODE", "PR_APPCODE")
            tableMapping.ColumnMappings.Add("PR_PURPOSE", "PR_PURPOSE")
            tableMapping.ColumnMappings.Add("PR_REQUESTEDBY", "PR_REQUESTEDBY")
            tableMapping.ColumnMappings.Add("PR_REQUESTEDBYPOSITION", "PR_REQUESTEDBYPOSITION")
            tableMapping.ColumnMappings.Add("PR_APPROVEDBY", "PR_APPROVEDBY")
            tableMapping.ColumnMappings.Add("PR_APPROVEDBYPOSITION", "PR_APPROVEDBYPOSITION")
            tableMapping.ColumnMappings.Add("PR_CERTIFIEDBY", "PR_CERTIFIEDBY")
            tableMapping.ColumnMappings.Add("PR_CERTIFIEDBYPOSITION", "PR_CERTIFIEDBYPOSITION")
            tableMapping.ColumnMappings.Add("PR_NOTEDBY", "PR_NOTEDBY")
            tableMapping.ColumnMappings.Add("PR_NOTEDBYPOSITION", "PR_NOTEDBYPOSITION")
            tableMapping.ColumnMappings.Add("PR_SUBMITTEDBY", "PR_SUBMITTEDBY")
            tableMapping.ColumnMappings.Add("PR_DEPARTMENT", "PR_DEPARTMENT")
            tableMapping.ColumnMappings.Add("PR_DIVISION", "PR_DIVISION")
            tableMapping.ColumnMappings.Add("PR_QUANTITY", "PR_QUANTITY")
            tableMapping.ColumnMappings.Add("PR_UNITISSUE", "PR_UNITISSUE")
            tableMapping.ColumnMappings.Add("PRI_ITEMDESCRIPTION", "PRI_ITEMDESCRIPTION")
            tableMapping.ColumnMappings.Add("PR_STOCKNO", "PR_STOCKNO")
            tableMapping.ColumnMappings.Add("PR_ESTIMATEDUNITCOST", "PR_ESTIMATEDUNITCOST")
            tableMapping.ColumnMappings.Add("PR_ESTIMATEDCOST", "PR_ESTIMATEDCOST")
            tableMapping.ColumnMappings.Add("img", "img")
            tableMapping.ColumnMappings.Add("PR_ISDOLLAR", "PR_ISDOLLAR")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SPM4_GETPR_INFO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMAGEPRNO", Global.System.Data.SqlDbType.Image, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.SPM4_GETPR_INFODataTable, ByVal PR_PRNO As String, ByVal IMAGEPRNO() As Byte) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (PR_PRNO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PR_PRNO,String)
            End If
            If (IMAGEPRNO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IMAGEPRNO,Byte())
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal PR_PRNO As String, ByVal IMAGEPRNO() As Byte) As DS_PROPERTYDB.SPM4_GETPR_INFODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (PR_PRNO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PR_PRNO,String)
            End If
            If (IMAGEPRNO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IMAGEPRNO,Byte())
            End If
            Dim dataTable As DS_PROPERTYDB.SPM4_GETPR_INFODataTable = New DS_PROPERTYDB.SPM4_GETPR_INFODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_CATEGORY1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_CATEGORY1"
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("Category Code", "Category Code")
            tableMapping.ColumnMappings.Add("Category Name", "Category Name")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_CATEGORY] WHERE (([CAT_CODE] = @Original_Category_Code))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Category_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_CATEGORY] ([CAT_CODE], [CAT_NAME]) VALUES (@Category_Code, @Ca"& _ 
                "tegory_Name);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CASE CAT_STATUS WHEN 1 THEN 'Active' WHEN 0 THEN 'Inactive"& _ 
                "' END AS Status, CAT_CODE AS 'Category Code', CAT_NAME AS 'Category Name' FROM t"& _ 
                "blM4_CATEGORY WHERE (CAT_CODE = @CAT_CODE) ORDER BY CAT_STATUS"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Category_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Category_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_CATEGORY] SET [CAT_CODE] = @Category_Code, [CAT_NAME] = @Category_N"& _ 
                "ame WHERE (([CAT_CODE] = @Original_Category_Code));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CASE CAT_STATUS WHEN"& _ 
                " 1 THEN 'Active' WHEN 0 THEN 'Inactive' END AS Status, CAT_CODE AS 'Category Cod"& _ 
                "e', CAT_NAME AS 'Category Name' FROM tblM4_CATEGORY WHERE (CAT_CODE = @CAT_CODE)"& _ 
                " ORDER BY CAT_STATUS"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Category_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Category_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Category_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CASE CAT_STATUS WHEN 1 THEN 'Active' WHEN 0 THEN 'Inactive' END AS "& _ 
                "Status, CAT_CODE AS 'Category Code', CAT_NAME AS 'Category Name'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          "& _ 
                "  tblM4_CATEGORY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY CAT_STATUS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_CATEGORY1DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_CATEGORY1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_CATEGORY1DataTable = New DS_PROPERTYDB.tblM4_CATEGORY1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_CATEGORY1DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_CATEGORY1")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Category_Code As String) As Integer
            If (Original_Category_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Category_Code")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Category_Code,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Category_Code As String, ByVal Category_Name As String, ByVal CAT_CODE As String) As Integer
            If (Category_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Category_Code")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Category_Code,String)
            End If
            If (Category_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Category_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Category_Name,String)
            End If
            If (CAT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CAT_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CAT_CODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Category_Code As String, ByVal Category_Name As String, ByVal Original_Category_Code As String, ByVal CAT_CODE As String) As Integer
            If (Category_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Category_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Category_Code,String)
            End If
            If (Category_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Category_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Category_Name,String)
            End If
            If (Original_Category_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Category_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_Category_Code,String)
            End If
            If (CAT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CAT_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CAT_CODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Category_Name As String, ByVal Original_Category_Code As String) As Integer
            Return Me.Update(Original_Category_Code, Category_Name, Original_Category_Code, Original_Category_Code)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_ITEMBRAND1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_ITEMBRAND1"
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("Item Brand No.", "Item Brand No_")
            tableMapping.ColumnMappings.Add("Brand Name", "Brand Name")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_ITEMBRAND] WHERE (([ITBR_NO] = @p4) AND ((@IsNull_Brand_Name ="& _ 
                " 1 AND [ITBR_NAME] IS NULL) OR ([ITBR_NAME] = @Original_Brand_Name)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item Brand No.", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Brand_Name", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Brand_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_ITEMBRAND] ([ITBR_NAME]) VALUES (@Brand_Name);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CASE IT"& _ 
                "BR_STATUS WHEN 1 THEN 'Active' WHEN 0 THEN 'Inactive' END AS 'Status', ITBR_NO A"& _ 
                "S 'Item Brand No.', ITBR_NAME AS 'Brand Name' FROM tblM4_ITEMBRAND WHERE (ITBR_N"& _ 
                "O = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Brand_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_ITEMBRAND] SET [ITBR_NAME] = @Brand_Name WHERE (([ITBR_NO] = @p4) A"& _ 
                "ND ((@IsNull_Brand_Name = 1 AND [ITBR_NAME] IS NULL) OR ([ITBR_NAME] = @Original"& _ 
                "_Brand_Name)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CASE ITBR_STATUS WHEN 1 THEN 'Active' WHEN 0 THEN 'Inact"& _ 
                "ive' END AS 'Status', ITBR_NO AS 'Item Brand No.', ITBR_NAME AS 'Brand Name' FRO"& _ 
                "M tblM4_ITEMBRAND WHERE (ITBR_NO = @ITBR_NO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Brand_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item Brand No.", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Brand_Name", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Brand_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_NO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Item Brand No.", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CASE ITBR_STATUS WHEN 1 THEN 'Active' WHEN 0 THEN 'Inactive' END AS"& _ 
                " 'Status', ITBR_NO AS 'Item Brand No.', ITBR_NAME AS 'Brand Name'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         "& _ 
                "   tblM4_ITEMBRAND"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_ITEMBRAND1DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_ITEMBRAND1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_ITEMBRAND1DataTable = New DS_PROPERTYDB.tblM4_ITEMBRAND1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_ITEMBRAND1DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_ITEMBRAND1")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal p4 As Integer, ByVal Original_Brand_Name As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(p4,Integer)
            If (Original_Brand_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Brand_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Brand_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Brand_Name As String) As Integer
            If (Brand_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Brand_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Brand_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Brand_Name As String, ByVal p4 As Integer, ByVal Original_Brand_Name As String, ByVal ITBR_NO As Integer) As Integer
            If (Brand_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Brand_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Brand_Name,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(p4,Integer)
            If (Original_Brand_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Brand_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_Brand_Name,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ITBR_NO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_SUB_CATEGORY1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_SUB_CATEGORY1"
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("SC No.", "SC No_")
            tableMapping.ColumnMappings.Add("Category Name", "Category Name")
            tableMapping.ColumnMappings.Add("Sub-Category Name", "Sub-Category Name")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CASE tblM4_SUB_CATEGORY.SC_STATUS WHEN 1 THEN 'Active' WHEN 0 THEN "& _ 
                "'Inactive' END AS 'Status', tblM4_SUB_CATEGORY.SC_NO AS 'SC No.', tblM4_CATEGORY"& _ 
                ".CAT_NAME AS 'Category Name', "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblM4_SUB_CATEGORY.SC_S"& _ 
                "UBCATEGORY_NAME AS 'Sub-Category Name'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_SUB_CATEGORY INNER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblM4_CATEGORY ON tblM4_SUB_CATEGORY.CAT_CODE = "& _ 
                "tblM4_CATEGORY.CAT_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY 'Sub-Category Name'"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_SUB_CATEGORY1DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_SUB_CATEGORY1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_SUB_CATEGORY1DataTable = New DS_PROPERTYDB.tblM4_SUB_CATEGORY1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPM4_INVENTORY_REPORTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPM4_INVENTORY_REPORT"
            tableMapping.ColumnMappings.Add("Category", "Category")
            tableMapping.ColumnMappings.Add("Sub Category", "Sub Category")
            tableMapping.ColumnMappings.Add("Brand/Provider", "Brand/Provider")
            tableMapping.ColumnMappings.Add("Item Description", "Item Description")
            tableMapping.ColumnMappings.Add("Unit Type", "Unit Type")
            tableMapping.ColumnMappings.Add("Unit Cost", "Unit Cost")
            tableMapping.ColumnMappings.Add("Total Cost", "Total Cost")
            tableMapping.ColumnMappings.Add("Quantity", "Quantity")
            tableMapping.ColumnMappings.Add("Date Encoded", "Date Encoded")
            tableMapping.ColumnMappings.Add("Property No.", "Property No_")
            tableMapping.ColumnMappings.Add("Serial No.", "Serial No_")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SPM4_INVENTORY_REPORT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_NAME", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_SUBCATEGORY_NAME", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_NAME", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATEFROM", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATETO", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.SPM4_INVENTORY_REPORTDataTable, ByVal CAT_NAME As String, ByVal SC_SUBCATEGORY_NAME As String, ByVal ITBR_NAME As String, ByVal DATEFROM As String, ByVal DATETO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CAT_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(CAT_NAME,String)
            End If
            If (SC_SUBCATEGORY_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SC_SUBCATEGORY_NAME,String)
            End If
            If (ITBR_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ITBR_NAME,String)
            End If
            If (DATEFROM Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(DATEFROM,String)
            End If
            If (DATETO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(DATETO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal CAT_NAME As String, ByVal SC_SUBCATEGORY_NAME As String, ByVal ITBR_NAME As String, ByVal DATEFROM As String, ByVal DATETO As String) As DS_PROPERTYDB.SPM4_INVENTORY_REPORTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CAT_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(CAT_NAME,String)
            End If
            If (SC_SUBCATEGORY_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SC_SUBCATEGORY_NAME,String)
            End If
            If (ITBR_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ITBR_NAME,String)
            End If
            If (DATEFROM Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(DATEFROM,String)
            End If
            If (DATETO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(DATETO,String)
            End If
            Dim dataTable As DS_PROPERTYDB.SPM4_INVENTORY_REPORTDataTable = New DS_PROPERTYDB.SPM4_INVENTORY_REPORTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPM4_PROPERTY_NOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPM4_PROPERTY_NO"
            tableMapping.ColumnMappings.Add("PROP_NO", "PROP_NO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SPM4_PROPERTY_NO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVISION_CODE", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CATEGORY", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.SPM4_PROPERTY_NO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVISION_CODE", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CATEGORY", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.SPM4_PROPERTY_NODataTable, ByVal DIVISION_CODE As String, ByVal CATEGORY As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (DIVISION_CODE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DIVISION_CODE,String)
            End If
            If (CATEGORY Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CATEGORY,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal DIVISION_CODE As String, ByVal CATEGORY As String) As DS_PROPERTYDB.SPM4_PROPERTY_NODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (DIVISION_CODE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DIVISION_CODE,String)
            End If
            If (CATEGORY Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CATEGORY,String)
            End If
            Dim dataTable As DS_PROPERTYDB.SPM4_PROPERTY_NODataTable = New DS_PROPERTYDB.SPM4_PROPERTY_NODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SPM4_PROPERTY_NO(ByVal DIVISION_CODE As String, ByVal CATEGORY As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (DIVISION_CODE Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(DIVISION_CODE,String)
            End If
            If (CATEGORY Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(CATEGORY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_PURCHASEREQUEST_CATEGORYTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_PURCHASEREQUEST_CATEGORY"
            tableMapping.ColumnMappings.Add("PRCAT_NO", "PRCAT_NO")
            tableMapping.ColumnMappings.Add("PRCAT_CATEGORY_NAME", "PRCAT_CATEGORY_NAME")
            tableMapping.ColumnMappings.Add("PRCAT_ISACTIVE", "PRCAT_ISACTIVE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_PURCHASEREQUEST_CATEGORY] WHERE (([PRCAT_NO] = @Original_PRCAT"& _ 
                "_NO) AND ([PRCAT_CATEGORY_NAME] = @Original_PRCAT_CATEGORY_NAME) AND ([PRCAT_ISA"& _ 
                "CTIVE] = @Original_PRCAT_ISACTIVE))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRCAT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRCAT_CATEGORY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_CATEGORY_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRCAT_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_ISACTIVE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_PURCHASEREQUEST_CATEGORY] ([PRCAT_CATEGORY_NAME], [PRCAT_ISACT"& _ 
                "IVE]) VALUES (@PRCAT_CATEGORY_NAME, @PRCAT_ISACTIVE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PRCAT_NO, PRCAT_CA"& _ 
                "TEGORY_NAME, PRCAT_ISACTIVE FROM tblM4_PURCHASEREQUEST_CATEGORY WHERE (PRCAT_NO "& _ 
                "= SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRCAT_CATEGORY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_CATEGORY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRCAT_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_ISACTIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_PURCHASEREQUEST_CATEGORY] SET [PRCAT_CATEGORY_NAME] = @PRCAT_CATEGO"& _ 
                "RY_NAME, [PRCAT_ISACTIVE] = @PRCAT_ISACTIVE WHERE (([PRCAT_NO] = @Original_PRCAT"& _ 
                "_NO) AND ([PRCAT_CATEGORY_NAME] = @Original_PRCAT_CATEGORY_NAME) AND ([PRCAT_ISA"& _ 
                "CTIVE] = @Original_PRCAT_ISACTIVE));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PRCAT_NO, PRCAT_CATEGORY_NAME, PRCA"& _ 
                "T_ISACTIVE FROM tblM4_PURCHASEREQUEST_CATEGORY WHERE (PRCAT_NO = @PRCAT_NO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRCAT_CATEGORY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_CATEGORY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRCAT_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_ISACTIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRCAT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRCAT_CATEGORY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_CATEGORY_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRCAT_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_ISACTIVE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRCAT_NO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        PRCAT_NO, PRCAT_CATEGORY_NAME, PRCAT_ISACTIVE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM"& _ 
                "4_PURCHASEREQUEST_CATEGORY"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_CATEGORYDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_CATEGORYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_CATEGORYDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUEST_CATEGORYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_CATEGORYDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_PURCHASEREQUEST_CATEGORY")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_PRCAT_NO As Integer, ByVal Original_PRCAT_CATEGORY_NAME As String, ByVal Original_PRCAT_ISACTIVE As Boolean) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PRCAT_NO,Integer)
            If (Original_PRCAT_CATEGORY_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRCAT_CATEGORY_NAME")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_PRCAT_CATEGORY_NAME,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_PRCAT_ISACTIVE,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal PRCAT_CATEGORY_NAME As String, ByVal PRCAT_ISACTIVE As Boolean) As Integer
            If (PRCAT_CATEGORY_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRCAT_CATEGORY_NAME")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PRCAT_CATEGORY_NAME,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(PRCAT_ISACTIVE,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal PRCAT_CATEGORY_NAME As String, ByVal PRCAT_ISACTIVE As Boolean, ByVal Original_PRCAT_NO As Integer, ByVal Original_PRCAT_CATEGORY_NAME As String, ByVal Original_PRCAT_ISACTIVE As Boolean, ByVal PRCAT_NO As Integer) As Integer
            If (PRCAT_CATEGORY_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRCAT_CATEGORY_NAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PRCAT_CATEGORY_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PRCAT_ISACTIVE,Boolean)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_PRCAT_NO,Integer)
            If (Original_PRCAT_CATEGORY_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRCAT_CATEGORY_NAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_PRCAT_CATEGORY_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_PRCAT_ISACTIVE,Boolean)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PRCAT_NO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal PRCAT_CATEGORY_NAME As String, ByVal PRCAT_ISACTIVE As Boolean, ByVal Original_PRCAT_NO As Integer, ByVal Original_PRCAT_CATEGORY_NAME As String, ByVal Original_PRCAT_ISACTIVE As Boolean) As Integer
            Return Me.Update(PRCAT_CATEGORY_NAME, PRCAT_ISACTIVE, Original_PRCAT_NO, Original_PRCAT_CATEGORY_NAME, Original_PRCAT_ISACTIVE, Original_PRCAT_NO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPM4_PURCHASELISTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPM4_PURCHASELIST"
            tableMapping.ColumnMappings.Add("PR_PRNO", "PR_PRNO")
            tableMapping.ColumnMappings.Add("Remarks/Purpose", "Remarks/Purpose")
            tableMapping.ColumnMappings.Add("Status of Ongoing PR", "Status of Ongoing PR")
            tableMapping.ColumnMappings.Add("PR_STATUS", "PR_STATUS")
            tableMapping.ColumnMappings.Add("CREATED_DATE", "CREATED_DATE")
            tableMapping.ColumnMappings.Add("PR_PRNO1", "PR_PRNO1")
            tableMapping.ColumnMappings.Add("DateCreated", "DateCreated")
            tableMapping.ColumnMappings.Add("MAXDATE", "MAXDATE1")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SPM4_PURCHASELIST"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_NO", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_ID", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ISPMD", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.SPM4_PURCHASELISTDataTable, ByVal PR_NO As String, ByVal EMP_ID As String, ByVal ISPMD As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (PR_NO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PR_NO,String)
            End If
            If (EMP_ID Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(EMP_ID,String)
            End If
            If (ISPMD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ISPMD.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal PR_NO As String, ByVal EMP_ID As String, ByVal ISPMD As Global.System.Nullable(Of Boolean)) As DS_PROPERTYDB.SPM4_PURCHASELISTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (PR_NO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PR_NO,String)
            End If
            If (EMP_ID Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(EMP_ID,String)
            End If
            If (ISPMD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ISPMD.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DS_PROPERTYDB.SPM4_PURCHASELISTDataTable = New DS_PROPERTYDB.SPM4_PURCHASELISTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPM4_PURCHASEREQUEST_STATUSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPM4_PURCHASEREQUEST_STATUS"
            tableMapping.ColumnMappings.Add("status", "status")
            tableMapping.ColumnMappings.Add("Date", "Date")
            tableMapping.ColumnMappings.Add("Time", "Time")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SPM4_PURCHASEREQUEST_STATUS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_NO", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.SPM4_PURCHASEREQUEST_STATUSDataTable, ByVal PR_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (PR_NO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PR_NO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal PR_NO As String) As DS_PROPERTYDB.SPM4_PURCHASEREQUEST_STATUSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (PR_NO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PR_NO,String)
            End If
            Dim dataTable As DS_PROPERTYDB.SPM4_PURCHASEREQUEST_STATUSDataTable = New DS_PROPERTYDB.SPM4_PURCHASEREQUEST_STATUSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_PURCHASEREQUEST_CANCELEDTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_PURCHASEREQUEST_CANCELED"
            tableMapping.ColumnMappings.Add("PR_PRNO", "PR_PRNO")
            tableMapping.ColumnMappings.Add("CAPR_REMARKS", "CAPR_REMARKS")
            tableMapping.ColumnMappings.Add("CAPR_CREATED_BY", "CAPR_CREATED_BY")
            tableMapping.ColumnMappings.Add("CAPR_DATE_CREATED", "CAPR_DATE_CREATED")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_PURCHASEREQUEST_CANCELED] WHERE (([PR_PRNO] = @Original_PR_PRN"& _ 
                "O) AND ((@IsNull_CAPR_REMARKS = 1 AND [CAPR_REMARKS] IS NULL) OR ([CAPR_REMARKS]"& _ 
                " = @Original_CAPR_REMARKS)) AND ([CAPR_CREATED_BY] = @Original_CAPR_CREATED_BY) "& _ 
                "AND ([CAPR_DATE_CREATED] = @Original_CAPR_DATE_CREATED))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPR_REMARKS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_REMARKS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPR_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPR_CREATED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_CREATED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPR_DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_DATE_CREATED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_PURCHASEREQUEST_CANCELED] ([PR_PRNO], [CAPR_REMARKS], [CAPR_CR"& _ 
                "EATED_BY], [CAPR_DATE_CREATED]) VALUES (@PR_PRNO, @CAPR_REMARKS, @CAPR_CREATED_B"& _ 
                "Y, @CAPR_DATE_CREATED);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PR_PRNO, CAPR_REMARKS, CAPR_CREATED_BY, CAPR_DAT"& _ 
                "E_CREATED FROM tblM4_PURCHASEREQUEST_CANCELED WHERE (PR_PRNO = @PR_PRNO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPR_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPR_CREATED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_CREATED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPR_DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_DATE_CREATED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_PURCHASEREQUEST_CANCELED] SET [PR_PRNO] = @PR_PRNO, [CAPR_REMARKS] "& _ 
                "= @CAPR_REMARKS, [CAPR_CREATED_BY] = @CAPR_CREATED_BY, [CAPR_DATE_CREATED] = @CA"& _ 
                "PR_DATE_CREATED WHERE (([PR_PRNO] = @Original_PR_PRNO) AND ((@IsNull_CAPR_REMARK"& _ 
                "S = 1 AND [CAPR_REMARKS] IS NULL) OR ([CAPR_REMARKS] = @Original_CAPR_REMARKS)) "& _ 
                "AND ([CAPR_CREATED_BY] = @Original_CAPR_CREATED_BY) AND ([CAPR_DATE_CREATED] = @"& _ 
                "Original_CAPR_DATE_CREATED));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PR_PRNO, CAPR_REMARKS, CAPR_CREATED_BY, CA"& _ 
                "PR_DATE_CREATED FROM tblM4_PURCHASEREQUEST_CANCELED WHERE (PR_PRNO = @PR_PRNO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPR_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPR_CREATED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_CREATED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPR_DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_DATE_CREATED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPR_REMARKS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_REMARKS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPR_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPR_CREATED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_CREATED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPR_DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_DATE_CREATED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblM4_PURCHASEREQUEST_CANCELED.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_PURCHASEREQ"& _ 
                "UEST_CANCELED"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "INSERT INTO tblM4_PURCHASEREQUEST_CANCELED"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (PR_PRNO, CA"& _ 
                "PR_REMARKS, CAPR_CREATED_BY)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@PR_PRNO,@CAPR_REMARKS,@CAPR_CREATE"& _ 
                "D_BY); "
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPR_REMARKS", Global.System.Data.SqlDbType.NVarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPR_CREATED_BY", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPR_CREATED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_CANCELEDDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_CANCELEDDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_CANCELEDDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUEST_CANCELEDDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_CANCELEDDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_PURCHASEREQUEST_CANCELED")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_PR_PRNO As String, ByVal Original_CAPR_REMARKS As String, ByVal Original_CAPR_CREATED_BY As String, ByVal Original_CAPR_DATE_CREATED As Date) As Integer
            If (Original_PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PR_PRNO")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PR_PRNO,String)
            End If
            If (Original_CAPR_REMARKS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CAPR_REMARKS,String)
            End If
            If (Original_CAPR_CREATED_BY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CAPR_CREATED_BY")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CAPR_CREATED_BY,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CAPR_DATE_CREATED,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal PR_PRNO As String, ByVal CAPR_REMARKS As String, ByVal CAPR_CREATED_BY As String, ByVal CAPR_DATE_CREATED As Date) As Integer
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            If (CAPR_REMARKS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CAPR_REMARKS,String)
            End If
            If (CAPR_CREATED_BY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CAPR_CREATED_BY")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CAPR_CREATED_BY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(CAPR_DATE_CREATED,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal PR_PRNO As String, ByVal CAPR_REMARKS As String, ByVal CAPR_CREATED_BY As String, ByVal CAPR_DATE_CREATED As Date, ByVal Original_PR_PRNO As String, ByVal Original_CAPR_REMARKS As String, ByVal Original_CAPR_CREATED_BY As String, ByVal Original_CAPR_DATE_CREATED As Date) As Integer
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            If (CAPR_REMARKS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CAPR_REMARKS,String)
            End If
            If (CAPR_CREATED_BY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CAPR_CREATED_BY")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CAPR_CREATED_BY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CAPR_DATE_CREATED,Date)
            If (Original_PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PR_PRNO")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_PR_PRNO,String)
            End If
            If (Original_CAPR_REMARKS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_CAPR_REMARKS,String)
            End If
            If (Original_CAPR_CREATED_BY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CAPR_CREATED_BY")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_CAPR_CREATED_BY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_CAPR_DATE_CREATED,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CAPR_REMARKS As String, ByVal CAPR_CREATED_BY As String, ByVal CAPR_DATE_CREATED As Date, ByVal Original_PR_PRNO As String, ByVal Original_CAPR_REMARKS As String, ByVal Original_CAPR_CREATED_BY As String, ByVal Original_CAPR_DATE_CREATED As Date) As Integer
            Return Me.Update(Original_PR_PRNO, CAPR_REMARKS, CAPR_CREATED_BY, CAPR_DATE_CREATED, Original_PR_PRNO, Original_CAPR_REMARKS, Original_CAPR_CREATED_BY, Original_CAPR_DATE_CREATED)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function IQ_CANCELEDPR(ByVal PR_PRNO As String, ByVal CAPR_REMARKS As String, ByVal CAPR_CREATED_BY As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                command.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            If (CAPR_REMARKS Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(CAPR_REMARKS,String)
            End If
            If (CAPR_CREATED_BY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CAPR_CREATED_BY")
            Else
                command.Parameters(2).Value = CType(CAPR_CREATED_BY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_PURCHASEREQUEST_REVISIONTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_PURCHASEREQUEST_REVISION"
            tableMapping.ColumnMappings.Add("PR_PRNO", "PR_PRNO")
            tableMapping.ColumnMappings.Add("REPR_QUANTITY_REMARKS", "REPR_QUANTITY_REMARKS")
            tableMapping.ColumnMappings.Add("REPR_UNITISSUE_REMARKS", "REPR_UNITISSUE_REMARKS")
            tableMapping.ColumnMappings.Add("REPR_ITEMDESCRIPTION_REMARKS", "REPR_ITEMDESCRIPTION_REMARKS")
            tableMapping.ColumnMappings.Add("REPR_ESTIMATEDUNITCOST_REMARKS", "REPR_ESTIMATEDUNITCOST_REMARKS")
            tableMapping.ColumnMappings.Add("REPR_ESTIMATEDCOST_REMARKS", "REPR_ESTIMATEDCOST_REMARKS")
            tableMapping.ColumnMappings.Add("REPR_CREATED_DATE", "REPR_CREATED_DATE")
            tableMapping.ColumnMappings.Add("REPR_CREATED_BY", "REPR_CREATED_BY")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_PURCHASEREQUEST_REVISION] WHERE (([PR_PRNO] = @Original_PR_PRN"& _ 
                "O) AND ([REPR_QUANTITY_REMARKS] = @Original_REPR_QUANTITY_REMARKS) AND ([REPR_UN"& _ 
                "ITISSUE_REMARKS] = @Original_REPR_UNITISSUE_REMARKS) AND ([REPR_ITEMDESCRIPTION_"& _ 
                "REMARKS] = @Original_REPR_ITEMDESCRIPTION_REMARKS) AND ([REPR_ESTIMATEDUNITCOST_"& _ 
                "REMARKS] = @Original_REPR_ESTIMATEDUNITCOST_REMARKS) AND ([REPR_ESTIMATEDCOST_RE"& _ 
                "MARKS] = @Original_REPR_ESTIMATEDCOST_REMARKS) AND ([REPR_CREATED_DATE] = @Origi"& _ 
                "nal_REPR_CREATED_DATE) AND ((@IsNull_REPR_CREATED_BY = 1 AND [REPR_CREATED_BY] I"& _ 
                "S NULL) OR ([REPR_CREATED_BY] = @Original_REPR_CREATED_BY)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPR_QUANTITY_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_QUANTITY_REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPR_UNITISSUE_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_UNITISSUE_REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPR_ITEMDESCRIPTION_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_ITEMDESCRIPTION_REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPR_ESTIMATEDUNITCOST_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_ESTIMATEDUNITCOST_REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPR_ESTIMATEDCOST_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_ESTIMATEDCOST_REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPR_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REPR_CREATED_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_CREATED_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPR_CREATED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_CREATED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_PURCHASEREQUEST_REVISION] ([PR_PRNO], [REPR_QUANTITY_REMARKS],"& _ 
                " [REPR_UNITISSUE_REMARKS], [REPR_ITEMDESCRIPTION_REMARKS], [REPR_ESTIMATEDUNITCO"& _ 
                "ST_REMARKS], [REPR_ESTIMATEDCOST_REMARKS], [REPR_CREATED_DATE], [REPR_CREATED_BY"& _ 
                "]) VALUES (@PR_PRNO, @REPR_QUANTITY_REMARKS, @REPR_UNITISSUE_REMARKS, @REPR_ITEM"& _ 
                "DESCRIPTION_REMARKS, @REPR_ESTIMATEDUNITCOST_REMARKS, @REPR_ESTIMATEDCOST_REMARK"& _ 
                "S, @REPR_CREATED_DATE, @REPR_CREATED_BY);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PR_PRNO, REPR_QUANTITY_REMARKS"& _ 
                ", REPR_UNITISSUE_REMARKS, REPR_ITEMDESCRIPTION_REMARKS, REPR_ESTIMATEDUNITCOST_R"& _ 
                "EMARKS, REPR_ESTIMATEDCOST_REMARKS, REPR_CREATED_DATE, REPR_CREATED_BY FROM tblM"& _ 
                "4_PURCHASEREQUEST_REVISION WHERE (PR_PRNO = @PR_PRNO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPR_QUANTITY_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_QUANTITY_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPR_UNITISSUE_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_UNITISSUE_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPR_ITEMDESCRIPTION_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_ITEMDESCRIPTION_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPR_ESTIMATEDUNITCOST_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_ESTIMATEDUNITCOST_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPR_ESTIMATEDCOST_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_ESTIMATEDCOST_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPR_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPR_CREATED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_CREATED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_PURCHASEREQUEST_REVISION] SET [PR_PRNO] = @PR_PRNO, [REPR_QUANTITY_"& _ 
                "REMARKS] = @REPR_QUANTITY_REMARKS, [REPR_UNITISSUE_REMARKS] = @REPR_UNITISSUE_RE"& _ 
                "MARKS, [REPR_ITEMDESCRIPTION_REMARKS] = @REPR_ITEMDESCRIPTION_REMARKS, [REPR_EST"& _ 
                "IMATEDUNITCOST_REMARKS] = @REPR_ESTIMATEDUNITCOST_REMARKS, [REPR_ESTIMATEDCOST_R"& _ 
                "EMARKS] = @REPR_ESTIMATEDCOST_REMARKS, [REPR_CREATED_DATE] = @REPR_CREATED_DATE,"& _ 
                " [REPR_CREATED_BY] = @REPR_CREATED_BY WHERE (([PR_PRNO] = @Original_PR_PRNO) AND"& _ 
                " ([REPR_QUANTITY_REMARKS] = @Original_REPR_QUANTITY_REMARKS) AND ([REPR_UNITISSU"& _ 
                "E_REMARKS] = @Original_REPR_UNITISSUE_REMARKS) AND ([REPR_ITEMDESCRIPTION_REMARK"& _ 
                "S] = @Original_REPR_ITEMDESCRIPTION_REMARKS) AND ([REPR_ESTIMATEDUNITCOST_REMARK"& _ 
                "S] = @Original_REPR_ESTIMATEDUNITCOST_REMARKS) AND ([REPR_ESTIMATEDCOST_REMARKS]"& _ 
                " = @Original_REPR_ESTIMATEDCOST_REMARKS) AND ([REPR_CREATED_DATE] = @Original_RE"& _ 
                "PR_CREATED_DATE) AND ((@IsNull_REPR_CREATED_BY = 1 AND [REPR_CREATED_BY] IS NULL"& _ 
                ") OR ([REPR_CREATED_BY] = @Original_REPR_CREATED_BY)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PR_PRNO, REPR_QU"& _ 
                "ANTITY_REMARKS, REPR_UNITISSUE_REMARKS, REPR_ITEMDESCRIPTION_REMARKS, REPR_ESTIM"& _ 
                "ATEDUNITCOST_REMARKS, REPR_ESTIMATEDCOST_REMARKS, REPR_CREATED_DATE, REPR_CREATE"& _ 
                "D_BY FROM tblM4_PURCHASEREQUEST_REVISION WHERE (PR_PRNO = @PR_PRNO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPR_QUANTITY_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_QUANTITY_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPR_UNITISSUE_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_UNITISSUE_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPR_ITEMDESCRIPTION_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_ITEMDESCRIPTION_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPR_ESTIMATEDUNITCOST_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_ESTIMATEDUNITCOST_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPR_ESTIMATEDCOST_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_ESTIMATEDCOST_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPR_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPR_CREATED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_CREATED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPR_QUANTITY_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_QUANTITY_REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPR_UNITISSUE_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_UNITISSUE_REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPR_ITEMDESCRIPTION_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_ITEMDESCRIPTION_REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPR_ESTIMATEDUNITCOST_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_ESTIMATEDUNITCOST_REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPR_ESTIMATEDCOST_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_ESTIMATEDCOST_REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPR_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REPR_CREATED_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_CREATED_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPR_CREATED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPR_CREATED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblM4_PURCHASEREQUEST_REVISION.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_PURCHASEREQ"& _ 
                "UEST_REVISION"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_REVISIONDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_REVISIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_REVISIONDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUEST_REVISIONDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_REVISIONDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_PURCHASEREQUEST_REVISION")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_PR_PRNO As String, ByVal Original_REPR_QUANTITY_REMARKS As String, ByVal Original_REPR_UNITISSUE_REMARKS As String, ByVal Original_REPR_ITEMDESCRIPTION_REMARKS As String, ByVal Original_REPR_ESTIMATEDUNITCOST_REMARKS As String, ByVal Original_REPR_ESTIMATEDCOST_REMARKS As String, ByVal Original_REPR_CREATED_DATE As Date, ByVal Original_REPR_CREATED_BY As String) As Integer
            If (Original_PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PR_PRNO")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PR_PRNO,String)
            End If
            If (Original_REPR_QUANTITY_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_REPR_QUANTITY_REMARKS")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_REPR_QUANTITY_REMARKS,String)
            End If
            If (Original_REPR_UNITISSUE_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_REPR_UNITISSUE_REMARKS")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_REPR_UNITISSUE_REMARKS,String)
            End If
            If (Original_REPR_ITEMDESCRIPTION_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_REPR_ITEMDESCRIPTION_REMARKS")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_REPR_ITEMDESCRIPTION_REMARKS,String)
            End If
            If (Original_REPR_ESTIMATEDUNITCOST_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_REPR_ESTIMATEDUNITCOST_REMARKS")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_REPR_ESTIMATEDUNITCOST_REMARKS,String)
            End If
            If (Original_REPR_ESTIMATEDCOST_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_REPR_ESTIMATEDCOST_REMARKS")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_REPR_ESTIMATEDCOST_REMARKS,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_REPR_CREATED_DATE,Date)
            If (Original_REPR_CREATED_BY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_REPR_CREATED_BY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal PR_PRNO As String, ByVal REPR_QUANTITY_REMARKS As String, ByVal REPR_UNITISSUE_REMARKS As String, ByVal REPR_ITEMDESCRIPTION_REMARKS As String, ByVal REPR_ESTIMATEDUNITCOST_REMARKS As String, ByVal REPR_ESTIMATEDCOST_REMARKS As String, ByVal REPR_CREATED_DATE As Date, ByVal REPR_CREATED_BY As String) As Integer
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            If (REPR_QUANTITY_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REPR_QUANTITY_REMARKS")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(REPR_QUANTITY_REMARKS,String)
            End If
            If (REPR_UNITISSUE_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REPR_UNITISSUE_REMARKS")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(REPR_UNITISSUE_REMARKS,String)
            End If
            If (REPR_ITEMDESCRIPTION_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REPR_ITEMDESCRIPTION_REMARKS")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(REPR_ITEMDESCRIPTION_REMARKS,String)
            End If
            If (REPR_ESTIMATEDUNITCOST_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REPR_ESTIMATEDUNITCOST_REMARKS")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(REPR_ESTIMATEDUNITCOST_REMARKS,String)
            End If
            If (REPR_ESTIMATEDCOST_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REPR_ESTIMATEDCOST_REMARKS")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(REPR_ESTIMATEDCOST_REMARKS,String)
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(REPR_CREATED_DATE,Date)
            If (REPR_CREATED_BY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(REPR_CREATED_BY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PR_PRNO As String,  _
                    ByVal REPR_QUANTITY_REMARKS As String,  _
                    ByVal REPR_UNITISSUE_REMARKS As String,  _
                    ByVal REPR_ITEMDESCRIPTION_REMARKS As String,  _
                    ByVal REPR_ESTIMATEDUNITCOST_REMARKS As String,  _
                    ByVal REPR_ESTIMATEDCOST_REMARKS As String,  _
                    ByVal REPR_CREATED_DATE As Date,  _
                    ByVal REPR_CREATED_BY As String,  _
                    ByVal Original_PR_PRNO As String,  _
                    ByVal Original_REPR_QUANTITY_REMARKS As String,  _
                    ByVal Original_REPR_UNITISSUE_REMARKS As String,  _
                    ByVal Original_REPR_ITEMDESCRIPTION_REMARKS As String,  _
                    ByVal Original_REPR_ESTIMATEDUNITCOST_REMARKS As String,  _
                    ByVal Original_REPR_ESTIMATEDCOST_REMARKS As String,  _
                    ByVal Original_REPR_CREATED_DATE As Date,  _
                    ByVal Original_REPR_CREATED_BY As String) As Integer
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            If (REPR_QUANTITY_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REPR_QUANTITY_REMARKS")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(REPR_QUANTITY_REMARKS,String)
            End If
            If (REPR_UNITISSUE_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REPR_UNITISSUE_REMARKS")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(REPR_UNITISSUE_REMARKS,String)
            End If
            If (REPR_ITEMDESCRIPTION_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REPR_ITEMDESCRIPTION_REMARKS")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(REPR_ITEMDESCRIPTION_REMARKS,String)
            End If
            If (REPR_ESTIMATEDUNITCOST_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REPR_ESTIMATEDUNITCOST_REMARKS")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(REPR_ESTIMATEDUNITCOST_REMARKS,String)
            End If
            If (REPR_ESTIMATEDCOST_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REPR_ESTIMATEDCOST_REMARKS")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(REPR_ESTIMATEDCOST_REMARKS,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(REPR_CREATED_DATE,Date)
            If (REPR_CREATED_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(REPR_CREATED_BY,String)
            End If
            If (Original_PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PR_PRNO")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_PR_PRNO,String)
            End If
            If (Original_REPR_QUANTITY_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_REPR_QUANTITY_REMARKS")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_REPR_QUANTITY_REMARKS,String)
            End If
            If (Original_REPR_UNITISSUE_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_REPR_UNITISSUE_REMARKS")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_REPR_UNITISSUE_REMARKS,String)
            End If
            If (Original_REPR_ITEMDESCRIPTION_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_REPR_ITEMDESCRIPTION_REMARKS")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_REPR_ITEMDESCRIPTION_REMARKS,String)
            End If
            If (Original_REPR_ESTIMATEDUNITCOST_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_REPR_ESTIMATEDUNITCOST_REMARKS")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_REPR_ESTIMATEDUNITCOST_REMARKS,String)
            End If
            If (Original_REPR_ESTIMATEDCOST_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_REPR_ESTIMATEDCOST_REMARKS")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_REPR_ESTIMATEDCOST_REMARKS,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_REPR_CREATED_DATE,Date)
            If (Original_REPR_CREATED_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_REPR_CREATED_BY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal REPR_QUANTITY_REMARKS As String, ByVal REPR_UNITISSUE_REMARKS As String, ByVal REPR_ITEMDESCRIPTION_REMARKS As String, ByVal REPR_ESTIMATEDUNITCOST_REMARKS As String, ByVal REPR_ESTIMATEDCOST_REMARKS As String, ByVal REPR_CREATED_DATE As Date, ByVal REPR_CREATED_BY As String, ByVal Original_PR_PRNO As String, ByVal Original_REPR_QUANTITY_REMARKS As String, ByVal Original_REPR_UNITISSUE_REMARKS As String, ByVal Original_REPR_ITEMDESCRIPTION_REMARKS As String, ByVal Original_REPR_ESTIMATEDUNITCOST_REMARKS As String, ByVal Original_REPR_ESTIMATEDCOST_REMARKS As String, ByVal Original_REPR_CREATED_DATE As Date, ByVal Original_REPR_CREATED_BY As String) As Integer
            Return Me.Update(Original_PR_PRNO, REPR_QUANTITY_REMARKS, REPR_UNITISSUE_REMARKS, REPR_ITEMDESCRIPTION_REMARKS, REPR_ESTIMATEDUNITCOST_REMARKS, REPR_ESTIMATEDCOST_REMARKS, REPR_CREATED_DATE, REPR_CREATED_BY, Original_PR_PRNO, Original_REPR_QUANTITY_REMARKS, Original_REPR_UNITISSUE_REMARKS, Original_REPR_ITEMDESCRIPTION_REMARKS, Original_REPR_ESTIMATEDUNITCOST_REMARKS, Original_REPR_ESTIMATEDCOST_REMARKS, Original_REPR_CREATED_DATE, Original_REPR_CREATED_BY)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_PURCHASEREQUEST_POSTEDTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_PURCHASEREQUEST_POSTED"
            tableMapping.ColumnMappings.Add("PR_PRNO", "PR_PRNO")
            tableMapping.ColumnMappings.Add("PRP_REMARKS", "PRP_REMARKS")
            tableMapping.ColumnMappings.Add("PRP_URL", "PRP_URL")
            tableMapping.ColumnMappings.Add("PRP_CREATED_DATE", "PRP_CREATED_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_PURCHASEREQUEST_POSTED] WHERE (([PR_PRNO] = @Original_PR_PRNO)"& _ 
                " AND ([PRP_REMARKS] = @Original_PRP_REMARKS) AND ((@IsNull_PRP_URL = 1 AND [PRP_"& _ 
                "URL] IS NULL) OR ([PRP_URL] = @Original_PRP_URL)) AND ((@IsNull_PRP_CREATED_DATE"& _ 
                " = 1 AND [PRP_CREATED_DATE] IS NULL) OR ([PRP_CREATED_DATE] = @Original_PRP_CREA"& _ 
                "TED_DATE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRP_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRP_URL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_URL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRP_URL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_URL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRP_CREATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_CREATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRP_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_PURCHASEREQUEST_POSTED] ([PR_PRNO], [PRP_REMARKS], [PRP_URL], "& _ 
                "[PRP_CREATED_DATE]) VALUES (@PR_PRNO, @PRP_REMARKS, @PRP_URL, @PRP_CREATED_DATE)"& _ 
                ";"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PR_PRNO, PRP_REMARKS, PRP_URL, PRP_CREATED_DATE FROM tblM4_PURCHASEREQ"& _ 
                "UEST_POSTED WHERE (PR_PRNO = @PR_PRNO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRP_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRP_URL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_URL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRP_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_PURCHASEREQUEST_POSTED] SET [PR_PRNO] = @PR_PRNO, [PRP_REMARKS] = @"& _ 
                "PRP_REMARKS, [PRP_URL] = @PRP_URL, [PRP_CREATED_DATE] = @PRP_CREATED_DATE WHERE "& _ 
                "(([PR_PRNO] = @Original_PR_PRNO) AND ([PRP_REMARKS] = @Original_PRP_REMARKS) AND"& _ 
                " ((@IsNull_PRP_URL = 1 AND [PRP_URL] IS NULL) OR ([PRP_URL] = @Original_PRP_URL)"& _ 
                ") AND ((@IsNull_PRP_CREATED_DATE = 1 AND [PRP_CREATED_DATE] IS NULL) OR ([PRP_CR"& _ 
                "EATED_DATE] = @Original_PRP_CREATED_DATE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PR_PRNO, PRP_REMARKS, PRP_U"& _ 
                "RL, PRP_CREATED_DATE FROM tblM4_PURCHASEREQUEST_POSTED WHERE (PR_PRNO = @PR_PRNO"& _ 
                ")"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRP_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRP_URL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_URL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRP_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRP_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRP_URL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_URL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRP_URL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_URL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRP_CREATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_CREATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRP_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblM4_PURCHASEREQUEST_POSTED.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_PURCHASEREQUE"& _ 
                "ST_POSTED"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        PRP_REMARKS, PRP_URL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_PURCHASEREQUEST_POSTED"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PR_PRNO = @pr_prno)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pr_prno", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO tblM4_PURCHASEREQUEST_POSTED"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (PR_PRNO, PRP_"& _ 
                "REMARKS, PRP_URL)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@PR_PRNO,@PRP_REMARKS,@PRP_URL); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRP_REMARKS", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRP_URL", Global.System.Data.SqlDbType.NVarChar, 500, Global.System.Data.ParameterDirection.Input, 0, 0, "PRP_URL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_POSTEDDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_POSTEDDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_POSTEDDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUEST_POSTEDDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPR_NO(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_POSTEDDataTable, ByVal pr_prno As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (pr_prno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pr_prno")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pr_prno,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByPR_NO(ByVal pr_prno As String) As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_POSTEDDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (pr_prno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pr_prno")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pr_prno,String)
            End If
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_POSTEDDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUEST_POSTEDDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_POSTEDDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_PURCHASEREQUEST_POSTED")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_PR_PRNO As String, ByVal Original_PRP_REMARKS As String, ByVal Original_PRP_URL As String, ByVal Original_PRP_CREATED_DATE As Global.System.Nullable(Of Date)) As Integer
            If (Original_PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PR_PRNO")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PR_PRNO,String)
            End If
            If (Original_PRP_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRP_REMARKS")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_PRP_REMARKS,String)
            End If
            If (Original_PRP_URL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_PRP_URL,String)
            End If
            If (Original_PRP_CREATED_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_PRP_CREATED_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal PR_PRNO As String, ByVal PRP_REMARKS As String, ByVal PRP_URL As String, ByVal PRP_CREATED_DATE As Global.System.Nullable(Of Date)) As Integer
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            If (PRP_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRP_REMARKS")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PRP_REMARKS,String)
            End If
            If (PRP_URL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PRP_URL,String)
            End If
            If (PRP_CREATED_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PRP_CREATED_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal PR_PRNO As String, ByVal PRP_REMARKS As String, ByVal PRP_URL As String, ByVal PRP_CREATED_DATE As Global.System.Nullable(Of Date), ByVal Original_PR_PRNO As String, ByVal Original_PRP_REMARKS As String, ByVal Original_PRP_URL As String, ByVal Original_PRP_CREATED_DATE As Global.System.Nullable(Of Date)) As Integer
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            If (PRP_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRP_REMARKS")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PRP_REMARKS,String)
            End If
            If (PRP_URL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PRP_URL,String)
            End If
            If (PRP_CREATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PRP_CREATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PR_PRNO")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_PR_PRNO,String)
            End If
            If (Original_PRP_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRP_REMARKS")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_PRP_REMARKS,String)
            End If
            If (Original_PRP_URL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_PRP_URL,String)
            End If
            If (Original_PRP_CREATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_PRP_CREATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal PRP_REMARKS As String, ByVal PRP_URL As String, ByVal PRP_CREATED_DATE As Global.System.Nullable(Of Date), ByVal Original_PR_PRNO As String, ByVal Original_PRP_REMARKS As String, ByVal Original_PRP_URL As String, ByVal Original_PRP_CREATED_DATE As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_PR_PRNO, PRP_REMARKS, PRP_URL, PRP_CREATED_DATE, Original_PR_PRNO, Original_PRP_REMARKS, Original_PRP_URL, Original_PRP_CREATED_DATE)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function IQ_POSTED(ByVal PR_PRNO As String, ByVal PRP_REMARKS As String, ByVal PRP_URL As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                command.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            If (PRP_REMARKS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRP_REMARKS")
            Else
                command.Parameters(1).Value = CType(PRP_REMARKS,String)
            End If
            If (PRP_URL Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(PRP_URL,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_PURCHASEREQUEST_ACCEPTED"
            tableMapping.ColumnMappings.Add("PR_PRNO", "PR_PRNO")
            tableMapping.ColumnMappings.Add("PRAC_ACCEPTEDBY", "PRAC_ACCEPTEDBY")
            tableMapping.ColumnMappings.Add("PRAC_DATECREATED", "PRAC_DATECREATED")
            tableMapping.ColumnMappings.Add("PRCAT_NO", "PRCAT_NO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_PURCHASEREQUEST_ACCEPTED] WHERE (([PR_PRNO] = @Original_PR_PRN"& _ 
                "O) AND ([PRAC_ACCEPTEDBY] = @Original_PRAC_ACCEPTEDBY) AND ([PRAC_DATECREATED] ="& _ 
                " @Original_PRAC_DATECREATED) AND ([PRCAT_NO] = @Original_PRCAT_NO))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRAC_ACCEPTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRAC_ACCEPTEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRAC_DATECREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRAC_DATECREATED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRCAT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_PURCHASEREQUEST_ACCEPTED] ([PR_PRNO], [PRAC_ACCEPTEDBY], [PRAC"& _ 
                "_DATECREATED], [PRCAT_NO]) VALUES (@PR_PRNO, @PRAC_ACCEPTEDBY, @PRAC_DATECREATED"& _ 
                ", @PRCAT_NO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PR_PRNO, PRAC_ACCEPTEDBY, PRAC_DATECREATED, PRCAT_NO FROM "& _ 
                "tblM4_PURCHASEREQUEST_ACCEPTED WHERE (PR_PRNO = @PR_PRNO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRAC_ACCEPTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRAC_ACCEPTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRAC_DATECREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRAC_DATECREATED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRCAT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_PURCHASEREQUEST_ACCEPTED] SET [PR_PRNO] = @PR_PRNO, [PRAC_ACCEPTEDB"& _ 
                "Y] = @PRAC_ACCEPTEDBY, [PRAC_DATECREATED] = @PRAC_DATECREATED, [PRCAT_NO] = @PRC"& _ 
                "AT_NO WHERE (([PR_PRNO] = @Original_PR_PRNO) AND ([PRAC_ACCEPTEDBY] = @Original_"& _ 
                "PRAC_ACCEPTEDBY) AND ([PRAC_DATECREATED] = @Original_PRAC_DATECREATED) AND ([PRC"& _ 
                "AT_NO] = @Original_PRCAT_NO));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PR_PRNO, PRAC_ACCEPTEDBY, PRAC_DATECREATE"& _ 
                "D, PRCAT_NO FROM tblM4_PURCHASEREQUEST_ACCEPTED WHERE (PR_PRNO = @PR_PRNO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRAC_ACCEPTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRAC_ACCEPTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRAC_DATECREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRAC_DATECREATED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRCAT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRAC_ACCEPTEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRAC_ACCEPTEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRAC_DATECREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRAC_DATECREATED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRCAT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblM4_PURCHASEREQUEST_ACCEPTED.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_PURCHASEREQ"& _ 
                "UEST_ACCEPTED"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "INSERT INTO tblM4_PURCHASEREQUEST_ACCEPTED"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (PR_PRNO, PR"& _ 
                "AC_ACCEPTEDBY, PRCAT_NO)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@PR_PRNO,@PRAC_ACCEPTEDBY,@PRCAT_NO); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PR_PRNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_PRNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRAC_ACCEPTEDBY", Global.System.Data.SqlDbType.NVarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "PRAC_ACCEPTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRCAT_NO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCAT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ACCEPTEDDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ACCEPTEDDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ACCEPTEDDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ACCEPTEDDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_ACCEPTEDDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_PURCHASEREQUEST_ACCEPTED")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_PR_PRNO As String, ByVal Original_PRAC_ACCEPTEDBY As String, ByVal Original_PRAC_DATECREATED As Date, ByVal Original_PRCAT_NO As Integer) As Integer
            If (Original_PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PR_PRNO")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PR_PRNO,String)
            End If
            If (Original_PRAC_ACCEPTEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRAC_ACCEPTEDBY")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_PRAC_ACCEPTEDBY,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_PRAC_DATECREATED,Date)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_PRCAT_NO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal PR_PRNO As String, ByVal PRAC_ACCEPTEDBY As String, ByVal PRAC_DATECREATED As Date, ByVal PRCAT_NO As Integer) As Integer
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            If (PRAC_ACCEPTEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRAC_ACCEPTEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PRAC_ACCEPTEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(PRAC_DATECREATED,Date)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(PRCAT_NO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal PR_PRNO As String, ByVal PRAC_ACCEPTEDBY As String, ByVal PRAC_DATECREATED As Date, ByVal PRCAT_NO As Integer, ByVal Original_PR_PRNO As String, ByVal Original_PRAC_ACCEPTEDBY As String, ByVal Original_PRAC_DATECREATED As Date, ByVal Original_PRCAT_NO As Integer) As Integer
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            If (PRAC_ACCEPTEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRAC_ACCEPTEDBY")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PRAC_ACCEPTEDBY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PRAC_DATECREATED,Date)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PRCAT_NO,Integer)
            If (Original_PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PR_PRNO")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_PR_PRNO,String)
            End If
            If (Original_PRAC_ACCEPTEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRAC_ACCEPTEDBY")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_PRAC_ACCEPTEDBY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_PRAC_DATECREATED,Date)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_PRCAT_NO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal PRAC_ACCEPTEDBY As String, ByVal PRAC_DATECREATED As Date, ByVal PRCAT_NO As Integer, ByVal Original_PR_PRNO As String, ByVal Original_PRAC_ACCEPTEDBY As String, ByVal Original_PRAC_DATECREATED As Date, ByVal Original_PRCAT_NO As Integer) As Integer
            Return Me.Update(Original_PR_PRNO, PRAC_ACCEPTEDBY, PRAC_DATECREATED, PRCAT_NO, Original_PR_PRNO, Original_PRAC_ACCEPTEDBY, Original_PRAC_DATECREATED, Original_PRCAT_NO)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function IQ_ACCEPTED(ByVal PR_PRNO As String, ByVal PRAC_ACCEPTEDBY As String, ByVal PRCAT_NO As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (PR_PRNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PR_PRNO")
            Else
                command.Parameters(0).Value = CType(PR_PRNO,String)
            End If
            If (PRAC_ACCEPTEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRAC_ACCEPTEDBY")
            Else
                command.Parameters(1).Value = CType(PRAC_ACCEPTEDBY,String)
            End If
            command.Parameters(2).Value = CType(PRCAT_NO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_PURCHASEREQUEST_PROVIDERTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_PURCHASEREQUEST_PROVIDER"
            tableMapping.ColumnMappings.Add("PRPR_NO", "PRPR_NO")
            tableMapping.ColumnMappings.Add("PRAB_REF_NO", "PRAB_REF_NO")
            tableMapping.ColumnMappings.Add("PRPR_CONTACTNO", "PRPR_CONTACTNO")
            tableMapping.ColumnMappings.Add("PRPR_NAME", "PRPR_NAME")
            tableMapping.ColumnMappings.Add("PRPR_BIDPRICE", "PRPR_BIDPRICE")
            tableMapping.ColumnMappings.Add("PRPR_QUANTITY", "PRPR_QUANTITY")
            tableMapping.ColumnMappings.Add("PRPR_CREATED_DATE", "PRPR_CREATED_DATE")
            tableMapping.ColumnMappings.Add("PRPR_TOTALBIDPRICE", "PRPR_TOTALBIDPRICE")
            tableMapping.ColumnMappings.Add("PRPR_IS_LOWEST", "PRPR_IS_LOWEST")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_PURCHASEREQUEST_PROVIDER] WHERE (([PRPR_NO] = @Original_PRPR_N"& _ 
                "O) AND ([PRAB_REF_NO] = @Original_PRAB_REF_NO) AND ([PRPR_CONTACTNO] = @Original"& _ 
                "_PRPR_CONTACTNO) AND ([PRPR_NAME] = @Original_PRPR_NAME) AND ([PRPR_BIDPRICE] = "& _ 
                "@Original_PRPR_BIDPRICE) AND ([PRPR_QUANTITY] = @Original_PRPR_QUANTITY) AND ([P"& _ 
                "RPR_CREATED_DATE] = @Original_PRPR_CREATED_DATE) AND ([PRPR_TOTALBIDPRICE] = @Or"& _ 
                "iginal_PRPR_TOTALBIDPRICE) AND ([PRPR_IS_LOWEST] = @Original_PRPR_IS_LOWEST))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRAB_REF_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRAB_REF_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_CONTACTNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_CONTACTNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_BIDPRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRPR_BIDPRICE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_QUANTITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_TOTALBIDPRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRPR_TOTALBIDPRICE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_IS_LOWEST", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_IS_LOWEST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_PURCHASEREQUEST_PROVIDER] ([PRPR_NO], [PRAB_REF_NO], [PRPR_CON"& _ 
                "TACTNO], [PRPR_NAME], [PRPR_BIDPRICE], [PRPR_QUANTITY], [PRPR_CREATED_DATE], [PR"& _ 
                "PR_TOTALBIDPRICE], [PRPR_IS_LOWEST]) VALUES (@PRPR_NO, @PRAB_REF_NO, @PRPR_CONTA"& _ 
                "CTNO, @PRPR_NAME, @PRPR_BIDPRICE, @PRPR_QUANTITY, @PRPR_CREATED_DATE, @PRPR_TOTA"& _ 
                "LBIDPRICE, @PRPR_IS_LOWEST);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PRPR_NO, PRAB_REF_NO, PRPR_CONTACTNO, PRPR_"& _ 
                "NAME, PRPR_BIDPRICE, PRPR_QUANTITY, PRPR_CREATED_DATE, PRPR_TOTALBIDPRICE, PRPR_"& _ 
                "IS_LOWEST FROM tblM4_PURCHASEREQUEST_PROVIDER WHERE (PRPR_NO = @PRPR_NO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRAB_REF_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRAB_REF_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_CONTACTNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_CONTACTNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_BIDPRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRPR_BIDPRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_QUANTITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_TOTALBIDPRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRPR_TOTALBIDPRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_IS_LOWEST", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_IS_LOWEST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_PURCHASEREQUEST_PROVIDER] SET [PRPR_NO] = @PRPR_NO, [PRAB_REF_NO] ="& _ 
                " @PRAB_REF_NO, [PRPR_CONTACTNO] = @PRPR_CONTACTNO, [PRPR_NAME] = @PRPR_NAME, [PR"& _ 
                "PR_BIDPRICE] = @PRPR_BIDPRICE, [PRPR_QUANTITY] = @PRPR_QUANTITY, [PRPR_CREATED_D"& _ 
                "ATE] = @PRPR_CREATED_DATE, [PRPR_TOTALBIDPRICE] = @PRPR_TOTALBIDPRICE, [PRPR_IS_"& _ 
                "LOWEST] = @PRPR_IS_LOWEST WHERE (([PRPR_NO] = @Original_PRPR_NO) AND ([PRAB_REF_"& _ 
                "NO] = @Original_PRAB_REF_NO) AND ([PRPR_CONTACTNO] = @Original_PRPR_CONTACTNO) A"& _ 
                "ND ([PRPR_NAME] = @Original_PRPR_NAME) AND ([PRPR_BIDPRICE] = @Original_PRPR_BID"& _ 
                "PRICE) AND ([PRPR_QUANTITY] = @Original_PRPR_QUANTITY) AND ([PRPR_CREATED_DATE] "& _ 
                "= @Original_PRPR_CREATED_DATE) AND ([PRPR_TOTALBIDPRICE] = @Original_PRPR_TOTALB"& _ 
                "IDPRICE) AND ([PRPR_IS_LOWEST] = @Original_PRPR_IS_LOWEST));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PRPR_NO, PR"& _ 
                "AB_REF_NO, PRPR_CONTACTNO, PRPR_NAME, PRPR_BIDPRICE, PRPR_QUANTITY, PRPR_CREATED"& _ 
                "_DATE, PRPR_TOTALBIDPRICE, PRPR_IS_LOWEST FROM tblM4_PURCHASEREQUEST_PROVIDER WH"& _ 
                "ERE (PRPR_NO = @PRPR_NO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRAB_REF_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRAB_REF_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_CONTACTNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_CONTACTNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_BIDPRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRPR_BIDPRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_QUANTITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_TOTALBIDPRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRPR_TOTALBIDPRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRPR_IS_LOWEST", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_IS_LOWEST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRAB_REF_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRAB_REF_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_CONTACTNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_CONTACTNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_BIDPRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRPR_BIDPRICE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_QUANTITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_TOTALBIDPRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRPR_TOTALBIDPRICE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRPR_IS_LOWEST", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRPR_IS_LOWEST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblM4_PURCHASEREQUEST_PROVIDER.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_PURCHASEREQ"& _ 
                "UEST_PROVIDER"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_PROVIDERDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_PROVIDERDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_PROVIDERDataTable = New DS_PROPERTYDB.tblM4_PURCHASEREQUEST_PROVIDERDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_PURCHASEREQUEST_PROVIDERDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_PURCHASEREQUEST_PROVIDER")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_PRPR_NO As String, ByVal Original_PRAB_REF_NO As String, ByVal Original_PRPR_CONTACTNO As String, ByVal Original_PRPR_NAME As String, ByVal Original_PRPR_BIDPRICE As Decimal, ByVal Original_PRPR_QUANTITY As Integer, ByVal Original_PRPR_CREATED_DATE As Date, ByVal Original_PRPR_TOTALBIDPRICE As Decimal, ByVal Original_PRPR_IS_LOWEST As Boolean) As Integer
            If (Original_PRPR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRPR_NO")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PRPR_NO,String)
            End If
            If (Original_PRAB_REF_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRAB_REF_NO")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_PRAB_REF_NO,String)
            End If
            If (Original_PRPR_CONTACTNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRPR_CONTACTNO")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_PRPR_CONTACTNO,String)
            End If
            If (Original_PRPR_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRPR_NAME")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_PRPR_NAME,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_PRPR_BIDPRICE,Decimal)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_PRPR_QUANTITY,Integer)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_PRPR_CREATED_DATE,Date)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_PRPR_TOTALBIDPRICE,Decimal)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_PRPR_IS_LOWEST,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal PRPR_NO As String, ByVal PRAB_REF_NO As String, ByVal PRPR_CONTACTNO As String, ByVal PRPR_NAME As String, ByVal PRPR_BIDPRICE As Decimal, ByVal PRPR_QUANTITY As Integer, ByVal PRPR_CREATED_DATE As Date, ByVal PRPR_TOTALBIDPRICE As Decimal, ByVal PRPR_IS_LOWEST As Boolean) As Integer
            If (PRPR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRPR_NO")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PRPR_NO,String)
            End If
            If (PRAB_REF_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRAB_REF_NO")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PRAB_REF_NO,String)
            End If
            If (PRPR_CONTACTNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRPR_CONTACTNO")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PRPR_CONTACTNO,String)
            End If
            If (PRPR_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRPR_NAME")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PRPR_NAME,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(PRPR_BIDPRICE,Decimal)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(PRPR_QUANTITY,Integer)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(PRPR_CREATED_DATE,Date)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(PRPR_TOTALBIDPRICE,Decimal)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(PRPR_IS_LOWEST,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PRPR_NO As String,  _
                    ByVal PRAB_REF_NO As String,  _
                    ByVal PRPR_CONTACTNO As String,  _
                    ByVal PRPR_NAME As String,  _
                    ByVal PRPR_BIDPRICE As Decimal,  _
                    ByVal PRPR_QUANTITY As Integer,  _
                    ByVal PRPR_CREATED_DATE As Date,  _
                    ByVal PRPR_TOTALBIDPRICE As Decimal,  _
                    ByVal PRPR_IS_LOWEST As Boolean,  _
                    ByVal Original_PRPR_NO As String,  _
                    ByVal Original_PRAB_REF_NO As String,  _
                    ByVal Original_PRPR_CONTACTNO As String,  _
                    ByVal Original_PRPR_NAME As String,  _
                    ByVal Original_PRPR_BIDPRICE As Decimal,  _
                    ByVal Original_PRPR_QUANTITY As Integer,  _
                    ByVal Original_PRPR_CREATED_DATE As Date,  _
                    ByVal Original_PRPR_TOTALBIDPRICE As Decimal,  _
                    ByVal Original_PRPR_IS_LOWEST As Boolean) As Integer
            If (PRPR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRPR_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PRPR_NO,String)
            End If
            If (PRAB_REF_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRAB_REF_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PRAB_REF_NO,String)
            End If
            If (PRPR_CONTACTNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRPR_CONTACTNO")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PRPR_CONTACTNO,String)
            End If
            If (PRPR_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRPR_NAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PRPR_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PRPR_BIDPRICE,Decimal)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PRPR_QUANTITY,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PRPR_CREATED_DATE,Date)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(PRPR_TOTALBIDPRICE,Decimal)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(PRPR_IS_LOWEST,Boolean)
            If (Original_PRPR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRPR_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_PRPR_NO,String)
            End If
            If (Original_PRAB_REF_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRAB_REF_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_PRAB_REF_NO,String)
            End If
            If (Original_PRPR_CONTACTNO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRPR_CONTACTNO")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_PRPR_CONTACTNO,String)
            End If
            If (Original_PRPR_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRPR_NAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_PRPR_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_PRPR_BIDPRICE,Decimal)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_PRPR_QUANTITY,Integer)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_PRPR_CREATED_DATE,Date)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_PRPR_TOTALBIDPRICE,Decimal)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_PRPR_IS_LOWEST,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PRAB_REF_NO As String,  _
                    ByVal PRPR_CONTACTNO As String,  _
                    ByVal PRPR_NAME As String,  _
                    ByVal PRPR_BIDPRICE As Decimal,  _
                    ByVal PRPR_QUANTITY As Integer,  _
                    ByVal PRPR_CREATED_DATE As Date,  _
                    ByVal PRPR_TOTALBIDPRICE As Decimal,  _
                    ByVal PRPR_IS_LOWEST As Boolean,  _
                    ByVal Original_PRPR_NO As String,  _
                    ByVal Original_PRAB_REF_NO As String,  _
                    ByVal Original_PRPR_CONTACTNO As String,  _
                    ByVal Original_PRPR_NAME As String,  _
                    ByVal Original_PRPR_BIDPRICE As Decimal,  _
                    ByVal Original_PRPR_QUANTITY As Integer,  _
                    ByVal Original_PRPR_CREATED_DATE As Date,  _
                    ByVal Original_PRPR_TOTALBIDPRICE As Decimal,  _
                    ByVal Original_PRPR_IS_LOWEST As Boolean) As Integer
            Return Me.Update(Original_PRPR_NO, PRAB_REF_NO, PRPR_CONTACTNO, PRPR_NAME, PRPR_BIDPRICE, PRPR_QUANTITY, PRPR_CREATED_DATE, PRPR_TOTALBIDPRICE, PRPR_IS_LOWEST, Original_PRPR_NO, Original_PRAB_REF_NO, Original_PRPR_CONTACTNO, Original_PRPR_NAME, Original_PRPR_BIDPRICE, Original_PRPR_QUANTITY, Original_PRPR_CREATED_DATE, Original_PRPR_TOTALBIDPRICE, Original_PRPR_IS_LOWEST)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_INVENTORY_ITEMS_LOCATION"
            tableMapping.ColumnMappings.Add("LOC_ITEM_CODE", "LOC_ITEM_CODE")
            tableMapping.ColumnMappings.Add("LOC_LOCATION_ID", "LOC_LOCATION_ID")
            tableMapping.ColumnMappings.Add("LOC_CREATED_DATE", "LOC_CREATED_DATE")
            tableMapping.ColumnMappings.Add("LOC_UPDATED_DATE", "LOC_UPDATED_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_INVENTORY_ITEMS_LOCATION] WHERE (([LOC_ITEM_CODE] = @Original_"& _ 
                "LOC_ITEM_CODE) AND ([LOC_LOCATION_ID] = @Original_LOC_LOCATION_ID) AND ([LOC_CRE"& _ 
                "ATED_DATE] = @Original_LOC_CREATED_DATE) AND ((@IsNull_LOC_UPDATED_DATE = 1 AND "& _ 
                "[LOC_UPDATED_DATE] IS NULL) OR ([LOC_UPDATED_DATE] = @Original_LOC_UPDATED_DATE)"& _ 
                "))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_ITEM_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_LOCATION_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_LOCATION_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LOC_UPDATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_INVENTORY_ITEMS_LOCATION] ([LOC_ITEM_CODE], [LOC_LOCATION_ID],"& _ 
                " [LOC_CREATED_DATE], [LOC_UPDATED_DATE]) VALUES (@LOC_ITEM_CODE, @LOC_LOCATION_I"& _ 
                "D, @LOC_CREATED_DATE, @LOC_UPDATED_DATE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT LOC_ITEM_CODE, LOC_LOCATION_ID"& _ 
                ", LOC_CREATED_DATE, LOC_UPDATED_DATE FROM tblM4_INVENTORY_ITEMS_LOCATION WHERE ("& _ 
                "LOC_ITEM_CODE = @LOC_ITEM_CODE)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_LOCATION_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_LOCATION_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_UPDATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_INVENTORY_ITEMS_LOCATION] SET [LOC_ITEM_CODE] = @LOC_ITEM_CODE, [LO"& _ 
                "C_LOCATION_ID] = @LOC_LOCATION_ID, [LOC_CREATED_DATE] = @LOC_CREATED_DATE, [LOC_"& _ 
                "UPDATED_DATE] = @LOC_UPDATED_DATE WHERE (([LOC_ITEM_CODE] = @Original_LOC_ITEM_C"& _ 
                "ODE) AND ([LOC_LOCATION_ID] = @Original_LOC_LOCATION_ID) AND ([LOC_CREATED_DATE]"& _ 
                " = @Original_LOC_CREATED_DATE) AND ((@IsNull_LOC_UPDATED_DATE = 1 AND [LOC_UPDAT"& _ 
                "ED_DATE] IS NULL) OR ([LOC_UPDATED_DATE] = @Original_LOC_UPDATED_DATE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELEC"& _ 
                "T LOC_ITEM_CODE, LOC_LOCATION_ID, LOC_CREATED_DATE, LOC_UPDATED_DATE FROM tblM4_"& _ 
                "INVENTORY_ITEMS_LOCATION WHERE (LOC_ITEM_CODE = @LOC_ITEM_CODE)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_LOCATION_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_LOCATION_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_UPDATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_ITEM_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_LOCATION_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_LOCATION_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LOC_UPDATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblM4_INVENTORY_ITEMS_LOCATION.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENTORY_I"& _ 
                "TEMS_LOCATION"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM tblM4_INVENTORY_ITEMS_LOCATION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (LOC_ITEM_CODE = @loc_it"& _ 
                "em_code)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@loc_item_code", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_ITEM_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO tblM4_INVENTORY_ITEMS_LOCATION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (LOC_ITEM_CO"& _ 
                "DE, LOC_LOCATION_ID)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@LOC_ITEM_CODE,@LOC_LOCATION_ID); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_LOCATION_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_LOCATION_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMS_LOCATIONDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_INVENTORY_ITEMS_LOCATIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMS_LOCATIONDataTable = New DS_PROPERTYDB.tblM4_INVENTORY_ITEMS_LOCATIONDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMS_LOCATIONDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_INVENTORY_ITEMS_LOCATION")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_LOC_ITEM_CODE As String, ByVal Original_LOC_LOCATION_ID As Integer, ByVal Original_LOC_CREATED_DATE As Date, ByVal Original_LOC_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            If (Original_LOC_ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LOC_ITEM_CODE")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_LOC_ITEM_CODE,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_LOC_LOCATION_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_LOC_CREATED_DATE,Date)
            If (Original_LOC_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_LOC_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal LOC_ITEM_CODE As String, ByVal LOC_LOCATION_ID As Integer, ByVal LOC_CREATED_DATE As Date, ByVal LOC_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            If (LOC_ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LOC_ITEM_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(LOC_ITEM_CODE,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(LOC_LOCATION_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(LOC_CREATED_DATE,Date)
            If (LOC_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(LOC_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal LOC_ITEM_CODE As String, ByVal LOC_LOCATION_ID As Integer, ByVal LOC_CREATED_DATE As Date, ByVal LOC_UPDATED_DATE As Global.System.Nullable(Of Date), ByVal Original_LOC_ITEM_CODE As String, ByVal Original_LOC_LOCATION_ID As Integer, ByVal Original_LOC_CREATED_DATE As Date, ByVal Original_LOC_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            If (LOC_ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LOC_ITEM_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(LOC_ITEM_CODE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(LOC_LOCATION_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(LOC_CREATED_DATE,Date)
            If (LOC_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(LOC_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_LOC_ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LOC_ITEM_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_LOC_ITEM_CODE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_LOC_LOCATION_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_LOC_CREATED_DATE,Date)
            If (Original_LOC_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_LOC_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal LOC_LOCATION_ID As Integer, ByVal LOC_CREATED_DATE As Date, ByVal LOC_UPDATED_DATE As Global.System.Nullable(Of Date), ByVal Original_LOC_ITEM_CODE As String, ByVal Original_LOC_LOCATION_ID As Integer, ByVal Original_LOC_CREATED_DATE As Date, ByVal Original_LOC_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_LOC_ITEM_CODE, LOC_LOCATION_ID, LOC_CREATED_DATE, LOC_UPDATED_DATE, Original_LOC_ITEM_CODE, Original_LOC_LOCATION_ID, Original_LOC_CREATED_DATE, Original_LOC_UPDATED_DATE)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DQ_ITEMS_IN_LOCATION(ByVal loc_item_code As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (loc_item_code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("loc_item_code")
            Else
                command.Parameters(0).Value = CType(loc_item_code,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function IQ_INVENTORY_ITEMS(ByVal LOC_ITEM_CODE As String, ByVal LOC_LOCATION_ID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (LOC_ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LOC_ITEM_CODE")
            Else
                command.Parameters(0).Value = CType(LOC_ITEM_CODE,String)
            End If
            command.Parameters(1).Value = CType(LOC_LOCATION_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_INVENTORY_ITEMS_DEFLOCATION"
            tableMapping.ColumnMappings.Add("LOC_LOCATION_ID", "LOC_LOCATION_ID")
            tableMapping.ColumnMappings.Add("LOC_NAME", "LOC_NAME")
            tableMapping.ColumnMappings.Add("LOC_ISACTIVE", "LOC_ISACTIVE")
            tableMapping.ColumnMappings.Add("LOC_CREATED_DATE", "LOC_CREATED_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_INVENTORY_ITEMS_DEFLOCATION] WHERE (([LOC_LOCATION_ID] = @Orig"& _ 
                "inal_LOC_LOCATION_ID) AND ((@IsNull_LOC_NAME = 1 AND [LOC_NAME] IS NULL) OR ([LO"& _ 
                "C_NAME] = @Original_LOC_NAME)) AND ((@IsNull_LOC_ISACTIVE = 1 AND [LOC_ISACTIVE]"& _ 
                " IS NULL) OR ([LOC_ISACTIVE] = @Original_LOC_ISACTIVE)) AND ((@IsNull_LOC_CREATE"& _ 
                "D_DATE = 1 AND [LOC_CREATED_DATE] IS NULL) OR ([LOC_CREATED_DATE] = @Original_LO"& _ 
                "C_CREATED_DATE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_LOCATION_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_LOCATION_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LOC_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LOC_ISACTIVE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_ISACTIVE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_ISACTIVE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LOC_CREATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_CREATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_INVENTORY_ITEMS_DEFLOCATION] ([LOC_LOCATION_ID], [LOC_NAME], ["& _ 
                "LOC_ISACTIVE], [LOC_CREATED_DATE]) VALUES (@LOC_LOCATION_ID, @LOC_NAME, @LOC_ISA"& _ 
                "CTIVE, @LOC_CREATED_DATE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT LOC_LOCATION_ID, LOC_NAME, LOC_ISACTIVE, LOC_"& _ 
                "CREATED_DATE FROM tblM4_INVENTORY_ITEMS_DEFLOCATION WHERE (LOC_LOCATION_ID = @LO"& _ 
                "C_LOCATION_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_LOCATION_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_LOCATION_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_ISACTIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_INVENTORY_ITEMS_DEFLOCATION] SET [LOC_LOCATION_ID] = @LOC_LOCATION_"& _ 
                "ID, [LOC_NAME] = @LOC_NAME, [LOC_ISACTIVE] = @LOC_ISACTIVE, [LOC_CREATED_DATE] ="& _ 
                " @LOC_CREATED_DATE WHERE (([LOC_LOCATION_ID] = @Original_LOC_LOCATION_ID) AND (("& _ 
                "@IsNull_LOC_NAME = 1 AND [LOC_NAME] IS NULL) OR ([LOC_NAME] = @Original_LOC_NAME"& _ 
                ")) AND ((@IsNull_LOC_ISACTIVE = 1 AND [LOC_ISACTIVE] IS NULL) OR ([LOC_ISACTIVE]"& _ 
                " = @Original_LOC_ISACTIVE)) AND ((@IsNull_LOC_CREATED_DATE = 1 AND [LOC_CREATED_"& _ 
                "DATE] IS NULL) OR ([LOC_CREATED_DATE] = @Original_LOC_CREATED_DATE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT L"& _ 
                "OC_LOCATION_ID, LOC_NAME, LOC_ISACTIVE, LOC_CREATED_DATE FROM tblM4_INVENTORY_IT"& _ 
                "EMS_DEFLOCATION WHERE (LOC_LOCATION_ID = @LOC_LOCATION_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_LOCATION_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_LOCATION_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_ISACTIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_LOCATION_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_LOCATION_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LOC_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LOC_ISACTIVE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_ISACTIVE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_ISACTIVE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LOC_CREATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_CREATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOC_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblM4_INVENTORY_ITEMS_DEFLOCATION.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENTOR"& _ 
                "Y_ITEMS_DEFLOCATION"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable = New DS_PROPERTYDB.tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMS_DEFLOCATIONDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_INVENTORY_ITEMS_DEFLOCATION")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_LOC_LOCATION_ID As Integer, ByVal Original_LOC_NAME As String, ByVal Original_LOC_ISACTIVE As Global.System.Nullable(Of Boolean), ByVal Original_LOC_CREATED_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_LOC_LOCATION_ID,Integer)
            If (Original_LOC_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_LOC_NAME,String)
            End If
            If (Original_LOC_ISACTIVE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_LOC_ISACTIVE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_LOC_CREATED_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_LOC_CREATED_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal LOC_LOCATION_ID As Integer, ByVal LOC_NAME As String, ByVal LOC_ISACTIVE As Global.System.Nullable(Of Boolean), ByVal LOC_CREATED_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(LOC_LOCATION_ID,Integer)
            If (LOC_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(LOC_NAME,String)
            End If
            If (LOC_ISACTIVE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(LOC_ISACTIVE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (LOC_CREATED_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(LOC_CREATED_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal LOC_LOCATION_ID As Integer, ByVal LOC_NAME As String, ByVal LOC_ISACTIVE As Global.System.Nullable(Of Boolean), ByVal LOC_CREATED_DATE As Global.System.Nullable(Of Date), ByVal Original_LOC_LOCATION_ID As Integer, ByVal Original_LOC_NAME As String, ByVal Original_LOC_ISACTIVE As Global.System.Nullable(Of Boolean), ByVal Original_LOC_CREATED_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(LOC_LOCATION_ID,Integer)
            If (LOC_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(LOC_NAME,String)
            End If
            If (LOC_ISACTIVE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(LOC_ISACTIVE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (LOC_CREATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(LOC_CREATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_LOC_LOCATION_ID,Integer)
            If (Original_LOC_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_LOC_NAME,String)
            End If
            If (Original_LOC_ISACTIVE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_LOC_ISACTIVE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_LOC_CREATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_LOC_CREATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal LOC_NAME As String, ByVal LOC_ISACTIVE As Global.System.Nullable(Of Boolean), ByVal LOC_CREATED_DATE As Global.System.Nullable(Of Date), ByVal Original_LOC_LOCATION_ID As Integer, ByVal Original_LOC_NAME As String, ByVal Original_LOC_ISACTIVE As Global.System.Nullable(Of Boolean), ByVal Original_LOC_CREATED_DATE As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_LOC_LOCATION_ID, LOC_NAME, LOC_ISACTIVE, LOC_CREATED_DATE, Original_LOC_LOCATION_ID, Original_LOC_NAME, Original_LOC_ISACTIVE, Original_LOC_CREATED_DATE)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPM4_INVENTORYDGVLISTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPM4_INVENTORYDGVLIST"
            tableMapping.ColumnMappings.Add("ITEM_CODE", "ITEM_CODE")
            tableMapping.ColumnMappings.Add("SC_NO", "SC_NO")
            tableMapping.ColumnMappings.Add("ITBR_NO", "ITBR_NO")
            tableMapping.ColumnMappings.Add("ITEM_SERIAL_NO", "ITEM_SERIAL_NO")
            tableMapping.ColumnMappings.Add("ITEM_DESCRIPTION", "ITEM_DESCRIPTION")
            tableMapping.ColumnMappings.Add("ITEM_UNIT", "ITEM_UNIT")
            tableMapping.ColumnMappings.Add("ITEM_UNIT_COST", "ITEM_UNIT_COST")
            tableMapping.ColumnMappings.Add("ITEM_TOTAL_COST", "ITEM_TOTAL_COST")
            tableMapping.ColumnMappings.Add("ITEM_QUANTITY", "ITEM_QUANTITY")
            tableMapping.ColumnMappings.Add("ITEM_DATE_AQUISITION", "ITEM_DATE_AQUISITION")
            tableMapping.ColumnMappings.Add("ITEM_CREATED_DATE", "ITEM_CREATED_DATE")
            tableMapping.ColumnMappings.Add("ITEM_UPDATED_DATE", "ITEM_UPDATED_DATE")
            tableMapping.ColumnMappings.Add("CAT_NAME", "CAT_NAME")
            tableMapping.ColumnMappings.Add("SC_SUBCATEGORY_NAME", "SC_SUBCATEGORY_NAME")
            tableMapping.ColumnMappings.Add("ITBR_NAME", "ITBR_NAME")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SPM4_INVENTORYDGVLIST"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@search", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.SPM4_INVENTORYDGVLISTDataTable, ByVal search As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (search Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(search,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal search As String) As DS_PROPERTYDB.SPM4_INVENTORYDGVLISTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (search Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(search,String)
            End If
            Dim dataTable As DS_PROPERTYDB.SPM4_INVENTORYDGVLISTDataTable = New DS_PROPERTYDB.SPM4_INVENTORYDGVLISTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_INVENTORY_CATEGORYTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_INVENTORY_CATEGORY"
            tableMapping.ColumnMappings.Add("CAT_CODE", "CAT_CODE")
            tableMapping.ColumnMappings.Add("CAT_NAME", "CAT_NAME")
            tableMapping.ColumnMappings.Add("CAT_STATUS", "CAT_STATUS")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO", "HRIS_EMPNO")
            tableMapping.ColumnMappings.Add("CAT_CREATED_DATE", "CAT_CREATED_DATE")
            tableMapping.ColumnMappings.Add("CAT_UPDATED_DATE", "CAT_UPDATED_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_INVENTORY_CATEGORY] WHERE (([CAT_CODE] = @Original_CAT_CODE) A"& _ 
                "ND ((@IsNull_CAT_STATUS = 1 AND [CAT_STATUS] IS NULL) OR ([CAT_STATUS] = @Origin"& _ 
                "al_CAT_STATUS)) AND ((@IsNull_HRIS_EMPNO = 1 AND [HRIS_EMPNO] IS NULL) OR ([HRIS"& _ 
                "_EMPNO] = @Original_HRIS_EMPNO)) AND ([CAT_CREATED_DATE] = @Original_CAT_CREATED"& _ 
                "_DATE) AND ((@IsNull_CAT_UPDATED_DATE = 1 AND [CAT_UPDATED_DATE] IS NULL) OR ([C"& _ 
                "AT_UPDATED_DATE] = @Original_CAT_UPDATED_DATE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAT_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAT_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAT_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAT_UPDATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAT_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_INVENTORY_CATEGORY] ([CAT_CODE], [CAT_NAME], [CAT_STATUS], [HR"& _ 
                "IS_EMPNO], [CAT_CREATED_DATE], [CAT_UPDATED_DATE]) VALUES (@CAT_CODE, @CAT_NAME,"& _ 
                " @CAT_STATUS, @HRIS_EMPNO, @CAT_CREATED_DATE, @CAT_UPDATED_DATE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CAT_CO"& _ 
                "DE, CAT_NAME, CAT_STATUS, HRIS_EMPNO, CAT_CREATED_DATE, CAT_UPDATED_DATE FROM tb"& _ 
                "lM4_INVENTORY_CATEGORY WHERE (CAT_CODE = @CAT_CODE) ORDER BY CAT_NAME"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_UPDATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_INVENTORY_CATEGORY] SET [CAT_CODE] = @CAT_CODE, [CAT_NAME] = @CAT_N"& _ 
                "AME, [CAT_STATUS] = @CAT_STATUS, [HRIS_EMPNO] = @HRIS_EMPNO, [CAT_CREATED_DATE] "& _ 
                "= @CAT_CREATED_DATE, [CAT_UPDATED_DATE] = @CAT_UPDATED_DATE WHERE (([CAT_CODE] ="& _ 
                " @Original_CAT_CODE) AND ((@IsNull_CAT_STATUS = 1 AND [CAT_STATUS] IS NULL) OR ("& _ 
                "[CAT_STATUS] = @Original_CAT_STATUS)) AND ((@IsNull_HRIS_EMPNO = 1 AND [HRIS_EMP"& _ 
                "NO] IS NULL) OR ([HRIS_EMPNO] = @Original_HRIS_EMPNO)) AND ([CAT_CREATED_DATE] ="& _ 
                " @Original_CAT_CREATED_DATE) AND ((@IsNull_CAT_UPDATED_DATE = 1 AND [CAT_UPDATED"& _ 
                "_DATE] IS NULL) OR ([CAT_UPDATED_DATE] = @Original_CAT_UPDATED_DATE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT "& _ 
                "CAT_CODE, CAT_NAME, CAT_STATUS, HRIS_EMPNO, CAT_CREATED_DATE, CAT_UPDATED_DATE F"& _ 
                "ROM tblM4_INVENTORY_CATEGORY WHERE (CAT_CODE = @CAT_CODE) ORDER BY CAT_NAME"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_UPDATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAT_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAT_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAT_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAT_UPDATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAT_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CAT_CODE, CAT_NAME, CAT_STATUS, HRIS_EMPNO, CAT_CREATED_DATE, CAT_U"& _ 
                "PDATED_DATE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENTORY_CATEGORY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CAT_STATUS "& _ 
                "= 1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY CAT_NAME"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CAT_CODE, CAT_CREATED_DATE, CAT_NAME, CAT_STATUS, CAT_UPDATED_DATE, HRIS_E"& _ 
                "MPNO FROM tblM4_INVENTORY_CATEGORY WHERE (CAT_STATUS = 1) ORDER BY CAT_NAME"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        CAT_CODE AS 'Category Code', CAT_NAME AS 'Category Name', CAT_STATU"& _ 
                "S AS 'Status',  CAT_CREATED_DATE AS 'Date Created'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENT"& _ 
                "ORY_CATEGORY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where CAT_NAME LIKE '%'+@CATNAME + '%'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY CAT_NAME"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CATNAME", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "INSERT INTO [tblM4_INVENTORY_CATEGORY] ([CAT_CODE], [CAT_NAME], [CAT_STATUS], [HR"& _ 
                "IS_EMPNO]) VALUES (@CAT_CODE, @CAT_NAME, @CAT_STATUS, @HRIS_EMPNO);"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_NAME", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_STATUS", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "UPDATE       tblM4_INVENTORY_CATEGORY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET               CAT_NAME = @CAT_NAME, CA"& _ 
                "T_STATUS = @CAT_STATUS, HRIS_EMPNO = @HRIS_EMPNO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CAT_CODE = @Orig"& _ 
                "inal_CAT_CODE); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_NAME", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_STATUS", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_CATEGORYDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_INVENTORY_CATEGORYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_INVENTORY_CATEGORYDataTable = New DS_PROPERTYDB.tblM4_INVENTORY_CATEGORYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByActive(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_CATEGORYDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByActive() As DS_PROPERTYDB.tblM4_INVENTORY_CATEGORYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As DS_PROPERTYDB.tblM4_INVENTORY_CATEGORYDataTable = New DS_PROPERTYDB.tblM4_INVENTORY_CATEGORYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_CATEGORYDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_INVENTORY_CATEGORY")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CAT_CODE As String, ByVal Original_CAT_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String, ByVal Original_CAT_CREATED_DATE As Date, ByVal Original_CAT_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            If (Original_CAT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CAT_CODE")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CAT_CODE,String)
            End If
            If (Original_CAT_STATUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CAT_STATUS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_HRIS_EMPNO,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_CAT_CREATED_DATE,Date)
            If (Original_CAT_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_CAT_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CAT_CODE As String, ByVal CAT_NAME As String, ByVal CAT_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String, ByVal CAT_CREATED_DATE As Date, ByVal CAT_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            If (CAT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CAT_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CAT_CODE,String)
            End If
            If (CAT_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CAT_NAME,String)
            End If
            If (CAT_STATUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CAT_STATUS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(HRIS_EMPNO,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(CAT_CREATED_DATE,Date)
            If (CAT_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CAT_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CAT_CODE As String, ByVal CAT_NAME As String, ByVal CAT_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String, ByVal CAT_CREATED_DATE As Date, ByVal CAT_UPDATED_DATE As Global.System.Nullable(Of Date), ByVal Original_CAT_CODE As String, ByVal Original_CAT_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String, ByVal Original_CAT_CREATED_DATE As Date, ByVal Original_CAT_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            If (CAT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CAT_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CAT_CODE,String)
            End If
            If (CAT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CAT_NAME,String)
            End If
            If (CAT_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CAT_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(HRIS_EMPNO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CAT_CREATED_DATE,Date)
            If (CAT_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CAT_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_CAT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CAT_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_CAT_CODE,String)
            End If
            If (Original_CAT_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_CAT_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_HRIS_EMPNO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_CAT_CREATED_DATE,Date)
            If (Original_CAT_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_CAT_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CAT_NAME As String, ByVal CAT_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String, ByVal CAT_CREATED_DATE As Date, ByVal CAT_UPDATED_DATE As Global.System.Nullable(Of Date), ByVal Original_CAT_CODE As String, ByVal Original_CAT_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String, ByVal Original_CAT_CREATED_DATE As Date, ByVal Original_CAT_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_CAT_CODE, CAT_NAME, CAT_STATUS, HRIS_EMPNO, CAT_CREATED_DATE, CAT_UPDATED_DATE, Original_CAT_CODE, Original_CAT_STATUS, Original_HRIS_EMPNO, Original_CAT_CREATED_DATE, Original_CAT_UPDATED_DATE)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function FillByCatName(ByVal CATNAME As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (CATNAME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(CATNAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function IQ_INVENTORY_CATEGORY(ByVal CAT_CODE As String, ByVal CAT_NAME As String, ByVal CAT_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (CAT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CAT_CODE")
            Else
                command.Parameters(0).Value = CType(CAT_CODE,String)
            End If
            If (CAT_NAME Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(CAT_NAME,String)
            End If
            If (CAT_STATUS.HasValue = true) Then
                command.Parameters(2).Value = CType(CAT_STATUS.Value,Integer)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(HRIS_EMPNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UQ_INVENTORY_CATEGORY(ByVal CAT_NAME As String, ByVal CAT_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String, ByVal Original_CAT_CODE As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            If (CAT_NAME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(CAT_NAME,String)
            End If
            If (CAT_STATUS.HasValue = true) Then
                command.Parameters(1).Value = CType(CAT_STATUS.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(HRIS_EMPNO,String)
            End If
            If (Original_CAT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CAT_CODE")
            Else
                command.Parameters(3).Value = CType(Original_CAT_CODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_INVENTORY_ITEMBRANDTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_INVENTORY_ITEMBRAND"
            tableMapping.ColumnMappings.Add("ITBR_NO", "ITBR_NO")
            tableMapping.ColumnMappings.Add("ITBR_NAME", "ITBR_NAME")
            tableMapping.ColumnMappings.Add("ITBR_CREATED_DATE", "ITBR_CREATED_DATE")
            tableMapping.ColumnMappings.Add("ITBR_UPDATED_DATE", "ITBR_UPDATED_DATE")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO", "HRIS_EMPNO")
            tableMapping.ColumnMappings.Add("ITBR_STATUS", "ITBR_STATUS")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_INVENTORY_ITEMBRAND] WHERE (([ITBR_NO] = @Original_ITBR_NO) AN"& _ 
                "D ((@IsNull_ITBR_NAME = 1 AND [ITBR_NAME] IS NULL) OR ([ITBR_NAME] = @Original_I"& _ 
                "TBR_NAME)) AND ([ITBR_CREATED_DATE] = @Original_ITBR_CREATED_DATE) AND ((@IsNull"& _ 
                "_ITBR_UPDATED_DATE = 1 AND [ITBR_UPDATED_DATE] IS NULL) OR ([ITBR_UPDATED_DATE] "& _ 
                "= @Original_ITBR_UPDATED_DATE)) AND ((@IsNull_HRIS_EMPNO = 1 AND [HRIS_EMPNO] IS"& _ 
                " NULL) OR ([HRIS_EMPNO] = @Original_HRIS_EMPNO)) AND ((@IsNull_ITBR_STATUS = 1 A"& _ 
                "ND [ITBR_STATUS] IS NULL) OR ([ITBR_STATUS] = @Original_ITBR_STATUS)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITBR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ITBR_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITBR_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITBR_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ITBR_UPDATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITBR_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ITBR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITBR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_INVENTORY_ITEMBRAND] ([ITBR_NO], [ITBR_NAME], [ITBR_CREATED_DA"& _ 
                "TE], [ITBR_UPDATED_DATE], [HRIS_EMPNO], [ITBR_STATUS]) VALUES (@ITBR_NO, @ITBR_N"& _ 
                "AME, @ITBR_CREATED_DATE, @ITBR_UPDATED_DATE, @HRIS_EMPNO, @ITBR_STATUS);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT"& _ 
                " ITBR_NO, ITBR_NAME, ITBR_CREATED_DATE, ITBR_UPDATED_DATE, HRIS_EMPNO, ITBR_STAT"& _ 
                "US FROM tblM4_INVENTORY_ITEMBRAND WHERE (ITBR_NO = @ITBR_NO) ORDER BY ITBR_NAME"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_UPDATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_INVENTORY_ITEMBRAND] SET [ITBR_NO] = @ITBR_NO, [ITBR_NAME] = @ITBR_"& _ 
                "NAME, [ITBR_CREATED_DATE] = @ITBR_CREATED_DATE, [ITBR_UPDATED_DATE] = @ITBR_UPDA"& _ 
                "TED_DATE, [HRIS_EMPNO] = @HRIS_EMPNO, [ITBR_STATUS] = @ITBR_STATUS WHERE (([ITBR"& _ 
                "_NO] = @Original_ITBR_NO) AND ((@IsNull_ITBR_NAME = 1 AND [ITBR_NAME] IS NULL) O"& _ 
                "R ([ITBR_NAME] = @Original_ITBR_NAME)) AND ([ITBR_CREATED_DATE] = @Original_ITBR"& _ 
                "_CREATED_DATE) AND ((@IsNull_ITBR_UPDATED_DATE = 1 AND [ITBR_UPDATED_DATE] IS NU"& _ 
                "LL) OR ([ITBR_UPDATED_DATE] = @Original_ITBR_UPDATED_DATE)) AND ((@IsNull_HRIS_E"& _ 
                "MPNO = 1 AND [HRIS_EMPNO] IS NULL) OR ([HRIS_EMPNO] = @Original_HRIS_EMPNO)) AND"& _ 
                " ((@IsNull_ITBR_STATUS = 1 AND [ITBR_STATUS] IS NULL) OR ([ITBR_STATUS] = @Origi"& _ 
                "nal_ITBR_STATUS)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ITBR_NO, ITBR_NAME, ITBR_CREATED_DATE, ITBR_UPDATED_"& _ 
                "DATE, HRIS_EMPNO, ITBR_STATUS FROM tblM4_INVENTORY_ITEMBRAND WHERE (ITBR_NO = @I"& _ 
                "TBR_NO) ORDER BY ITBR_NAME"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_UPDATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITBR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ITBR_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITBR_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITBR_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ITBR_UPDATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITBR_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ITBR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITBR_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ITBR_NO, ITBR_NAME, ITBR_CREATED_DATE, ITBR_UPDATED_DATE, HRIS_EMPN"& _ 
                "O, ITBR_STATUS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENTORY_ITEMBRAND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ITBR_NAME"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "INSERT INTO tblM4_INVENTORY_ITEMBRAND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (ITBR_NO, ITBR_NA"& _ 
                "ME, HRIS_EMPNO, ITBR_STATUS)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@ITBR_NO,@ITBR_NAME,@HRIS_EMPNO,@IT"& _ 
                "BR_STATUS)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_NAME", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_STATUS", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "UPDATE       tblM4_INVENTORY_ITEMBRAND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                 ITBR_NAME = @ITBR_NAM"& _ 
                "E, HRIS_EMPNO = @HRIS_EMPNO, ITBR_STATUS = @ITBR_STATUS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (ITBR_NO ="& _ 
                " @Original_ITBR_NO)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_NAME", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_STATUS", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITBR_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMBRANDDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_INVENTORY_ITEMBRANDDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMBRANDDataTable = New DS_PROPERTYDB.tblM4_INVENTORY_ITEMBRANDDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMBRANDDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_INVENTORY_ITEMBRAND")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ITBR_NO As String, ByVal Original_ITBR_NAME As String, ByVal Original_ITBR_CREATED_DATE As Date, ByVal Original_ITBR_UPDATED_DATE As Global.System.Nullable(Of Date), ByVal Original_HRIS_EMPNO As String, ByVal Original_ITBR_STATUS As Global.System.Nullable(Of Integer)) As Integer
            If (Original_ITBR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITBR_NO")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ITBR_NO,String)
            End If
            If (Original_ITBR_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ITBR_NAME,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ITBR_CREATED_DATE,Date)
            If (Original_ITBR_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ITBR_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_HRIS_EMPNO,String)
            End If
            If (Original_ITBR_STATUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_ITBR_STATUS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ITBR_NO As String, ByVal ITBR_NAME As String, ByVal ITBR_CREATED_DATE As Date, ByVal ITBR_UPDATED_DATE As Global.System.Nullable(Of Date), ByVal HRIS_EMPNO As String, ByVal ITBR_STATUS As Global.System.Nullable(Of Integer)) As Integer
            If (ITBR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITBR_NO")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ITBR_NO,String)
            End If
            If (ITBR_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ITBR_NAME,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(ITBR_CREATED_DATE,Date)
            If (ITBR_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ITBR_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(HRIS_EMPNO,String)
            End If
            If (ITBR_STATUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ITBR_STATUS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ITBR_NO As String, ByVal ITBR_NAME As String, ByVal ITBR_CREATED_DATE As Date, ByVal ITBR_UPDATED_DATE As Global.System.Nullable(Of Date), ByVal HRIS_EMPNO As String, ByVal ITBR_STATUS As Global.System.Nullable(Of Integer), ByVal Original_ITBR_NO As String, ByVal Original_ITBR_NAME As String, ByVal Original_ITBR_CREATED_DATE As Date, ByVal Original_ITBR_UPDATED_DATE As Global.System.Nullable(Of Date), ByVal Original_HRIS_EMPNO As String, ByVal Original_ITBR_STATUS As Global.System.Nullable(Of Integer)) As Integer
            If (ITBR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITBR_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ITBR_NO,String)
            End If
            If (ITBR_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ITBR_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ITBR_CREATED_DATE,Date)
            If (ITBR_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ITBR_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(HRIS_EMPNO,String)
            End If
            If (ITBR_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ITBR_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_ITBR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITBR_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ITBR_NO,String)
            End If
            If (Original_ITBR_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_ITBR_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ITBR_CREATED_DATE,Date)
            If (Original_ITBR_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_ITBR_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_HRIS_EMPNO,String)
            End If
            If (Original_ITBR_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_ITBR_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ITBR_NAME As String, ByVal ITBR_CREATED_DATE As Date, ByVal ITBR_UPDATED_DATE As Global.System.Nullable(Of Date), ByVal HRIS_EMPNO As String, ByVal ITBR_STATUS As Global.System.Nullable(Of Integer), ByVal Original_ITBR_NO As String, ByVal Original_ITBR_NAME As String, ByVal Original_ITBR_CREATED_DATE As Date, ByVal Original_ITBR_UPDATED_DATE As Global.System.Nullable(Of Date), ByVal Original_HRIS_EMPNO As String, ByVal Original_ITBR_STATUS As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(Original_ITBR_NO, ITBR_NAME, ITBR_CREATED_DATE, ITBR_UPDATED_DATE, HRIS_EMPNO, ITBR_STATUS, Original_ITBR_NO, Original_ITBR_NAME, Original_ITBR_CREATED_DATE, Original_ITBR_UPDATED_DATE, Original_HRIS_EMPNO, Original_ITBR_STATUS)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function IQ_INVENTORY_ITEMS_BRAND(ByVal ITBR_NO As String, ByVal ITBR_NAME As String, ByVal HRIS_EMPNO As String, ByVal ITBR_STATUS As Global.System.Nullable(Of Integer)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (ITBR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITBR_NO")
            Else
                command.Parameters(0).Value = CType(ITBR_NO,String)
            End If
            If (ITBR_NAME Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(ITBR_NAME,String)
            End If
            If (HRIS_EMPNO Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(HRIS_EMPNO,String)
            End If
            If (ITBR_STATUS.HasValue = true) Then
                command.Parameters(3).Value = CType(ITBR_STATUS.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UQ_INVENTORY_ITEMS_BRAND(ByVal ITBR_NAME As String, ByVal HRIS_EMPNO As String, ByVal ITBR_STATUS As Global.System.Nullable(Of Integer), ByVal Original_ITBR_NO As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (ITBR_NAME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(ITBR_NAME,String)
            End If
            If (HRIS_EMPNO Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(HRIS_EMPNO,String)
            End If
            If (ITBR_STATUS.HasValue = true) Then
                command.Parameters(2).Value = CType(ITBR_STATUS.Value,Integer)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_ITBR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITBR_NO")
            Else
                command.Parameters(3).Value = CType(Original_ITBR_NO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_INVENTORY_ITEMSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_INVENTORY_ITEMS"
            tableMapping.ColumnMappings.Add("ITEM_CODE", "ITEM_CODE")
            tableMapping.ColumnMappings.Add("SC_NO", "SC_NO")
            tableMapping.ColumnMappings.Add("ITBR_NO", "ITBR_NO")
            tableMapping.ColumnMappings.Add("ITEM_SERIAL_NO", "ITEM_SERIAL_NO")
            tableMapping.ColumnMappings.Add("ITEM_DESCRIPTION", "ITEM_DESCRIPTION")
            tableMapping.ColumnMappings.Add("ITEM_UNIT", "ITEM_UNIT")
            tableMapping.ColumnMappings.Add("ITEM_UNIT_COST", "ITEM_UNIT_COST")
            tableMapping.ColumnMappings.Add("ITEM_TOTAL_COST", "ITEM_TOTAL_COST")
            tableMapping.ColumnMappings.Add("ITEM_QUANTITY", "ITEM_QUANTITY")
            tableMapping.ColumnMappings.Add("ITEM_DATE_AQUISITION", "ITEM_DATE_AQUISITION")
            tableMapping.ColumnMappings.Add("ITEM_CREATED_DATE", "ITEM_CREATED_DATE")
            tableMapping.ColumnMappings.Add("ITEM_UPDATED_DATE", "ITEM_UPDATED_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_INVENTORY_ITEMS] WHERE (([ITEM_CODE] = @Original_ITEM_CODE) AN"& _ 
                "D ([SC_NO] = @Original_SC_NO) AND ([ITBR_NO] = @Original_ITBR_NO) AND ((@IsNull_"& _ 
                "ITEM_SERIAL_NO = 1 AND [ITEM_SERIAL_NO] IS NULL) OR ([ITEM_SERIAL_NO] = @Origina"& _ 
                "l_ITEM_SERIAL_NO)) AND ([ITEM_DESCRIPTION] = @Original_ITEM_DESCRIPTION) AND ([I"& _ 
                "TEM_UNIT] = @Original_ITEM_UNIT) AND ([ITEM_UNIT_COST] = @Original_ITEM_UNIT_COS"& _ 
                "T) AND ([ITEM_TOTAL_COST] = @Original_ITEM_TOTAL_COST) AND ([ITEM_QUANTITY] = @O"& _ 
                "riginal_ITEM_QUANTITY) AND ([ITEM_DATE_AQUISITION] = @Original_ITEM_DATE_AQUISIT"& _ 
                "ION) AND ([ITEM_CREATED_DATE] = @Original_ITEM_CREATED_DATE) AND ((@IsNull_ITEM_"& _ 
                "UPDATED_DATE = 1 AND [ITEM_UPDATED_DATE] IS NULL) OR ([ITEM_UPDATED_DATE] = @Ori"& _ 
                "ginal_ITEM_UPDATED_DATE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SC_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITBR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ITEM_SERIAL_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_SERIAL_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_SERIAL_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_SERIAL_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_UNIT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_UNIT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_UNIT_COST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "ITEM_UNIT_COST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_TOTAL_COST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "ITEM_TOTAL_COST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_QUANTITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_DATE_AQUISITION", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_DATE_AQUISITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ITEM_UPDATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_INVENTORY_ITEMS] ([ITEM_CODE], [SC_NO], [ITBR_NO], [ITEM_SERIA"& _ 
                "L_NO], [ITEM_DESCRIPTION], [ITEM_UNIT], [ITEM_UNIT_COST], [ITEM_TOTAL_COST], [IT"& _ 
                "EM_QUANTITY], [ITEM_DATE_AQUISITION], [ITEM_CREATED_DATE], [ITEM_UPDATED_DATE]) "& _ 
                "VALUES (@ITEM_CODE, @SC_NO, @ITBR_NO, @ITEM_SERIAL_NO, @ITEM_DESCRIPTION, @ITEM_"& _ 
                "UNIT, @ITEM_UNIT_COST, @ITEM_TOTAL_COST, @ITEM_QUANTITY, @ITEM_DATE_AQUISITION, "& _ 
                "@ITEM_CREATED_DATE, @ITEM_UPDATED_DATE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ITEM_CODE, SC_NO, ITBR_NO, ITEM"& _ 
                "_SERIAL_NO, ITEM_DESCRIPTION, ITEM_UNIT, ITEM_UNIT_COST, ITEM_TOTAL_COST, ITEM_Q"& _ 
                "UANTITY, ITEM_DATE_AQUISITION, ITEM_CREATED_DATE, ITEM_UPDATED_DATE FROM tblM4_I"& _ 
                "NVENTORY_ITEMS WHERE (ITEM_CODE = @ITEM_CODE)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_SERIAL_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_SERIAL_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_UNIT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_UNIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_UNIT_COST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "ITEM_UNIT_COST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_TOTAL_COST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "ITEM_TOTAL_COST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_QUANTITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_DATE_AQUISITION", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_DATE_AQUISITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_UPDATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_INVENTORY_ITEMS] SET [ITEM_CODE] = @ITEM_CODE, [SC_NO] = @SC_NO, [I"& _ 
                "TBR_NO] = @ITBR_NO, [ITEM_SERIAL_NO] = @ITEM_SERIAL_NO, [ITEM_DESCRIPTION] = @IT"& _ 
                "EM_DESCRIPTION, [ITEM_UNIT] = @ITEM_UNIT, [ITEM_UNIT_COST] = @ITEM_UNIT_COST, [I"& _ 
                "TEM_TOTAL_COST] = @ITEM_TOTAL_COST, [ITEM_QUANTITY] = @ITEM_QUANTITY, [ITEM_DATE"& _ 
                "_AQUISITION] = @ITEM_DATE_AQUISITION, [ITEM_CREATED_DATE] = @ITEM_CREATED_DATE, "& _ 
                "[ITEM_UPDATED_DATE] = @ITEM_UPDATED_DATE WHERE (([ITEM_CODE] = @Original_ITEM_CO"& _ 
                "DE) AND ([SC_NO] = @Original_SC_NO) AND ([ITBR_NO] = @Original_ITBR_NO) AND ((@I"& _ 
                "sNull_ITEM_SERIAL_NO = 1 AND [ITEM_SERIAL_NO] IS NULL) OR ([ITEM_SERIAL_NO] = @O"& _ 
                "riginal_ITEM_SERIAL_NO)) AND ([ITEM_DESCRIPTION] = @Original_ITEM_DESCRIPTION) A"& _ 
                "ND ([ITEM_UNIT] = @Original_ITEM_UNIT) AND ([ITEM_UNIT_COST] = @Original_ITEM_UN"& _ 
                "IT_COST) AND ([ITEM_TOTAL_COST] = @Original_ITEM_TOTAL_COST) AND ([ITEM_QUANTITY"& _ 
                "] = @Original_ITEM_QUANTITY) AND ([ITEM_DATE_AQUISITION] = @Original_ITEM_DATE_A"& _ 
                "QUISITION) AND ([ITEM_CREATED_DATE] = @Original_ITEM_CREATED_DATE) AND ((@IsNull"& _ 
                "_ITEM_UPDATED_DATE = 1 AND [ITEM_UPDATED_DATE] IS NULL) OR ([ITEM_UPDATED_DATE] "& _ 
                "= @Original_ITEM_UPDATED_DATE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ITEM_CODE, SC_NO, ITBR_NO, ITEM_SERIAL"& _ 
                "_NO, ITEM_DESCRIPTION, ITEM_UNIT, ITEM_UNIT_COST, ITEM_TOTAL_COST, ITEM_QUANTITY"& _ 
                ", ITEM_DATE_AQUISITION, ITEM_CREATED_DATE, ITEM_UPDATED_DATE FROM tblM4_INVENTOR"& _ 
                "Y_ITEMS WHERE (ITEM_CODE = @ITEM_CODE)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_SERIAL_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_SERIAL_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_UNIT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_UNIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_UNIT_COST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "ITEM_UNIT_COST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_TOTAL_COST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "ITEM_TOTAL_COST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_QUANTITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_DATE_AQUISITION", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_DATE_AQUISITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_UPDATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SC_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITBR_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ITEM_SERIAL_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_SERIAL_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_SERIAL_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_SERIAL_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_UNIT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_UNIT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_UNIT_COST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "ITEM_UNIT_COST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_TOTAL_COST", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 2, "ITEM_TOTAL_COST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_QUANTITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_DATE_AQUISITION", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_DATE_AQUISITION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ITEM_UPDATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblM4_INVENTORY_ITEMS.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENTORY_ITEMS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        COUNT(*) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENTORY_ITEMS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE    "& _ 
                "    (ITEM_CODE = @item_code)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@item_code", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        ITEM_CODE, SC_NO, ITBR_NO, ITEM_SERIAL_NO, ITEM_DESCRIPTION, ITEM_U"& _ 
                "NIT, ITEM_UNIT_COST, ITEM_TOTAL_COST, ITEM_QUANTITY, ITEM_DATE_AQUISITION, ITEM_"& _ 
                "CREATED_DATE, ITEM_UPDATED_DATE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENTORY_ITEMS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE   "& _ 
                "     (ITEM_CODE = @item_code)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@item_code", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "INSERT INTO tblM4_INVENTORY_ITEMS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (ITEM_CODE, SC_NO, IT"& _ 
                "BR_NO, ITEM_SERIAL_NO, ITEM_DESCRIPTION, ITEM_UNIT, ITEM_UNIT_COST, ITEM_TOTAL_C"& _ 
                "OST, ITEM_QUANTITY, ITEM_DATE_AQUISITION)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@ITEM_CODE,@SC_NO,@ITB"& _ 
                "R_NO,@ITEM_SERIAL_NO,@ITEM_DESCRIPTION,@ITEM_UNIT,@ITEM_UNIT_COST,@ITEM_TOTAL_CO"& _ 
                "ST,@ITEM_QUANTITY,@ITEM_DATE_AQUISITION)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_SERIAL_NO", Global.System.Data.SqlDbType.NVarChar, 40, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_SERIAL_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_UNIT", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_UNIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_UNIT_COST", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 13, 2, "ITEM_UNIT_COST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_TOTAL_COST", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 13, 2, "ITEM_TOTAL_COST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_QUANTITY", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_QUANTITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_DATE_AQUISITION", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_DATE_AQUISITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "UPDATE       tblM4_INVENTORY_ITEMS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                SC_NO = @SC_NO, ITBR_NO = "& _ 
                "@ITBR_NO, ITEM_SERIAL_NO = @ITEM_SERIAL_NO, ITEM_DESCRIPTION = @ITEM_DESCRIPTION"& _ 
                ", ITEM_UNIT = @ITEM_UNIT, ITEM_UNIT_COST = @ITEM_UNIT_COST, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       ITEM_TOTAL_COST = @ITEM_TOTAL_COST, ITEM_QUANTITY = @ITEM_QUANTITY, ITEM_"& _ 
                "DATE_AQUISITION = @ITEM_DATE_AQUISITION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (ITEM_CODE = @Original_ITE"& _ 
                "M_CODE); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITBR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_SERIAL_NO", Global.System.Data.SqlDbType.NVarChar, 40, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_SERIAL_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_UNIT", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_UNIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_UNIT_COST", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 13, 2, "ITEM_UNIT_COST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_TOTAL_COST", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 13, 2, "ITEM_TOTAL_COST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_QUANTITY", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_QUANTITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_DATE_AQUISITION", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_DATE_AQUISITION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_INVENTORY_ITEMSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMSDataTable = New DS_PROPERTYDB.tblM4_INVENTORY_ITEMSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByItemCode(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMSDataTable, ByVal item_code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (item_code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("item_code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(item_code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_INVENTORY_ITEMS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ITEM_CODE As String, ByVal Original_SC_NO As String, ByVal Original_ITBR_NO As String, ByVal Original_ITEM_SERIAL_NO As String, ByVal Original_ITEM_DESCRIPTION As String, ByVal Original_ITEM_UNIT As String, ByVal Original_ITEM_UNIT_COST As Decimal, ByVal Original_ITEM_TOTAL_COST As Decimal, ByVal Original_ITEM_QUANTITY As Integer, ByVal Original_ITEM_DATE_AQUISITION As Date, ByVal Original_ITEM_CREATED_DATE As Date, ByVal Original_ITEM_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            If (Original_ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITEM_CODE")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ITEM_CODE,String)
            End If
            If (Original_SC_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SC_NO")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_SC_NO,String)
            End If
            If (Original_ITBR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITBR_NO")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ITBR_NO,String)
            End If
            If (Original_ITEM_SERIAL_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ITEM_SERIAL_NO,String)
            End If
            If (Original_ITEM_DESCRIPTION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITEM_DESCRIPTION")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ITEM_DESCRIPTION,String)
            End If
            If (Original_ITEM_UNIT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITEM_UNIT")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ITEM_UNIT,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ITEM_UNIT_COST,Decimal)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_ITEM_TOTAL_COST,Decimal)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_ITEM_QUANTITY,Integer)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_ITEM_DATE_AQUISITION,Date)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_ITEM_CREATED_DATE,Date)
            If (Original_ITEM_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_ITEM_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ITEM_CODE As String, ByVal SC_NO As String, ByVal ITBR_NO As String, ByVal ITEM_SERIAL_NO As String, ByVal ITEM_DESCRIPTION As String, ByVal ITEM_UNIT As String, ByVal ITEM_UNIT_COST As Decimal, ByVal ITEM_TOTAL_COST As Decimal, ByVal ITEM_QUANTITY As Integer, ByVal ITEM_DATE_AQUISITION As Date, ByVal ITEM_CREATED_DATE As Date, ByVal ITEM_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            If (ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ITEM_CODE,String)
            End If
            If (SC_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SC_NO")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SC_NO,String)
            End If
            If (ITBR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITBR_NO")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ITBR_NO,String)
            End If
            If (ITEM_SERIAL_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ITEM_SERIAL_NO,String)
            End If
            If (ITEM_DESCRIPTION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_DESCRIPTION")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ITEM_DESCRIPTION,String)
            End If
            If (ITEM_UNIT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_UNIT")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ITEM_UNIT,String)
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(ITEM_UNIT_COST,Decimal)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(ITEM_TOTAL_COST,Decimal)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(ITEM_QUANTITY,Integer)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(ITEM_DATE_AQUISITION,Date)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(ITEM_CREATED_DATE,Date)
            If (ITEM_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ITEM_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ITEM_CODE As String,  _
                    ByVal SC_NO As String,  _
                    ByVal ITBR_NO As String,  _
                    ByVal ITEM_SERIAL_NO As String,  _
                    ByVal ITEM_DESCRIPTION As String,  _
                    ByVal ITEM_UNIT As String,  _
                    ByVal ITEM_UNIT_COST As Decimal,  _
                    ByVal ITEM_TOTAL_COST As Decimal,  _
                    ByVal ITEM_QUANTITY As Integer,  _
                    ByVal ITEM_DATE_AQUISITION As Date,  _
                    ByVal ITEM_CREATED_DATE As Date,  _
                    ByVal ITEM_UPDATED_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_ITEM_CODE As String,  _
                    ByVal Original_SC_NO As String,  _
                    ByVal Original_ITBR_NO As String,  _
                    ByVal Original_ITEM_SERIAL_NO As String,  _
                    ByVal Original_ITEM_DESCRIPTION As String,  _
                    ByVal Original_ITEM_UNIT As String,  _
                    ByVal Original_ITEM_UNIT_COST As Decimal,  _
                    ByVal Original_ITEM_TOTAL_COST As Decimal,  _
                    ByVal Original_ITEM_QUANTITY As Integer,  _
                    ByVal Original_ITEM_DATE_AQUISITION As Date,  _
                    ByVal Original_ITEM_CREATED_DATE As Date,  _
                    ByVal Original_ITEM_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            If (ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ITEM_CODE,String)
            End If
            If (SC_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SC_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SC_NO,String)
            End If
            If (ITBR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITBR_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ITBR_NO,String)
            End If
            If (ITEM_SERIAL_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ITEM_SERIAL_NO,String)
            End If
            If (ITEM_DESCRIPTION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_DESCRIPTION")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ITEM_DESCRIPTION,String)
            End If
            If (ITEM_UNIT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_UNIT")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ITEM_UNIT,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ITEM_UNIT_COST,Decimal)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ITEM_TOTAL_COST,Decimal)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ITEM_QUANTITY,Integer)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ITEM_DATE_AQUISITION,Date)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ITEM_CREATED_DATE,Date)
            If (ITEM_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ITEM_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITEM_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_ITEM_CODE,String)
            End If
            If (Original_SC_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SC_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_SC_NO,String)
            End If
            If (Original_ITBR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITBR_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_ITBR_NO,String)
            End If
            If (Original_ITEM_SERIAL_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_ITEM_SERIAL_NO,String)
            End If
            If (Original_ITEM_DESCRIPTION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITEM_DESCRIPTION")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_ITEM_DESCRIPTION,String)
            End If
            If (Original_ITEM_UNIT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITEM_UNIT")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_ITEM_UNIT,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_ITEM_UNIT_COST,Decimal)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_ITEM_TOTAL_COST,Decimal)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_ITEM_QUANTITY,Integer)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_ITEM_DATE_AQUISITION,Date)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ITEM_CREATED_DATE,Date)
            If (Original_ITEM_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_ITEM_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SC_NO As String,  _
                    ByVal ITBR_NO As String,  _
                    ByVal ITEM_SERIAL_NO As String,  _
                    ByVal ITEM_DESCRIPTION As String,  _
                    ByVal ITEM_UNIT As String,  _
                    ByVal ITEM_UNIT_COST As Decimal,  _
                    ByVal ITEM_TOTAL_COST As Decimal,  _
                    ByVal ITEM_QUANTITY As Integer,  _
                    ByVal ITEM_DATE_AQUISITION As Date,  _
                    ByVal ITEM_CREATED_DATE As Date,  _
                    ByVal ITEM_UPDATED_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_ITEM_CODE As String,  _
                    ByVal Original_SC_NO As String,  _
                    ByVal Original_ITBR_NO As String,  _
                    ByVal Original_ITEM_SERIAL_NO As String,  _
                    ByVal Original_ITEM_DESCRIPTION As String,  _
                    ByVal Original_ITEM_UNIT As String,  _
                    ByVal Original_ITEM_UNIT_COST As Decimal,  _
                    ByVal Original_ITEM_TOTAL_COST As Decimal,  _
                    ByVal Original_ITEM_QUANTITY As Integer,  _
                    ByVal Original_ITEM_DATE_AQUISITION As Date,  _
                    ByVal Original_ITEM_CREATED_DATE As Date,  _
                    ByVal Original_ITEM_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_ITEM_CODE, SC_NO, ITBR_NO, ITEM_SERIAL_NO, ITEM_DESCRIPTION, ITEM_UNIT, ITEM_UNIT_COST, ITEM_TOTAL_COST, ITEM_QUANTITY, ITEM_DATE_AQUISITION, ITEM_CREATED_DATE, ITEM_UPDATED_DATE, Original_ITEM_CODE, Original_SC_NO, Original_ITBR_NO, Original_ITEM_SERIAL_NO, Original_ITEM_DESCRIPTION, Original_ITEM_UNIT, Original_ITEM_UNIT_COST, Original_ITEM_TOTAL_COST, Original_ITEM_QUANTITY, Original_ITEM_DATE_AQUISITION, Original_ITEM_CREATED_DATE, Original_ITEM_UPDATED_DATE)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function CHECKIFEXIST(ByVal item_code As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (item_code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("item_code")
            Else
                command.Parameters(0).Value = CType(item_code,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function IQ_INVENTORY_ITEMS(ByVal ITEM_CODE As String, ByVal SC_NO As String, ByVal ITBR_NO As String, ByVal ITEM_SERIAL_NO As String, ByVal ITEM_DESCRIPTION As String, ByVal ITEM_UNIT As String, ByVal ITEM_UNIT_COST As Decimal, ByVal ITEM_TOTAL_COST As Decimal, ByVal ITEM_QUANTITY As Integer, ByVal ITEM_DATE_AQUISITION As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_CODE")
            Else
                command.Parameters(0).Value = CType(ITEM_CODE,String)
            End If
            If (SC_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SC_NO")
            Else
                command.Parameters(1).Value = CType(SC_NO,String)
            End If
            If (ITBR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITBR_NO")
            Else
                command.Parameters(2).Value = CType(ITBR_NO,String)
            End If
            If (ITEM_SERIAL_NO Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(ITEM_SERIAL_NO,String)
            End If
            If (ITEM_DESCRIPTION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_DESCRIPTION")
            Else
                command.Parameters(4).Value = CType(ITEM_DESCRIPTION,String)
            End If
            If (ITEM_UNIT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_UNIT")
            Else
                command.Parameters(5).Value = CType(ITEM_UNIT,String)
            End If
            command.Parameters(6).Value = CType(ITEM_UNIT_COST,Decimal)
            command.Parameters(7).Value = CType(ITEM_TOTAL_COST,Decimal)
            command.Parameters(8).Value = CType(ITEM_QUANTITY,Integer)
            If (ITEM_DATE_AQUISITION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_DATE_AQUISITION")
            Else
                command.Parameters(9).Value = CType(ITEM_DATE_AQUISITION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UQ_INVENTORY_ITEMS(ByVal SC_NO As String, ByVal ITBR_NO As String, ByVal ITEM_SERIAL_NO As String, ByVal ITEM_DESCRIPTION As String, ByVal ITEM_UNIT As String, ByVal ITEM_UNIT_COST As Decimal, ByVal ITEM_TOTAL_COST As Decimal, ByVal ITEM_QUANTITY As Integer, ByVal ITEM_DATE_AQUISITION As String, ByVal Original_ITEM_CODE As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            If (SC_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SC_NO")
            Else
                command.Parameters(0).Value = CType(SC_NO,String)
            End If
            If (ITBR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITBR_NO")
            Else
                command.Parameters(1).Value = CType(ITBR_NO,String)
            End If
            If (ITEM_SERIAL_NO Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(ITEM_SERIAL_NO,String)
            End If
            If (ITEM_DESCRIPTION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_DESCRIPTION")
            Else
                command.Parameters(3).Value = CType(ITEM_DESCRIPTION,String)
            End If
            If (ITEM_UNIT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_UNIT")
            Else
                command.Parameters(4).Value = CType(ITEM_UNIT,String)
            End If
            command.Parameters(5).Value = CType(ITEM_UNIT_COST,Decimal)
            command.Parameters(6).Value = CType(ITEM_TOTAL_COST,Decimal)
            command.Parameters(7).Value = CType(ITEM_QUANTITY,Integer)
            If (ITEM_DATE_AQUISITION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_DATE_AQUISITION")
            Else
                command.Parameters(8).Value = CType(ITEM_DATE_AQUISITION,String)
            End If
            If (Original_ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITEM_CODE")
            Else
                command.Parameters(9).Value = CType(Original_ITEM_CODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_INVENTORY_SUB_CATEGORYTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_INVENTORY_SUB_CATEGORY"
            tableMapping.ColumnMappings.Add("SC_NO", "SC_NO")
            tableMapping.ColumnMappings.Add("CAT_CODE", "CAT_CODE")
            tableMapping.ColumnMappings.Add("SC_SUBCATEGORY_NAME", "SC_SUBCATEGORY_NAME")
            tableMapping.ColumnMappings.Add("SC_STATUS", "SC_STATUS")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO", "HRIS_EMPNO")
            tableMapping.ColumnMappings.Add("SC_CREATED_DATE", "SC_CREATED_DATE")
            tableMapping.ColumnMappings.Add("SC_UPDATED_DATE", "SC_UPDATED_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_INVENTORY_SUB_CATEGORY] WHERE (([SC_NO] = @Original_SC_NO) AND"& _ 
                " ((@IsNull_CAT_CODE = 1 AND [CAT_CODE] IS NULL) OR ([CAT_CODE] = @Original_CAT_C"& _ 
                "ODE)) AND ((@IsNull_SC_SUBCATEGORY_NAME = 1 AND [SC_SUBCATEGORY_NAME] IS NULL) O"& _ 
                "R ([SC_SUBCATEGORY_NAME] = @Original_SC_SUBCATEGORY_NAME)) AND ((@IsNull_SC_STAT"& _ 
                "US = 1 AND [SC_STATUS] IS NULL) OR ([SC_STATUS] = @Original_SC_STATUS)) AND ((@I"& _ 
                "sNull_HRIS_EMPNO = 1 AND [HRIS_EMPNO] IS NULL) OR ([HRIS_EMPNO] = @Original_HRIS"& _ 
                "_EMPNO)) AND ([SC_CREATED_DATE] = @Original_SC_CREATED_DATE) AND ((@IsNull_SC_UP"& _ 
                "DATED_DATE = 1 AND [SC_UPDATED_DATE] IS NULL) OR ([SC_UPDATED_DATE] = @Original_"& _ 
                "SC_UPDATED_DATE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SC_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAT_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SC_SUBCATEGORY_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_SUBCATEGORY_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SC_SUBCATEGORY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_SUBCATEGORY_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SC_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SC_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SC_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SC_UPDATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SC_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_INVENTORY_SUB_CATEGORY] ([SC_NO], [CAT_CODE], [SC_SUBCATEGORY_"& _ 
                "NAME], [SC_STATUS], [HRIS_EMPNO], [SC_CREATED_DATE], [SC_UPDATED_DATE]) VALUES ("& _ 
                "@SC_NO, @CAT_CODE, @SC_SUBCATEGORY_NAME, @SC_STATUS, @HRIS_EMPNO, @SC_CREATED_DA"& _ 
                "TE, @SC_UPDATED_DATE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SC_NO, CAT_CODE, SC_SUBCATEGORY_NAME, SC_STATUS, "& _ 
                "HRIS_EMPNO, SC_CREATED_DATE, SC_UPDATED_DATE FROM tblM4_INVENTORY_SUB_CATEGORY W"& _ 
                "HERE (SC_NO = @SC_NO) ORDER BY SC_SUBCATEGORY_NAME"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_SUBCATEGORY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_SUBCATEGORY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_UPDATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_INVENTORY_SUB_CATEGORY] SET [SC_NO] = @SC_NO, [CAT_CODE] = @CAT_COD"& _ 
                "E, [SC_SUBCATEGORY_NAME] = @SC_SUBCATEGORY_NAME, [SC_STATUS] = @SC_STATUS, [HRIS"& _ 
                "_EMPNO] = @HRIS_EMPNO, [SC_CREATED_DATE] = @SC_CREATED_DATE, [SC_UPDATED_DATE] ="& _ 
                " @SC_UPDATED_DATE WHERE (([SC_NO] = @Original_SC_NO) AND ((@IsNull_CAT_CODE = 1 "& _ 
                "AND [CAT_CODE] IS NULL) OR ([CAT_CODE] = @Original_CAT_CODE)) AND ((@IsNull_SC_S"& _ 
                "UBCATEGORY_NAME = 1 AND [SC_SUBCATEGORY_NAME] IS NULL) OR ([SC_SUBCATEGORY_NAME]"& _ 
                " = @Original_SC_SUBCATEGORY_NAME)) AND ((@IsNull_SC_STATUS = 1 AND [SC_STATUS] I"& _ 
                "S NULL) OR ([SC_STATUS] = @Original_SC_STATUS)) AND ((@IsNull_HRIS_EMPNO = 1 AND"& _ 
                " [HRIS_EMPNO] IS NULL) OR ([HRIS_EMPNO] = @Original_HRIS_EMPNO)) AND ([SC_CREATE"& _ 
                "D_DATE] = @Original_SC_CREATED_DATE) AND ((@IsNull_SC_UPDATED_DATE = 1 AND [SC_U"& _ 
                "PDATED_DATE] IS NULL) OR ([SC_UPDATED_DATE] = @Original_SC_UPDATED_DATE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SEL"& _ 
                "ECT SC_NO, CAT_CODE, SC_SUBCATEGORY_NAME, SC_STATUS, HRIS_EMPNO, SC_CREATED_DATE"& _ 
                ", SC_UPDATED_DATE FROM tblM4_INVENTORY_SUB_CATEGORY WHERE (SC_NO = @SC_NO) ORDER"& _ 
                " BY SC_SUBCATEGORY_NAME"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_SUBCATEGORY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_SUBCATEGORY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_UPDATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SC_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAT_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SC_SUBCATEGORY_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_SUBCATEGORY_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SC_SUBCATEGORY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_SUBCATEGORY_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SC_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SC_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SC_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SC_UPDATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SC_UPDATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_UPDATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SC_NO, CAT_CODE, SC_SUBCATEGORY_NAME, SC_STATUS, HRIS_EMPNO, SC_CRE"& _ 
                "ATED_DATE, SC_UPDATED_DATE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENTORY_SUB_CATEGORY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER "& _ 
                "BY SC_SUBCATEGORY_NAME"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CAT_CODE, HRIS_EMPNO, SC_CREATED_DATE, SC_NO, SC_STATUS, SC_SUBCATEGORY_NA"& _ 
                "ME, SC_UPDATED_DATE FROM tblM4_INVENTORY_SUB_CATEGORY WHERE (CAT_CODE = @CAT_COD"& _ 
                "E) AND (SC_STATUS = '1') ORDER BY SC_SUBCATEGORY_NAME"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO tblM4_INVENTORY_SUB_CATEGORY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (SC_NO, CAT_CO"& _ 
                "DE, SC_SUBCATEGORY_NAME, SC_STATUS, HRIS_EMPNO)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@SC_NO,@CAT_CODE"& _ 
                ",@SC_SUBCATEGORY_NAME,@SC_STATUS,@HRIS_EMPNO); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_SUBCATEGORY_NAME", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_SUBCATEGORY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_STATUS", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        CAT_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENTORY_SUB_CATEGORY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE      "& _ 
                "  (SC_NO = @SC_NO)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "UPDATE       tblM4_INVENTORY_SUB_CATEGORY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                 CAT_CODE = @CAT_CO"& _ 
                "DE, SC_SUBCATEGORY_NAME = @SC_SUBCATEGORY_NAME, SC_STATUS = @SC_STATUS, HRIS_EMP"& _ 
                "NO = @HRIS_EMPNO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (SC_NO = @Original_SC_NO); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CAT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_SUBCATEGORY_NAME", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_SUBCATEGORY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC_STATUS", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SC_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SC_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_SUB_CATEGORYDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_INVENTORY_SUB_CATEGORYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_INVENTORY_SUB_CATEGORYDataTable = New DS_PROPERTYDB.tblM4_INVENTORY_SUB_CATEGORYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCAT_CODE(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_SUB_CATEGORYDataTable, ByVal CAT_CODE As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (CAT_CODE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CAT_CODE,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCAT_CODE(ByVal CAT_CODE As String) As DS_PROPERTYDB.tblM4_INVENTORY_SUB_CATEGORYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (CAT_CODE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CAT_CODE,String)
            End If
            Dim dataTable As DS_PROPERTYDB.tblM4_INVENTORY_SUB_CATEGORYDataTable = New DS_PROPERTYDB.tblM4_INVENTORY_SUB_CATEGORYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_SUB_CATEGORYDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_INVENTORY_SUB_CATEGORY")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SC_NO As String, ByVal Original_CAT_CODE As String, ByVal Original_SC_SUBCATEGORY_NAME As String, ByVal Original_SC_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String, ByVal Original_SC_CREATED_DATE As Date, ByVal Original_SC_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            If (Original_SC_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SC_NO")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SC_NO,String)
            End If
            If (Original_CAT_CODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CAT_CODE,String)
            End If
            If (Original_SC_SUBCATEGORY_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SC_SUBCATEGORY_NAME,String)
            End If
            If (Original_SC_STATUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_SC_STATUS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_HRIS_EMPNO,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_SC_CREATED_DATE,Date)
            If (Original_SC_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_SC_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SC_NO As String, ByVal CAT_CODE As String, ByVal SC_SUBCATEGORY_NAME As String, ByVal SC_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String, ByVal SC_CREATED_DATE As Date, ByVal SC_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            If (SC_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SC_NO")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SC_NO,String)
            End If
            If (CAT_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CAT_CODE,String)
            End If
            If (SC_SUBCATEGORY_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SC_SUBCATEGORY_NAME,String)
            End If
            If (SC_STATUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SC_STATUS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(HRIS_EMPNO,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(SC_CREATED_DATE,Date)
            If (SC_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(SC_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SC_NO As String, ByVal CAT_CODE As String, ByVal SC_SUBCATEGORY_NAME As String, ByVal SC_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String, ByVal SC_CREATED_DATE As Date, ByVal SC_UPDATED_DATE As Global.System.Nullable(Of Date), ByVal Original_SC_NO As String, ByVal Original_CAT_CODE As String, ByVal Original_SC_SUBCATEGORY_NAME As String, ByVal Original_SC_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String, ByVal Original_SC_CREATED_DATE As Date, ByVal Original_SC_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            If (SC_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SC_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SC_NO,String)
            End If
            If (CAT_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CAT_CODE,String)
            End If
            If (SC_SUBCATEGORY_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SC_SUBCATEGORY_NAME,String)
            End If
            If (SC_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SC_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(HRIS_EMPNO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SC_CREATED_DATE,Date)
            If (SC_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(SC_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_SC_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SC_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_SC_NO,String)
            End If
            If (Original_CAT_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_CAT_CODE,String)
            End If
            If (Original_SC_SUBCATEGORY_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_SC_SUBCATEGORY_NAME,String)
            End If
            If (Original_SC_STATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_SC_STATUS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_HRIS_EMPNO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_SC_CREATED_DATE,Date)
            If (Original_SC_UPDATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_SC_UPDATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CAT_CODE As String, ByVal SC_SUBCATEGORY_NAME As String, ByVal SC_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String, ByVal SC_CREATED_DATE As Date, ByVal SC_UPDATED_DATE As Global.System.Nullable(Of Date), ByVal Original_SC_NO As String, ByVal Original_CAT_CODE As String, ByVal Original_SC_SUBCATEGORY_NAME As String, ByVal Original_SC_STATUS As Global.System.Nullable(Of Integer), ByVal Original_HRIS_EMPNO As String, ByVal Original_SC_CREATED_DATE As Date, ByVal Original_SC_UPDATED_DATE As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_SC_NO, CAT_CODE, SC_SUBCATEGORY_NAME, SC_STATUS, HRIS_EMPNO, SC_CREATED_DATE, SC_UPDATED_DATE, Original_SC_NO, Original_CAT_CODE, Original_SC_SUBCATEGORY_NAME, Original_SC_STATUS, Original_HRIS_EMPNO, Original_SC_CREATED_DATE, Original_SC_UPDATED_DATE)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function IQ_INVENTORY_SUB_CATEGORY(ByVal SC_NO As String, ByVal CAT_CODE As String, ByVal SC_SUBCATEGORY_NAME As String, ByVal SC_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (SC_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SC_NO")
            Else
                command.Parameters(0).Value = CType(SC_NO,String)
            End If
            If (CAT_CODE Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(CAT_CODE,String)
            End If
            If (SC_SUBCATEGORY_NAME Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(SC_SUBCATEGORY_NAME,String)
            End If
            If (SC_STATUS.HasValue = true) Then
                command.Parameters(3).Value = CType(SC_STATUS.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(HRIS_EMPNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_GETCATCODE(ByVal SC_NO As String) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (SC_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SC_NO")
            Else
                command.Parameters(0).Value = CType(SC_NO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UQ_INVENTORY_SUB_CATEGORY(ByVal CAT_CODE As String, ByVal SC_SUBCATEGORY_NAME As String, ByVal SC_STATUS As Global.System.Nullable(Of Integer), ByVal HRIS_EMPNO As String, ByVal Original_SC_NO As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            If (CAT_CODE Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(CAT_CODE,String)
            End If
            If (SC_SUBCATEGORY_NAME Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SC_SUBCATEGORY_NAME,String)
            End If
            If (SC_STATUS.HasValue = true) Then
                command.Parameters(2).Value = CType(SC_STATUS.Value,Integer)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (HRIS_EMPNO Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(HRIS_EMPNO,String)
            End If
            If (Original_SC_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SC_NO")
            Else
                command.Parameters(4).Value = CType(Original_SC_NO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_INVENTORY_CATEGORY1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_INVENTORY_CATEGORY1"
            tableMapping.ColumnMappings.Add("Category Code", "Category Code")
            tableMapping.ColumnMappings.Add("Category Name", "Category Name")
            tableMapping.ColumnMappings.Add("Created Date", "Created Date")
            tableMapping.ColumnMappings.Add("Status", "Status")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_INVENTORY_CATEGORY] WHERE (([CAT_CODE] = @Original_Category_Co"& _ 
                "de))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Category_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_INVENTORY_CATEGORY] ([CAT_CODE], [CAT_NAME]) VALUES (@Category"& _ 
                "_Code, @Category_Name);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CAT_CODE AS 'Category Code', CAT_NAME AS 'Catego"& _ 
                "ry Name', CASE WHEN CAT_STATUS = 1 THEN 'Active' ELSE 'Inactive' END AS 'Status'"& _ 
                ", format(CAT_CREATED_DATE, 'MMM. dd, yyyy hh:mm tt') AS 'Created Date' FROM tblM"& _ 
                "4_INVENTORY_CATEGORY WHERE (CAT_CODE = @CAT_CODE) ORDER BY STATUS"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Category_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Category_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_INVENTORY_CATEGORY] SET [CAT_CODE] = @Category_Code, [CAT_NAME] = @"& _ 
                "Category_Name WHERE (([CAT_CODE] = @Original_Category_Code));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CAT_CODE A"& _ 
                "S 'Category Code', CAT_NAME AS 'Category Name', CASE WHEN CAT_STATUS = 1 THEN 'A"& _ 
                "ctive' ELSE 'Inactive' END AS 'Status', format(CAT_CREATED_DATE, 'MMM. dd, yyyy "& _ 
                "hh:mm tt') AS 'Created Date' FROM tblM4_INVENTORY_CATEGORY WHERE (CAT_CODE = @CA"& _ 
                "T_CODE) ORDER BY STATUS"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Category_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Category_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Category_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAT_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CAT_CODE AS 'Category Code', CAT_NAME AS 'Category Name', CASE WHEN"& _ 
                " CAT_STATUS = 1 THEN 'Active' ELSE 'Inactive' END AS 'Status', format(CAT_CREATE"& _ 
                "D_DATE, 'MMM. dd, yyyy hh:mm tt') AS 'Created Date'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVEN"& _ 
                "TORY_CATEGORY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CAT_CODE LIKE '%' + @SEARCH + '%') OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "             (CAT_NAME LIKE '%' + @SEARCH + '%')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY STATUS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEARCH", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Category Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_CATEGORY1DataTable, ByVal SEARCH As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SEARCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SEARCH")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SEARCH,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SEARCH As String) As DS_PROPERTYDB.tblM4_INVENTORY_CATEGORY1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SEARCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SEARCH")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SEARCH,String)
            End If
            Dim dataTable As DS_PROPERTYDB.tblM4_INVENTORY_CATEGORY1DataTable = New DS_PROPERTYDB.tblM4_INVENTORY_CATEGORY1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_CATEGORY1DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_INVENTORY_CATEGORY1")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Category_Code As String) As Integer
            If (Original_Category_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Category_Code")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Category_Code,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Category_Code As String, ByVal Category_Name As String, ByVal CAT_CODE As String) As Integer
            If (Category_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Category_Code")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Category_Code,String)
            End If
            If (Category_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Category_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Category_Name,String)
            End If
            If (CAT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CAT_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CAT_CODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Category_Code As String, ByVal Category_Name As String, ByVal Original_Category_Code As String, ByVal CAT_CODE As String) As Integer
            If (Category_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Category_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Category_Code,String)
            End If
            If (Category_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Category_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Category_Name,String)
            End If
            If (Original_Category_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Category_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_Category_Code,String)
            End If
            If (CAT_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CAT_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CAT_CODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Category_Name As String, ByVal Original_Category_Code As String) As Integer
            Return Me.Update(Original_Category_Code, Category_Name, Original_Category_Code, Original_Category_Code)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_INVENTORY_ITEMBRAND1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_INVENTORY_ITEMBRAND1"
            tableMapping.ColumnMappings.Add("Brand Code", "Brand Code")
            tableMapping.ColumnMappings.Add("Brand/Provider Name", "Brand/Provider Name")
            tableMapping.ColumnMappings.Add("Date Created", "Date Created")
            tableMapping.ColumnMappings.Add("Status", "Status")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_INVENTORY_ITEMBRAND] WHERE (([ITBR_NO] = @Original_Brand_Code)"& _ 
                " AND ((@p3 = 1 AND [ITBR_NAME] IS NULL) OR ([ITBR_NAME] = @p2)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Brand_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand/Provider Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand/Provider Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_INVENTORY_ITEMBRAND] ([ITBR_NO], [ITBR_NAME]) VALUES (@Brand_C"& _ 
                "ode, @p1);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ITBR_NO AS 'Brand Code', ITBR_NAME AS 'Brand/Provider Name', "& _ 
                "FORMAT(ITBR_CREATED_DATE, 'MMM. dd, yyyy hh:mm tt') AS 'Date Created', CASE WHEN"& _ 
                " ITBR_STATUS = 1 THEN 'Active' ELSE 'Inactive' END AS 'Status' FROM tblM4_INVENT"& _ 
                "ORY_ITEMBRAND WHERE (ITBR_NO = @ITBR_NO) ORDER BY status"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Brand_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand/Provider Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_INVENTORY_ITEMBRAND] SET [ITBR_NO] = @Brand_Code, [ITBR_NAME] = @p1"& _ 
                " WHERE (([ITBR_NO] = @Original_Brand_Code) AND ((@p3 = 1 AND [ITBR_NAME] IS NULL"& _ 
                ") OR ([ITBR_NAME] = @p2)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ITBR_NO AS 'Brand Code', ITBR_NAME AS 'Brand"& _ 
                "/Provider Name', FORMAT(ITBR_CREATED_DATE, 'MMM. dd, yyyy hh:mm tt') AS 'Date Cr"& _ 
                "eated', CASE WHEN ITBR_STATUS = 1 THEN 'Active' ELSE 'Inactive' END AS 'Status' "& _ 
                "FROM tblM4_INVENTORY_ITEMBRAND WHERE (ITBR_NO = @ITBR_NO) ORDER BY status"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Brand_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand/Provider Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Brand_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand/Provider Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand/Provider Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITBR_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ITBR_NO AS 'Brand Code', ITBR_NAME AS 'Brand/Provider Name', FORMAT"& _ 
                "(ITBR_CREATED_DATE, 'MMM. dd, yyyy hh:mm tt') AS 'Date Created', "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            CASE WHEN ITBR_STATUS = 1 THEN 'Active' ELSE 'Inactive' END AS 'Stat"& _ 
                "us'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENTORY_ITEMBRAND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (ITBR_NO LIKE '%' +"& _ 
                " @SEARCH + '%') OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (ITBR_NAME LIKE '%' + @SEARCH + '%'"& _ 
                ")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY status"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEARCH", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMBRAND1DataTable, ByVal SEARCH As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SEARCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SEARCH")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SEARCH,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SEARCH As String) As DS_PROPERTYDB.tblM4_INVENTORY_ITEMBRAND1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SEARCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SEARCH")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SEARCH,String)
            End If
            Dim dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMBRAND1DataTable = New DS_PROPERTYDB.tblM4_INVENTORY_ITEMBRAND1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMBRAND1DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_INVENTORY_ITEMBRAND1")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Brand_Code As String, ByVal p2 As String) As Integer
            If (Original_Brand_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Brand_Code")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Brand_Code,String)
            End If
            If (p2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p2")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(p2,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Brand_Code As String, ByVal p1 As String, ByVal ITBR_NO As String) As Integer
            If (Brand_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Brand_Code")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Brand_Code,String)
            End If
            If (p1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p1")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(p1,String)
            End If
            If (ITBR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITBR_NO")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ITBR_NO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Brand_Code As String, ByVal p1 As String, ByVal Original_Brand_Code As String, ByVal p2 As String, ByVal ITBR_NO As String) As Integer
            If (Brand_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Brand_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Brand_Code,String)
            End If
            If (p1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p1")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(p1,String)
            End If
            If (Original_Brand_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Brand_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_Brand_Code,String)
            End If
            If (p2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p2")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(p2,String)
            End If
            If (ITBR_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITBR_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ITBR_NO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal p1 As String, ByVal Original_Brand_Code As String, ByVal p2 As String) As Integer
            Return Me.Update(Original_Brand_Code, p1, Original_Brand_Code, p2, Original_Brand_Code)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_CATEGORY_AND_SUBTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_CATEGORY_AND_SUB"
            tableMapping.ColumnMappings.Add("Sub-Category Code", "Sub-Category Code")
            tableMapping.ColumnMappings.Add("Category Name", "Category Name")
            tableMapping.ColumnMappings.Add("Sub-Category Name", "Sub-Category Name")
            tableMapping.ColumnMappings.Add("Created Date", "Created Date")
            tableMapping.ColumnMappings.Add("Status", "Status")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblM4_INVENTORY_SUB_CATEGORY.SC_NO AS 'Sub-Category Code', tblM4_IN"& _ 
                "VENTORY_CATEGORY.CAT_NAME AS 'Category Name', tblM4_INVENTORY_SUB_CATEGORY.SC_SU"& _ 
                "BCATEGORY_NAME AS 'Sub-Category Name', "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FORMAT(tblM4_I"& _ 
                "NVENTORY_SUB_CATEGORY.SC_CREATED_DATE, 'MMM. dd, yyyy  hh:mm tt') AS 'Created Da"& _ 
                "te', "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CASE WHEN tblM4_INVENTORY_SUB_CATEGORY.SC_STATUS"& _ 
                " = 1 THEN 'Active' ELSE 'Inactive' END AS 'Status'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENT"& _ 
                "ORY_SUB_CATEGORY INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblM4_INVENTORY_CATEGORY O"& _ 
                "N tblM4_INVENTORY_SUB_CATEGORY.CAT_CODE = tblM4_INVENTORY_CATEGORY.CAT_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHE"& _ 
                "RE        (tblM4_INVENTORY_SUB_CATEGORY.SC_NO LIKE '%' + @SEARCH + '%') OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     (tblM4_INVENTORY_CATEGORY.CAT_NAME LIKE '%' + @SEARCH + '%'"& _ 
                ") OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (tblM4_INVENTORY_SUB_CATEGORY.SC_SUBCATEGORY_NAME"& _ 
                " LIKE '%' + @SEARCH + '%')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY tblM4_INVENTORY_SUB_CATEGORY.SC_CREATED_DAT"& _ 
                "E"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEARCH", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Sub-Category Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_CATEGORY_AND_SUBDataTable, ByVal SEARCH As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SEARCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SEARCH")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SEARCH,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SEARCH As String) As DS_PROPERTYDB.tblM4_CATEGORY_AND_SUBDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SEARCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SEARCH")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SEARCH,String)
            End If
            Dim dataTable As DS_PROPERTYDB.tblM4_CATEGORY_AND_SUBDataTable = New DS_PROPERTYDB.tblM4_CATEGORY_AND_SUBDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_INVENTORY_ASSIGN_PERSONTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_INVENTORY_ASSIGN_PERSON"
            tableMapping.ColumnMappings.Add("ASSI_NO", "ASSI_NO")
            tableMapping.ColumnMappings.Add("ITEM_CODE", "ITEM_CODE")
            tableMapping.ColumnMappings.Add("EMP_NO", "EMP_NO")
            tableMapping.ColumnMappings.Add("ASSI_ORIGINATED", "ASSI_ORIGINATED")
            tableMapping.ColumnMappings.Add("REMARKS", "REMARKS")
            tableMapping.ColumnMappings.Add("ASSI_ASSIGNED_BY", "ASSI_ASSIGNED_BY")
            tableMapping.ColumnMappings.Add("DATE_ASSIGNED", "DATE_ASSIGNED")
            tableMapping.ColumnMappings.Add("DATE_CREATED", "DATE_CREATED")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_INVENTORY_ASSIGN_PERSON] WHERE (([ASSI_NO] = @Original_ASSI_NO"& _ 
                ") AND ([ITEM_CODE] = @Original_ITEM_CODE) AND ([EMP_NO] = @Original_EMP_NO) AND "& _ 
                "((@IsNull_ASSI_ORIGINATED = 1 AND [ASSI_ORIGINATED] IS NULL) OR ([ASSI_ORIGINATE"& _ 
                "D] = @Original_ASSI_ORIGINATED)) AND ((@IsNull_REMARKS = 1 AND [REMARKS] IS NULL"& _ 
                ") OR ([REMARKS] = @Original_REMARKS)) AND ([ASSI_ASSIGNED_BY] = @Original_ASSI_A"& _ 
                "SSIGNED_BY) AND ([DATE_ASSIGNED] = @Original_DATE_ASSIGNED) AND ([DATE_CREATED] "& _ 
                "= @Original_DATE_CREATED))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASSI_NO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ASSI_ORIGINATED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_ORIGINATED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASSI_ORIGINATED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_ORIGINATED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REMARKS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REMARKS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASSI_ASSIGNED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_ASSIGNED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATE_ASSIGNED", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_ASSIGNED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_CREATED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_INVENTORY_ASSIGN_PERSON] ([ASSI_NO], [ITEM_CODE], [EMP_NO], [A"& _ 
                "SSI_ORIGINATED], [REMARKS], [ASSI_ASSIGNED_BY], [DATE_ASSIGNED], [DATE_CREATED])"& _ 
                " VALUES (@ASSI_NO, @ITEM_CODE, @EMP_NO, @ASSI_ORIGINATED, @REMARKS, @ASSI_ASSIGN"& _ 
                "ED_BY, @DATE_ASSIGNED, @DATE_CREATED);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ASSI_NO, ITEM_CODE, EMP_NO, ASSI_"& _ 
                "ORIGINATED, REMARKS, ASSI_ASSIGNED_BY, DATE_ASSIGNED, DATE_CREATED FROM tblM4_IN"& _ 
                "VENTORY_ASSIGN_PERSON WHERE (ASSI_NO = @ASSI_NO) AND (EMP_NO = @EMP_NO) AND (ITE"& _ 
                "M_CODE = @ITEM_CODE)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASSI_NO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASSI_ORIGINATED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_ORIGINATED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASSI_ASSIGNED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_ASSIGNED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_ASSIGNED", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_ASSIGNED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_CREATED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_INVENTORY_ASSIGN_PERSON] SET [ASSI_NO] = @ASSI_NO, [ITEM_CODE] = @I"& _ 
                "TEM_CODE, [EMP_NO] = @EMP_NO, [ASSI_ORIGINATED] = @ASSI_ORIGINATED, [REMARKS] = "& _ 
                "@REMARKS, [ASSI_ASSIGNED_BY] = @ASSI_ASSIGNED_BY, [DATE_ASSIGNED] = @DATE_ASSIGN"& _ 
                "ED, [DATE_CREATED] = @DATE_CREATED WHERE (([ASSI_NO] = @Original_ASSI_NO) AND (["& _ 
                "ITEM_CODE] = @Original_ITEM_CODE) AND ([EMP_NO] = @Original_EMP_NO) AND ((@IsNul"& _ 
                "l_ASSI_ORIGINATED = 1 AND [ASSI_ORIGINATED] IS NULL) OR ([ASSI_ORIGINATED] = @Or"& _ 
                "iginal_ASSI_ORIGINATED)) AND ((@IsNull_REMARKS = 1 AND [REMARKS] IS NULL) OR ([R"& _ 
                "EMARKS] = @Original_REMARKS)) AND ([ASSI_ASSIGNED_BY] = @Original_ASSI_ASSIGNED_"& _ 
                "BY) AND ([DATE_ASSIGNED] = @Original_DATE_ASSIGNED) AND ([DATE_CREATED] = @Origi"& _ 
                "nal_DATE_CREATED));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ASSI_NO, ITEM_CODE, EMP_NO, ASSI_ORIGINATED, REMARKS"& _ 
                ", ASSI_ASSIGNED_BY, DATE_ASSIGNED, DATE_CREATED FROM tblM4_INVENTORY_ASSIGN_PERS"& _ 
                "ON WHERE (ASSI_NO = @ASSI_NO) AND (EMP_NO = @EMP_NO) AND (ITEM_CODE = @ITEM_CODE"& _ 
                ")"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASSI_NO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASSI_ORIGINATED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_ORIGINATED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASSI_ASSIGNED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_ASSIGNED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_ASSIGNED", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_ASSIGNED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_CREATED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASSI_NO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMP_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ASSI_ORIGINATED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_ORIGINATED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASSI_ORIGINATED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_ORIGINATED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REMARKS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REMARKS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REMARKS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REMARKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASSI_ASSIGNED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_ASSIGNED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATE_ASSIGNED", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_ASSIGNED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_CREATED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblM4_INVENTORY_ASSIGN_PERSON.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENTORY_AS"& _ 
                "SIGN_PERSON"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "INSERT INTO tblM4_INVENTORY_ASSIGN_PERSON"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (ITEM_CODE, E"& _ 
                "MP_NO, ASSI_ORIGINATED, REMARKS, ASSI_ASSIGNED_BY)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@ITEM_CODE,@E"& _ 
                "MP_NO,@ASSI_ORIGINATED,@REMARKS,@ASSI_ASSIGNED_BY); "
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASSI_ORIGINATED", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_ORIGINATED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REMARKS", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASSI_ASSIGNED_BY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSI_ASSIGNED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        TOP (1) EMP_NO AS ORIGINATED"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENTORY_ASSIG"& _ 
                "N_PERSON"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (ITEM_CODE = @ITEMCODE)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY DATE_ASSIGNED DESC"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEMCODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ASSIGN_PERSONDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_PROPERTYDB.tblM4_INVENTORY_ASSIGN_PERSONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ASSIGN_PERSONDataTable = New DS_PROPERTYDB.tblM4_INVENTORY_ASSIGN_PERSONDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ASSIGN_PERSONDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_INVENTORY_ASSIGN_PERSON")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ASSI_NO As Date, ByVal Original_ITEM_CODE As String, ByVal Original_EMP_NO As String, ByVal Original_ASSI_ORIGINATED As String, ByVal Original_REMARKS As String, ByVal Original_ASSI_ASSIGNED_BY As String, ByVal Original_DATE_ASSIGNED As Date, ByVal Original_DATE_CREATED As Date) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ASSI_NO,Date)
            If (Original_ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITEM_CODE")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ITEM_CODE,String)
            End If
            If (Original_EMP_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EMP_NO")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_EMP_NO,String)
            End If
            If (Original_ASSI_ORIGINATED Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ASSI_ORIGINATED,String)
            End If
            If (Original_REMARKS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_REMARKS,String)
            End If
            If (Original_ASSI_ASSIGNED_BY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ASSI_ASSIGNED_BY")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ASSI_ASSIGNED_BY,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DATE_ASSIGNED,Date)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_DATE_CREATED,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ASSI_NO As Date, ByVal ITEM_CODE As String, ByVal EMP_NO As String, ByVal ASSI_ORIGINATED As String, ByVal REMARKS As String, ByVal ASSI_ASSIGNED_BY As String, ByVal DATE_ASSIGNED As Date, ByVal DATE_CREATED As Date) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ASSI_NO,Date)
            If (ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ITEM_CODE,String)
            End If
            If (EMP_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EMP_NO")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(EMP_NO,String)
            End If
            If (ASSI_ORIGINATED Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ASSI_ORIGINATED,String)
            End If
            If (REMARKS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(REMARKS,String)
            End If
            If (ASSI_ASSIGNED_BY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ASSI_ASSIGNED_BY")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ASSI_ASSIGNED_BY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(DATE_ASSIGNED,Date)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(DATE_CREATED,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ASSI_NO As Date,  _
                    ByVal ITEM_CODE As String,  _
                    ByVal EMP_NO As String,  _
                    ByVal ASSI_ORIGINATED As String,  _
                    ByVal REMARKS As String,  _
                    ByVal ASSI_ASSIGNED_BY As String,  _
                    ByVal DATE_ASSIGNED As Date,  _
                    ByVal DATE_CREATED As Date,  _
                    ByVal Original_ASSI_NO As Date,  _
                    ByVal Original_ITEM_CODE As String,  _
                    ByVal Original_EMP_NO As String,  _
                    ByVal Original_ASSI_ORIGINATED As String,  _
                    ByVal Original_REMARKS As String,  _
                    ByVal Original_ASSI_ASSIGNED_BY As String,  _
                    ByVal Original_DATE_ASSIGNED As Date,  _
                    ByVal Original_DATE_CREATED As Date) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ASSI_NO,Date)
            If (ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ITEM_CODE,String)
            End If
            If (EMP_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EMP_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(EMP_NO,String)
            End If
            If (ASSI_ORIGINATED Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ASSI_ORIGINATED,String)
            End If
            If (REMARKS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(REMARKS,String)
            End If
            If (ASSI_ASSIGNED_BY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ASSI_ASSIGNED_BY")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ASSI_ASSIGNED_BY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(DATE_ASSIGNED,Date)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(DATE_CREATED,Date)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_ASSI_NO,Date)
            If (Original_ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITEM_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ITEM_CODE,String)
            End If
            If (Original_EMP_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EMP_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_EMP_NO,String)
            End If
            If (Original_ASSI_ORIGINATED Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_ASSI_ORIGINATED,String)
            End If
            If (Original_REMARKS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_REMARKS,String)
            End If
            If (Original_ASSI_ASSIGNED_BY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ASSI_ASSIGNED_BY")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_ASSI_ASSIGNED_BY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_DATE_ASSIGNED,Date)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_DATE_CREATED,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ASSI_ORIGINATED As String, ByVal REMARKS As String, ByVal ASSI_ASSIGNED_BY As String, ByVal DATE_ASSIGNED As Date, ByVal DATE_CREATED As Date, ByVal Original_ASSI_NO As Date, ByVal Original_ITEM_CODE As String, ByVal Original_EMP_NO As String, ByVal Original_ASSI_ORIGINATED As String, ByVal Original_REMARKS As String, ByVal Original_ASSI_ASSIGNED_BY As String, ByVal Original_DATE_ASSIGNED As Date, ByVal Original_DATE_CREATED As Date) As Integer
            Return Me.Update(Original_ASSI_NO, Original_ITEM_CODE, Original_EMP_NO, ASSI_ORIGINATED, REMARKS, ASSI_ASSIGNED_BY, DATE_ASSIGNED, DATE_CREATED, Original_ASSI_NO, Original_ITEM_CODE, Original_EMP_NO, Original_ASSI_ORIGINATED, Original_REMARKS, Original_ASSI_ASSIGNED_BY, Original_DATE_ASSIGNED, Original_DATE_CREATED)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function IQ_ASSIGN_PERSON(ByVal ITEM_CODE As String, ByVal EMP_NO As String, ByVal ASSI_ORIGINATED As String, ByVal REMARKS As String, ByVal ASSI_ASSIGNED_BY As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_CODE")
            Else
                command.Parameters(0).Value = CType(ITEM_CODE,String)
            End If
            If (EMP_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EMP_NO")
            Else
                command.Parameters(1).Value = CType(EMP_NO,String)
            End If
            If (ASSI_ORIGINATED Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(ASSI_ORIGINATED,String)
            End If
            If (REMARKS Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(REMARKS,String)
            End If
            If (ASSI_ASSIGNED_BY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ASSI_ASSIGNED_BY")
            Else
                command.Parameters(4).Value = CType(ASSI_ASSIGNED_BY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_ORIGINATED(ByVal ITEMCODE As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (ITEMCODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEMCODE")
            Else
                command.Parameters(0).Value = CType(ITEMCODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_INVENTORY_ITEMS1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_INVENTORY_ITEMS1"
            tableMapping.ColumnMappings.Add("ITEM_CODE", "ITEM_CODE")
            tableMapping.ColumnMappings.Add("ITEM_SERIAL_NO", "ITEM_SERIAL_NO")
            tableMapping.ColumnMappings.Add("ITEM_DESCRIPTION", "ITEM_DESCRIPTION")
            tableMapping.ColumnMappings.Add("ITEM_UNIT", "ITEM_UNIT")
            tableMapping.ColumnMappings.Add("ITEM_UNIT_COST", "ITEM_UNIT_COST")
            tableMapping.ColumnMappings.Add("ITEM_TOTAL_COST", "ITEM_TOTAL_COST")
            tableMapping.ColumnMappings.Add("ITEM_QUANTITY", "ITEM_QUANTITY")
            tableMapping.ColumnMappings.Add("ITEM_DATE_AQUISITION", "ITEM_DATE_AQUISITION")
            tableMapping.ColumnMappings.Add("ASSI_ORIGINATED", "ASSI_ORIGINATED")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblM4_INVENTORY_ITEMS.ITEM_CODE, tblM4_INVENTORY_ITEMS.ITEM_SERIAL_"& _ 
                "NO, tblM4_INVENTORY_ITEMS.ITEM_DESCRIPTION, tblM4_INVENTORY_ITEMS.ITEM_UNIT, tbl"& _ 
                "M4_INVENTORY_ITEMS.ITEM_UNIT_COST, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblM4_INVENTORY_IT"& _ 
                "EMS.ITEM_TOTAL_COST, tblM4_INVENTORY_ITEMS.ITEM_QUANTITY, tblM4_INVENTORY_ITEMS."& _ 
                "ITEM_DATE_AQUISITION, tblM4_INVENTORY_ASSIGN_PERSON.ASSI_ORIGINATED"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM       "& _ 
                "     tblM4_INVENTORY_ITEMS LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblM4_INVEN"& _ 
                "TORY_ASSIGN_PERSON ON tblM4_INVENTORY_ITEMS.ITEM_CODE = tblM4_INVENTORY_ASSIGN_P"& _ 
                "ERSON.ITEM_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (tblM4_INVENTORY_ITEMS.ITEM_CODE NOT IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                    (SELECT        ITEM_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FRO"& _ 
                "M            tblM4_INVENTORY_ASSIGN_PERSON AS tblM4_INVENTORY_ASSIGN_PERSON_1)) "& _ 
                "AND (tblM4_INVENTORY_ITEMS.ITEM_CODE LIKE '%' + @SEARCH + '%')"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEARCH", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        tblM4_INVENTORY_ITEMS.ITEM_CODE, tblM4_INVENTORY_ITEMS.ITEM_SERIAL_"& _ 
                "NO, tblM4_INVENTORY_ITEMS.ITEM_DESCRIPTION, tblM4_INVENTORY_ITEMS.ITEM_UNIT, tbl"& _ 
                "M4_INVENTORY_ITEMS.ITEM_UNIT_COST, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tblM4_INVENTORY_IT"& _ 
                "EMS.ITEM_TOTAL_COST, tblM4_INVENTORY_ITEMS.ITEM_QUANTITY, tblM4_INVENTORY_ITEMS."& _ 
                "ITEM_DATE_AQUISITION, B.ASSI_ORIGINATED"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENTORY_ITEMS L"& _ 
                "EFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT        ITEM_CODE, MAX(DATE_"& _ 
                "ASSIGNED) AS MAXDATE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            tblM4_INVEN"& _ 
                "TORY_ASSIGN_PERSON"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               GROUP BY ITEM_CODE) AS A ON t"& _ 
                "blM4_INVENTORY_ITEMS.ITEM_CODE = A.ITEM_CODE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       tblM4_INVENTORY_ASSIGN_PERSON AS B ON tblM4_INVENTORY_ITEMS.ITEM_CODE = B"& _ 
                ".ITEM_CODE AND A.ITEM_CODE = B.ITEM_CODE AND A.MAXDATE = B.DATE_ASSIGNED"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE "& _ 
                "       (tblM4_INVENTORY_ITEMS.ITEM_CODE IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT"& _ 
                "        ITEM_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            tblM4_INVENTOR"& _ 
                "Y_ASSIGN_PERSON AS tblM4_INVENTORY_ASSIGN_PERSON_1)) AND (tblM4_INVENTORY_ITEMS."& _ 
                "ITEM_CODE LIKE '%' + @SEARCH + '%')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY B.DATE_ASSIGNED DESC"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEARCH", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMS1DataTable, ByVal SEARCH As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SEARCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SEARCH")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SEARCH,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByINAssign(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMS1DataTable, ByVal SEARCH As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (SEARCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SEARCH")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SEARCH,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_INVENTORY_ACQUISITION_ITEM_USAGE"
            tableMapping.ColumnMappings.Add("USG_CODE", "USG_CODE")
            tableMapping.ColumnMappings.Add("USG_NAME", "USG_NAME")
            tableMapping.ColumnMappings.Add("USG_DESCRIPTION", "USG_DESCRIPTION")
            tableMapping.ColumnMappings.Add("USG_DATE_CREATED", "USG_DATE_CREATED")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_INVENTORY_ACQUISITION_ITEM_USAGE] WHERE (([USG_CODE] = @Origin"& _ 
                "al_USG_CODE) AND ([USG_NAME] = @Original_USG_NAME) AND ((@IsNull_USG_DESCRIPTION"& _ 
                " = 1 AND [USG_DESCRIPTION] IS NULL) OR ([USG_DESCRIPTION] = @Original_USG_DESCRI"& _ 
                "PTION)) AND ([USG_DATE_CREATED] = @Original_USG_DATE_CREATED))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_USG_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_USG_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_USG_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_USG_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_USG_DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_DATE_CREATED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_INVENTORY_ACQUISITION_ITEM_USAGE] ([USG_CODE], [USG_NAME], [US"& _ 
                "G_DESCRIPTION], [USG_DATE_CREATED]) VALUES (@USG_CODE, @USG_NAME, @USG_DESCRIPTI"& _ 
                "ON, @USG_DATE_CREATED);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT USG_CODE, USG_NAME, USG_DESCRIPTION, USG_DATE_CR"& _ 
                "EATED FROM tblM4_INVENTORY_ACQUISITION_ITEM_USAGE WHERE (USG_CODE = @USG_CODE)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@USG_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@USG_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@USG_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@USG_DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_DATE_CREATED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_INVENTORY_ACQUISITION_ITEM_USAGE] SET [USG_CODE] = @USG_CODE, [USG_"& _ 
                "NAME] = @USG_NAME, [USG_DESCRIPTION] = @USG_DESCRIPTION, [USG_DATE_CREATED] = @U"& _ 
                "SG_DATE_CREATED WHERE (([USG_CODE] = @Original_USG_CODE) AND ([USG_NAME] = @Orig"& _ 
                "inal_USG_NAME) AND ((@IsNull_USG_DESCRIPTION = 1 AND [USG_DESCRIPTION] IS NULL) "& _ 
                "OR ([USG_DESCRIPTION] = @Original_USG_DESCRIPTION)) AND ([USG_DATE_CREATED] = @O"& _ 
                "riginal_USG_DATE_CREATED));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT USG_CODE, USG_NAME, USG_DESCRIPTION, USG_DAT"& _ 
                "E_CREATED FROM tblM4_INVENTORY_ACQUISITION_ITEM_USAGE WHERE (USG_CODE = @USG_COD"& _ 
                "E)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@USG_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@USG_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@USG_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@USG_DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_DATE_CREATED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_USG_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_USG_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_USG_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_USG_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_USG_DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USG_DATE_CREATED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        USG_CODE, USG_NAME, USG_DESCRIPTION, USG_DATE_CREATED"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM        "& _ 
                "    tblM4_INVENTORY_ACQUISITION_ITEM_USAGE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ACQUISITION_ITEM_USAGEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ACQUISITION_ITEM_USAGEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_INVENTORY_ACQUISITION_ITEM_USAGE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_USG_CODE As String, ByVal Original_USG_NAME As String, ByVal Original_USG_DESCRIPTION As String, ByVal Original_USG_DATE_CREATED As Date) As Integer
            If (Original_USG_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USG_CODE")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_USG_CODE,String)
            End If
            If (Original_USG_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USG_NAME")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_USG_NAME,String)
            End If
            If (Original_USG_DESCRIPTION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_USG_DESCRIPTION,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_USG_DATE_CREATED,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal USG_CODE As String, ByVal USG_NAME As String, ByVal USG_DESCRIPTION As String, ByVal USG_DATE_CREATED As Date) As Integer
            If (USG_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USG_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(USG_CODE,String)
            End If
            If (USG_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USG_NAME")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(USG_NAME,String)
            End If
            If (USG_DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(USG_DESCRIPTION,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(USG_DATE_CREATED,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal USG_CODE As String, ByVal USG_NAME As String, ByVal USG_DESCRIPTION As String, ByVal USG_DATE_CREATED As Date, ByVal Original_USG_CODE As String, ByVal Original_USG_NAME As String, ByVal Original_USG_DESCRIPTION As String, ByVal Original_USG_DATE_CREATED As Date) As Integer
            If (USG_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USG_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(USG_CODE,String)
            End If
            If (USG_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USG_NAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(USG_NAME,String)
            End If
            If (USG_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(USG_DESCRIPTION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(USG_DATE_CREATED,Date)
            If (Original_USG_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USG_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_USG_CODE,String)
            End If
            If (Original_USG_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USG_NAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_USG_NAME,String)
            End If
            If (Original_USG_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_USG_DESCRIPTION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_USG_DATE_CREATED,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal USG_NAME As String, ByVal USG_DESCRIPTION As String, ByVal USG_DATE_CREATED As Date, ByVal Original_USG_CODE As String, ByVal Original_USG_NAME As String, ByVal Original_USG_DESCRIPTION As String, ByVal Original_USG_DATE_CREATED As Date) As Integer
            Return Me.Update(Original_USG_CODE, USG_NAME, USG_DESCRIPTION, USG_DATE_CREATED, Original_USG_CODE, Original_USG_NAME, Original_USG_DESCRIPTION, Original_USG_DATE_CREATED)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_INVENTORY_ACQUISITION_VALUETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_INVENTORY_ACQUISITION_VALUE"
            tableMapping.ColumnMappings.Add("ACQV_CODE", "ACQV_CODE")
            tableMapping.ColumnMappings.Add("ACQV_TITLE", "ACQV_TITLE")
            tableMapping.ColumnMappings.Add("ACQV_DESCRIPTION", "ACQV_DESCRIPTION")
            tableMapping.ColumnMappings.Add("ACQV_DATE_CREATED", "ACQV_DATE_CREATED")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_INVENTORY_ACQUISITION_VALUE] WHERE (([ACQV_CODE] = @Original_A"& _ 
                "CQV_CODE) AND ((@IsNull_ACQV_TITLE = 1 AND [ACQV_TITLE] IS NULL) OR ([ACQV_TITLE"& _ 
                "] = @Original_ACQV_TITLE)) AND ((@IsNull_ACQV_DESCRIPTION = 1 AND [ACQV_DESCRIPT"& _ 
                "ION] IS NULL) OR ([ACQV_DESCRIPTION] = @Original_ACQV_DESCRIPTION)) AND ([ACQV_D"& _ 
                "ATE_CREATED] = @Original_ACQV_DATE_CREATED))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACQV_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACQV_TITLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_TITLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACQV_TITLE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_TITLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACQV_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACQV_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACQV_DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_DATE_CREATED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_INVENTORY_ACQUISITION_VALUE] ([ACQV_CODE], [ACQV_TITLE], [ACQV"& _ 
                "_DESCRIPTION], [ACQV_DATE_CREATED]) VALUES (@ACQV_CODE, @ACQV_TITLE, @ACQV_DESCR"& _ 
                "IPTION, @ACQV_DATE_CREATED);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ACQV_CODE, ACQV_TITLE, ACQV_DESCRIPTION, AC"& _ 
                "QV_DATE_CREATED FROM tblM4_INVENTORY_ACQUISITION_VALUE WHERE (ACQV_CODE = @ACQV_"& _ 
                "CODE)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACQV_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACQV_TITLE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_TITLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACQV_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACQV_DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_DATE_CREATED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_INVENTORY_ACQUISITION_VALUE] SET [ACQV_CODE] = @ACQV_CODE, [ACQV_TI"& _ 
                "TLE] = @ACQV_TITLE, [ACQV_DESCRIPTION] = @ACQV_DESCRIPTION, [ACQV_DATE_CREATED] "& _ 
                "= @ACQV_DATE_CREATED WHERE (([ACQV_CODE] = @Original_ACQV_CODE) AND ((@IsNull_AC"& _ 
                "QV_TITLE = 1 AND [ACQV_TITLE] IS NULL) OR ([ACQV_TITLE] = @Original_ACQV_TITLE))"& _ 
                " AND ((@IsNull_ACQV_DESCRIPTION = 1 AND [ACQV_DESCRIPTION] IS NULL) OR ([ACQV_DE"& _ 
                "SCRIPTION] = @Original_ACQV_DESCRIPTION)) AND ([ACQV_DATE_CREATED] = @Original_A"& _ 
                "CQV_DATE_CREATED));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ACQV_CODE, ACQV_TITLE, ACQV_DESCRIPTION, ACQV_DATE_C"& _ 
                "REATED FROM tblM4_INVENTORY_ACQUISITION_VALUE WHERE (ACQV_CODE = @ACQV_CODE)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACQV_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACQV_TITLE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_TITLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACQV_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACQV_DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_DATE_CREATED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACQV_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACQV_TITLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_TITLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACQV_TITLE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_TITLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACQV_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACQV_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACQV_DATE_CREATED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACQV_DATE_CREATED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblM4_INVENTORY_ACQUISITION_VALUE.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENTOR"& _ 
                "Y_ACQUISITION_VALUE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ACQUISITION_VALUEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ACQUISITION_VALUEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_INVENTORY_ACQUISITION_VALUE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ACQV_CODE As String, ByVal Original_ACQV_TITLE As String, ByVal Original_ACQV_DESCRIPTION As String, ByVal Original_ACQV_DATE_CREATED As Date) As Integer
            If (Original_ACQV_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ACQV_CODE")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ACQV_CODE,String)
            End If
            If (Original_ACQV_TITLE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ACQV_TITLE,String)
            End If
            If (Original_ACQV_DESCRIPTION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ACQV_DESCRIPTION,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ACQV_DATE_CREATED,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ACQV_CODE As String, ByVal ACQV_TITLE As String, ByVal ACQV_DESCRIPTION As String, ByVal ACQV_DATE_CREATED As Date) As Integer
            If (ACQV_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ACQV_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ACQV_CODE,String)
            End If
            If (ACQV_TITLE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ACQV_TITLE,String)
            End If
            If (ACQV_DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ACQV_DESCRIPTION,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(ACQV_DATE_CREATED,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ACQV_CODE As String, ByVal ACQV_TITLE As String, ByVal ACQV_DESCRIPTION As String, ByVal ACQV_DATE_CREATED As Date, ByVal Original_ACQV_CODE As String, ByVal Original_ACQV_TITLE As String, ByVal Original_ACQV_DESCRIPTION As String, ByVal Original_ACQV_DATE_CREATED As Date) As Integer
            If (ACQV_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ACQV_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ACQV_CODE,String)
            End If
            If (ACQV_TITLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ACQV_TITLE,String)
            End If
            If (ACQV_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ACQV_DESCRIPTION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ACQV_DATE_CREATED,Date)
            If (Original_ACQV_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ACQV_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_ACQV_CODE,String)
            End If
            If (Original_ACQV_TITLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ACQV_TITLE,String)
            End If
            If (Original_ACQV_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_ACQV_DESCRIPTION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ACQV_DATE_CREATED,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ACQV_TITLE As String, ByVal ACQV_DESCRIPTION As String, ByVal ACQV_DATE_CREATED As Date, ByVal Original_ACQV_CODE As String, ByVal Original_ACQV_TITLE As String, ByVal Original_ACQV_DESCRIPTION As String, ByVal Original_ACQV_DATE_CREATED As Date) As Integer
            Return Me.Update(Original_ACQV_CODE, ACQV_TITLE, ACQV_DESCRIPTION, ACQV_DATE_CREATED, Original_ACQV_CODE, Original_ACQV_TITLE, Original_ACQV_DESCRIPTION, Original_ACQV_DATE_CREATED)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblM4_INVENTORY_ITEMS_PROPERTY"
            tableMapping.ColumnMappings.Add("ITEM_NO", "ITEM_NO")
            tableMapping.ColumnMappings.Add("ITEM_CODE", "ITEM_CODE")
            tableMapping.ColumnMappings.Add("PROP_DIVISION_UNIT", "PROP_DIVISION_UNIT")
            tableMapping.ColumnMappings.Add("PROP_CUSTODIAN", "PROP_CUSTODIAN")
            tableMapping.ColumnMappings.Add("PROP_PROPERTY_USER", "PROP_PROPERTY_USER")
            tableMapping.ColumnMappings.Add("PROP_ENCODED_BY", "PROP_ENCODED_BY")
            tableMapping.ColumnMappings.Add("PROP_CREATED_DATE", "PROP_CREATED_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblM4_INVENTORY_ITEMS_PROPERTY] WHERE (([ITEM_NO] = @Original_ITEM_N"& _ 
                "O) AND ([ITEM_CODE] = @Original_ITEM_CODE) AND ((@IsNull_PROP_DIVISION_UNIT = 1 "& _ 
                "AND [PROP_DIVISION_UNIT] IS NULL) OR ([PROP_DIVISION_UNIT] = @Original_PROP_DIVI"& _ 
                "SION_UNIT)) AND ((@IsNull_PROP_CUSTODIAN = 1 AND [PROP_CUSTODIAN] IS NULL) OR (["& _ 
                "PROP_CUSTODIAN] = @Original_PROP_CUSTODIAN)) AND ((@IsNull_PROP_PROPERTY_USER = "& _ 
                "1 AND [PROP_PROPERTY_USER] IS NULL) OR ([PROP_PROPERTY_USER] = @Original_PROP_PR"& _ 
                "OPERTY_USER)) AND ((@IsNull_PROP_ENCODED_BY = 1 AND [PROP_ENCODED_BY] IS NULL) O"& _ 
                "R ([PROP_ENCODED_BY] = @Original_PROP_ENCODED_BY)) AND ((@IsNull_PROP_CREATED_DA"& _ 
                "TE = 1 AND [PROP_CREATED_DATE] IS NULL) OR ([PROP_CREATED_DATE] = @Original_PROP"& _ 
                "_CREATED_DATE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_NO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PROP_DIVISION_UNIT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_DIVISION_UNIT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PROP_DIVISION_UNIT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_DIVISION_UNIT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PROP_CUSTODIAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_CUSTODIAN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PROP_CUSTODIAN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_CUSTODIAN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PROP_PROPERTY_USER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_PROPERTY_USER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PROP_PROPERTY_USER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_PROPERTY_USER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PROP_ENCODED_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_ENCODED_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PROP_ENCODED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_ENCODED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PROP_CREATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_CREATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PROP_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblM4_INVENTORY_ITEMS_PROPERTY] ([ITEM_NO], [ITEM_CODE], [PROP_DIVIS"& _ 
                "ION_UNIT], [PROP_CUSTODIAN], [PROP_PROPERTY_USER], [PROP_ENCODED_BY], [PROP_CREA"& _ 
                "TED_DATE]) VALUES (@ITEM_NO, @ITEM_CODE, @PROP_DIVISION_UNIT, @PROP_CUSTODIAN, @"& _ 
                "PROP_PROPERTY_USER, @PROP_ENCODED_BY, @PROP_CREATED_DATE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ITEM_NO, ITEM"& _ 
                "_CODE, PROP_DIVISION_UNIT, PROP_CUSTODIAN, PROP_PROPERTY_USER, PROP_ENCODED_BY, "& _ 
                "PROP_CREATED_DATE FROM tblM4_INVENTORY_ITEMS_PROPERTY WHERE (ITEM_CODE = @ITEM_C"& _ 
                "ODE) AND (ITEM_NO = @ITEM_NO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_NO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_DIVISION_UNIT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_DIVISION_UNIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_CUSTODIAN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_CUSTODIAN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_PROPERTY_USER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_PROPERTY_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_ENCODED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_ENCODED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblM4_INVENTORY_ITEMS_PROPERTY] SET [ITEM_NO] = @ITEM_NO, [ITEM_CODE] = @"& _ 
                "ITEM_CODE, [PROP_DIVISION_UNIT] = @PROP_DIVISION_UNIT, [PROP_CUSTODIAN] = @PROP_"& _ 
                "CUSTODIAN, [PROP_PROPERTY_USER] = @PROP_PROPERTY_USER, [PROP_ENCODED_BY] = @PROP"& _ 
                "_ENCODED_BY, [PROP_CREATED_DATE] = @PROP_CREATED_DATE WHERE (([ITEM_NO] = @Origi"& _ 
                "nal_ITEM_NO) AND ([ITEM_CODE] = @Original_ITEM_CODE) AND ((@IsNull_PROP_DIVISION"& _ 
                "_UNIT = 1 AND [PROP_DIVISION_UNIT] IS NULL) OR ([PROP_DIVISION_UNIT] = @Original"& _ 
                "_PROP_DIVISION_UNIT)) AND ((@IsNull_PROP_CUSTODIAN = 1 AND [PROP_CUSTODIAN] IS N"& _ 
                "ULL) OR ([PROP_CUSTODIAN] = @Original_PROP_CUSTODIAN)) AND ((@IsNull_PROP_PROPER"& _ 
                "TY_USER = 1 AND [PROP_PROPERTY_USER] IS NULL) OR ([PROP_PROPERTY_USER] = @Origin"& _ 
                "al_PROP_PROPERTY_USER)) AND ((@IsNull_PROP_ENCODED_BY = 1 AND [PROP_ENCODED_BY] "& _ 
                "IS NULL) OR ([PROP_ENCODED_BY] = @Original_PROP_ENCODED_BY)) AND ((@IsNull_PROP_"& _ 
                "CREATED_DATE = 1 AND [PROP_CREATED_DATE] IS NULL) OR ([PROP_CREATED_DATE] = @Ori"& _ 
                "ginal_PROP_CREATED_DATE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ITEM_NO, ITEM_CODE, PROP_DIVISION_UNIT, PROP"& _ 
                "_CUSTODIAN, PROP_PROPERTY_USER, PROP_ENCODED_BY, PROP_CREATED_DATE FROM tblM4_IN"& _ 
                "VENTORY_ITEMS_PROPERTY WHERE (ITEM_CODE = @ITEM_CODE) AND (ITEM_NO = @ITEM_NO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_NO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_DIVISION_UNIT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_DIVISION_UNIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_CUSTODIAN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_CUSTODIAN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_PROPERTY_USER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_PROPERTY_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_ENCODED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_ENCODED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_CREATED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_NO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PROP_DIVISION_UNIT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_DIVISION_UNIT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PROP_DIVISION_UNIT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_DIVISION_UNIT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PROP_CUSTODIAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_CUSTODIAN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PROP_CUSTODIAN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_CUSTODIAN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PROP_PROPERTY_USER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_PROPERTY_USER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PROP_PROPERTY_USER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_PROPERTY_USER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PROP_ENCODED_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_ENCODED_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PROP_ENCODED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_ENCODED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PROP_CREATED_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_CREATED_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PROP_CREATED_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_CREATED_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PRA_PIS.My.MySettings.Default.PRA_PROPERTYDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ITEM_NO, ITEM_CODE, PROP_DIVISION_UNIT, PROP_CUSTODIAN, PROP_PROPERTY_USER"& _ 
                ", PROP_ENCODED_BY, PROP_CREATED_DATE FROM tblM4_INVENTORY_ITEMS_PROPERTY"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT COUNT(*) FROM tblM4_INVENTORY_ITEMS_PROPERTY where item_code = @item_code"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@item_code", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        ITEM_CODE, ITEM_NO, PROP_CREATED_DATE, PROP_CUSTODIAN, PROP_DIVISIO"& _ 
                "N_UNIT, PROP_ENCODED_BY, PROP_PROPERTY_USER"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblM4_INVENTORY_ITE"& _ 
                "MS_PROPERTY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (ITEM_CODE = @ITEM_CODE)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "INSERT INTO tblM4_INVENTORY_ITEMS_PROPERTY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (ITEM_CODE, "& _ 
                "PROP_DIVISION_UNIT, PROP_CUSTODIAN, PROP_PROPERTY_USER, PROP_ENCODED_BY)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES"& _ 
                "        (@ITEM_CODE,@PROP_DIVISION_UNIT,@PROP_CUSTODIAN,@PROP_PROPERTY_USER,@PRO"& _ 
                "P_ENCODED_BY); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_DIVISION_UNIT", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_DIVISION_UNIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_CUSTODIAN", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_CUSTODIAN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_PROPERTY_USER", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_PROPERTY_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_ENCODED_BY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_ENCODED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "UPDATE       tblM4_INVENTORY_ITEMS_PROPERTY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                PROP_DIVISION_UNI"& _ 
                "T = @PROP_DIVISION_UNIT, PROP_CUSTODIAN = @PROP_CUSTODIAN, PROP_PROPERTY_USER = "& _ 
                "@PROP_PROPERTY_USER, PROP_ENCODED_BY = @PROP_ENCODED_BY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (ITEM_CODE"& _ 
                " = @Original_ITEM_CODE); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_DIVISION_UNIT", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_DIVISION_UNIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_CUSTODIAN", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_CUSTODIAN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_PROPERTY_USER", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_PROPERTY_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROP_ENCODED_BY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PROP_ENCODED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ITEM_CODE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMS_PROPERTYDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByItemCode(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMS_PROPERTYDataTable, ByVal ITEM_CODE As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(ITEM_CODE,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_PROPERTYDB.tblM4_INVENTORY_ITEMS_PROPERTYDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_PROPERTYDB) As Integer
            Return Me.Adapter.Update(dataSet, "tblM4_INVENTORY_ITEMS_PROPERTY")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ITEM_NO As Date, ByVal Original_ITEM_CODE As String, ByVal Original_PROP_DIVISION_UNIT As String, ByVal Original_PROP_CUSTODIAN As String, ByVal Original_PROP_PROPERTY_USER As String, ByVal Original_PROP_ENCODED_BY As String, ByVal Original_PROP_CREATED_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ITEM_NO,Date)
            If (Original_ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITEM_CODE")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ITEM_CODE,String)
            End If
            If (Original_PROP_DIVISION_UNIT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_PROP_DIVISION_UNIT,String)
            End If
            If (Original_PROP_CUSTODIAN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_PROP_CUSTODIAN,String)
            End If
            If (Original_PROP_PROPERTY_USER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_PROP_PROPERTY_USER,String)
            End If
            If (Original_PROP_ENCODED_BY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_PROP_ENCODED_BY,String)
            End If
            If (Original_PROP_CREATED_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_PROP_CREATED_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ITEM_NO As Date, ByVal ITEM_CODE As String, ByVal PROP_DIVISION_UNIT As String, ByVal PROP_CUSTODIAN As String, ByVal PROP_PROPERTY_USER As String, ByVal PROP_ENCODED_BY As String, ByVal PROP_CREATED_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ITEM_NO,Date)
            If (ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ITEM_CODE,String)
            End If
            If (PROP_DIVISION_UNIT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PROP_DIVISION_UNIT,String)
            End If
            If (PROP_CUSTODIAN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PROP_CUSTODIAN,String)
            End If
            If (PROP_PROPERTY_USER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PROP_PROPERTY_USER,String)
            End If
            If (PROP_ENCODED_BY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PROP_ENCODED_BY,String)
            End If
            If (PROP_CREATED_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PROP_CREATED_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ITEM_NO As Date, ByVal ITEM_CODE As String, ByVal PROP_DIVISION_UNIT As String, ByVal PROP_CUSTODIAN As String, ByVal PROP_PROPERTY_USER As String, ByVal PROP_ENCODED_BY As String, ByVal PROP_CREATED_DATE As Global.System.Nullable(Of Date), ByVal Original_ITEM_NO As Date, ByVal Original_ITEM_CODE As String, ByVal Original_PROP_DIVISION_UNIT As String, ByVal Original_PROP_CUSTODIAN As String, ByVal Original_PROP_PROPERTY_USER As String, ByVal Original_PROP_ENCODED_BY As String, ByVal Original_PROP_CREATED_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ITEM_NO,Date)
            If (ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ITEM_CODE,String)
            End If
            If (PROP_DIVISION_UNIT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PROP_DIVISION_UNIT,String)
            End If
            If (PROP_CUSTODIAN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PROP_CUSTODIAN,String)
            End If
            If (PROP_PROPERTY_USER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PROP_PROPERTY_USER,String)
            End If
            If (PROP_ENCODED_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PROP_ENCODED_BY,String)
            End If
            If (PROP_CREATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PROP_CREATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_ITEM_NO,Date)
            If (Original_ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITEM_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_ITEM_CODE,String)
            End If
            If (Original_PROP_DIVISION_UNIT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_PROP_DIVISION_UNIT,String)
            End If
            If (Original_PROP_CUSTODIAN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_PROP_CUSTODIAN,String)
            End If
            If (Original_PROP_PROPERTY_USER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_PROP_PROPERTY_USER,String)
            End If
            If (Original_PROP_ENCODED_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_PROP_ENCODED_BY,String)
            End If
            If (Original_PROP_CREATED_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_PROP_CREATED_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal PROP_DIVISION_UNIT As String, ByVal PROP_CUSTODIAN As String, ByVal PROP_PROPERTY_USER As String, ByVal PROP_ENCODED_BY As String, ByVal PROP_CREATED_DATE As Global.System.Nullable(Of Date), ByVal Original_ITEM_NO As Date, ByVal Original_ITEM_CODE As String, ByVal Original_PROP_DIVISION_UNIT As String, ByVal Original_PROP_CUSTODIAN As String, ByVal Original_PROP_PROPERTY_USER As String, ByVal Original_PROP_ENCODED_BY As String, ByVal Original_PROP_CREATED_DATE As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_ITEM_NO, Original_ITEM_CODE, PROP_DIVISION_UNIT, PROP_CUSTODIAN, PROP_PROPERTY_USER, PROP_ENCODED_BY, PROP_CREATED_DATE, Original_ITEM_NO, Original_ITEM_CODE, Original_PROP_DIVISION_UNIT, Original_PROP_CUSTODIAN, Original_PROP_PROPERTY_USER, Original_PROP_ENCODED_BY, Original_PROP_CREATED_DATE)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function CHECKIFEXIST(ByVal item_code As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (item_code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("item_code")
            Else
                command.Parameters(0).Value = CType(item_code,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function IQ_PROPERTY_ITEMS(ByVal ITEM_CODE As String, ByVal PROP_DIVISION_UNIT As String, ByVal PROP_CUSTODIAN As String, ByVal PROP_PROPERTY_USER As String, ByVal PROP_ENCODED_BY As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ITEM_CODE")
            Else
                command.Parameters(0).Value = CType(ITEM_CODE,String)
            End If
            If (PROP_DIVISION_UNIT Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(PROP_DIVISION_UNIT,String)
            End If
            If (PROP_CUSTODIAN Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(PROP_CUSTODIAN,String)
            End If
            If (PROP_PROPERTY_USER Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(PROP_PROPERTY_USER,String)
            End If
            If (PROP_ENCODED_BY Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(PROP_ENCODED_BY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UQ_ITEMS_PROPERTY(ByVal PROP_DIVISION_UNIT As String, ByVal PROP_CUSTODIAN As String, ByVal PROP_PROPERTY_USER As String, ByVal PROP_ENCODED_BY As String, ByVal Original_ITEM_CODE As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            If (PROP_DIVISION_UNIT Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(PROP_DIVISION_UNIT,String)
            End If
            If (PROP_CUSTODIAN Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(PROP_CUSTODIAN,String)
            End If
            If (PROP_PROPERTY_USER Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(PROP_PROPERTY_USER,String)
            End If
            If (PROP_ENCODED_BY Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(PROP_ENCODED_BY,String)
            End If
            If (Original_ITEM_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ITEM_CODE")
            Else
                command.Parameters(4).Value = CType(Original_ITEM_CODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _tBLG3_COMPANY_INFOTableAdapter As TBLG3_COMPANY_INFOTableAdapter
        
        Private _tblM4_PURCHASEREQUEST_ITEMTableAdapter As tblM4_PURCHASEREQUEST_ITEMTableAdapter
        
        Private _tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter As TBLG3_DELIVER_RECEIPT_DETAILSTableAdapter
        
        Private _tBLG3_DELIVERY_RECEIPTTableAdapter As TBLG3_DELIVERY_RECEIPTTableAdapter
        
        Private _tBLG3_INVOICETableAdapter As TBLG3_INVOICETableAdapter
        
        Private _tBLG3_INVOICE_DETAILSTableAdapter As TBLG3_INVOICE_DETAILSTableAdapter
        
        Private _tBLG3_PRIMARY_SIGNATORYTableAdapter As TBLG3_PRIMARY_SIGNATORYTableAdapter
        
        Private _tBLG3_REG_BUSTableAdapter As TBLG3_REG_BUSTableAdapter
        
        Private _tBLG3_REG_DVTableAdapter As TBLG3_REG_DVTableAdapter
        
        Private _tBLG3_REG_PARTICULARTableAdapter As TBLG3_REG_PARTICULARTableAdapter
        
        Private _tBLG3_SIGNATORYTableAdapter As TBLG3_SIGNATORYTableAdapter
        
        Private _tBLG3_SIGNATORY_TYPETableAdapter As TBLG3_SIGNATORY_TYPETableAdapter
        
        Private _tBLG3_UNITSTableAdapter As TBLG3_UNITSTableAdapter
        
        Private _tblM4_PURCHASEREQUESTTableAdapter As tblM4_PURCHASEREQUESTTableAdapter
        
        Private _tBLG3_SIGNATORY1TableAdapter As TBLG3_SIGNATORY1TableAdapter
        
        Private _tblM4_CATEGORY1TableAdapter As tblM4_CATEGORY1TableAdapter
        
        Private _tblM4_ITEMBRAND1TableAdapter As tblM4_ITEMBRAND1TableAdapter
        
        Private _tblM4_PURCHASEREQUEST_CATEGORYTableAdapter As tblM4_PURCHASEREQUEST_CATEGORYTableAdapter
        
        Private _tblM4_PURCHASEREQUEST_CANCELEDTableAdapter As tblM4_PURCHASEREQUEST_CANCELEDTableAdapter
        
        Private _tblM4_PURCHASEREQUEST_REVISIONTableAdapter As tblM4_PURCHASEREQUEST_REVISIONTableAdapter
        
        Private _tblM4_PURCHASEREQUEST_POSTEDTableAdapter As tblM4_PURCHASEREQUEST_POSTEDTableAdapter
        
        Private _tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter As tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter
        
        Private _tblM4_PURCHASEREQUEST_PROVIDERTableAdapter As tblM4_PURCHASEREQUEST_PROVIDERTableAdapter
        
        Private _tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter As tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter
        
        Private _tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter As tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter
        
        Private _tblM4_INVENTORY_CATEGORYTableAdapter As tblM4_INVENTORY_CATEGORYTableAdapter
        
        Private _tblM4_INVENTORY_ITEMBRANDTableAdapter As tblM4_INVENTORY_ITEMBRANDTableAdapter
        
        Private _tblM4_INVENTORY_ITEMSTableAdapter As tblM4_INVENTORY_ITEMSTableAdapter
        
        Private _tblM4_INVENTORY_SUB_CATEGORYTableAdapter As tblM4_INVENTORY_SUB_CATEGORYTableAdapter
        
        Private _tblM4_INVENTORY_CATEGORY1TableAdapter As tblM4_INVENTORY_CATEGORY1TableAdapter
        
        Private _tblM4_INVENTORY_ITEMBRAND1TableAdapter As tblM4_INVENTORY_ITEMBRAND1TableAdapter
        
        Private _tblM4_INVENTORY_ASSIGN_PERSONTableAdapter As tblM4_INVENTORY_ASSIGN_PERSONTableAdapter
        
        Private _tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter As tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter
        
        Private _tblM4_INVENTORY_ACQUISITION_VALUETableAdapter As tblM4_INVENTORY_ACQUISITION_VALUETableAdapter
        
        Private _tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter As tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBLG3_COMPANY_INFOTableAdapter() As TBLG3_COMPANY_INFOTableAdapter
            Get
                Return Me._tBLG3_COMPANY_INFOTableAdapter
            End Get
            Set
                Me._tBLG3_COMPANY_INFOTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_PURCHASEREQUEST_ITEMTableAdapter() As tblM4_PURCHASEREQUEST_ITEMTableAdapter
            Get
                Return Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter
            End Get
            Set
                Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBLG3_DELIVER_RECEIPT_DETAILSTableAdapter() As TBLG3_DELIVER_RECEIPT_DETAILSTableAdapter
            Get
                Return Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter
            End Get
            Set
                Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBLG3_DELIVERY_RECEIPTTableAdapter() As TBLG3_DELIVERY_RECEIPTTableAdapter
            Get
                Return Me._tBLG3_DELIVERY_RECEIPTTableAdapter
            End Get
            Set
                Me._tBLG3_DELIVERY_RECEIPTTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBLG3_INVOICETableAdapter() As TBLG3_INVOICETableAdapter
            Get
                Return Me._tBLG3_INVOICETableAdapter
            End Get
            Set
                Me._tBLG3_INVOICETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBLG3_INVOICE_DETAILSTableAdapter() As TBLG3_INVOICE_DETAILSTableAdapter
            Get
                Return Me._tBLG3_INVOICE_DETAILSTableAdapter
            End Get
            Set
                Me._tBLG3_INVOICE_DETAILSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBLG3_PRIMARY_SIGNATORYTableAdapter() As TBLG3_PRIMARY_SIGNATORYTableAdapter
            Get
                Return Me._tBLG3_PRIMARY_SIGNATORYTableAdapter
            End Get
            Set
                Me._tBLG3_PRIMARY_SIGNATORYTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBLG3_REG_BUSTableAdapter() As TBLG3_REG_BUSTableAdapter
            Get
                Return Me._tBLG3_REG_BUSTableAdapter
            End Get
            Set
                Me._tBLG3_REG_BUSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBLG3_REG_DVTableAdapter() As TBLG3_REG_DVTableAdapter
            Get
                Return Me._tBLG3_REG_DVTableAdapter
            End Get
            Set
                Me._tBLG3_REG_DVTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBLG3_REG_PARTICULARTableAdapter() As TBLG3_REG_PARTICULARTableAdapter
            Get
                Return Me._tBLG3_REG_PARTICULARTableAdapter
            End Get
            Set
                Me._tBLG3_REG_PARTICULARTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBLG3_SIGNATORYTableAdapter() As TBLG3_SIGNATORYTableAdapter
            Get
                Return Me._tBLG3_SIGNATORYTableAdapter
            End Get
            Set
                Me._tBLG3_SIGNATORYTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBLG3_SIGNATORY_TYPETableAdapter() As TBLG3_SIGNATORY_TYPETableAdapter
            Get
                Return Me._tBLG3_SIGNATORY_TYPETableAdapter
            End Get
            Set
                Me._tBLG3_SIGNATORY_TYPETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBLG3_UNITSTableAdapter() As TBLG3_UNITSTableAdapter
            Get
                Return Me._tBLG3_UNITSTableAdapter
            End Get
            Set
                Me._tBLG3_UNITSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_PURCHASEREQUESTTableAdapter() As tblM4_PURCHASEREQUESTTableAdapter
            Get
                Return Me._tblM4_PURCHASEREQUESTTableAdapter
            End Get
            Set
                Me._tblM4_PURCHASEREQUESTTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBLG3_SIGNATORY1TableAdapter() As TBLG3_SIGNATORY1TableAdapter
            Get
                Return Me._tBLG3_SIGNATORY1TableAdapter
            End Get
            Set
                Me._tBLG3_SIGNATORY1TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_CATEGORY1TableAdapter() As tblM4_CATEGORY1TableAdapter
            Get
                Return Me._tblM4_CATEGORY1TableAdapter
            End Get
            Set
                Me._tblM4_CATEGORY1TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_ITEMBRAND1TableAdapter() As tblM4_ITEMBRAND1TableAdapter
            Get
                Return Me._tblM4_ITEMBRAND1TableAdapter
            End Get
            Set
                Me._tblM4_ITEMBRAND1TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_PURCHASEREQUEST_CATEGORYTableAdapter() As tblM4_PURCHASEREQUEST_CATEGORYTableAdapter
            Get
                Return Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter
            End Get
            Set
                Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_PURCHASEREQUEST_CANCELEDTableAdapter() As tblM4_PURCHASEREQUEST_CANCELEDTableAdapter
            Get
                Return Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter
            End Get
            Set
                Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_PURCHASEREQUEST_REVISIONTableAdapter() As tblM4_PURCHASEREQUEST_REVISIONTableAdapter
            Get
                Return Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter
            End Get
            Set
                Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_PURCHASEREQUEST_POSTEDTableAdapter() As tblM4_PURCHASEREQUEST_POSTEDTableAdapter
            Get
                Return Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter
            End Get
            Set
                Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter() As tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter
            Get
                Return Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter
            End Get
            Set
                Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_PURCHASEREQUEST_PROVIDERTableAdapter() As tblM4_PURCHASEREQUEST_PROVIDERTableAdapter
            Get
                Return Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter
            End Get
            Set
                Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter() As tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter
            Get
                Return Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter
            End Get
            Set
                Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter() As tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter
            Get
                Return Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter
            End Get
            Set
                Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_INVENTORY_CATEGORYTableAdapter() As tblM4_INVENTORY_CATEGORYTableAdapter
            Get
                Return Me._tblM4_INVENTORY_CATEGORYTableAdapter
            End Get
            Set
                Me._tblM4_INVENTORY_CATEGORYTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_INVENTORY_ITEMBRANDTableAdapter() As tblM4_INVENTORY_ITEMBRANDTableAdapter
            Get
                Return Me._tblM4_INVENTORY_ITEMBRANDTableAdapter
            End Get
            Set
                Me._tblM4_INVENTORY_ITEMBRANDTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_INVENTORY_ITEMSTableAdapter() As tblM4_INVENTORY_ITEMSTableAdapter
            Get
                Return Me._tblM4_INVENTORY_ITEMSTableAdapter
            End Get
            Set
                Me._tblM4_INVENTORY_ITEMSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_INVENTORY_SUB_CATEGORYTableAdapter() As tblM4_INVENTORY_SUB_CATEGORYTableAdapter
            Get
                Return Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter
            End Get
            Set
                Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_INVENTORY_CATEGORY1TableAdapter() As tblM4_INVENTORY_CATEGORY1TableAdapter
            Get
                Return Me._tblM4_INVENTORY_CATEGORY1TableAdapter
            End Get
            Set
                Me._tblM4_INVENTORY_CATEGORY1TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_INVENTORY_ITEMBRAND1TableAdapter() As tblM4_INVENTORY_ITEMBRAND1TableAdapter
            Get
                Return Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter
            End Get
            Set
                Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_INVENTORY_ASSIGN_PERSONTableAdapter() As tblM4_INVENTORY_ASSIGN_PERSONTableAdapter
            Get
                Return Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter
            End Get
            Set
                Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter() As tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter
            Get
                Return Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter
            End Get
            Set
                Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_INVENTORY_ACQUISITION_VALUETableAdapter() As tblM4_INVENTORY_ACQUISITION_VALUETableAdapter
            Get
                Return Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter
            End Get
            Set
                Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter() As tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter
            Get
                Return Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter
            End Get
            Set
                Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._tBLG3_COMPANY_INFOTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBLG3_COMPANY_INFOTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBLG3_COMPANY_INFOTableAdapter.Connection
                End If
                If ((Not (Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter.Connection
                End If
                If ((Not (Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter.Connection
                End If
                If ((Not (Me._tBLG3_DELIVERY_RECEIPTTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBLG3_DELIVERY_RECEIPTTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBLG3_DELIVERY_RECEIPTTableAdapter.Connection
                End If
                If ((Not (Me._tBLG3_INVOICETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBLG3_INVOICETableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBLG3_INVOICETableAdapter.Connection
                End If
                If ((Not (Me._tBLG3_INVOICE_DETAILSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBLG3_INVOICE_DETAILSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBLG3_INVOICE_DETAILSTableAdapter.Connection
                End If
                If ((Not (Me._tBLG3_PRIMARY_SIGNATORYTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBLG3_PRIMARY_SIGNATORYTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBLG3_PRIMARY_SIGNATORYTableAdapter.Connection
                End If
                If ((Not (Me._tBLG3_REG_BUSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBLG3_REG_BUSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBLG3_REG_BUSTableAdapter.Connection
                End If
                If ((Not (Me._tBLG3_REG_DVTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBLG3_REG_DVTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBLG3_REG_DVTableAdapter.Connection
                End If
                If ((Not (Me._tBLG3_REG_PARTICULARTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBLG3_REG_PARTICULARTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBLG3_REG_PARTICULARTableAdapter.Connection
                End If
                If ((Not (Me._tBLG3_SIGNATORYTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBLG3_SIGNATORYTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBLG3_SIGNATORYTableAdapter.Connection
                End If
                If ((Not (Me._tBLG3_SIGNATORY_TYPETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBLG3_SIGNATORY_TYPETableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBLG3_SIGNATORY_TYPETableAdapter.Connection
                End If
                If ((Not (Me._tBLG3_UNITSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBLG3_UNITSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBLG3_UNITSTableAdapter.Connection
                End If
                If ((Not (Me._tblM4_PURCHASEREQUESTTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_PURCHASEREQUESTTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_PURCHASEREQUESTTableAdapter.Connection
                End If
                If ((Not (Me._tBLG3_SIGNATORY1TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBLG3_SIGNATORY1TableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBLG3_SIGNATORY1TableAdapter.Connection
                End If
                If ((Not (Me._tblM4_CATEGORY1TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_CATEGORY1TableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_CATEGORY1TableAdapter.Connection
                End If
                If ((Not (Me._tblM4_ITEMBRAND1TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_ITEMBRAND1TableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_ITEMBRAND1TableAdapter.Connection
                End If
                If ((Not (Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter.Connection
                End If
                If ((Not (Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter.Connection
                End If
                If ((Not (Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter.Connection
                End If
                If ((Not (Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter.Connection
                End If
                If ((Not (Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter.Connection
                End If
                If ((Not (Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter.Connection
                End If
                If ((Not (Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter.Connection
                End If
                If ((Not (Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter.Connection
                End If
                If ((Not (Me._tblM4_INVENTORY_CATEGORYTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_INVENTORY_CATEGORYTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_INVENTORY_CATEGORYTableAdapter.Connection
                End If
                If ((Not (Me._tblM4_INVENTORY_ITEMBRANDTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_INVENTORY_ITEMBRANDTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_INVENTORY_ITEMBRANDTableAdapter.Connection
                End If
                If ((Not (Me._tblM4_INVENTORY_ITEMSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_INVENTORY_ITEMSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_INVENTORY_ITEMSTableAdapter.Connection
                End If
                If ((Not (Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter.Connection
                End If
                If ((Not (Me._tblM4_INVENTORY_CATEGORY1TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_INVENTORY_CATEGORY1TableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_INVENTORY_CATEGORY1TableAdapter.Connection
                End If
                If ((Not (Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter.Connection
                End If
                If ((Not (Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter.Connection
                End If
                If ((Not (Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter.Connection
                End If
                If ((Not (Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter.Connection
                End If
                If ((Not (Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._tBLG3_COMPANY_INFOTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBLG3_DELIVERY_RECEIPTTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBLG3_INVOICETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBLG3_INVOICE_DETAILSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBLG3_PRIMARY_SIGNATORYTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBLG3_REG_BUSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBLG3_REG_DVTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBLG3_REG_PARTICULARTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBLG3_SIGNATORYTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBLG3_SIGNATORY_TYPETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBLG3_UNITSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_PURCHASEREQUESTTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBLG3_SIGNATORY1TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_CATEGORY1TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_ITEMBRAND1TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_INVENTORY_CATEGORYTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMBRANDTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_INVENTORY_CATEGORY1TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DS_PROPERTYDB, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tBLG3_COMPANY_INFOTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBLG3_COMPANY_INFO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBLG3_COMPANY_INFOTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_CATEGORYTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_CATEGORY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_CATEGORYTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMBRANDTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMBRAND.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMBRANDTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUESTTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUESTTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBLG3_UNITSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBLG3_UNITS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBLG3_UNITSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBLG3_REG_DVTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBLG3_REG_DV.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBLG3_REG_DVTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBLG3_REG_BUSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBLG3_REG_BUS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBLG3_REG_BUSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_SUB_CATEGORY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_CATEGORY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBLG3_INVOICETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBLG3_INVOICE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBLG3_INVOICETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBLG3_DELIVERY_RECEIPTTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBLG3_DELIVERY_RECEIPT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBLG3_DELIVERY_RECEIPTTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_CANCELED.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_REVISION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_POSTED.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_ACCEPTED.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_PROVIDER.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMS_LOCATION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMS_DEFLOCATION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ACQUISITION_ITEM_USAGE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_CATEGORY1TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_CATEGORY1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_CATEGORY1TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMBRAND1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ASSIGN_PERSON.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_ITEMBRAND1TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_ITEMBRAND1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_ITEMBRAND1TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_ITEM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBLG3_DELIVER_RECEIPT_DETAILS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBLG3_INVOICE_DETAILSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBLG3_INVOICE_DETAILS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBLG3_INVOICE_DETAILSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBLG3_PRIMARY_SIGNATORYTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBLG3_PRIMARY_SIGNATORY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBLG3_PRIMARY_SIGNATORYTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBLG3_REG_PARTICULARTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBLG3_REG_PARTICULAR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBLG3_REG_PARTICULARTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBLG3_SIGNATORYTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBLG3_SIGNATORY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBLG3_SIGNATORYTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBLG3_SIGNATORY_TYPETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBLG3_SIGNATORY_TYPE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBLG3_SIGNATORY_TYPETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBLG3_SIGNATORY1TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBLG3_SIGNATORY1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBLG3_SIGNATORY1TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_CATEGORY1TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_CATEGORY1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_CATEGORY1TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ACQUISITION_VALUE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMS_PROPERTY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DS_PROPERTYDB, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tBLG3_COMPANY_INFOTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBLG3_COMPANY_INFO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBLG3_COMPANY_INFOTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_CATEGORYTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_CATEGORY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_CATEGORYTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMBRANDTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMBRAND.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMBRANDTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUESTTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUESTTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBLG3_UNITSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBLG3_UNITS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBLG3_UNITSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBLG3_REG_DVTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBLG3_REG_DV.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBLG3_REG_DVTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBLG3_REG_BUSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBLG3_REG_BUS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBLG3_REG_BUSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_SUB_CATEGORY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_CATEGORY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBLG3_INVOICETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBLG3_INVOICE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBLG3_INVOICETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBLG3_DELIVERY_RECEIPTTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBLG3_DELIVERY_RECEIPT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBLG3_DELIVERY_RECEIPTTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_CANCELED.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_REVISION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_POSTED.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_ACCEPTED.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_PROVIDER.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMS_LOCATION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMS_DEFLOCATION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ACQUISITION_ITEM_USAGE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_CATEGORY1TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_CATEGORY1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_CATEGORY1TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMBRAND1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ASSIGN_PERSON.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_ITEMBRAND1TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_ITEMBRAND1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_ITEMBRAND1TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_ITEM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBLG3_DELIVER_RECEIPT_DETAILS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBLG3_INVOICE_DETAILSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBLG3_INVOICE_DETAILS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBLG3_INVOICE_DETAILSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBLG3_PRIMARY_SIGNATORYTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBLG3_PRIMARY_SIGNATORY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBLG3_PRIMARY_SIGNATORYTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBLG3_REG_PARTICULARTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBLG3_REG_PARTICULAR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBLG3_REG_PARTICULARTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBLG3_SIGNATORYTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBLG3_SIGNATORY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBLG3_SIGNATORYTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBLG3_SIGNATORY_TYPETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBLG3_SIGNATORY_TYPE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBLG3_SIGNATORY_TYPETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBLG3_SIGNATORY1TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBLG3_SIGNATORY1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBLG3_SIGNATORY1TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_CATEGORY1TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_CATEGORY1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_CATEGORY1TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ACQUISITION_VALUE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMS_PROPERTY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DS_PROPERTYDB, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMS_PROPERTY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ACQUISITION_VALUE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_CATEGORY1TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_CATEGORY1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_CATEGORY1TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBLG3_SIGNATORY1TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBLG3_SIGNATORY1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBLG3_SIGNATORY1TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBLG3_SIGNATORY_TYPETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBLG3_SIGNATORY_TYPE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBLG3_SIGNATORY_TYPETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBLG3_SIGNATORYTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBLG3_SIGNATORY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBLG3_SIGNATORYTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBLG3_REG_PARTICULARTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBLG3_REG_PARTICULAR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBLG3_REG_PARTICULARTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBLG3_PRIMARY_SIGNATORYTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBLG3_PRIMARY_SIGNATORY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBLG3_PRIMARY_SIGNATORYTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBLG3_INVOICE_DETAILSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBLG3_INVOICE_DETAILS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBLG3_INVOICE_DETAILSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBLG3_DELIVER_RECEIPT_DETAILS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_ITEM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_ITEMBRAND1TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_ITEMBRAND1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_ITEMBRAND1TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ASSIGN_PERSON.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMBRAND1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_CATEGORY1TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_CATEGORY1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_CATEGORY1TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ACQUISITION_ITEM_USAGE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMS_DEFLOCATION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMS_LOCATION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_PROVIDER.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_ACCEPTED.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_POSTED.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_REVISION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_CANCELED.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBLG3_DELIVERY_RECEIPTTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBLG3_DELIVERY_RECEIPT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBLG3_DELIVERY_RECEIPTTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBLG3_INVOICETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBLG3_INVOICE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBLG3_INVOICETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST_CATEGORY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_SUB_CATEGORY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBLG3_REG_BUSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBLG3_REG_BUS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBLG3_REG_BUSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBLG3_REG_DVTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBLG3_REG_DV.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBLG3_REG_DVTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBLG3_UNITSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBLG3_UNITS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBLG3_UNITSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_PURCHASEREQUESTTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_PURCHASEREQUEST.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_PURCHASEREQUESTTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_ITEMBRANDTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_ITEMBRAND.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_ITEMBRANDTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblM4_INVENTORY_CATEGORYTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblM4_INVENTORY_CATEGORY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblM4_INVENTORY_CATEGORYTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBLG3_COMPANY_INFOTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBLG3_COMPANY_INFO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBLG3_COMPANY_INFOTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DS_PROPERTYDB) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._tBLG3_COMPANY_INFOTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBLG3_COMPANY_INFOTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBLG3_DELIVERY_RECEIPTTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBLG3_DELIVERY_RECEIPTTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBLG3_INVOICETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBLG3_INVOICETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBLG3_INVOICE_DETAILSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBLG3_INVOICE_DETAILSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBLG3_PRIMARY_SIGNATORYTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBLG3_PRIMARY_SIGNATORYTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBLG3_REG_BUSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBLG3_REG_BUSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBLG3_REG_DVTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBLG3_REG_DVTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBLG3_REG_PARTICULARTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBLG3_REG_PARTICULARTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBLG3_SIGNATORYTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBLG3_SIGNATORYTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBLG3_SIGNATORY_TYPETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBLG3_SIGNATORY_TYPETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBLG3_UNITSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBLG3_UNITSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_PURCHASEREQUESTTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_PURCHASEREQUESTTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBLG3_SIGNATORY1TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBLG3_SIGNATORY1TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_CATEGORY1TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_CATEGORY1TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_ITEMBRAND1TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_ITEMBRAND1TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_INVENTORY_CATEGORYTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_INVENTORY_CATEGORYTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_INVENTORY_ITEMBRANDTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_INVENTORY_ITEMBRANDTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_INVENTORY_ITEMSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_INVENTORY_ITEMSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_INVENTORY_CATEGORY1TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_INVENTORY_CATEGORY1TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._tBLG3_COMPANY_INFOTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBLG3_COMPANY_INFOTableAdapter, Me._tBLG3_COMPANY_INFOTableAdapter.Connection)
                    Me._tBLG3_COMPANY_INFOTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_COMPANY_INFOTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tBLG3_COMPANY_INFOTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBLG3_COMPANY_INFOTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBLG3_COMPANY_INFOTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter, Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter.Connection)
                    Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter, Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter.Connection)
                    Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBLG3_DELIVERY_RECEIPTTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBLG3_DELIVERY_RECEIPTTableAdapter, Me._tBLG3_DELIVERY_RECEIPTTableAdapter.Connection)
                    Me._tBLG3_DELIVERY_RECEIPTTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_DELIVERY_RECEIPTTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tBLG3_DELIVERY_RECEIPTTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBLG3_DELIVERY_RECEIPTTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBLG3_DELIVERY_RECEIPTTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBLG3_INVOICETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBLG3_INVOICETableAdapter, Me._tBLG3_INVOICETableAdapter.Connection)
                    Me._tBLG3_INVOICETableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_INVOICETableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tBLG3_INVOICETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBLG3_INVOICETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBLG3_INVOICETableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBLG3_INVOICE_DETAILSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBLG3_INVOICE_DETAILSTableAdapter, Me._tBLG3_INVOICE_DETAILSTableAdapter.Connection)
                    Me._tBLG3_INVOICE_DETAILSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_INVOICE_DETAILSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tBLG3_INVOICE_DETAILSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBLG3_INVOICE_DETAILSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBLG3_INVOICE_DETAILSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBLG3_PRIMARY_SIGNATORYTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBLG3_PRIMARY_SIGNATORYTableAdapter, Me._tBLG3_PRIMARY_SIGNATORYTableAdapter.Connection)
                    Me._tBLG3_PRIMARY_SIGNATORYTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_PRIMARY_SIGNATORYTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tBLG3_PRIMARY_SIGNATORYTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBLG3_PRIMARY_SIGNATORYTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBLG3_PRIMARY_SIGNATORYTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBLG3_REG_BUSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBLG3_REG_BUSTableAdapter, Me._tBLG3_REG_BUSTableAdapter.Connection)
                    Me._tBLG3_REG_BUSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_REG_BUSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tBLG3_REG_BUSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBLG3_REG_BUSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBLG3_REG_BUSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBLG3_REG_DVTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBLG3_REG_DVTableAdapter, Me._tBLG3_REG_DVTableAdapter.Connection)
                    Me._tBLG3_REG_DVTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_REG_DVTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tBLG3_REG_DVTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBLG3_REG_DVTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBLG3_REG_DVTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBLG3_REG_PARTICULARTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBLG3_REG_PARTICULARTableAdapter, Me._tBLG3_REG_PARTICULARTableAdapter.Connection)
                    Me._tBLG3_REG_PARTICULARTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_REG_PARTICULARTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tBLG3_REG_PARTICULARTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBLG3_REG_PARTICULARTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBLG3_REG_PARTICULARTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBLG3_SIGNATORYTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBLG3_SIGNATORYTableAdapter, Me._tBLG3_SIGNATORYTableAdapter.Connection)
                    Me._tBLG3_SIGNATORYTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_SIGNATORYTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tBLG3_SIGNATORYTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBLG3_SIGNATORYTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBLG3_SIGNATORYTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBLG3_SIGNATORY_TYPETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBLG3_SIGNATORY_TYPETableAdapter, Me._tBLG3_SIGNATORY_TYPETableAdapter.Connection)
                    Me._tBLG3_SIGNATORY_TYPETableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_SIGNATORY_TYPETableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tBLG3_SIGNATORY_TYPETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBLG3_SIGNATORY_TYPETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBLG3_SIGNATORY_TYPETableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBLG3_UNITSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBLG3_UNITSTableAdapter, Me._tBLG3_UNITSTableAdapter.Connection)
                    Me._tBLG3_UNITSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_UNITSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tBLG3_UNITSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBLG3_UNITSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBLG3_UNITSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_PURCHASEREQUESTTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_PURCHASEREQUESTTableAdapter, Me._tblM4_PURCHASEREQUESTTableAdapter.Connection)
                    Me._tblM4_PURCHASEREQUESTTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUESTTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_PURCHASEREQUESTTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_PURCHASEREQUESTTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_PURCHASEREQUESTTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBLG3_SIGNATORY1TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBLG3_SIGNATORY1TableAdapter, Me._tBLG3_SIGNATORY1TableAdapter.Connection)
                    Me._tBLG3_SIGNATORY1TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_SIGNATORY1TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tBLG3_SIGNATORY1TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBLG3_SIGNATORY1TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBLG3_SIGNATORY1TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_CATEGORY1TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_CATEGORY1TableAdapter, Me._tblM4_CATEGORY1TableAdapter.Connection)
                    Me._tblM4_CATEGORY1TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_CATEGORY1TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_CATEGORY1TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_CATEGORY1TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_CATEGORY1TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_ITEMBRAND1TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_ITEMBRAND1TableAdapter, Me._tblM4_ITEMBRAND1TableAdapter.Connection)
                    Me._tblM4_ITEMBRAND1TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_ITEMBRAND1TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_ITEMBRAND1TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_ITEMBRAND1TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_ITEMBRAND1TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter, Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter.Connection)
                    Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter, Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter.Connection)
                    Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter, Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter.Connection)
                    Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter, Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter.Connection)
                    Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter, Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter.Connection)
                    Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter, Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter.Connection)
                    Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter, Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter.Connection)
                    Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter, Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter.Connection)
                    Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_INVENTORY_CATEGORYTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_INVENTORY_CATEGORYTableAdapter, Me._tblM4_INVENTORY_CATEGORYTableAdapter.Connection)
                    Me._tblM4_INVENTORY_CATEGORYTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_CATEGORYTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_INVENTORY_CATEGORYTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_INVENTORY_CATEGORYTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_INVENTORY_CATEGORYTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMBRANDTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_INVENTORY_ITEMBRANDTableAdapter, Me._tblM4_INVENTORY_ITEMBRANDTableAdapter.Connection)
                    Me._tblM4_INVENTORY_ITEMBRANDTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ITEMBRANDTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_INVENTORY_ITEMBRANDTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_INVENTORY_ITEMBRANDTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_INVENTORY_ITEMBRANDTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_INVENTORY_ITEMSTableAdapter, Me._tblM4_INVENTORY_ITEMSTableAdapter.Connection)
                    Me._tblM4_INVENTORY_ITEMSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ITEMSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_INVENTORY_ITEMSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_INVENTORY_ITEMSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_INVENTORY_ITEMSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter, Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter.Connection)
                    Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_INVENTORY_CATEGORY1TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_INVENTORY_CATEGORY1TableAdapter, Me._tblM4_INVENTORY_CATEGORY1TableAdapter.Connection)
                    Me._tblM4_INVENTORY_CATEGORY1TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_CATEGORY1TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_INVENTORY_CATEGORY1TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_INVENTORY_CATEGORY1TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_INVENTORY_CATEGORY1TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter, Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter.Connection)
                    Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter, Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter.Connection)
                    Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter, Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter.Connection)
                    Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter, Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter.Connection)
                    Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter, Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter.Connection)
                    Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._tBLG3_COMPANY_INFOTableAdapter) Is Nothing) Then
                    Me._tBLG3_COMPANY_INFOTableAdapter.Connection = CType(revertConnections(Me._tBLG3_COMPANY_INFOTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_COMPANY_INFOTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter) Is Nothing) Then
                    Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter.Connection = CType(revertConnections(Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUEST_ITEMTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter) Is Nothing) Then
                    Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter.Connection = CType(revertConnections(Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_DELIVER_RECEIPT_DETAILSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBLG3_DELIVERY_RECEIPTTableAdapter) Is Nothing) Then
                    Me._tBLG3_DELIVERY_RECEIPTTableAdapter.Connection = CType(revertConnections(Me._tBLG3_DELIVERY_RECEIPTTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_DELIVERY_RECEIPTTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBLG3_INVOICETableAdapter) Is Nothing) Then
                    Me._tBLG3_INVOICETableAdapter.Connection = CType(revertConnections(Me._tBLG3_INVOICETableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_INVOICETableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBLG3_INVOICE_DETAILSTableAdapter) Is Nothing) Then
                    Me._tBLG3_INVOICE_DETAILSTableAdapter.Connection = CType(revertConnections(Me._tBLG3_INVOICE_DETAILSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_INVOICE_DETAILSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBLG3_PRIMARY_SIGNATORYTableAdapter) Is Nothing) Then
                    Me._tBLG3_PRIMARY_SIGNATORYTableAdapter.Connection = CType(revertConnections(Me._tBLG3_PRIMARY_SIGNATORYTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_PRIMARY_SIGNATORYTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBLG3_REG_BUSTableAdapter) Is Nothing) Then
                    Me._tBLG3_REG_BUSTableAdapter.Connection = CType(revertConnections(Me._tBLG3_REG_BUSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_REG_BUSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBLG3_REG_DVTableAdapter) Is Nothing) Then
                    Me._tBLG3_REG_DVTableAdapter.Connection = CType(revertConnections(Me._tBLG3_REG_DVTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_REG_DVTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBLG3_REG_PARTICULARTableAdapter) Is Nothing) Then
                    Me._tBLG3_REG_PARTICULARTableAdapter.Connection = CType(revertConnections(Me._tBLG3_REG_PARTICULARTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_REG_PARTICULARTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBLG3_SIGNATORYTableAdapter) Is Nothing) Then
                    Me._tBLG3_SIGNATORYTableAdapter.Connection = CType(revertConnections(Me._tBLG3_SIGNATORYTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_SIGNATORYTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBLG3_SIGNATORY_TYPETableAdapter) Is Nothing) Then
                    Me._tBLG3_SIGNATORY_TYPETableAdapter.Connection = CType(revertConnections(Me._tBLG3_SIGNATORY_TYPETableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_SIGNATORY_TYPETableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBLG3_UNITSTableAdapter) Is Nothing) Then
                    Me._tBLG3_UNITSTableAdapter.Connection = CType(revertConnections(Me._tBLG3_UNITSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_UNITSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_PURCHASEREQUESTTableAdapter) Is Nothing) Then
                    Me._tblM4_PURCHASEREQUESTTableAdapter.Connection = CType(revertConnections(Me._tblM4_PURCHASEREQUESTTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUESTTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBLG3_SIGNATORY1TableAdapter) Is Nothing) Then
                    Me._tBLG3_SIGNATORY1TableAdapter.Connection = CType(revertConnections(Me._tBLG3_SIGNATORY1TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tBLG3_SIGNATORY1TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_CATEGORY1TableAdapter) Is Nothing) Then
                    Me._tblM4_CATEGORY1TableAdapter.Connection = CType(revertConnections(Me._tblM4_CATEGORY1TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_CATEGORY1TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_ITEMBRAND1TableAdapter) Is Nothing) Then
                    Me._tblM4_ITEMBRAND1TableAdapter.Connection = CType(revertConnections(Me._tblM4_ITEMBRAND1TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_ITEMBRAND1TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter) Is Nothing) Then
                    Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter.Connection = CType(revertConnections(Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUEST_CATEGORYTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter) Is Nothing) Then
                    Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter.Connection = CType(revertConnections(Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUEST_CANCELEDTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter) Is Nothing) Then
                    Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter.Connection = CType(revertConnections(Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUEST_REVISIONTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter) Is Nothing) Then
                    Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter.Connection = CType(revertConnections(Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUEST_POSTEDTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter) Is Nothing) Then
                    Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter.Connection = CType(revertConnections(Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUEST_ACCEPTEDTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter) Is Nothing) Then
                    Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter.Connection = CType(revertConnections(Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_PURCHASEREQUEST_PROVIDERTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter) Is Nothing) Then
                    Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter.Connection = CType(revertConnections(Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ITEMS_LOCATIONTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter) Is Nothing) Then
                    Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter.Connection = CType(revertConnections(Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ITEMS_DEFLOCATIONTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_INVENTORY_CATEGORYTableAdapter) Is Nothing) Then
                    Me._tblM4_INVENTORY_CATEGORYTableAdapter.Connection = CType(revertConnections(Me._tblM4_INVENTORY_CATEGORYTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_CATEGORYTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMBRANDTableAdapter) Is Nothing) Then
                    Me._tblM4_INVENTORY_ITEMBRANDTableAdapter.Connection = CType(revertConnections(Me._tblM4_INVENTORY_ITEMBRANDTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ITEMBRANDTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMSTableAdapter) Is Nothing) Then
                    Me._tblM4_INVENTORY_ITEMSTableAdapter.Connection = CType(revertConnections(Me._tblM4_INVENTORY_ITEMSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ITEMSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter) Is Nothing) Then
                    Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter.Connection = CType(revertConnections(Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_SUB_CATEGORYTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_INVENTORY_CATEGORY1TableAdapter) Is Nothing) Then
                    Me._tblM4_INVENTORY_CATEGORY1TableAdapter.Connection = CType(revertConnections(Me._tblM4_INVENTORY_CATEGORY1TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_CATEGORY1TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter) Is Nothing) Then
                    Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter.Connection = CType(revertConnections(Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ITEMBRAND1TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter) Is Nothing) Then
                    Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter.Connection = CType(revertConnections(Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ASSIGN_PERSONTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter) Is Nothing) Then
                    Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter.Connection = CType(revertConnections(Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ACQUISITION_ITEM_USAGETableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter) Is Nothing) Then
                    Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter.Connection = CType(revertConnections(Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ACQUISITION_VALUETableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter) Is Nothing) Then
                    Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter.Connection = CType(revertConnections(Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblM4_INVENTORY_ITEMS_PROPERTYTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
